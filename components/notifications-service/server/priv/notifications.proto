syntax = "proto3";

package notifications;

option go_package = ".;api";

///
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// NOTICE!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// These proto files are moving to api/interservice as part of a project to
// rewrite this service. Changes to this file must be accompanied by
// corresponding changes to the copy of this file in
// api/interservice/notifications/service.
///

message ExceptionInfo {
  string class = 1;
  string title = 2;
  string msg = 3;
  repeated string backtrace = 4;
}

message TimeInfo {
  string start_time = 1;
  string end_time = 2;
}

message Profile {
  message Control {

    message Result {
      string status = 1;
      string code_desc = 2;
      float run_time = 3;
      string start_time = 4;
      string message = 5;
      string skip_message = 6;
    }

    message ResultTotals {
      int32 num_tests = 1;
      int32 num_failed_tests = 2;
      int32 num_skipped_tests = 3;
      int32 num_passed_tests = 4;
    }

    string id = 1;
    float impact = 2;
    string title = 3;
    string code = 4;
    string desc = 5;
    SourceLocation source_location = 6;
    repeated Refs refs = 7;
    reserved 8;// google.protobuf.Struct tags = 8;
    repeated Result failed_results = 9;
    ResultTotals stats = 10;
  }

  message Attribute {
    message Options {
      string description = 1;
    }

    string name = 1;
    Options options = 2;
  }

  message ControlTotals {
    // The number of controls in the profile
    int32 num_tests = 1;
    // The number of controls that failed
    int32 num_failed_tests = 2;
    // The number of controls that were skipped (0 fails, 0 pass)
    int32 num_skipped_tests = 3;
    // The number of controls that passed
    int32 num_passed_tests = 4;
  }

  string name = 1;
  string title = 2;
  string version = 3;
  string summary = 4;
  string maintainer = 5;
  string license = 6;
  string copyright = 7;
  string copyright_email = 8;
  string sha256 = 9;
  repeated PlatformSupport supports = 10;
  repeated Attribute attributes = 11;
  repeated Control failed_controls = 12;
  ControlTotals stats = 13;
}

message SourceLocation {
	string ref = 1;
	int32 line = 2;
}

message Refs {
  reserved 1; //string ref = 1; because the 'ref' can be an array also
  string uri = 2;
  string url = 3;
}

message PlatformSupport {
	string inspec = 1;
	// TODO: this needs to be os-name in json
	string os_name = 2;
	// TODO: this needs to be os-family in json
	string os_family = 3;
	string release = 4;
}

message ComplianceSuccess {
  string id = 1;
  string compliance_url = 2;
  string node_name = 3;
  string node_id = 4;
  string end_time = 5;
  string timestamp = 6;
}

message ComplianceFailure {
  message ControlTotals {
    int32 skipped = 1;
    int32 passed = 2;
    int32 failed = 3;
    int32 critical = 4;
    int32 critical_failed = 5;
  }

  string id = 1;
  string compliance_url = 2;
  string node_name = 3;
  string node_id = 4;
  string inspec_version = 5;
  ControlTotals test_totals = 6;
  repeated Profile failed_profiles = 7;
  string end_time = 8;
  string timestamp = 9;
}

message CCRFailure {
  string run_id = 1;
  string node_name = 2;
  string node_url = 3;
  string run_url = 4;
  string cookbook = 5;
  string recipe = 6;
  TimeInfo time = 7;
  ExceptionInfo exception = 8;
  string timestamp = 9;
}

message CCRSuccess {
  string run_id = 1;
  string node_name = 2;
  string run_url = 3;
  TimeInfo time = 4;
  int32 updated_resource_count = 5;
  string timestamp = 6;
}

message Response {

}

message Event {
  string id = 1;
  oneof event {
    CCRSuccess CCRSuccess = 2;
    CCRFailure CCRFailure = 3;
    ComplianceSuccess ComplianceSuccess = 4;
    ComplianceFailure ComplianceFailure = 5;
  }

}
