daemon off;
pid {{pkg.svc_var_path}}/pid;

worker_processes  {{cfg.nginx.worker_processes}};
worker_rlimit_nofile {{cfg.nginx.worker_rlimit_nofile}};

events {
  worker_connections  {{cfg.nginx.worker_connections}};
}

http {
  client_body_temp_path {{pkg.svc_var_path}}/nginx/client-body;
  fastcgi_temp_path {{pkg.svc_var_path}}/nginx/fastcgi;
  proxy_temp_path {{pkg.svc_var_path}}/nginx/proxy;
  scgi_temp_path {{pkg.svc_var_path}}/nginx/scgi_temp_path;
  uwsgi_temp_path {{pkg.svc_var_path}}/nginx/uwsgi;

  map $http_user_agent $isknown_ua {
          default 0;
          ~*({{cfg.nginx.limit_ua_known}}) 1;
  }
  map $isknown_ua $limit_unknown {
          1       "";
          0       {{cfg.nginx.limit_ua_unknown_target}};
  }
  map $upstream_http_content_length $flag_cache_empty {
          default   0;
          0         1;
  }

  limit_req_zone  {{cfg.nginx.limit_req_zone_unknown}};
  limit_req_zone  {{cfg.nginx.limit_req_zone_known}};
  limit_req_status {{cfg.nginx.limit_req_status}};
  limit_req zone=unknown {{cfg.nginx.limit_req_unknown}};
  limit_req zone=known {{cfg.nginx.limit_req_known}};

  include        {{ pkgPathFor "core/nginx" }}/config/mime.types;
  default_type   application/octet-stream;

  sendfile       {{cfg.http.sendfile}};
  tcp_nopush     {{cfg.http.tcp_nopush}};
  tcp_nodelay    {{cfg.http.tcp_nodelay}};

  keepalive_requests {{cfg.http.keepalive_requests}};
  keepalive_timeout  {{cfg.http.keepalive_timeout}};

 {{~#if cfg.nginx.enable_gzip}}
  gzip on;
  gzip_vary on;
  gzip_min_length 256;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
    application/javascript
    application/json
    application/vnd.ms-fontobject
    application/x-font-ttf
    font/opentype
    image/svg+xml
    image/x-icon
    text/css;

  gzip_disable "MSIE [1-6]\.";
  {{~/if}}

  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Alternate-Protocol  443:npn-spdy/3;

  add_header "X-UA-Compatible" "IE=Edge";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";

  {{~#if cfg.nginx.enable_caching}}
  proxy_cache_path {{pkg.svc_var_path}}/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
  proxy_cache_key "$scheme$proxy_host$uri$is_args$args $http_user_agent";
  proxy_cache_valid 10m; # this only caches 200, 301, 302
  {{~/if}}

  log_format nginx '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent $request_time '
                   '"$http_referer" "$http_user_agent" - $http_x_forwarded_for';

  upstream backend {
    {{~#each bind.automate-builder-api.members as |member|}}
    server {{member.sys.ip}}:{{member.cfg.http-port}};
    {{~/each}}
    keepalive {{cfg.http.keepalive_connections}};
  }
  server {
    index /index.html;
    server_name  {{sys.hostname}};
    root         {{pkgPathFor "jaym/builder-api-proxy"}}/app;

    listen {{cfg.service.host}}:{{cfg.service.port}};

    access_log /dev/stdout nginx;

    #ssl on;
    #ssl_certificate {{pkg.svc_config_path}}/service.crt;
    #ssl_certificate_key {{pkg.svc_config_path}}/service.key;
    #ssl_client_certificate {{pkg.svc_config_path}}/root_ca.crt;
    #ssl_verify_client on;
    #ssl_verify_depth {{ cfg.ngx.http.ssl_verify_depth }};

    #ssl_dhparam {{pkg.svc_data_path}}/dhparams.pem;
    #ssl_protocols {{cfg.ngx.http.ssl_protocols}};
    #ssl_ciphers {{cfg.ngx.http.ssl_ciphers}};
    #ssl_session_timeout 5m;
    #ssl_prefer_server_ciphers on;


    proxy_send_timeout 300;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    if ($http_x_forwarded_proto = "http") {
      rewrite ^(.*)$ https://$host$1 permanent;
    }

    error_log stderr error;

    location /index.html {
      add_header Cache-Control "private, no-cache, no-store";
      root {{pkg.svc_config_path}};
      break;
    }

    location /habitat.conf.js {
      add_header Cache-Control "private, no-cache, no-store";
      root {{pkg.svc_config_path}};
      break;
    }

    location ~* ^/v1/depot/.*/latest$ {
      add_header Cache-Control "private, no-cache, no-store";
      proxy_pass http://backend;
    }

    location /v1/depot {
      client_max_body_size {{cfg.nginx.max_body_size}};
      proxy_pass http://backend;

      {{~#if cfg.nginx.enable_caching}}
      proxy_no_cache $flag_cache_empty;
      proxy_cache_bypass $flag_cache_empty;
      proxy_cache my_cache;
      {{~/if}}
    }

    location /v1 {
      add_header Cache-Control "private, no-cache, no-store";
      proxy_pass http://backend;
    }
  }
}
