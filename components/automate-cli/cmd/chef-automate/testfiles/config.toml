# This is a Chef Automate AWS HA mode configuration file. You can run
# 'chef-automate deploy' with this config file and it should
# successfully create a new Chef Automate HA instances with default settings.

[architecture.existing_infra]
## === INPUT NEEDED ===
# Eg.: ssh_user = "ubuntu"
ssh_user = "ec2-user"

# private ssh key file path to access instances
# Eg.: ssh_user = "~/.ssh/A2HA.pem"
ssh_key_file = "/home/ec2-user/A2HA.pem"

# custome ssh port no to connect instances, default will be 22
# Eg.: ssh_port = "22"
ssh_port = "22"

# Provide Password if needed to run sudo commands.
sudo_password = ""
## === ===

secrets_key_file = "/hab/a2_deploy_workspace/secrets.key"
secrets_store_file = "/hab/a2_deploy_workspace/secrets.json"
architecture = "existing_nodes"
workspace_path = "/hab/a2_deploy_workspace"
# DON'T MODIFY THE BELOW LINE (backup_mount)
backup_mount = "/mnt/automate_backups"

# Eg.: backup_config = "object_storage" or "file_system"
backup_config = "object_storage"

# If backup_config = "object_storage" fill out [object_storage.config] as well
## Object storage similar to AWS S3 Bucket
[object_storage.config]
bucket_name = "a2ha-bloomberg"
access_key = "xxxxxxxx"
secret_key = "x+xxxxxxxxxxxxxxxxxxxxxxxxx"
endpoint = "s3.amazonaws.com"
region = "ap-south-1"
## === ===

# ============== EC2 Nodes Config ======================
[automate.config]
## === INPUT NEEDED ===

# Password for Automate UI for 'admin' user.
admin_password = "chefautomate"

# Automate Load Balancer FQDN eg.: "chefautomate.example.com"
fqdn = "A2-3d694a9d-automate-lb-304279661.ap-south-1.elb.amazonaws.com"

# No. of Automate Frontend Machine or VM eg.: instance_count = "2"
instance_count = "1"

## === ===


# teams_port = ""
config_file = "configs/automate.toml"

# Add Automate load balancer root-ca and keys
enable_custom_certs = true
root_ca = """test_root_ca"""
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[automate.config.certs_by_ip]]
ip = "10.1.0.247"
public_key = """test_pub_key"""
private_key = """test_private_key"""

[chef_server.config]
## === INPUT NEEDED ===

# No. of Chef Server Frontend Machine or VM eg.: instance_count = "2"
instance_count = "1"

# Add Chef Server load balancer root-ca and keys
enable_custom_certs = true
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[chef_server.config.certs_by_ip]]
ip = "10.1.0.80"
public_key = """test_pub_key"""
private_key = """test_private_key"""

## === ===

[opensearch.config]
## === INPUT NEEDED ===

# No. of OpenSearch DB Backend Machine or VM eg.: instance_count = "3"
instance_count = "3"

# Add OpenSearch load balancer root-ca and keys
enable_custom_certs = true
root_ca = """test_root_ca"""
admin_cert = """test_pub_key"""
admin_key = """test_private_key"""
public_key = """test_pub_key"""
private_key = """test_private_key"""
# root_ca = ""
# private_key = ""
# public_key = ""

[[opensearch.config.certs_by_ip]]
ip = "10.1.0.6"
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[opensearch.config.certs_by_ip]]
ip = "10.1.1.253"
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[opensearch.config.certs_by_ip]]
ip = "10.1.2.114"
public_key = """test_pub_key"""
private_key = """test_private_key"""


## === ===

[postgresql.config]
## === INPUT NEEDED ===

# No. of Postgresql DB Backend Machine or VM eg.: instance_count = "3"
instance_count = "3"

# Add postgresql load balancer root-ca and keys
enable_custom_certs = true
root_ca = """test_root_ca"""
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[postgresql.config.certs_by_ip]]
ip = "10.1.0.134"
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[postgresql.config.certs_by_ip]]
ip = "10.1.1.196"
public_key = """test_pub_key"""
private_key = """test_private_key"""

[[postgresql.config.certs_by_ip]]
ip = "10.1.2.163"
public_key = """test_pub_key"""
private_key = """test_private_key"""
## === ===

[existing_infra.config]
## === INPUT NEEDED ===

# provide comma seperated ip address of nodes, like ["192.0.0.1", "192.0.0.2", "192.0.0.2"]
# No of ip address should be same as No of instance_count count mentioned above in
# automate.config, chef_server.config, opensearch.config and postgresql.config
automate_private_ips = ["10.1.0.247"]
chef_server_private_ips = ["10.1.0.80"]
opensearch_private_ips = ["10.1.0.6","10.1.1.253","10.1.2.114"]
postgresql_private_ips = ["10.1.0.134","10.1.1.196","10.1.2.163"]
