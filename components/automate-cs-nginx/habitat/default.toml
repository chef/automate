[ngx.main]
worker_processes = 4

[ngx.events]
worker_connections = 1024

[nginx.http]
# The maximum accepted body size for a client request, as indicated by the
# Content-Length request header. When the maximum accepted body size is greater
# than this value, a 413 Request Entity Too Large error is returned.
server_names_hash_bucket_size = 128
client_body_buffer_size = "128k"
client_max_body_size = "250m"
proxy_connect_timeout = 1
keepalive_timeout = 64
gzip = "on"
gzip_http_version = "1.0"
gzip_comp_level = "2"
gzip_proxied = "any"
gzip_types = "text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json"
sendfile = "on"
tcp_nodelay = "on"
tcp_nopush = "on"
# # SSL protocols and ciphers

# This might be necessary for auditors that want no MEDIUM security ciphers and
# don't understand BEAST attacks
# ssl_protocols = "-ALL +SSLv3 +TLSv1"
# ssl_ciphers = "HIGH:!MEDIUM:!LOW:!ADH:!kEDH:!aNULL:!eNULL:!EXP:!SSLv2:!SEED:!CAMELLIA:!PSK"

# Based off of the Mozilla recommended cipher suite
# https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.8.1&openssl=1.0.1u&hsts=no&profile=modern
# NOTE: testssl.sh warns about Secure Renegotiation (CVE-2009-3555),
#       but this might be ok since it should only allow for renegotiating from one
#       of the allowed ciphers to another one.
# NOTE: AES256-GCM-SHA384 is not part of the Mozilla suite but has been added to
#       support AWS's classic ELB's. Without it the health checks will fail.
ssl_protocols = "TLSv1.2 TLSv1.3"
ssl_ciphers = "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT"
ssl_verify_depth = 2

[log]
level = "error"
# NOTE(ssd) 2018-07-27: Not currently exposed.
access_log_location = "/dev/stdout"

[service]
port = 10200
host = "0.0.0.0"
status_port = 10204
