daemon off;
pid {{ pkg.svc_var_path }}/pid;
worker_processes {{ cfg.ngx.main.worker_processes }};
error_log {{ cfg.ngx.main.error_log }} {{ cfg.log.level }};

events {
  worker_connections {{ cfg.ngx.events.worker_connections }};
}

http {
  include        {{pkg.svc_config_path}}/mime.types;
  {{#with cfg.ngx.http ~}}
  default_type   {{ default_type }};

  sendfile       {{ sendfile }};
  tcp_nopush     {{ tcp_nopush }};
  tcp_nodelay    {{ tcp_nodelay }};

  map_hash_bucket_size 128;

  client_body_in_file_only off;
  client_body_buffer_size {{ client_body_buffer_size }};
  client_max_body_size {{ client_max_body_size }};
  large_client_header_buffers {{ large_client_header_buffers_number }} {{ large_client_header_buffers_size }};

  keepalive_timeout {{ keepalive_timeout }};
  keepalive_requests {{ keepalive_requests }};

  gzip {{ gzip }};
  gzip_comp_level {{ gzip_comp_level }};
  gzip_disable "{{ gzip_disable }}";
  gzip_http_version "{{ gzip_http_version }}";
  gzip_min_length {{ gzip_min_length }};
  gzip_proxied {{ gzip_proxied }};
  gzip_types {{ gzip_types }};
  gzip_vary {{ gzip_vary }};

  ssl_prefer_server_ciphers on;
  ssl_ciphers {{ ssl_ciphers }};
  ssl_protocols {{ ssl_protocols }};
  {{/with ~ }}

  server_tokens off;

  client_body_temp_path {{ pkg.svc_var_path }}/client-body;
  fastcgi_temp_path {{ pkg.svc_var_path }}/fastcgi;
  proxy_temp_path {{ pkg.svc_var_path }}/proxy;
  scgi_temp_path {{ pkg.svc_var_path }}/scgi_temp_path;
  uwsgi_temp_path {{ pkg.svc_var_path }}/uwsgi;

  log_format chef '$remote_user [$time_local]  '
                  '"$request" $status "$request_time" $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" $request_length';

  access_log {{ cfg.ngx.http.access_log }} chef;

  proxy_intercept_errors on;
  proxy_buffering {{ cfg.ngx.http.proxy_buffering }};
  proxy_buffers {{ cfg.ngx.http.proxy_buffers }};
  proxy_buffer_size {{ cfg.ngx.http.proxy_buffer_size }};
  proxy_busy_buffers_size {{ cfg.ngx.http.proxy_busy_buffers_size }};

  upstream automate-dex {
     {{ ~#eachAlive bind.automate-dex.members as |member| }}
     server 127.0.0.1:{{member.cfg.port}};
     {{ ~else }}
     server 127.0.0.1:65535; # force 502
     {{ ~/eachAlive }}
  }

  upstream automate-gateway {
     {{ ~#eachAlive bind.automate-gateway.members as |member| }}
     server 127.0.0.1:{{member.cfg.port}};
     {{ ~else }}
     server 127.0.0.1:65535; # force 502
     {{ ~/eachAlive }}
     keepalive 8;
  }

  upstream automate-ui {
     {{ ~#eachAlive bind.automate-ui.members as |member| }}
     server 127.0.0.1:{{member.cfg.port}};
     {{ ~else }}
     server 127.0.0.1:65535; # force 502
     {{ ~/eachAlive }}
  }

  upstream session-service {
     {{ ~#eachAlive bind.session-service.members as |member| }}
     server 127.0.0.1:{{member.cfg.port}};
     {{ ~else }}
     server 127.0.0.1:65535; # force 502
     {{ ~/eachAlive }}
  }

  include {{pkg.svc_config_path}}/*upstream.conf;
  include {{pkg.svc_config_path}}/automate-host-header-validation.conf;

  server {
    {{#if cfg.ngx.http.ipv6_supported ~}}
    listen [::]:{{ cfg.service.http_port }} ipv6only=off;
    {{else ~}}
    listen {{ cfg.service.http_port }};
    {{/if ~}}
    server_name {{ cfg.service.external_fqdn }} default;
    if ($istrusted = false){
       return 403;
    }
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header x-xss-protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    # TODO: I hate redirecting to https://host:443/ but handlebars has its limits :(
    return 301 https://$server_name:{{ cfg.service.https_port }}$request_uri;
  }

  {{#each cfg.frontend_tls as |tls| ~}}
  server {
    more_set_headers 'server: ';

    {{#if ../cfg.ngx.http.ipv6_supported ~}}
    listen [::]:{{ ../cfg.service.https_port }} ssl http2 ipv6only=off;
    {{else ~}}
    listen {{ ../cfg.service.https_port }} http2 ssl;
    {{/if ~}}
    server_name {{tls.server_name}};

    ssl_certificate {{../pkg.svc_data_path}}/{{tls.server_name}}.cert;
    ssl_certificate_key {{../pkg.svc_data_path}}/{{tls.server_name}}.key;

    proxy_ssl_trusted_certificate {{../pkg.svc_config_path}}/root_ca.crt;
    proxy_ssl_certificate {{../pkg.svc_config_path}}/service.crt;
    proxy_ssl_certificate_key {{../pkg.svc_config_path}}/service.key;
    proxy_ssl_verify        on;

    # By default, we drop the X-Client-Cert header so a user cannot set it.
    # If a route wishes to allow it, they must use:
    # proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
    #
    # NOTE: this behavior of nginx `proxy_set_header` directives:
    # > [`proxy_set_header`] directives are inherited from the previous level if
    # > and only if there are no proxy_set_header directives defined on the
    # > current level.
    # Thus, if you add any `proxy_set_header` to one of the `location`s below,
    # you must do *something* with the `X-Client-Cert` header.
    # Don't mess it up
    proxy_set_header X-Client-Cert "";

    # Required to make persistent connections happen
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # By default, we don't want anything cached, ever. The big exception is
    # automate-ui, with its own Cache-Control header below (location "/").
    #
    #     Note:
    # /!\ Any location block introducing its own add_header call MUST
    #     replicate these lines (see /dex/, /session/ below).
    #
    add_header Cache-Control "no-cache, no-store, must-revalidate";

    # Implement secure headers in accordance w/ owasp best practices
    # https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#tab=Headers
    add_header x-xss-protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options DENY;

    {{#if ../cfg.service.maintenance_mode ~}}
    error_page 503 /maintenance.html;

    location / {
      return 503;
    }

    location = /maintenance.html {
      set $maint_root "{{../pkg.svc_config_path}}";

      # If the user has supplied a maintenance page that we can access we'll
      # serve it instead of the default maintenance page that we render.
      if (-f {{../pkg.svc_var_path}}/maintenance.html) {
        set $maint_root "{{../pkg.svc_var_path}}";
      }

      root $maint_root;
    }
    {{else ~}}

    location /automate.conf.js {
      add_header Cache-Control "private, no-cache, no-store";
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
      alias {{../pkg.svc_config_path}}/automate.conf.js;
      break;
    }

    location ~ .(assets/?)$ {
      return 404;
    }
    location ~ .(assets/img/?)$ {
      return 404;
    }
    location ~ .(assets/fonts/?)$ {
      return 404;
    }
    location ~ .(assets/chef-ui-library/?)$ {
      return 404;
    }

    location ~ .(dex/?)$ {
      return 404;
    }
    location ~ .(dex/static/?)$ {
      return 404;
    }
    location ~ .(dex/static/img/?)$ {
      return 404;
    }
    #######################################################################
    # Automate Gateway
    #######################################################################
    location /api/ {
      # automate-gateway serves two types of routes
      # - /api/v{0,1}, which really are our unversioned endpoints, and
      # - /apis/{versioned-endpoints}, like /apis/iam/v2/policies -- next location block
      rewrite /api/v1/(.*)$ /api/v0/$1 break; # we've never differentiated (or used) these
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
    }

    location /apis/ {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
    }

    # serve legacy API for data-collection
    location /data-collector/v0 {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway/api/v0/events/data-collector;
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
    }

    location /compliance/profiles/ {
      proxy_set_header X-Client-Cert $ssl_client_escaped_cert;
      proxy_pass https://automate-gateway/api/v0/compliance/profiles/; # TODO does this append? Is this tested?
      # Required to make persistent connections happen
      proxy_set_header Connection "";
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header x-xss-protection "1; mode=block" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
    }

    #######################################################################
    # Auth System
    #######################################################################
    location /dex/ {
      proxy_pass https://automate-dex;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
    }

    location /session/ {
      proxy_pass https://session-service/;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      {{#if ../cfg.ngx.http.enable_csp_header ~}}
      add_header Content-Security-Policy "default-src 'self';frame-ancestors 'self';";
      {{/if ~}}
      add_header X-Content-Type-Options "nosniff" always;
    }

    #######################################################################
    # Automate UI
    #######################################################################
    location / {
      proxy_pass https://automate-ui;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "private"; # allow caching, but no sharing of cached data
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
    }

    location /custom_settings.js {
      proxy_pass https://automate-ui/custom_settings.js;
      proxy_set_header Connection ""; # Required to make persistent connections happen
      add_header X-Frame-Options sameorigin; # forbid other <iframe>ing
      add_header Cache-Control "private"; # allow caching, but no sharing of cached data
      add_header x-xss-protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
      add_header X-Content-Type-Options "nosniff" always;
    }

    include {{../pkg.svc_config_path}}/*location.conf;
    {{/if}}
  }
  {{/each}}
}
