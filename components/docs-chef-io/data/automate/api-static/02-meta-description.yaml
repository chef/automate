info:
  description: |
    # Authentication
    The Chef Automate API typically uses an API token passed in the header of your API request.

    To create admin token can and set it as an environment variable use the following command:

    ```
    export TOKEN=`chef-automate iam token create <TOKEN-NAME> --admin`
    ```

    An admin token has unlimited access the entire Chef Automate API.

    Pass the token as part of the API call. For example:

    ```
    curl -s -H "api-token: $TOKEN" https://automate.example.com/apis/iam/v2/policies -v
    ```

    To create api tokens with limited permissions, use your admin token to create a standard token. You can then write a policy that exactly defines the API access for the standard token.

    In this example, the `curl` command creates the new token and the `export` command saves it as an environment variable with the name "TOKEN2".

    ```
    curl -s -H "api-token: $TOKEN" -d '{"name":"New Token", "id":"new-token"}' https://automate.example.com/apis/iam/v2/tokens
      {
        "token": {
          "id": "new-token",
          "name": "New Token",
          "value": "bww8EEpr39_eYMnQ2zybtrP9uzk=",
          "active": true,
          "created_at": "2020-02-26T19:36:07Z",
          "updated_at": "2020-02-26T19:36:07Z",
          "projects": []
        }
      }

    export TOKEN2=bww8EEpr39_eYMnQ2zybtrP9uzk=
    ```

    The Chef Automate documentation covers policies, authentication, and authorization in greater detail.
    * **[API Tokens](https://automate.chef.io/docs/api-tokens/)** explains authentication in Chef Automate.
    * **[Authorization Overview](https://automate.chef.io/docs/iam-v2-overview)** explains authorization in Chef Automate.

    # Return code

    Generic return code
    | Status Code   | Name                  | Description                           | Remark                                                                                                             |
    | ------------- | --------------------- | --------------------------------------| ------------------------------------------------------------------------------------------------------------------ |
    | 400           | Bad request           | Wrong JSON body                       | We get Bad request when we the JSON body contains key or value missing or in some cases when there is not json     |
    | 401           | Unauthorized          | Wrong Auth token                      | We get Unauthorized when we provide wrong auth token or no auth token                                              |
    | 404           | Not Found             | Wrong Id in URL                       | We get Not Found when we provide wrong id or no id while creating, updating, retriving or deleting resources       |
    | 200           | OK                    | Correct Id, Auth token and JSON body  | We get Status OK when we we provide correct values while creating, updating, retriving or deleting resources       |
    | 409           | Conflict              | Existing id                           | When we try to create resources with existing id, it returns conflict                                              |
    | 405           | Method Not Allowed    | When Method is not written            | When the method is not written for a specific API                                                                  |

    Special return codes for specific APIs
    | Status Code   | Name                  | Description                           | Remark                                                                                                             |
    | ------------- | --------------------- | --------------------------------------| ------------------------------------------------------------------------------------------------------------------ |
    | 500           | Internal Server Error | Correct auth token                    | The error occured in `GetRolloutForChefRun` due to Proto Marshal called with nil                                   |
    | 503           | Service Unavailable   | Wrong Id in URL                       | The error occured in `GetRolloutById` API when we pass wrong id into the URL                                       |
    | 403           | Forbidden             | Wrong Auth token                      | The error occured in `Node Export` and `ReportExport` API when we pass no auth token                               |
    | 500	          | Internal Server Error	| Parsing string value to time          | UpdateTelemetryReported Acknowledge API to updates the last client run telemetry reported date in postgres Authorization Action: ``` iam:introspect:getAll ``` |
    | 500	          | Internal Server Error	| Parsing string value to time          | UpdateTelemetryReported Acknowledge API to updates the last client run telemetry reported date in postgres Authorization Action: ``` iam:introspect:getAll ``` |
    | 500           | Internal Server Error | Correct Json body                     | The return code was thrown by `Bulk Delete Nodes by Filter` API                                                                                                |
    | 500           | Internal Server Error | Wrong url ID                          | The error code returned by `Update Node` API when wrong Id in URL was passeed                                                                                  |
    | 503           | Service Unavailable   | No Json body                          | The error code returned by `Bulk Delete Nodes by Filter` API when JSON body wasn't passed                                                                      |
    | 500	          | Internal Server Error	| Passing invalid asset types           | When asset Type is not valid as collected, uncollected, unreported and unreachable in asset list                                                               |
    | 500	          | Internal Server Error	| Time difference exceeds 90 days       | When try to extract results for more than 90 days for `date range API`                                                                                         |
    | 500	          | Internal Server Error	| StartTime cannot be null              | `Asset List and Asset Count API` :- Start time is not passed as a filter                                                                                       |
    | 403	          | Forbidden             | Wrong Id in URL                       | `Read Scan job` API, when no id is passed in the request                                                                                                       |
    | 500           | Internal Server Error | No JSON body                          | The error occured in `List Download Report Requests` API when we don't provide JSON body                           |
