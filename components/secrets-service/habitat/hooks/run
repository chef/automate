#!{{pkgPathFor "core/bash"}}/bin/bash

exec 2>&1

# Call the script to block until user accepts the MLSA via the package's config
{{pkgPathFor "chef/mlsa"}}/bin/accept {{cfg.mlsa.accept}}

export COMPLIANCE_DBNAME="{{cfg.storage.compliance_database}}"
export A1_DBNAME="{{cfg.storage.a1_database}}"
export DBNAME="{{cfg.storage.database}}"

source {{pkg.svc_config_path}}/migration.sh

trigger_migrations

if [ ! -f /hab/.skip_migration ]; then
  echo "/hab/.skip_migration does not exist, running pg-helper command $(pwd)/$0 at $LINENO"
  pg-helper ensure-service-database "$DBNAME" || exit 1
else 
  echo "/hab/.skip_migration does exist, skipping pg-helper"  
fi

# cleanup old migration files
rm -rf {{pkg.svc_static_path}}/*.sql

secrets-service init "{{pkg.svc_data_path}}/secrets_key" || exit 1

# Start our service
exec secrets-service serve --config {{pkg.svc_config_path}}/config.toml
