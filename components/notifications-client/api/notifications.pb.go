// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: notifications.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExceptionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Class         string                 `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Backtrace     []string               `protobuf:"bytes,4,rep,name=backtrace,proto3" json:"backtrace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExceptionInfo) Reset() {
	*x = ExceptionInfo{}
	mi := &file_notifications_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExceptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionInfo) ProtoMessage() {}

func (x *ExceptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionInfo.ProtoReflect.Descriptor instead.
func (*ExceptionInfo) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *ExceptionInfo) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *ExceptionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExceptionInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ExceptionInfo) GetBacktrace() []string {
	if x != nil {
		return x.Backtrace
	}
	return nil
}

type TimeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeInfo) Reset() {
	*x = TimeInfo{}
	mi := &file_notifications_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeInfo) ProtoMessage() {}

func (x *TimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeInfo.ProtoReflect.Descriptor instead.
func (*TimeInfo) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *TimeInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type Profile struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Version        string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Summary        string                 `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	Maintainer     string                 `protobuf:"bytes,5,opt,name=maintainer,proto3" json:"maintainer,omitempty"`
	License        string                 `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	Copyright      string                 `protobuf:"bytes,7,opt,name=copyright,proto3" json:"copyright,omitempty"`
	CopyrightEmail string                 `protobuf:"bytes,8,opt,name=copyright_email,json=copyrightEmail,proto3" json:"copyright_email,omitempty"`
	Sha256         string                 `protobuf:"bytes,9,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Supports       []*PlatformSupport     `protobuf:"bytes,10,rep,name=supports,proto3" json:"supports,omitempty"`
	Attributes     []*Profile_Attribute   `protobuf:"bytes,11,rep,name=attributes,proto3" json:"attributes,omitempty"`
	FailedControls []*Profile_Control     `protobuf:"bytes,12,rep,name=failed_controls,json=failedControls,proto3" json:"failed_controls,omitempty"`
	Stats          *Profile_ControlTotals `protobuf:"bytes,13,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_notifications_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Profile) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Profile) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Profile) GetMaintainer() string {
	if x != nil {
		return x.Maintainer
	}
	return ""
}

func (x *Profile) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Profile) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *Profile) GetCopyrightEmail() string {
	if x != nil {
		return x.CopyrightEmail
	}
	return ""
}

func (x *Profile) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *Profile) GetSupports() []*PlatformSupport {
	if x != nil {
		return x.Supports
	}
	return nil
}

func (x *Profile) GetAttributes() []*Profile_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Profile) GetFailedControls() []*Profile_Control {
	if x != nil {
		return x.FailedControls
	}
	return nil
}

func (x *Profile) GetStats() *Profile_ControlTotals {
	if x != nil {
		return x.Stats
	}
	return nil
}

type SourceLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           string                 `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Line          int32                  `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceLocation) Reset() {
	*x = SourceLocation{}
	mi := &file_notifications_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceLocation) ProtoMessage() {}

func (x *SourceLocation) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceLocation.ProtoReflect.Descriptor instead.
func (*SourceLocation) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *SourceLocation) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *SourceLocation) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

type Refs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Refs) Reset() {
	*x = Refs{}
	mi := &file_notifications_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Refs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refs) ProtoMessage() {}

func (x *Refs) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refs.ProtoReflect.Descriptor instead.
func (*Refs) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *Refs) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Refs) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PlatformSupport struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Inspec string                 `protobuf:"bytes,1,opt,name=inspec,proto3" json:"inspec,omitempty"`
	// TODO: this needs to be os-name in json
	OsName string `protobuf:"bytes,2,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	// TODO: this needs to be os-family in json
	OsFamily      string `protobuf:"bytes,3,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`
	Release       string `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformSupport) Reset() {
	*x = PlatformSupport{}
	mi := &file_notifications_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformSupport) ProtoMessage() {}

func (x *PlatformSupport) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformSupport.ProtoReflect.Descriptor instead.
func (*PlatformSupport) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *PlatformSupport) GetInspec() string {
	if x != nil {
		return x.Inspec
	}
	return ""
}

func (x *PlatformSupport) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *PlatformSupport) GetOsFamily() string {
	if x != nil {
		return x.OsFamily
	}
	return ""
}

func (x *PlatformSupport) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

type ComplianceSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ComplianceUrl string                 `protobuf:"bytes,2,opt,name=compliance_url,json=complianceUrl,proto3" json:"compliance_url,omitempty"`
	NodeName      string                 `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeId        string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	EndTime       string                 `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Timestamp     string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceSuccess) Reset() {
	*x = ComplianceSuccess{}
	mi := &file_notifications_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceSuccess) ProtoMessage() {}

func (x *ComplianceSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceSuccess.ProtoReflect.Descriptor instead.
func (*ComplianceSuccess) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *ComplianceSuccess) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComplianceSuccess) GetComplianceUrl() string {
	if x != nil {
		return x.ComplianceUrl
	}
	return ""
}

func (x *ComplianceSuccess) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ComplianceSuccess) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ComplianceSuccess) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ComplianceSuccess) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ComplianceFailure struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	Id             string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ComplianceUrl  string                           `protobuf:"bytes,2,opt,name=compliance_url,json=complianceUrl,proto3" json:"compliance_url,omitempty"`
	NodeName       string                           `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeId         string                           `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	InspecVersion  string                           `protobuf:"bytes,5,opt,name=inspec_version,json=inspecVersion,proto3" json:"inspec_version,omitempty"`
	TestTotals     *ComplianceFailure_ControlTotals `protobuf:"bytes,6,opt,name=test_totals,json=testTotals,proto3" json:"test_totals,omitempty"`
	FailedProfiles []*Profile                       `protobuf:"bytes,7,rep,name=failed_profiles,json=failedProfiles,proto3" json:"failed_profiles,omitempty"`
	EndTime        string                           `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Timestamp      string                           `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ComplianceFailure) Reset() {
	*x = ComplianceFailure{}
	mi := &file_notifications_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceFailure) ProtoMessage() {}

func (x *ComplianceFailure) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceFailure.ProtoReflect.Descriptor instead.
func (*ComplianceFailure) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *ComplianceFailure) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComplianceFailure) GetComplianceUrl() string {
	if x != nil {
		return x.ComplianceUrl
	}
	return ""
}

func (x *ComplianceFailure) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ComplianceFailure) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ComplianceFailure) GetInspecVersion() string {
	if x != nil {
		return x.InspecVersion
	}
	return ""
}

func (x *ComplianceFailure) GetTestTotals() *ComplianceFailure_ControlTotals {
	if x != nil {
		return x.TestTotals
	}
	return nil
}

func (x *ComplianceFailure) GetFailedProfiles() []*Profile {
	if x != nil {
		return x.FailedProfiles
	}
	return nil
}

func (x *ComplianceFailure) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ComplianceFailure) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type CCRFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeUrl       string                 `protobuf:"bytes,3,opt,name=node_url,json=nodeUrl,proto3" json:"node_url,omitempty"`
	RunUrl        string                 `protobuf:"bytes,4,opt,name=run_url,json=runUrl,proto3" json:"run_url,omitempty"`
	Cookbook      string                 `protobuf:"bytes,5,opt,name=cookbook,proto3" json:"cookbook,omitempty"`
	Recipe        string                 `protobuf:"bytes,6,opt,name=recipe,proto3" json:"recipe,omitempty"`
	Time          *TimeInfo              `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	Exception     *ExceptionInfo         `protobuf:"bytes,8,opt,name=exception,proto3" json:"exception,omitempty"`
	Timestamp     string                 `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCRFailure) Reset() {
	*x = CCRFailure{}
	mi := &file_notifications_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCRFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCRFailure) ProtoMessage() {}

func (x *CCRFailure) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCRFailure.ProtoReflect.Descriptor instead.
func (*CCRFailure) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *CCRFailure) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *CCRFailure) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *CCRFailure) GetNodeUrl() string {
	if x != nil {
		return x.NodeUrl
	}
	return ""
}

func (x *CCRFailure) GetRunUrl() string {
	if x != nil {
		return x.RunUrl
	}
	return ""
}

func (x *CCRFailure) GetCookbook() string {
	if x != nil {
		return x.Cookbook
	}
	return ""
}

func (x *CCRFailure) GetRecipe() string {
	if x != nil {
		return x.Recipe
	}
	return ""
}

func (x *CCRFailure) GetTime() *TimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CCRFailure) GetException() *ExceptionInfo {
	if x != nil {
		return x.Exception
	}
	return nil
}

func (x *CCRFailure) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type CCRSuccess struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RunId                string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	NodeName             string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	RunUrl               string                 `protobuf:"bytes,3,opt,name=run_url,json=runUrl,proto3" json:"run_url,omitempty"`
	Time                 *TimeInfo              `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	UpdatedResourceCount int32                  `protobuf:"varint,5,opt,name=updated_resource_count,json=updatedResourceCount,proto3" json:"updated_resource_count,omitempty"`
	Timestamp            string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CCRSuccess) Reset() {
	*x = CCRSuccess{}
	mi := &file_notifications_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCRSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCRSuccess) ProtoMessage() {}

func (x *CCRSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCRSuccess.ProtoReflect.Descriptor instead.
func (*CCRSuccess) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{9}
}

func (x *CCRSuccess) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *CCRSuccess) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *CCRSuccess) GetRunUrl() string {
	if x != nil {
		return x.RunUrl
	}
	return ""
}

func (x *CCRSuccess) GetTime() *TimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CCRSuccess) GetUpdatedResourceCount() int32 {
	if x != nil {
		return x.UpdatedResourceCount
	}
	return 0
}

func (x *CCRSuccess) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_notifications_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{10}
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*Event_CCRSuccess
	//	*Event_CCRFailure
	//	*Event_ComplianceSuccess
	//	*Event_ComplianceFailure
	Event         isEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_notifications_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{11}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetEvent() isEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetCCRSuccess() *CCRSuccess {
	if x != nil {
		if x, ok := x.Event.(*Event_CCRSuccess); ok {
			return x.CCRSuccess
		}
	}
	return nil
}

func (x *Event) GetCCRFailure() *CCRFailure {
	if x != nil {
		if x, ok := x.Event.(*Event_CCRFailure); ok {
			return x.CCRFailure
		}
	}
	return nil
}

func (x *Event) GetComplianceSuccess() *ComplianceSuccess {
	if x != nil {
		if x, ok := x.Event.(*Event_ComplianceSuccess); ok {
			return x.ComplianceSuccess
		}
	}
	return nil
}

func (x *Event) GetComplianceFailure() *ComplianceFailure {
	if x != nil {
		if x, ok := x.Event.(*Event_ComplianceFailure); ok {
			return x.ComplianceFailure
		}
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_CCRSuccess struct {
	CCRSuccess *CCRSuccess `protobuf:"bytes,2,opt,name=CCRSuccess,proto3,oneof"`
}

type Event_CCRFailure struct {
	CCRFailure *CCRFailure `protobuf:"bytes,3,opt,name=CCRFailure,proto3,oneof"`
}

type Event_ComplianceSuccess struct {
	ComplianceSuccess *ComplianceSuccess `protobuf:"bytes,4,opt,name=ComplianceSuccess,proto3,oneof"`
}

type Event_ComplianceFailure struct {
	ComplianceFailure *ComplianceFailure `protobuf:"bytes,5,opt,name=ComplianceFailure,proto3,oneof"`
}

func (*Event_CCRSuccess) isEvent_Event() {}

func (*Event_CCRFailure) isEvent_Event() {}

func (*Event_ComplianceSuccess) isEvent_Event() {}

func (*Event_ComplianceFailure) isEvent_Event() {}

type Profile_Control struct {
	state          protoimpl.MessageState        `protogen:"open.v1"`
	Id             string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Impact         float32                       `protobuf:"fixed32,2,opt,name=impact,proto3" json:"impact,omitempty"`
	Title          string                        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Code           string                        `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Desc           string                        `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	SourceLocation *SourceLocation               `protobuf:"bytes,6,opt,name=source_location,json=sourceLocation,proto3" json:"source_location,omitempty"`
	Refs           []*Refs                       `protobuf:"bytes,7,rep,name=refs,proto3" json:"refs,omitempty"`
	FailedResults  []*Profile_Control_Result     `protobuf:"bytes,9,rep,name=failed_results,json=failedResults,proto3" json:"failed_results,omitempty"`
	Stats          *Profile_Control_ResultTotals `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Profile_Control) Reset() {
	*x = Profile_Control{}
	mi := &file_notifications_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Control) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Control) ProtoMessage() {}

func (x *Profile_Control) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Control.ProtoReflect.Descriptor instead.
func (*Profile_Control) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Profile_Control) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Profile_Control) GetImpact() float32 {
	if x != nil {
		return x.Impact
	}
	return 0
}

func (x *Profile_Control) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Profile_Control) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Profile_Control) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Profile_Control) GetSourceLocation() *SourceLocation {
	if x != nil {
		return x.SourceLocation
	}
	return nil
}

func (x *Profile_Control) GetRefs() []*Refs {
	if x != nil {
		return x.Refs
	}
	return nil
}

func (x *Profile_Control) GetFailedResults() []*Profile_Control_Result {
	if x != nil {
		return x.FailedResults
	}
	return nil
}

func (x *Profile_Control) GetStats() *Profile_Control_ResultTotals {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Profile_Attribute struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Name          string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options       *Profile_Attribute_Options `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile_Attribute) Reset() {
	*x = Profile_Attribute{}
	mi := &file_notifications_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Attribute) ProtoMessage() {}

func (x *Profile_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Attribute.ProtoReflect.Descriptor instead.
func (*Profile_Attribute) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Profile_Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile_Attribute) GetOptions() *Profile_Attribute_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type Profile_ControlTotals struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of controls in the profile
	NumTests int32 `protobuf:"varint,1,opt,name=num_tests,json=numTests,proto3" json:"num_tests,omitempty"`
	// The number of controls that failed
	NumFailedTests int32 `protobuf:"varint,2,opt,name=num_failed_tests,json=numFailedTests,proto3" json:"num_failed_tests,omitempty"`
	// The number of controls that were skipped (0 fails, 0 pass)
	NumSkippedTests int32 `protobuf:"varint,3,opt,name=num_skipped_tests,json=numSkippedTests,proto3" json:"num_skipped_tests,omitempty"`
	// The number of controls that passed
	NumPassedTests int32 `protobuf:"varint,4,opt,name=num_passed_tests,json=numPassedTests,proto3" json:"num_passed_tests,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Profile_ControlTotals) Reset() {
	*x = Profile_ControlTotals{}
	mi := &file_notifications_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_ControlTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_ControlTotals) ProtoMessage() {}

func (x *Profile_ControlTotals) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_ControlTotals.ProtoReflect.Descriptor instead.
func (*Profile_ControlTotals) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Profile_ControlTotals) GetNumTests() int32 {
	if x != nil {
		return x.NumTests
	}
	return 0
}

func (x *Profile_ControlTotals) GetNumFailedTests() int32 {
	if x != nil {
		return x.NumFailedTests
	}
	return 0
}

func (x *Profile_ControlTotals) GetNumSkippedTests() int32 {
	if x != nil {
		return x.NumSkippedTests
	}
	return 0
}

func (x *Profile_ControlTotals) GetNumPassedTests() int32 {
	if x != nil {
		return x.NumPassedTests
	}
	return 0
}

type Profile_Control_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CodeDesc      string                 `protobuf:"bytes,2,opt,name=code_desc,json=codeDesc,proto3" json:"code_desc,omitempty"`
	RunTime       float32                `protobuf:"fixed32,3,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	StartTime     string                 `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	SkipMessage   string                 `protobuf:"bytes,6,opt,name=skip_message,json=skipMessage,proto3" json:"skip_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile_Control_Result) Reset() {
	*x = Profile_Control_Result{}
	mi := &file_notifications_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Control_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Control_Result) ProtoMessage() {}

func (x *Profile_Control_Result) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Control_Result.ProtoReflect.Descriptor instead.
func (*Profile_Control_Result) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *Profile_Control_Result) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Profile_Control_Result) GetCodeDesc() string {
	if x != nil {
		return x.CodeDesc
	}
	return ""
}

func (x *Profile_Control_Result) GetRunTime() float32 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *Profile_Control_Result) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Profile_Control_Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Profile_Control_Result) GetSkipMessage() string {
	if x != nil {
		return x.SkipMessage
	}
	return ""
}

type Profile_Control_ResultTotals struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NumTests        int32                  `protobuf:"varint,1,opt,name=num_tests,json=numTests,proto3" json:"num_tests,omitempty"`
	NumFailedTests  int32                  `protobuf:"varint,2,opt,name=num_failed_tests,json=numFailedTests,proto3" json:"num_failed_tests,omitempty"`
	NumSkippedTests int32                  `protobuf:"varint,3,opt,name=num_skipped_tests,json=numSkippedTests,proto3" json:"num_skipped_tests,omitempty"`
	NumPassedTests  int32                  `protobuf:"varint,4,opt,name=num_passed_tests,json=numPassedTests,proto3" json:"num_passed_tests,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Profile_Control_ResultTotals) Reset() {
	*x = Profile_Control_ResultTotals{}
	mi := &file_notifications_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Control_ResultTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Control_ResultTotals) ProtoMessage() {}

func (x *Profile_Control_ResultTotals) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Control_ResultTotals.ProtoReflect.Descriptor instead.
func (*Profile_Control_ResultTotals) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *Profile_Control_ResultTotals) GetNumTests() int32 {
	if x != nil {
		return x.NumTests
	}
	return 0
}

func (x *Profile_Control_ResultTotals) GetNumFailedTests() int32 {
	if x != nil {
		return x.NumFailedTests
	}
	return 0
}

func (x *Profile_Control_ResultTotals) GetNumSkippedTests() int32 {
	if x != nil {
		return x.NumSkippedTests
	}
	return 0
}

func (x *Profile_Control_ResultTotals) GetNumPassedTests() int32 {
	if x != nil {
		return x.NumPassedTests
	}
	return 0
}

type Profile_Attribute_Options struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile_Attribute_Options) Reset() {
	*x = Profile_Attribute_Options{}
	mi := &file_notifications_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile_Attribute_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Attribute_Options) ProtoMessage() {}

func (x *Profile_Attribute_Options) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Attribute_Options.ProtoReflect.Descriptor instead.
func (*Profile_Attribute_Options) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *Profile_Attribute_Options) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ComplianceFailure_ControlTotals struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Skipped        int32                  `protobuf:"varint,1,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Passed         int32                  `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty"`
	Failed         int32                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Critical       int32                  `protobuf:"varint,4,opt,name=critical,proto3" json:"critical,omitempty"`
	CriticalFailed int32                  `protobuf:"varint,5,opt,name=critical_failed,json=criticalFailed,proto3" json:"critical_failed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ComplianceFailure_ControlTotals) Reset() {
	*x = ComplianceFailure_ControlTotals{}
	mi := &file_notifications_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceFailure_ControlTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceFailure_ControlTotals) ProtoMessage() {}

func (x *ComplianceFailure_ControlTotals) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceFailure_ControlTotals.ProtoReflect.Descriptor instead.
func (*ComplianceFailure_ControlTotals) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ComplianceFailure_ControlTotals) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ComplianceFailure_ControlTotals) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *ComplianceFailure_ControlTotals) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *ComplianceFailure_ControlTotals) GetCritical() int32 {
	if x != nil {
		return x.Critical
	}
	return 0
}

func (x *ComplianceFailure_ControlTotals) GetCriticalFailed() int32 {
	if x != nil {
		return x.CriticalFailed
	}
	return 0
}

var File_notifications_proto protoreflect.FileDescriptor

const file_notifications_proto_rawDesc = "" +
	"\n" +
	"\x13notifications.proto\x12\rnotifications\"k\n" +
	"\rExceptionInfo\x12\x14\n" +
	"\x05class\x18\x01 \x01(\tR\x05class\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12\x1c\n" +
	"\tbacktrace\x18\x04 \x03(\tR\tbacktrace\"D\n" +
	"\bTimeInfo\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\tR\aendTime\"\xa4\f\n" +
	"\aProfile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x18\n" +
	"\asummary\x18\x04 \x01(\tR\asummary\x12\x1e\n" +
	"\n" +
	"maintainer\x18\x05 \x01(\tR\n" +
	"maintainer\x12\x18\n" +
	"\alicense\x18\x06 \x01(\tR\alicense\x12\x1c\n" +
	"\tcopyright\x18\a \x01(\tR\tcopyright\x12'\n" +
	"\x0fcopyright_email\x18\b \x01(\tR\x0ecopyrightEmail\x12\x16\n" +
	"\x06sha256\x18\t \x01(\tR\x06sha256\x12:\n" +
	"\bsupports\x18\n" +
	" \x03(\v2\x1e.notifications.PlatformSupportR\bsupports\x12@\n" +
	"\n" +
	"attributes\x18\v \x03(\v2 .notifications.Profile.AttributeR\n" +
	"attributes\x12G\n" +
	"\x0ffailed_controls\x18\f \x03(\v2\x1e.notifications.Profile.ControlR\x0efailedControls\x12:\n" +
	"\x05stats\x18\r \x01(\v2$.notifications.Profile.ControlTotalsR\x05stats\x1a\xdc\x05\n" +
	"\aControl\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06impact\x18\x02 \x01(\x02R\x06impact\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12\x12\n" +
	"\x04desc\x18\x05 \x01(\tR\x04desc\x12F\n" +
	"\x0fsource_location\x18\x06 \x01(\v2\x1d.notifications.SourceLocationR\x0esourceLocation\x12'\n" +
	"\x04refs\x18\a \x03(\v2\x13.notifications.RefsR\x04refs\x12L\n" +
	"\x0efailed_results\x18\t \x03(\v2%.notifications.Profile.Control.ResultR\rfailedResults\x12A\n" +
	"\x05stats\x18\n" +
	" \x01(\v2+.notifications.Profile.Control.ResultTotalsR\x05stats\x1a\xb4\x01\n" +
	"\x06Result\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1b\n" +
	"\tcode_desc\x18\x02 \x01(\tR\bcodeDesc\x12\x19\n" +
	"\brun_time\x18\x03 \x01(\x02R\arunTime\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12!\n" +
	"\fskip_message\x18\x06 \x01(\tR\vskipMessage\x1a\xab\x01\n" +
	"\fResultTotals\x12\x1b\n" +
	"\tnum_tests\x18\x01 \x01(\x05R\bnumTests\x12(\n" +
	"\x10num_failed_tests\x18\x02 \x01(\x05R\x0enumFailedTests\x12*\n" +
	"\x11num_skipped_tests\x18\x03 \x01(\x05R\x0fnumSkippedTests\x12(\n" +
	"\x10num_passed_tests\x18\x04 \x01(\x05R\x0enumPassedTestsJ\x04\b\b\x10\t\x1a\x90\x01\n" +
	"\tAttribute\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12B\n" +
	"\aoptions\x18\x02 \x01(\v2(.notifications.Profile.Attribute.OptionsR\aoptions\x1a+\n" +
	"\aOptions\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x1a\xac\x01\n" +
	"\rControlTotals\x12\x1b\n" +
	"\tnum_tests\x18\x01 \x01(\x05R\bnumTests\x12(\n" +
	"\x10num_failed_tests\x18\x02 \x01(\x05R\x0enumFailedTests\x12*\n" +
	"\x11num_skipped_tests\x18\x03 \x01(\x05R\x0fnumSkippedTests\x12(\n" +
	"\x10num_passed_tests\x18\x04 \x01(\x05R\x0enumPassedTests\"6\n" +
	"\x0eSourceLocation\x12\x10\n" +
	"\x03ref\x18\x01 \x01(\tR\x03ref\x12\x12\n" +
	"\x04line\x18\x02 \x01(\x05R\x04line\"0\n" +
	"\x04Refs\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03urlJ\x04\b\x01\x10\x02\"y\n" +
	"\x0fPlatformSupport\x12\x16\n" +
	"\x06inspec\x18\x01 \x01(\tR\x06inspec\x12\x17\n" +
	"\aos_name\x18\x02 \x01(\tR\x06osName\x12\x1b\n" +
	"\tos_family\x18\x03 \x01(\tR\bosFamily\x12\x18\n" +
	"\arelease\x18\x04 \x01(\tR\arelease\"\xb9\x01\n" +
	"\x11ComplianceSuccess\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0ecompliance_url\x18\x02 \x01(\tR\rcomplianceUrl\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\tR\aendTime\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp\"\x93\x04\n" +
	"\x11ComplianceFailure\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0ecompliance_url\x18\x02 \x01(\tR\rcomplianceUrl\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12%\n" +
	"\x0einspec_version\x18\x05 \x01(\tR\rinspecVersion\x12O\n" +
	"\vtest_totals\x18\x06 \x01(\v2..notifications.ComplianceFailure.ControlTotalsR\n" +
	"testTotals\x12?\n" +
	"\x0ffailed_profiles\x18\a \x03(\v2\x16.notifications.ProfileR\x0efailedProfiles\x12\x19\n" +
	"\bend_time\x18\b \x01(\tR\aendTime\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\tR\ttimestamp\x1a\x9e\x01\n" +
	"\rControlTotals\x12\x18\n" +
	"\askipped\x18\x01 \x01(\x05R\askipped\x12\x16\n" +
	"\x06passed\x18\x02 \x01(\x05R\x06passed\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x12\x1a\n" +
	"\bcritical\x18\x04 \x01(\x05R\bcritical\x12'\n" +
	"\x0fcritical_failed\x18\x05 \x01(\x05R\x0ecriticalFailed\"\xaf\x02\n" +
	"\n" +
	"CCRFailure\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x19\n" +
	"\bnode_url\x18\x03 \x01(\tR\anodeUrl\x12\x17\n" +
	"\arun_url\x18\x04 \x01(\tR\x06runUrl\x12\x1a\n" +
	"\bcookbook\x18\x05 \x01(\tR\bcookbook\x12\x16\n" +
	"\x06recipe\x18\x06 \x01(\tR\x06recipe\x12+\n" +
	"\x04time\x18\a \x01(\v2\x17.notifications.TimeInfoR\x04time\x12:\n" +
	"\texception\x18\b \x01(\v2\x1c.notifications.ExceptionInfoR\texception\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\tR\ttimestamp\"\xda\x01\n" +
	"\n" +
	"CCRSuccess\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x17\n" +
	"\arun_url\x18\x03 \x01(\tR\x06runUrl\x12+\n" +
	"\x04time\x18\x04 \x01(\v2\x17.notifications.TimeInfoR\x04time\x124\n" +
	"\x16updated_resource_count\x18\x05 \x01(\x05R\x14updatedResourceCount\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp\"\n" +
	"\n" +
	"\bResponse\"\xbe\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\n" +
	"CCRSuccess\x18\x02 \x01(\v2\x19.notifications.CCRSuccessH\x00R\n" +
	"CCRSuccess\x12;\n" +
	"\n" +
	"CCRFailure\x18\x03 \x01(\v2\x19.notifications.CCRFailureH\x00R\n" +
	"CCRFailure\x12P\n" +
	"\x11ComplianceSuccess\x18\x04 \x01(\v2 .notifications.ComplianceSuccessH\x00R\x11ComplianceSuccess\x12P\n" +
	"\x11ComplianceFailure\x18\x05 \x01(\v2 .notifications.ComplianceFailureH\x00R\x11ComplianceFailureB\a\n" +
	"\x05eventB\aZ\x05.;apib\x06proto3"

var (
	file_notifications_proto_rawDescOnce sync.Once
	file_notifications_proto_rawDescData []byte
)

func file_notifications_proto_rawDescGZIP() []byte {
	file_notifications_proto_rawDescOnce.Do(func() {
		file_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notifications_proto_rawDesc), len(file_notifications_proto_rawDesc)))
	})
	return file_notifications_proto_rawDescData
}

var file_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_notifications_proto_goTypes = []any{
	(*ExceptionInfo)(nil),                   // 0: notifications.ExceptionInfo
	(*TimeInfo)(nil),                        // 1: notifications.TimeInfo
	(*Profile)(nil),                         // 2: notifications.Profile
	(*SourceLocation)(nil),                  // 3: notifications.SourceLocation
	(*Refs)(nil),                            // 4: notifications.Refs
	(*PlatformSupport)(nil),                 // 5: notifications.PlatformSupport
	(*ComplianceSuccess)(nil),               // 6: notifications.ComplianceSuccess
	(*ComplianceFailure)(nil),               // 7: notifications.ComplianceFailure
	(*CCRFailure)(nil),                      // 8: notifications.CCRFailure
	(*CCRSuccess)(nil),                      // 9: notifications.CCRSuccess
	(*Response)(nil),                        // 10: notifications.Response
	(*Event)(nil),                           // 11: notifications.Event
	(*Profile_Control)(nil),                 // 12: notifications.Profile.Control
	(*Profile_Attribute)(nil),               // 13: notifications.Profile.Attribute
	(*Profile_ControlTotals)(nil),           // 14: notifications.Profile.ControlTotals
	(*Profile_Control_Result)(nil),          // 15: notifications.Profile.Control.Result
	(*Profile_Control_ResultTotals)(nil),    // 16: notifications.Profile.Control.ResultTotals
	(*Profile_Attribute_Options)(nil),       // 17: notifications.Profile.Attribute.Options
	(*ComplianceFailure_ControlTotals)(nil), // 18: notifications.ComplianceFailure.ControlTotals
}
var file_notifications_proto_depIdxs = []int32{
	5,  // 0: notifications.Profile.supports:type_name -> notifications.PlatformSupport
	13, // 1: notifications.Profile.attributes:type_name -> notifications.Profile.Attribute
	12, // 2: notifications.Profile.failed_controls:type_name -> notifications.Profile.Control
	14, // 3: notifications.Profile.stats:type_name -> notifications.Profile.ControlTotals
	18, // 4: notifications.ComplianceFailure.test_totals:type_name -> notifications.ComplianceFailure.ControlTotals
	2,  // 5: notifications.ComplianceFailure.failed_profiles:type_name -> notifications.Profile
	1,  // 6: notifications.CCRFailure.time:type_name -> notifications.TimeInfo
	0,  // 7: notifications.CCRFailure.exception:type_name -> notifications.ExceptionInfo
	1,  // 8: notifications.CCRSuccess.time:type_name -> notifications.TimeInfo
	9,  // 9: notifications.Event.CCRSuccess:type_name -> notifications.CCRSuccess
	8,  // 10: notifications.Event.CCRFailure:type_name -> notifications.CCRFailure
	6,  // 11: notifications.Event.ComplianceSuccess:type_name -> notifications.ComplianceSuccess
	7,  // 12: notifications.Event.ComplianceFailure:type_name -> notifications.ComplianceFailure
	3,  // 13: notifications.Profile.Control.source_location:type_name -> notifications.SourceLocation
	4,  // 14: notifications.Profile.Control.refs:type_name -> notifications.Refs
	15, // 15: notifications.Profile.Control.failed_results:type_name -> notifications.Profile.Control.Result
	16, // 16: notifications.Profile.Control.stats:type_name -> notifications.Profile.Control.ResultTotals
	17, // 17: notifications.Profile.Attribute.options:type_name -> notifications.Profile.Attribute.Options
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_notifications_proto_init() }
func file_notifications_proto_init() {
	if File_notifications_proto != nil {
		return
	}
	file_notifications_proto_msgTypes[11].OneofWrappers = []any{
		(*Event_CCRSuccess)(nil),
		(*Event_CCRFailure)(nil),
		(*Event_ComplianceSuccess)(nil),
		(*Event_ComplianceFailure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notifications_proto_rawDesc), len(file_notifications_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_notifications_proto_goTypes,
		DependencyIndexes: file_notifications_proto_depIdxs,
		MessageInfos:      file_notifications_proto_msgTypes,
	}.Build()
	File_notifications_proto = out.File
	file_notifications_proto_goTypes = nil
	file_notifications_proto_depIdxs = nil
}
