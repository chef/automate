// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: rules.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Rule_Event int32

const (
	Rule_CCRFailure        Rule_Event = 0
	Rule_CCRSuccess        Rule_Event = 1
	Rule_ComplianceFailure Rule_Event = 2
	Rule_ComplianceSuccess Rule_Event = 3
)

// Enum value maps for Rule_Event.
var (
	Rule_Event_name = map[int32]string{
		0: "CCRFailure",
		1: "CCRSuccess",
		2: "ComplianceFailure",
		3: "ComplianceSuccess",
	}
	Rule_Event_value = map[string]int32{
		"CCRFailure":        0,
		"CCRSuccess":        1,
		"ComplianceFailure": 2,
		"ComplianceSuccess": 3,
	}
)

func (x Rule_Event) Enum() *Rule_Event {
	p := new(Rule_Event)
	*p = x
	return p
}

func (x Rule_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[0].Descriptor()
}

func (Rule_Event) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[0]
}

func (x Rule_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Event.Descriptor instead.
func (Rule_Event) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{4, 0}
}

type URLValidationResponse_Code int32

const (
	URLValidationResponse_OK                        URLValidationResponse_Code = 0  // we made the request and it succeeded with a 20x response
	URLValidationResponse_ERROR                     URLValidationResponse_Code = 1  // We made the request and it failed for any reason.
	URLValidationResponse_INVALID_URL               URLValidationResponse_Code = 4  // the url was not valid.
	URLValidationResponse_NOTIFICATIONS_UNAVAIALBLE URLValidationResponse_Code = 98 // we could not make the request due to capacity
	URLValidationResponse_INTERNAL_ERROR            URLValidationResponse_Code = 99
)

// Enum value maps for URLValidationResponse_Code.
var (
	URLValidationResponse_Code_name = map[int32]string{
		0:  "OK",
		1:  "ERROR",
		4:  "INVALID_URL",
		98: "NOTIFICATIONS_UNAVAIALBLE",
		99: "INTERNAL_ERROR",
	}
	URLValidationResponse_Code_value = map[string]int32{
		"OK":                        0,
		"ERROR":                     1,
		"INVALID_URL":               4,
		"NOTIFICATIONS_UNAVAIALBLE": 98,
		"INTERNAL_ERROR":            99,
	}
)

func (x URLValidationResponse_Code) Enum() *URLValidationResponse_Code {
	p := new(URLValidationResponse_Code)
	*p = x
	return p
}

func (x URLValidationResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLValidationResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[1].Descriptor()
}

func (URLValidationResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[1]
}

func (x URLValidationResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLValidationResponse_Code.Descriptor instead.
func (URLValidationResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{8, 0}
}

type RuleUpdateResponse_Code int32

const (
	RuleUpdateResponse_OK               RuleUpdateResponse_Code = 0
	RuleUpdateResponse_DUPLICATE_NAME   RuleUpdateResponse_Code = 1
	RuleUpdateResponse_NOT_FOUND        RuleUpdateResponse_Code = 2
	RuleUpdateResponse_VALIDATION_ERROR RuleUpdateResponse_Code = 4
	RuleUpdateResponse_INTERNAL_ERROR   RuleUpdateResponse_Code = 99
)

// Enum value maps for RuleUpdateResponse_Code.
var (
	RuleUpdateResponse_Code_name = map[int32]string{
		0:  "OK",
		1:  "DUPLICATE_NAME",
		2:  "NOT_FOUND",
		4:  "VALIDATION_ERROR",
		99: "INTERNAL_ERROR",
	}
	RuleUpdateResponse_Code_value = map[string]int32{
		"OK":               0,
		"DUPLICATE_NAME":   1,
		"NOT_FOUND":        2,
		"VALIDATION_ERROR": 4,
		"INTERNAL_ERROR":   99,
	}
)

func (x RuleUpdateResponse_Code) Enum() *RuleUpdateResponse_Code {
	p := new(RuleUpdateResponse_Code)
	*p = x
	return p
}

func (x RuleUpdateResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleUpdateResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[2].Descriptor()
}

func (RuleUpdateResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[2]
}

func (x RuleUpdateResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleUpdateResponse_Code.Descriptor instead.
func (RuleUpdateResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{10, 0}
}

type RuleDeleteResponse_Code int32

const (
	RuleDeleteResponse_DELETED        RuleDeleteResponse_Code = 0
	RuleDeleteResponse_NOT_FOUND      RuleDeleteResponse_Code = 2
	RuleDeleteResponse_INTERNAL_ERROR RuleDeleteResponse_Code = 99
)

// Enum value maps for RuleDeleteResponse_Code.
var (
	RuleDeleteResponse_Code_name = map[int32]string{
		0:  "DELETED",
		2:  "NOT_FOUND",
		99: "INTERNAL_ERROR",
	}
	RuleDeleteResponse_Code_value = map[string]int32{
		"DELETED":        0,
		"NOT_FOUND":      2,
		"INTERNAL_ERROR": 99,
	}
)

func (x RuleDeleteResponse_Code) Enum() *RuleDeleteResponse_Code {
	p := new(RuleDeleteResponse_Code)
	*p = x
	return p
}

func (x RuleDeleteResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleDeleteResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[3].Descriptor()
}

func (RuleDeleteResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[3]
}

func (x RuleDeleteResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleDeleteResponse_Code.Descriptor instead.
func (RuleDeleteResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{11, 0}
}

type RuleAddResponse_Code int32

const (
	RuleAddResponse_ADDED                 RuleAddResponse_Code = 0
	RuleAddResponse_DUPLICATE_NAME        RuleAddResponse_Code = 1
	RuleAddResponse_NOT_FOUND             RuleAddResponse_Code = 2
	RuleAddResponse_INVALID_ACTION_CONFIG RuleAddResponse_Code = 3
	RuleAddResponse_VALIDATION_ERROR      RuleAddResponse_Code = 4
	RuleAddResponse_INTERNAL_ERROR        RuleAddResponse_Code = 99
)

// Enum value maps for RuleAddResponse_Code.
var (
	RuleAddResponse_Code_name = map[int32]string{
		0:  "ADDED",
		1:  "DUPLICATE_NAME",
		2:  "NOT_FOUND",
		3:  "INVALID_ACTION_CONFIG",
		4:  "VALIDATION_ERROR",
		99: "INTERNAL_ERROR",
	}
	RuleAddResponse_Code_value = map[string]int32{
		"ADDED":                 0,
		"DUPLICATE_NAME":        1,
		"NOT_FOUND":             2,
		"INVALID_ACTION_CONFIG": 3,
		"VALIDATION_ERROR":      4,
		"INTERNAL_ERROR":        99,
	}
)

func (x RuleAddResponse_Code) Enum() *RuleAddResponse_Code {
	p := new(RuleAddResponse_Code)
	*p = x
	return p
}

func (x RuleAddResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleAddResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[4].Descriptor()
}

func (RuleAddResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[4]
}

func (x RuleAddResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleAddResponse_Code.Descriptor instead.
func (RuleAddResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{12, 0}
}

type RuleGetResponse_Code int32

const (
	RuleGetResponse_OK             RuleGetResponse_Code = 0
	RuleGetResponse_NOT_FOUND      RuleGetResponse_Code = 2
	RuleGetResponse_INTERNAL_ERROR RuleGetResponse_Code = 99
)

// Enum value maps for RuleGetResponse_Code.
var (
	RuleGetResponse_Code_name = map[int32]string{
		0:  "OK",
		2:  "NOT_FOUND",
		99: "INTERNAL_ERROR",
	}
	RuleGetResponse_Code_value = map[string]int32{
		"OK":             0,
		"NOT_FOUND":      2,
		"INTERNAL_ERROR": 99,
	}
)

func (x RuleGetResponse_Code) Enum() *RuleGetResponse_Code {
	p := new(RuleGetResponse_Code)
	*p = x
	return p
}

func (x RuleGetResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleGetResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[5].Descriptor()
}

func (RuleGetResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[5]
}

func (x RuleGetResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleGetResponse_Code.Descriptor instead.
func (RuleGetResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{13, 0}
}

type RuleListResponse_Code int32

const (
	RuleListResponse_OK             RuleListResponse_Code = 0
	RuleListResponse_INTERNAL_ERROR RuleListResponse_Code = 99
)

// Enum value maps for RuleListResponse_Code.
var (
	RuleListResponse_Code_name = map[int32]string{
		0:  "OK",
		99: "INTERNAL_ERROR",
	}
	RuleListResponse_Code_value = map[string]int32{
		"OK":             0,
		"INTERNAL_ERROR": 99,
	}
)

func (x RuleListResponse_Code) Enum() *RuleListResponse_Code {
	p := new(RuleListResponse_Code)
	*p = x
	return p
}

func (x RuleListResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleListResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_rules_proto_enumTypes[6].Descriptor()
}

func (RuleListResponse_Code) Type() protoreflect.EnumType {
	return &file_rules_proto_enumTypes[6]
}

func (x RuleListResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleListResponse_Code.Descriptor instead.
func (RuleListResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{14, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{0}
}

type SlackAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SlackAlert) Reset() {
	*x = SlackAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackAlert) ProtoMessage() {}

func (x *SlackAlert) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackAlert.ProtoReflect.Descriptor instead.
func (*SlackAlert) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{1}
}

func (x *SlackAlert) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type WebhookAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WebhookAlert) Reset() {
	*x = WebhookAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookAlert) ProtoMessage() {}

func (x *WebhookAlert) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookAlert.ProtoReflect.Descriptor instead.
func (*WebhookAlert) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{2}
}

func (x *WebhookAlert) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ServiceNowAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	SecretId             string `protobuf:"bytes,2,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	CriticalControlsOnly bool   `protobuf:"varint,3,opt,name=critical_controls_only,json=criticalControlsOnly,proto3" json:"critical_controls_only,omitempty"`
}

func (x *ServiceNowAlert) Reset() {
	*x = ServiceNowAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceNowAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceNowAlert) ProtoMessage() {}

func (x *ServiceNowAlert) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceNowAlert.ProtoReflect.Descriptor instead.
func (*ServiceNowAlert) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceNowAlert) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ServiceNowAlert) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *ServiceNowAlert) GetCriticalControlsOnly() bool {
	if x != nil {
		return x.CriticalControlsOnly
	}
	return false
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Event Rule_Event `protobuf:"varint,3,opt,name=event,proto3,enum=notifications.Rule_Event" json:"event,omitempty"`
	// Types that are assignable to Action:
	//	*Rule_SlackAlert
	//	*Rule_WebhookAlert
	//	*Rule_ServiceNowAlert
	Action isRule_Action `protobuf_oneof:"action"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{4}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetEvent() Rule_Event {
	if x != nil {
		return x.Event
	}
	return Rule_CCRFailure
}

func (m *Rule) GetAction() isRule_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Rule) GetSlackAlert() *SlackAlert {
	if x, ok := x.GetAction().(*Rule_SlackAlert); ok {
		return x.SlackAlert
	}
	return nil
}

func (x *Rule) GetWebhookAlert() *WebhookAlert {
	if x, ok := x.GetAction().(*Rule_WebhookAlert); ok {
		return x.WebhookAlert
	}
	return nil
}

func (x *Rule) GetServiceNowAlert() *ServiceNowAlert {
	if x, ok := x.GetAction().(*Rule_ServiceNowAlert); ok {
		return x.ServiceNowAlert
	}
	return nil
}

type isRule_Action interface {
	isRule_Action()
}

type Rule_SlackAlert struct {
	SlackAlert *SlackAlert `protobuf:"bytes,4,opt,name=SlackAlert,proto3,oneof"`
}

type Rule_WebhookAlert struct {
	WebhookAlert *WebhookAlert `protobuf:"bytes,5,opt,name=WebhookAlert,proto3,oneof"`
}

type Rule_ServiceNowAlert struct {
	ServiceNowAlert *ServiceNowAlert `protobuf:"bytes,6,opt,name=ServiceNowAlert,proto3,oneof"`
}

func (*Rule_SlackAlert) isRule_Action() {}

func (*Rule_WebhookAlert) isRule_Action() {}

func (*Rule_ServiceNowAlert) isRule_Action() {}

type UsernamePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UsernamePassword) Reset() {
	*x = UsernamePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernamePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernamePassword) ProtoMessage() {}

func (x *UsernamePassword) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernamePassword.ProtoReflect.Descriptor instead.
func (*UsernamePassword) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{5}
}

func (x *UsernamePassword) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsernamePassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SecretId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SecretId) Reset() {
	*x = SecretId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretId) ProtoMessage() {}

func (x *SecretId) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretId.ProtoReflect.Descriptor instead.
func (*SecretId) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{6}
}

func (x *SecretId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type URLValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Types that are assignable to Credentials:
	//	*URLValidationRequest_UsernamePassword
	//	*URLValidationRequest_SecretId
	//	*URLValidationRequest_None
	Credentials isURLValidationRequest_Credentials `protobuf_oneof:"credentials"`
}

func (x *URLValidationRequest) Reset() {
	*x = URLValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLValidationRequest) ProtoMessage() {}

func (x *URLValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLValidationRequest.ProtoReflect.Descriptor instead.
func (*URLValidationRequest) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{7}
}

func (x *URLValidationRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (m *URLValidationRequest) GetCredentials() isURLValidationRequest_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (x *URLValidationRequest) GetUsernamePassword() *UsernamePassword {
	if x, ok := x.GetCredentials().(*URLValidationRequest_UsernamePassword); ok {
		return x.UsernamePassword
	}
	return nil
}

func (x *URLValidationRequest) GetSecretId() *SecretId {
	if x, ok := x.GetCredentials().(*URLValidationRequest_SecretId); ok {
		return x.SecretId
	}
	return nil
}

func (x *URLValidationRequest) GetNone() *Empty {
	if x, ok := x.GetCredentials().(*URLValidationRequest_None); ok {
		return x.None
	}
	return nil
}

type isURLValidationRequest_Credentials interface {
	isURLValidationRequest_Credentials()
}

type URLValidationRequest_UsernamePassword struct {
	UsernamePassword *UsernamePassword `protobuf:"bytes,2,opt,name=username_password,json=usernamePassword,proto3,oneof"`
}

type URLValidationRequest_SecretId struct {
	SecretId *SecretId `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3,oneof"`
}

type URLValidationRequest_None struct {
	None *Empty `protobuf:"bytes,4,opt,name=none,proto3,oneof"`
}

func (*URLValidationRequest_UsernamePassword) isURLValidationRequest_Credentials() {}

func (*URLValidationRequest_SecretId) isURLValidationRequest_Credentials() {}

func (*URLValidationRequest_None) isURLValidationRequest_Credentials() {}

type URLValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     URLValidationResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.URLValidationResponse_Code" json:"code,omitempty"`
	Messages []string                   `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"` // unused but kept for consistency with other Rule api responses.
}

func (x *URLValidationResponse) Reset() {
	*x = URLValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLValidationResponse) ProtoMessage() {}

func (x *URLValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLValidationResponse.ProtoReflect.Descriptor instead.
func (*URLValidationResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{8}
}

func (x *URLValidationResponse) GetCode() URLValidationResponse_Code {
	if x != nil {
		return x.Code
	}
	return URLValidationResponse_OK
}

func (x *URLValidationResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RuleIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RuleIdentifier) Reset() {
	*x = RuleIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleIdentifier) ProtoMessage() {}

func (x *RuleIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleIdentifier.ProtoReflect.Descriptor instead.
func (*RuleIdentifier) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{9}
}

func (x *RuleIdentifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RuleUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     RuleUpdateResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.RuleUpdateResponse_Code" json:"code,omitempty"`
	Messages []string                `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RuleUpdateResponse) Reset() {
	*x = RuleUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleUpdateResponse) ProtoMessage() {}

func (x *RuleUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleUpdateResponse.ProtoReflect.Descriptor instead.
func (*RuleUpdateResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{10}
}

func (x *RuleUpdateResponse) GetCode() RuleUpdateResponse_Code {
	if x != nil {
		return x.Code
	}
	return RuleUpdateResponse_OK
}

func (x *RuleUpdateResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RuleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     RuleDeleteResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.RuleDeleteResponse_Code" json:"code,omitempty"`
	Messages []string                `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RuleDeleteResponse) Reset() {
	*x = RuleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDeleteResponse) ProtoMessage() {}

func (x *RuleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDeleteResponse.ProtoReflect.Descriptor instead.
func (*RuleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{11}
}

func (x *RuleDeleteResponse) GetCode() RuleDeleteResponse_Code {
	if x != nil {
		return x.Code
	}
	return RuleDeleteResponse_DELETED
}

func (x *RuleDeleteResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RuleAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     RuleAddResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.RuleAddResponse_Code" json:"code,omitempty"`
	Messages []string             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	Id       string               `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Rule     *Rule                `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *RuleAddResponse) Reset() {
	*x = RuleAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleAddResponse) ProtoMessage() {}

func (x *RuleAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleAddResponse.ProtoReflect.Descriptor instead.
func (*RuleAddResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{12}
}

func (x *RuleAddResponse) GetCode() RuleAddResponse_Code {
	if x != nil {
		return x.Code
	}
	return RuleAddResponse_ADDED
}

func (x *RuleAddResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RuleAddResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuleAddResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type RuleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     RuleGetResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.RuleGetResponse_Code" json:"code,omitempty"`
	Messages []string             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	Rule     *Rule                `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *RuleGetResponse) Reset() {
	*x = RuleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleGetResponse) ProtoMessage() {}

func (x *RuleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleGetResponse.ProtoReflect.Descriptor instead.
func (*RuleGetResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{13}
}

func (x *RuleGetResponse) GetCode() RuleGetResponse_Code {
	if x != nil {
		return x.Code
	}
	return RuleGetResponse_OK
}

func (x *RuleGetResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RuleGetResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type RuleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     RuleListResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=notifications.RuleListResponse_Code" json:"code,omitempty"`
	Messages []string              `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	Rules    []*Rule               `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *RuleListResponse) Reset() {
	*x = RuleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rules_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleListResponse) ProtoMessage() {}

func (x *RuleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rules_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleListResponse.ProtoReflect.Descriptor instead.
func (*RuleListResponse) Descriptor() ([]byte, []int) {
	return file_rules_proto_rawDescGZIP(), []int{14}
}

func (x *RuleListResponse) GetCode() RuleListResponse_Code {
	if x != nil {
		return x.Code
	}
	return RuleListResponse_OK
}

func (x *RuleListResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RuleListResponse) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

var File_rules_proto protoreflect.FileDescriptor

var file_rules_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x0a, 0x0a, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x20, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x76, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22,
	0x88, 0x03, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a,
	0x0a, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x53, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x4a, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x43, 0x52, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x43, 0x52, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x03,
	0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x14, 0x55, 0x52, 0x4c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4e, 0x0a,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x36, 0x0a,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x22, 0xd1, 0x01, 0x0a, 0x15, 0x55, 0x52, 0x4c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x04, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x41, 0x4c, 0x42, 0x4c, 0x45, 0x10, 0x62,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x63, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x52, 0x75, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x63, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x36, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x22, 0x9a, 0x02, 0x0a, 0x0f, 0x52, 0x75,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x79, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x22, 0xc2, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x31, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x22, 0xb7, 0x01, 0x0a, 0x10,
	0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x22, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x63, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rules_proto_rawDescOnce sync.Once
	file_rules_proto_rawDescData = file_rules_proto_rawDesc
)

func file_rules_proto_rawDescGZIP() []byte {
	file_rules_proto_rawDescOnce.Do(func() {
		file_rules_proto_rawDescData = protoimpl.X.CompressGZIP(file_rules_proto_rawDescData)
	})
	return file_rules_proto_rawDescData
}

var file_rules_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_rules_proto_goTypes = []interface{}{
	(Rule_Event)(0),                 // 0: notifications.Rule.Event
	(URLValidationResponse_Code)(0), // 1: notifications.URLValidationResponse.Code
	(RuleUpdateResponse_Code)(0),    // 2: notifications.RuleUpdateResponse.Code
	(RuleDeleteResponse_Code)(0),    // 3: notifications.RuleDeleteResponse.Code
	(RuleAddResponse_Code)(0),       // 4: notifications.RuleAddResponse.Code
	(RuleGetResponse_Code)(0),       // 5: notifications.RuleGetResponse.Code
	(RuleListResponse_Code)(0),      // 6: notifications.RuleListResponse.Code
	(*Empty)(nil),                   // 7: notifications.Empty
	(*SlackAlert)(nil),              // 8: notifications.SlackAlert
	(*WebhookAlert)(nil),            // 9: notifications.WebhookAlert
	(*ServiceNowAlert)(nil),         // 10: notifications.ServiceNowAlert
	(*Rule)(nil),                    // 11: notifications.Rule
	(*UsernamePassword)(nil),        // 12: notifications.UsernamePassword
	(*SecretId)(nil),                // 13: notifications.SecretId
	(*URLValidationRequest)(nil),    // 14: notifications.URLValidationRequest
	(*URLValidationResponse)(nil),   // 15: notifications.URLValidationResponse
	(*RuleIdentifier)(nil),          // 16: notifications.RuleIdentifier
	(*RuleUpdateResponse)(nil),      // 17: notifications.RuleUpdateResponse
	(*RuleDeleteResponse)(nil),      // 18: notifications.RuleDeleteResponse
	(*RuleAddResponse)(nil),         // 19: notifications.RuleAddResponse
	(*RuleGetResponse)(nil),         // 20: notifications.RuleGetResponse
	(*RuleListResponse)(nil),        // 21: notifications.RuleListResponse
}
var file_rules_proto_depIdxs = []int32{
	0,  // 0: notifications.Rule.event:type_name -> notifications.Rule.Event
	8,  // 1: notifications.Rule.SlackAlert:type_name -> notifications.SlackAlert
	9,  // 2: notifications.Rule.WebhookAlert:type_name -> notifications.WebhookAlert
	10, // 3: notifications.Rule.ServiceNowAlert:type_name -> notifications.ServiceNowAlert
	12, // 4: notifications.URLValidationRequest.username_password:type_name -> notifications.UsernamePassword
	13, // 5: notifications.URLValidationRequest.secret_id:type_name -> notifications.SecretId
	7,  // 6: notifications.URLValidationRequest.none:type_name -> notifications.Empty
	1,  // 7: notifications.URLValidationResponse.code:type_name -> notifications.URLValidationResponse.Code
	2,  // 8: notifications.RuleUpdateResponse.code:type_name -> notifications.RuleUpdateResponse.Code
	3,  // 9: notifications.RuleDeleteResponse.code:type_name -> notifications.RuleDeleteResponse.Code
	4,  // 10: notifications.RuleAddResponse.code:type_name -> notifications.RuleAddResponse.Code
	11, // 11: notifications.RuleAddResponse.rule:type_name -> notifications.Rule
	5,  // 12: notifications.RuleGetResponse.code:type_name -> notifications.RuleGetResponse.Code
	11, // 13: notifications.RuleGetResponse.rule:type_name -> notifications.Rule
	6,  // 14: notifications.RuleListResponse.code:type_name -> notifications.RuleListResponse.Code
	11, // 15: notifications.RuleListResponse.rules:type_name -> notifications.Rule
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_rules_proto_init() }
func file_rules_proto_init() {
	if File_rules_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rules_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceNowAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsernamePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rules_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rules_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Rule_SlackAlert)(nil),
		(*Rule_WebhookAlert)(nil),
		(*Rule_ServiceNowAlert)(nil),
	}
	file_rules_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*URLValidationRequest_UsernamePassword)(nil),
		(*URLValidationRequest_SecretId)(nil),
		(*URLValidationRequest_None)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rules_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rules_proto_goTypes,
		DependencyIndexes: file_rules_proto_depIdxs,
		EnumInfos:         file_rules_proto_enumTypes,
		MessageInfos:      file_rules_proto_msgTypes,
	}.Build()
	File_rules_proto = out.File
	file_rules_proto_rawDesc = nil
	file_rules_proto_goTypes = nil
	file_rules_proto_depIdxs = nil
}
