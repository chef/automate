// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/automate-gateway/api/legacy/legacy.proto

package legacy

import (
	context "context"
	fmt "fmt"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/api"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aed5617c9739466, []int{0}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*StatusResponse)(nil), "chef.automate.api.legacy.StatusResponse")
}

func init() {
	proto.RegisterFile("components/automate-gateway/api/legacy/legacy.proto", fileDescriptor_0aed5617c9739466)
}

var fileDescriptor_0aed5617c9739466 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x25, 0x1f, 0x1f, 0x01, 0x83, 0x56, 0x19, 0xa1, 0x84, 0xe8, 0x42, 0xba, 0xea, 0x26, 0x13,
	0xb0, 0x3b, 0x37, 0xfe, 0xef, 0x5c, 0xd5, 0x9d, 0xbb, 0xdb, 0xe9, 0xed, 0x74, 0x20, 0x99, 0x3b,
	0x24, 0x37, 0x4a, 0xb7, 0x5d, 0x76, 0xeb, 0x83, 0xb8, 0xca, 0x33, 0xf8, 0x00, 0xbe, 0x82, 0x0f,
	0x22, 0xcd, 0xa4, 0x82, 0x68, 0x41, 0x57, 0xc3, 0xfd, 0x39, 0xe7, 0x9e, 0x73, 0x98, 0x68, 0xa4,
	0xa8, 0x70, 0x64, 0xd1, 0x72, 0x95, 0x41, 0xcd, 0x54, 0x00, 0x63, 0xaa, 0x81, 0xf1, 0x09, 0x16,
	0x19, 0x38, 0x93, 0xe5, 0xa8, 0x41, 0x2d, 0xba, 0x47, 0xba, 0x92, 0x98, 0x44, 0xac, 0xe6, 0x38,
	0x93, 0x9b, 0x75, 0x09, 0xce, 0x48, 0x3f, 0x4f, 0x8e, 0x35, 0x91, 0xce, 0xb1, 0x45, 0x82, 0xb5,
	0xc4, 0xc0, 0x86, 0x6c, 0xe5, 0x71, 0xc9, 0x51, 0x37, 0x6d, 0xab, 0x49, 0x3d, 0xcb, 0xb0, 0x70,
	0xdc, 0x91, 0x26, 0x17, 0x3f, 0x2a, 0x29, 0x9d, 0xf2, 0xeb, 0x2a, 0xd5, 0x68, 0x53, 0x47, 0xb9,
	0x51, 0x8b, 0x2d, 0xf4, 0x7f, 0x61, 0x30, 0x50, 0x7c, 0x67, 0x18, 0x0c, 0xa3, 0xde, 0x3d, 0x03,
	0xd7, 0xd5, 0x18, 0x2b, 0x47, 0xb6, 0x42, 0xd1, 0x8f, 0xc2, 0xaa, 0xed, 0xc4, 0xc1, 0x49, 0x30,
	0xdc, 0x19, 0x77, 0xd5, 0xe9, 0x6b, 0x10, 0x1d, 0xde, 0xb5, 0x9e, 0x6f, 0x80, 0xe1, 0x9a, 0xf2,
	0x1c, 0x15, 0x53, 0x29, 0x5e, 0x82, 0x28, 0xf4, 0x14, 0xa2, 0x2f, 0xbd, 0x5d, 0xb9, 0xb1, 0x2b,
	0x6f, 0xd7, 0x76, 0x93, 0xa1, 0xdc, 0x16, 0x9f, 0xfc, 0x7a, 0x7c, 0xa0, 0x96, 0x4d, 0xbc, 0x1f,
	0xed, 0x19, 0xab, 0xb1, 0xe2, 0x33, 0x7f, 0x79, 0xd9, 0xc4, 0xa1, 0xf8, 0x5f, 0x22, 0x4c, 0x57,
	0x4d, 0xdc, 0x8b, 0x76, 0x8d, 0x9d, 0x95, 0xd0, 0xcd, 0x56, 0x4d, 0x2c, 0xc4, 0x81, 0xef, 0x74,
	0x20, 0x8d, 0xbc, 0x7c, 0x7b, 0x7f, 0xfe, 0x17, 0x8b, 0x7e, 0x86, 0x8f, 0x6d, 0x34, 0x53, 0x60,
	0x48, 0xd5, 0x46, 0xf1, 0xd5, 0xe5, 0xc3, 0xb9, 0x36, 0x3c, 0xaf, 0x27, 0x52, 0x51, 0x91, 0xad,
	0xa5, 0x7d, 0x86, 0x97, 0xfd, 0xee, 0x73, 0x4c, 0xc2, 0xd6, 0xe1, 0xe8, 0x23, 0x00, 0x00, 0xff,
	0xff, 0x8c, 0xbb, 0x59, 0x4a, 0x4d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LegacyDataCollectorClient is the client API for LegacyDataCollector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LegacyDataCollectorClient interface {
	// This is used by chef-server, it requests a GET /data-collector/v0 to check
	// Automate's status.
	// We proxy /data-collector/v0 to /api/v0/events/data-collector, so this is
	// where we need to respond.
	// Since this is for legacy-support only, we don't bother much about having
	// google.protobuf.Empty as argument.
	Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StatusResponse, error)
}

type legacyDataCollectorClient struct {
	cc grpc.ClientConnInterface
}

func NewLegacyDataCollectorClient(cc grpc.ClientConnInterface) LegacyDataCollectorClient {
	return &legacyDataCollectorClient{cc}
}

func (c *legacyDataCollectorClient) Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.legacy.LegacyDataCollector/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LegacyDataCollectorServer is the server API for LegacyDataCollector service.
type LegacyDataCollectorServer interface {
	// This is used by chef-server, it requests a GET /data-collector/v0 to check
	// Automate's status.
	// We proxy /data-collector/v0 to /api/v0/events/data-collector, so this is
	// where we need to respond.
	// Since this is for legacy-support only, we don't bother much about having
	// google.protobuf.Empty as argument.
	Status(context.Context, *empty.Empty) (*StatusResponse, error)
}

// UnimplementedLegacyDataCollectorServer can be embedded to have forward compatible implementations.
type UnimplementedLegacyDataCollectorServer struct {
}

func (*UnimplementedLegacyDataCollectorServer) Status(ctx context.Context, req *empty.Empty) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}

func RegisterLegacyDataCollectorServer(s *grpc.Server, srv LegacyDataCollectorServer) {
	s.RegisterService(&_LegacyDataCollector_serviceDesc, srv)
}

func _LegacyDataCollector_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LegacyDataCollectorServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.legacy.LegacyDataCollector/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LegacyDataCollectorServer).Status(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _LegacyDataCollector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.legacy.LegacyDataCollector",
	HandlerType: (*LegacyDataCollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _LegacyDataCollector_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "components/automate-gateway/api/legacy/legacy.proto",
}
