syntax = "proto3";

package chef.automate.api.authz;
option go_package = "github.com/chef/automate/components/automate-gateway/api/authz";

import "google/api/annotations.proto";

import "api/external/common/version/version.proto";
import "components/automate-gateway/api/authz/request/authz.proto";
import "components/automate-gateway/api/authz/response/authz.proto";

// for option (chef.automate.api.policy)
import "components/automate-grpc/protoc-gen-policy/api/annotations.proto";
// for option (chef.automate.api.iam.policy)
import "components/automate-grpc/protoc-gen-policy/iam/annotations.proto";
service Authorization {
  rpc IntrospectAll (authz.request.IntrospectAllReq) returns (authz.response.IntrospectResp) {
    option (google.api.http).get = "/auth/introspect";
    option (chef.automate.api.policy).resource = "auth_introspection:introspect_all";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:introspect";
    option (chef.automate.api.iam.policy).action = "iam:introspect:getAll";
    };
  rpc IntrospectSome (authz.request.IntrospectSomeReq) returns (authz.response.IntrospectResp) {
    option (google.api.http).post = "/auth/introspect_some";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth_introspection:introspect_some";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:introspect";
    option (chef.automate.api.iam.policy).action = "iam:introspect:getSome";
    };
  rpc Introspect (authz.request.IntrospectReq) returns (authz.response.IntrospectResp) {
    option (google.api.http).post = "/auth/introspect";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth_introspection:introspect";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:introspect";
    option (chef.automate.api.iam.policy).action = "iam:introspect:get";
    };
}
