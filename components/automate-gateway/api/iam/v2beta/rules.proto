syntax = "proto3";

package chef.automate.api.iam.v2beta; // discuss
option go_package = "github.com/chef/automate/components/automate-gateway/api/iam/v2beta";

import "google/api/annotations.proto";

import "components/automate-gateway/api/iam/v2beta/request/rules.proto";
import "components/automate-gateway/api/iam/v2beta/response/rules.proto";

// for option (chef.automate.api.policy)
import "components/automate-grpc/protoc-gen-policy/api/annotations.proto";
// for option (chef.automate.api.iam.policy)
import "components/automate-grpc/protoc-gen-policy/iam/annotations.proto";

service Rules {
  rpc CreateRule (CreateRuleReq) returns (CreateRuleResp) {
    option (google.api.http).post= "/iam/v2beta/rules";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "create";
    option (chef.automate.api.iam.policy).resource = "iam:rules"; // TODO: not really iam, is it?
    option (chef.automate.api.iam.policy).action = "iam:rules:create";
  };
}
