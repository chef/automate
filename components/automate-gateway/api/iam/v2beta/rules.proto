syntax = "proto3";

package chef.automate.api.iam.v2beta; // discuss
option go_package = "github.com/chef/automate/components/automate-gateway/api/iam/v2beta";

import "google/api/annotations.proto";

import "components/automate-gateway/api/iam/v2beta/request/rules.proto";
import "components/automate-gateway/api/iam/v2beta/response/rules.proto";

// for option (chef.automate.api.policy)
import "components/automate-grpc/protoc-gen-policy/api/annotations.proto";
// for option (chef.automate.api.iam.policy)
import "components/automate-grpc/protoc-gen-policy/iam/annotations.proto";

service Rules {
  rpc CreateRule (CreateRuleReq) returns (CreateRuleResp) {
    option (google.api.http).post = "/iam/v2beta/rules";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "create";
    option (chef.automate.api.iam.policy).resource = "iam:rules"; // TODO: not really iam, is it?
    option (chef.automate.api.iam.policy).action = "iam:rules:create";
  };

  rpc UpdateRule (UpdateRuleReq) returns (UpdateRuleResp) {
    option (google.api.http).put = "/iam/v2beta/rules/{id}";
    option (google.api.http).body = "*";
    option (chef.automate.api.policy).resource = "auth:rules:{id}";
    option (chef.automate.api.policy).action = "update";
    option (chef.automate.api.iam.policy).resource = "iam:rules:{id}";
    option (chef.automate.api.iam.policy).action = "iam:rules:update";
  };

  rpc GetRule (GetRuleReq) returns (GetRuleResp) {
    option (google.api.http).get = "/iam/v2beta/rules/{id}";
    option (chef.automate.api.policy).resource = "auth:rules:{id}";
    option (chef.automate.api.policy).action = "get";
    option (chef.automate.api.iam.policy).resource = "iam:rules:{id}";
    option (chef.automate.api.iam.policy).action = "iam:rules:get";
  };

  rpc ListRules (ListRulesReq) returns (ListRulesResp) {
    option (google.api.http).get = "/iam/v2beta/rules";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:rules";
    option (chef.automate.api.iam.policy).action = "iam:rules:list";
  };

  rpc ListRulesForProject (ListRulesForProjectReq) returns (ListRulesForProjectResp) {
    option (google.api.http).get = "/iam/v2beta/projects/{id}/rules";
    option (chef.automate.api.policy).resource = "auth:projects:{id}:rules";
    option (chef.automate.api.policy).action = "read";
    option (chef.automate.api.iam.policy).resource = "iam:projects:{id}:rules";
    option (chef.automate.api.iam.policy).action = "iam:rules:list";
  };

  rpc DeleteRule (DeleteRuleReq) returns (DeleteRuleResp) {
    option (google.api.http).delete = "/iam/v2beta/rules/{id}";
    option (chef.automate.api.policy).resource = "auth:rules:{id}";
    option (chef.automate.api.policy).action = "delete";
    option (chef.automate.api.iam.policy).resource = "iam:rules:{id}";
    option (chef.automate.api.iam.policy).action = "iam:rules:delete";
  };

  rpc ApplyRulesStart (ApplyRulesStartReq) returns (ApplyRulesStartResp) {
    option (google.api.http).get = "/iam/v2beta/apply-rules-start";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "apply-rules-start";
    option (chef.automate.api.iam.policy).resource = "iam:rules";
    option (chef.automate.api.iam.policy).action = "iam:rules:apply";
  };

  rpc ApplyRulesCancel (ApplyRulesCancelReq) returns (ApplyRulesCancelResp) {
    option (google.api.http).get = "/iam/v2beta/apply-rules-cancel";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "apply-rules-cancel";
    option (chef.automate.api.iam.policy).resource = "iam:rules";
    option (chef.automate.api.iam.policy).action = "iam:rules:cancel";
  };

  rpc ApplyRulesStatus (ApplyRulesStatusReq) returns (ApplyRulesStatusResp) {
    option (google.api.http).get = "/iam/v2beta/apply-rules-status";
    option (chef.automate.api.policy).resource = "auth:rules";
    option (chef.automate.api.policy).action = "apply-rules-status";
    option (chef.automate.api.iam.policy).resource = "iam:rules";
    option (chef.automate.api.iam.policy).action = "iam:rules:status";
  };
}
