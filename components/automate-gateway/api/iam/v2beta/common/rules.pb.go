// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/automate-gateway/api/iam/v2beta/common/rules.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RuleType int32

const (
	RuleType_RULE_TYPE_UNSET RuleType = 0
	RuleType_NODE            RuleType = 1
	RuleType_EVENT           RuleType = 2
)

var RuleType_name = map[int32]string{
	0: "RULE_TYPE_UNSET",
	1: "NODE",
	2: "EVENT",
}

var RuleType_value = map[string]int32{
	"RULE_TYPE_UNSET": 0,
	"NODE":            1,
	"EVENT":           2,
}

func (x RuleType) String() string {
	return proto.EnumName(RuleType_name, int32(x))
}

func (RuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{0}
}

type ConditionAttribute int32

const (
	ConditionAttribute_CONDITION_ATTRIBUTE_UNSET ConditionAttribute = 0
	ConditionAttribute_CHEF_SERVERS              ConditionAttribute = 1
	ConditionAttribute_CHEF_ORGS                 ConditionAttribute = 2
	ConditionAttribute_CHEF_ENVIRONMENTS         ConditionAttribute = 3
	ConditionAttribute_ROLES                     ConditionAttribute = 4
	ConditionAttribute_CHEF_TAGS                 ConditionAttribute = 5
	ConditionAttribute_POLICY_GROUP              ConditionAttribute = 6
	ConditionAttribute_POLICY_NAME               ConditionAttribute = 7
)

var ConditionAttribute_name = map[int32]string{
	0: "CONDITION_ATTRIBUTE_UNSET",
	1: "CHEF_SERVERS",
	2: "CHEF_ORGS",
	3: "CHEF_ENVIRONMENTS",
	4: "ROLES",
	5: "CHEF_TAGS",
	6: "POLICY_GROUP",
	7: "POLICY_NAME",
}

var ConditionAttribute_value = map[string]int32{
	"CONDITION_ATTRIBUTE_UNSET": 0,
	"CHEF_SERVERS":              1,
	"CHEF_ORGS":                 2,
	"CHEF_ENVIRONMENTS":         3,
	"ROLES":                     4,
	"CHEF_TAGS":                 5,
	"POLICY_GROUP":              6,
	"POLICY_NAME":               7,
}

func (x ConditionAttribute) String() string {
	return proto.EnumName(ConditionAttribute_name, int32(x))
}

func (ConditionAttribute) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{1}
}

type ConditionOperator int32

const (
	ConditionOperator_CONDITION_OPERATOR_UNSET ConditionOperator = 0
	ConditionOperator_MEMBER_OF                ConditionOperator = 1
	ConditionOperator_EQUALS                   ConditionOperator = 2
)

var ConditionOperator_name = map[int32]string{
	0: "CONDITION_OPERATOR_UNSET",
	1: "MEMBER_OF",
	2: "EQUALS",
}

var ConditionOperator_value = map[string]int32{
	"CONDITION_OPERATOR_UNSET": 0,
	"MEMBER_OF":                1,
	"EQUALS":                   2,
}

func (x ConditionOperator) String() string {
	return proto.EnumName(ConditionOperator_name, int32(x))
}

func (ConditionOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{2}
}

type RuleStatus int32

const (
	RuleStatus_RULE_STATUS_UNSET RuleStatus = 0
	RuleStatus_STAGED            RuleStatus = 1
	RuleStatus_APPLIED           RuleStatus = 2
)

var RuleStatus_name = map[int32]string{
	0: "RULE_STATUS_UNSET",
	1: "STAGED",
	2: "APPLIED",
}

var RuleStatus_value = map[string]int32{
	"RULE_STATUS_UNSET": 0,
	"STAGED":            1,
	"APPLIED":           2,
}

func (x RuleStatus) String() string {
	return proto.EnumName(RuleStatus_name, int32(x))
}

func (RuleStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{3}
}

type Rule struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string       `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                 string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 RuleType     `protobuf:"varint,4,opt,name=type,proto3,enum=chef.automate.api.iam.v2beta.RuleType" json:"type,omitempty"`
	Conditions           []*Condition `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Status               RuleStatus   `protobuf:"varint,6,opt,name=status,proto3,enum=chef.automate.api.iam.v2beta.RuleStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{0}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Rule) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Rule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Rule) GetType() RuleType {
	if m != nil {
		return m.Type
	}
	return RuleType_RULE_TYPE_UNSET
}

func (m *Rule) GetConditions() []*Condition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Rule) GetStatus() RuleStatus {
	if m != nil {
		return m.Status
	}
	return RuleStatus_RULE_STATUS_UNSET
}

type Condition struct {
	Attribute            ConditionAttribute `protobuf:"varint,1,opt,name=attribute,proto3,enum=chef.automate.api.iam.v2beta.ConditionAttribute" json:"attribute,omitempty"`
	Values               []string           `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Operator             ConditionOperator  `protobuf:"varint,3,opt,name=operator,proto3,enum=chef.automate.api.iam.v2beta.ConditionOperator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Condition) Reset()         { *m = Condition{} }
func (m *Condition) String() string { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()    {}
func (*Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_6196f131e6e18910, []int{1}
}

func (m *Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Condition.Unmarshal(m, b)
}
func (m *Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Condition.Marshal(b, m, deterministic)
}
func (m *Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Condition.Merge(m, src)
}
func (m *Condition) XXX_Size() int {
	return xxx_messageInfo_Condition.Size(m)
}
func (m *Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Condition proto.InternalMessageInfo

func (m *Condition) GetAttribute() ConditionAttribute {
	if m != nil {
		return m.Attribute
	}
	return ConditionAttribute_CONDITION_ATTRIBUTE_UNSET
}

func (m *Condition) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Condition) GetOperator() ConditionOperator {
	if m != nil {
		return m.Operator
	}
	return ConditionOperator_CONDITION_OPERATOR_UNSET
}

func init() {
	proto.RegisterEnum("chef.automate.api.iam.v2beta.RuleType", RuleType_name, RuleType_value)
	proto.RegisterEnum("chef.automate.api.iam.v2beta.ConditionAttribute", ConditionAttribute_name, ConditionAttribute_value)
	proto.RegisterEnum("chef.automate.api.iam.v2beta.ConditionOperator", ConditionOperator_name, ConditionOperator_value)
	proto.RegisterEnum("chef.automate.api.iam.v2beta.RuleStatus", RuleStatus_name, RuleStatus_value)
	proto.RegisterType((*Rule)(nil), "chef.automate.api.iam.v2beta.Rule")
	proto.RegisterType((*Condition)(nil), "chef.automate.api.iam.v2beta.Condition")
}

func init() {
	proto.RegisterFile("components/automate-gateway/api/iam/v2beta/common/rules.proto", fileDescriptor_6196f131e6e18910)
}

var fileDescriptor_6196f131e6e18910 = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x49, 0xda, 0x65, 0xcb, 0x19, 0xeb, 0x3c, 0x23, 0x50, 0x90, 0x36, 0xa9, 0xda, 0x05,
	0x54, 0x95, 0x48, 0x50, 0xe1, 0x0a, 0x81, 0x44, 0xd6, 0x7a, 0x25, 0x90, 0x26, 0xc5, 0x71, 0x27,
	0x8d, 0x9b, 0xc8, 0x6d, 0xcd, 0x16, 0xb4, 0xd4, 0x51, 0xeb, 0x0c, 0xed, 0x2d, 0x78, 0x0c, 0x1e,
	0x83, 0x47, 0x43, 0x35, 0x6d, 0x8a, 0x34, 0x69, 0x8c, 0xbb, 0xf8, 0xe4, 0x7c, 0xff, 0xf9, 0xf3,
	0xc7, 0x07, 0xde, 0x4d, 0x64, 0x5e, 0xc8, 0x99, 0x98, 0xa9, 0x85, 0xc7, 0x4b, 0x25, 0x73, 0xae,
	0xc4, 0x8b, 0x0b, 0xae, 0xc4, 0x77, 0x7e, 0xe3, 0xf1, 0x22, 0xf3, 0x32, 0x9e, 0x7b, 0xd7, 0x9d,
	0xb1, 0x50, 0xdc, 0x9b, 0xc8, 0x3c, 0x97, 0x33, 0x6f, 0x5e, 0x5e, 0x89, 0x85, 0x5b, 0xcc, 0xa5,
	0x92, 0xf8, 0x70, 0x72, 0x29, 0xbe, 0xba, 0x6b, 0xd0, 0xe5, 0x45, 0xe6, 0x66, 0x3c, 0x77, 0xff,
	0x00, 0xc7, 0x3f, 0x4c, 0xa8, 0xd3, 0xf2, 0x4a, 0xe0, 0x06, 0x98, 0xd9, 0xd4, 0x31, 0x9a, 0x46,
	0xcb, 0xa6, 0x66, 0x36, 0xc5, 0x47, 0x00, 0xc5, 0x5c, 0x7e, 0x13, 0x13, 0x95, 0x66, 0x53, 0xc7,
	0xd4, 0x75, 0x7b, 0x55, 0x09, 0xa6, 0x18, 0x43, 0x7d, 0xc6, 0x73, 0xe1, 0xd4, 0xf4, 0x0b, 0xfd,
	0x8c, 0xdf, 0x40, 0x5d, 0xdd, 0x14, 0xc2, 0xa9, 0x37, 0x8d, 0x56, 0xa3, 0xf3, 0xcc, 0xbd, 0x6b,
	0xb0, 0xbb, 0x1c, 0xca, 0x6e, 0x0a, 0x41, 0x35, 0x83, 0xfb, 0x00, 0x13, 0x39, 0x9b, 0x66, 0x2a,
	0x93, 0xb3, 0x85, 0xb3, 0xd5, 0xac, 0xb5, 0x76, 0x3b, 0xcf, 0xef, 0x56, 0xe8, 0xae, 0xfb, 0xe9,
	0x5f, 0x28, 0x7e, 0x0f, 0xd6, 0x42, 0x71, 0x55, 0x2e, 0x1c, 0x4b, 0xdb, 0x68, 0xfd, 0xdb, 0x46,
	0xa2, 0xfb, 0xe9, 0x8a, 0x3b, 0xfe, 0x65, 0x80, 0x5d, 0x69, 0xe3, 0x08, 0x6c, 0xae, 0xd4, 0x3c,
	0x1b, 0x97, 0x4a, 0xe8, 0x78, 0x1a, 0x9d, 0x97, 0xf7, 0xf4, 0xe5, 0xaf, 0x39, 0xba, 0x91, 0xc0,
	0x4f, 0xc0, 0xba, 0xe6, 0x57, 0xa5, 0x58, 0x38, 0x66, 0xb3, 0xd6, 0xb2, 0xe9, 0xea, 0x84, 0x3f,
	0xc1, 0x8e, 0x2c, 0xc4, 0x9c, 0x2b, 0x39, 0xd7, 0xa1, 0x36, 0x3a, 0xde, 0x3d, 0xc7, 0xc4, 0x2b,
	0x8c, 0x56, 0x02, 0xed, 0xd7, 0xb0, 0xb3, 0xce, 0x17, 0x3f, 0x82, 0x7d, 0x3a, 0x0a, 0x49, 0xca,
	0xce, 0x87, 0x24, 0x1d, 0x45, 0x09, 0x61, 0xe8, 0x01, 0xde, 0x81, 0x7a, 0x14, 0xf7, 0x08, 0x32,
	0xb0, 0x0d, 0x5b, 0xe4, 0x8c, 0x44, 0x0c, 0x99, 0xed, 0x9f, 0x06, 0xe0, 0xdb, 0xe6, 0xf1, 0x11,
	0x3c, 0xed, 0xc6, 0x51, 0x2f, 0x60, 0x41, 0x1c, 0xa5, 0x3e, 0x63, 0x34, 0x38, 0x19, 0xb1, 0x8d,
	0x14, 0x82, 0x87, 0xdd, 0x0f, 0xe4, 0x34, 0x4d, 0x08, 0x3d, 0x23, 0x34, 0x41, 0x06, 0xde, 0x03,
	0x5b, 0x57, 0x62, 0xda, 0x4f, 0x90, 0x89, 0x1f, 0xc3, 0x81, 0x3e, 0x92, 0xe8, 0x2c, 0xa0, 0x71,
	0x34, 0x20, 0x11, 0x4b, 0x50, 0x6d, 0x39, 0x98, 0xc6, 0x21, 0x49, 0x50, 0xbd, 0x02, 0x98, 0xdf,
	0x4f, 0xd0, 0xd6, 0x52, 0x71, 0x18, 0x87, 0x41, 0xf7, 0x3c, 0xed, 0xd3, 0x78, 0x34, 0x44, 0x16,
	0xde, 0x87, 0xdd, 0x55, 0x25, 0xf2, 0x07, 0x04, 0x6d, 0xb7, 0x43, 0x38, 0xb8, 0xf5, 0xfd, 0xf8,
	0x10, 0x9c, 0x8d, 0xd1, 0x78, 0x48, 0xa8, 0xcf, 0x62, 0x5a, 0xf9, 0xdc, 0x03, 0x7b, 0x40, 0x06,
	0x27, 0x84, 0xa6, 0xf1, 0x29, 0x32, 0x30, 0x80, 0x45, 0x3e, 0x8f, 0xfc, 0x30, 0x41, 0x66, 0xfb,
	0x2d, 0xc0, 0xe6, 0x1e, 0x2c, 0xfd, 0xea, 0xc0, 0x12, 0xe6, 0xb3, 0x51, 0x52, 0xf1, 0x00, 0x56,
	0xc2, 0xfc, 0x3e, 0xe9, 0x21, 0x03, 0xef, 0xc2, 0xb6, 0x3f, 0x1c, 0x86, 0x01, 0xe9, 0x21, 0xf3,
	0x24, 0xfc, 0xf2, 0xf1, 0x22, 0x53, 0x97, 0xe5, 0xd8, 0x9d, 0xc8, 0xdc, 0x5b, 0xfe, 0xb3, 0x6a,
	0x4d, 0xbd, 0xff, 0x5e, 0xdd, 0xb1, 0xa5, 0xb7, 0xf6, 0xd5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x6f, 0x00, 0x98, 0x31, 0xf6, 0x03, 0x00, 0x00,
}
