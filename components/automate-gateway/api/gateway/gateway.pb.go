// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/automate-gateway/api/gateway/gateway.proto

package gateway

import (
	context "context"
	fmt "fmt"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Version message
//
// The service version constructed with:
// * Service name
// * Built time
// * Semantic version
// * Git SHA
type Version struct {
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Built                string   `protobuf:"bytes,1,opt,name=built,proto3" json:"built,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sha                  string   `protobuf:"bytes,4,opt,name=sha,proto3" json:"sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_33efad17cb9f3272, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetBuilt() string {
	if m != nil {
		return m.Built
	}
	return ""
}

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

// Health message
//
// The automate-gateway service health is constructed with:
// * Status:
//            => ok:             Everything is alright
//            => initialization: The service is in its initialization process
//            => warning:        Something might be wrong?
//            => critical:       Something is wrong!
//
// @afiune: Here we can add more health information to the response
type Health struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Health) Reset()         { *m = Health{} }
func (m *Health) String() string { return proto.CompactTextString(m) }
func (*Health) ProtoMessage()    {}
func (*Health) Descriptor() ([]byte, []int) {
	return fileDescriptor_33efad17cb9f3272, []int{1}
}

func (m *Health) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Health.Unmarshal(m, b)
}
func (m *Health) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Health.Marshal(b, m, deterministic)
}
func (m *Health) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Health.Merge(m, src)
}
func (m *Health) XXX_Size() int {
	return xxx_messageInfo_Health.Size(m)
}
func (m *Health) XXX_DiscardUnknown() {
	xxx_messageInfo_Health.DiscardUnknown(m)
}

var xxx_messageInfo_Health proto.InternalMessageInfo

func (m *Health) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Version)(nil), "chef.automate.api.Version")
	proto.RegisterType((*Health)(nil), "chef.automate.api.Health")
}

func init() {
	proto.RegisterFile("components/automate-gateway/api/gateway/gateway.proto", fileDescriptor_33efad17cb9f3272)
}

var fileDescriptor_33efad17cb9f3272 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0xaa, 0xd3, 0x40,
	0x14, 0x25, 0x7d, 0xcf, 0x96, 0x37, 0x20, 0xaf, 0x1d, 0xa5, 0x4c, 0x53, 0x17, 0x25, 0x2b, 0x37,
	0x9d, 0x80, 0xe2, 0xa6, 0xab, 0x5a, 0x90, 0xba, 0x56, 0x70, 0xe1, 0x46, 0x26, 0xe1, 0x36, 0x19,
	0x48, 0x66, 0x42, 0xe6, 0xa6, 0xd2, 0xa5, 0x2e, 0xb3, 0x15, 0x3f, 0xc1, 0x4f, 0xc8, 0x97, 0xf8,
	0x0b, 0x7e, 0x88, 0x74, 0x66, 0x12, 0x28, 0xad, 0xe0, 0x2a, 0xf7, 0x9c, 0x9b, 0x73, 0xe7, 0x9c,
	0x3b, 0x43, 0xde, 0xa4, 0xba, 0xac, 0xb4, 0x02, 0x85, 0x26, 0x16, 0x0d, 0xea, 0x52, 0x20, 0xac,
	0x33, 0x81, 0xf0, 0x55, 0x9c, 0x62, 0x51, 0xc9, 0xb8, 0xaf, 0xfd, 0x97, 0x57, 0xb5, 0x46, 0x4d,
	0x67, 0x69, 0x0e, 0x07, 0xde, 0x0b, 0xb8, 0xa8, 0x64, 0xf8, 0x22, 0xd3, 0x3a, 0x2b, 0xc0, 0x8a,
	0x84, 0x52, 0x1a, 0x05, 0x4a, 0xad, 0x8c, 0x13, 0x84, 0x4b, 0xdf, 0xb5, 0x28, 0x69, 0x0e, 0x31,
	0x94, 0x15, 0xfa, 0x69, 0xe1, 0xf6, 0xa6, 0x89, 0xba, 0x4a, 0xdd, 0xef, 0xe9, 0x3a, 0x03, 0xb5,
	0xae, 0x74, 0x21, 0xd3, 0x53, 0x2c, 0x45, 0x79, 0x3d, 0x3e, 0xfa, 0x42, 0x26, 0x9f, 0xa0, 0x36,
	0x52, 0x2b, 0xca, 0xc8, 0xe4, 0xe8, 0x4a, 0x36, 0x5a, 0x05, 0x2f, 0x1f, 0x3e, 0xf4, 0x90, 0x3e,
	0x27, 0x4f, 0x92, 0x46, 0x16, 0xc8, 0x02, 0xcb, 0x3b, 0x40, 0x29, 0xb9, 0x57, 0xa2, 0x04, 0x76,
	0x67, 0x49, 0x5b, 0xd3, 0x29, 0xb9, 0x33, 0xb9, 0x60, 0xf7, 0x96, 0x3a, 0x97, 0xd1, 0x8a, 0x8c,
	0xdf, 0x83, 0x28, 0x30, 0xa7, 0x73, 0x32, 0x36, 0x28, 0xb0, 0x31, 0x7e, 0x8c, 0x47, 0xaf, 0x7e,
	0x8d, 0xc8, 0x64, 0xef, 0x96, 0x44, 0x7f, 0x06, 0x84, 0xec, 0x01, 0x7b, 0x4b, 0x73, 0xee, 0xd2,
	0xf3, 0x3e, 0x3d, 0x7f, 0x77, 0x4e, 0x1f, 0x86, 0xfc, 0x6a, 0x8d, 0xdc, 0x6b, 0xa2, 0x8f, 0x6d,
	0xc7, 0x18, 0x99, 0x9b, 0x93, 0x41, 0x28, 0x37, 0x06, 0xea, 0xa3, 0x4c, 0x61, 0xe3, 0xa3, 0xb4,
	0x1d, 0x5b, 0xd2, 0xc5, 0x65, 0xcf, 0x0b, 0x37, 0x19, 0xe0, 0xf7, 0xdf, 0x7f, 0x7e, 0x8c, 0x28,
	0x9d, 0x0e, 0x97, 0xd7, 0x6f, 0xe0, 0x5b, 0x40, 0x1e, 0xf6, 0x80, 0x7d, 0x92, 0x7f, 0xd8, 0x5a,
	0xdc, 0xb0, 0xe5, 0x24, 0xd1, 0xdb, 0xb6, 0x63, 0x8f, 0xe4, 0xa9, 0x3f, 0x39, 0xb7, 0x64, 0xdb,
	0xb1, 0x67, 0x74, 0x76, 0x41, 0x0d, 0x26, 0x66, 0xf4, 0x71, 0x30, 0xe1, 0x5a, 0xbb, 0xdd, 0xe7,
	0x6d, 0x26, 0x31, 0x6f, 0x12, 0x9e, 0xea, 0x32, 0x3e, 0x9f, 0x34, 0xdc, 0x79, 0xfc, 0x9f, 0x8f,
	0x31, 0x19, 0x5b, 0xc7, 0xaf, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x6e, 0xb1, 0xc1, 0xbe,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayClient interface {
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error)
	GetHealth(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Health, error)
}

type gatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayClient(cc grpc.ClientConnInterface) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/chef.automate.api.Gateway/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetHealth(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Health, error) {
	out := new(Health)
	err := c.cc.Invoke(ctx, "/chef.automate.api.Gateway/GetHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
type GatewayServer interface {
	GetVersion(context.Context, *empty.Empty) (*Version, error)
	GetHealth(context.Context, *empty.Empty) (*Health, error)
}

// UnimplementedGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (*UnimplementedGatewayServer) GetVersion(ctx context.Context, req *empty.Empty) (*Version, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedGatewayServer) GetHealth(ctx context.Context, req *empty.Empty) (*Health, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHealth not implemented")
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.Gateway/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.Gateway/GetHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetHealth(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _Gateway_GetVersion_Handler,
		},
		{
			MethodName: "GetHealth",
			Handler:    _Gateway_GetHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "components/automate-gateway/api/gateway/gateway.proto",
}
