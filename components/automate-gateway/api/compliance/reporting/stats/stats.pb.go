// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/automate-gateway/api/compliance/reporting/stats/stats.proto

package stats

import (
	context "context"
	fmt "fmt"
	reporting "github.com/chef/automate/components/automate-gateway/api/compliance/reporting"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/api"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Sort the results in ascending or descending order.
type Query_OrderType int32

const (
	Query_ASC  Query_OrderType = 0
	Query_DESC Query_OrderType = 1
)

var Query_OrderType_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Query_OrderType_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Query_OrderType) String() string {
	return proto.EnumName(Query_OrderType_name, int32(x))
}

func (Query_OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{2, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ListFilter struct {
	// The list of values to filter on for the given type. We 'OR' between these fields.
	Values []string `protobuf:"bytes,20,rep,name=values,proto3" json:"values,omitempty"`
	// The field to filter on.
	Type                 string   `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilter) Reset()         { *m = ListFilter{} }
func (m *ListFilter) String() string { return proto.CompactTextString(m) }
func (*ListFilter) ProtoMessage()    {}
func (*ListFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{1}
}

func (m *ListFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilter.Unmarshal(m, b)
}
func (m *ListFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilter.Marshal(b, m, deterministic)
}
func (m *ListFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilter.Merge(m, src)
}
func (m *ListFilter) XXX_Size() int {
	return xxx_messageInfo_ListFilter.Size(m)
}
func (m *ListFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilter proto.InternalMessageInfo

func (m *ListFilter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ListFilter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Query struct {
	// Unique identifier, such as a profile ID.
	Id string `protobuf:"bytes,17,opt,name=id,proto3" json:"id,omitempty"`
	// Type of data being requested, used for ReadTrend and ReadSummary.
	Type string `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty"`
	// The number of results to return (used when pagination is not supported).
	Size int32 `protobuf:"varint,18,opt,name=size,proto3" json:"size,omitempty"`
	// The interval to use for ReadTrend results, in integer seconds. Default of one hour, 3600.
	Interval int32 `protobuf:"varint,25,opt,name=interval,proto3" json:"interval,omitempty"`
	// Filters applied to the results.
	Filters []*ListFilter   `protobuf:"bytes,20,rep,name=filters,proto3" json:"filters,omitempty"`
	Order   Query_OrderType `protobuf:"varint,21,opt,name=order,proto3,enum=chef.automate.api.compliance.reporting.stats.v1.Query_OrderType" json:"order,omitempty"`
	// Sort the list of results by a field.
	Sort string `protobuf:"bytes,22,opt,name=sort,proto3" json:"sort,omitempty"`
	// The offset for paginating requests. An offset defines a place in the results in order to fetch the next page of the results.
	Page int32 `protobuf:"varint,23,opt,name=page,proto3" json:"page,omitempty"`
	// The number of results on each paginated request page.
	PerPage              int32    `protobuf:"varint,24,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{2}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Query) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Query) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Query) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *Query) GetFilters() []*ListFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Query) GetOrder() Query_OrderType {
	if m != nil {
		return m.Order
	}
	return Query_ASC
}

func (m *Query) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *Query) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Query) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

type Summary struct {
	// Intentionally blank.
	ControlsSummary *ControlsSummary `protobuf:"bytes,1,opt,name=controls_summary,json=controlsSummary,proto3" json:"controls_summary,omitempty"`
	// Intentionally blank.
	NodeSummary *NodeSummary `protobuf:"bytes,2,opt,name=node_summary,json=nodeSummary,proto3" json:"node_summary,omitempty"`
	// Intentionally blank.
	ReportSummary        *ReportSummary `protobuf:"bytes,3,opt,name=report_summary,json=reportSummary,proto3" json:"report_summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Summary) Reset()         { *m = Summary{} }
func (m *Summary) String() string { return proto.CompactTextString(m) }
func (*Summary) ProtoMessage()    {}
func (*Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{3}
}

func (m *Summary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Summary.Unmarshal(m, b)
}
func (m *Summary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Summary.Marshal(b, m, deterministic)
}
func (m *Summary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Summary.Merge(m, src)
}
func (m *Summary) XXX_Size() int {
	return xxx_messageInfo_Summary.Size(m)
}
func (m *Summary) XXX_DiscardUnknown() {
	xxx_messageInfo_Summary.DiscardUnknown(m)
}

var xxx_messageInfo_Summary proto.InternalMessageInfo

func (m *Summary) GetControlsSummary() *ControlsSummary {
	if m != nil {
		return m.ControlsSummary
	}
	return nil
}

func (m *Summary) GetNodeSummary() *NodeSummary {
	if m != nil {
		return m.NodeSummary
	}
	return nil
}

func (m *Summary) GetReportSummary() *ReportSummary {
	if m != nil {
		return m.ReportSummary
	}
	return nil
}

// Statistics for the controls executed in the compliance reports.
type ControlsSummary struct {
	// The total number of failed controls in the reports.
	Failures int32 `protobuf:"varint,1,opt,name=failures,proto3" json:"failures,omitempty"`
	// The total number of failed controls with an impact between 0.4 and 0.7.
	Majors int32 `protobuf:"varint,2,opt,name=majors,proto3" json:"majors,omitempty"`
	// The total number of failed controls with an impact of 0.3 or less.
	Minors int32 `protobuf:"varint,3,opt,name=minors,proto3" json:"minors,omitempty"`
	// The total number of failed controls with an impact of 0.7 or higher.
	Criticals int32 `protobuf:"varint,4,opt,name=criticals,proto3" json:"criticals,omitempty"`
	// The total number of passed controls in the reports.
	Passed int32 `protobuf:"varint,5,opt,name=passed,proto3" json:"passed,omitempty"`
	// The total number of skipped controls in the reports.
	Skipped              int32    `protobuf:"varint,6,opt,name=skipped,proto3" json:"skipped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlsSummary) Reset()         { *m = ControlsSummary{} }
func (m *ControlsSummary) String() string { return proto.CompactTextString(m) }
func (*ControlsSummary) ProtoMessage()    {}
func (*ControlsSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{4}
}

func (m *ControlsSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlsSummary.Unmarshal(m, b)
}
func (m *ControlsSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlsSummary.Marshal(b, m, deterministic)
}
func (m *ControlsSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlsSummary.Merge(m, src)
}
func (m *ControlsSummary) XXX_Size() int {
	return xxx_messageInfo_ControlsSummary.Size(m)
}
func (m *ControlsSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlsSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ControlsSummary proto.InternalMessageInfo

func (m *ControlsSummary) GetFailures() int32 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *ControlsSummary) GetMajors() int32 {
	if m != nil {
		return m.Majors
	}
	return 0
}

func (m *ControlsSummary) GetMinors() int32 {
	if m != nil {
		return m.Minors
	}
	return 0
}

func (m *ControlsSummary) GetCriticals() int32 {
	if m != nil {
		return m.Criticals
	}
	return 0
}

func (m *ControlsSummary) GetPassed() int32 {
	if m != nil {
		return m.Passed
	}
	return 0
}

func (m *ControlsSummary) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

// Statistics about the nodes scanned in the compliance reports.
type NodeSummary struct {
	// The total number of nodes that passed their compliance scans.
	Compliant int32 `protobuf:"varint,1,opt,name=compliant,proto3" json:"compliant,omitempty"`
	// The total number of nodes that skipped their compliance scans.
	Skipped int32 `protobuf:"varint,2,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// The total number of nodes that failed their compliance scans.
	Noncompliant int32 `protobuf:"varint,3,opt,name=noncompliant,proto3" json:"noncompliant,omitempty"`
	// The total number of nodes that failed their compliance scan with one or more control of critical impact.
	HighRisk int32 `protobuf:"varint,4,opt,name=high_risk,json=highRisk,proto3" json:"high_risk,omitempty"`
	// The total number of nodes that failed their compliance scan with one or more control of major impact.
	MediumRisk int32 `protobuf:"varint,5,opt,name=medium_risk,json=mediumRisk,proto3" json:"medium_risk,omitempty"`
	// The total number of nodes that failed their compliance scan with one or more control of minor impact.
	LowRisk              int32    `protobuf:"varint,6,opt,name=low_risk,json=lowRisk,proto3" json:"low_risk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeSummary) Reset()         { *m = NodeSummary{} }
func (m *NodeSummary) String() string { return proto.CompactTextString(m) }
func (*NodeSummary) ProtoMessage()    {}
func (*NodeSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{5}
}

func (m *NodeSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSummary.Unmarshal(m, b)
}
func (m *NodeSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSummary.Marshal(b, m, deterministic)
}
func (m *NodeSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSummary.Merge(m, src)
}
func (m *NodeSummary) XXX_Size() int {
	return xxx_messageInfo_NodeSummary.Size(m)
}
func (m *NodeSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSummary.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSummary proto.InternalMessageInfo

func (m *NodeSummary) GetCompliant() int32 {
	if m != nil {
		return m.Compliant
	}
	return 0
}

func (m *NodeSummary) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

func (m *NodeSummary) GetNoncompliant() int32 {
	if m != nil {
		return m.Noncompliant
	}
	return 0
}

func (m *NodeSummary) GetHighRisk() int32 {
	if m != nil {
		return m.HighRisk
	}
	return 0
}

func (m *NodeSummary) GetMediumRisk() int32 {
	if m != nil {
		return m.MediumRisk
	}
	return 0
}

func (m *NodeSummary) GetLowRisk() int32 {
	if m != nil {
		return m.LowRisk
	}
	return 0
}

// General statistics about the reports.
type Stats struct {
	// Deprecated. int64 types render into string types when serialized to satisfy all browsers
	// Replaced by the `nodes_cnt` field
	Nodes int64 `protobuf:"varint,1,opt,name=nodes,proto3" json:"nodes,omitempty"` // Deprecated: Do not use.
	// The number of unique node platforms in the reports.
	Platforms int32 `protobuf:"varint,2,opt,name=platforms,proto3" json:"platforms,omitempty"`
	// The number of unique environments in the reports.
	Environments int32 `protobuf:"varint,3,opt,name=environments,proto3" json:"environments,omitempty"`
	// The number of unique profiles in the reports.
	Profiles int32 `protobuf:"varint,4,opt,name=profiles,proto3" json:"profiles,omitempty"`
	// The number of unique nodes scanned in the reports.
	NodesCnt int32 `protobuf:"varint,5,opt,name=nodes_cnt,json=nodesCnt,proto3" json:"nodes_cnt,omitempty"`
	// The number of unique controls scanned in the reports.
	Controls             int32    `protobuf:"varint,6,opt,name=controls,proto3" json:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{6}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *Stats) GetNodes() int64 {
	if m != nil {
		return m.Nodes
	}
	return 0
}

func (m *Stats) GetPlatforms() int32 {
	if m != nil {
		return m.Platforms
	}
	return 0
}

func (m *Stats) GetEnvironments() int32 {
	if m != nil {
		return m.Environments
	}
	return 0
}

func (m *Stats) GetProfiles() int32 {
	if m != nil {
		return m.Profiles
	}
	return 0
}

func (m *Stats) GetNodesCnt() int32 {
	if m != nil {
		return m.NodesCnt
	}
	return 0
}

func (m *Stats) GetControls() int32 {
	if m != nil {
		return m.Controls
	}
	return 0
}

// Statistics on the overall compliance reports.
type ReportSummary struct {
	// Intentionally blank.
	Stats *Stats `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	// Overall aggregated status for all the reports.
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Not used.
	Duration float64 `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// Not used.
	StartDate            string   `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportSummary) Reset()         { *m = ReportSummary{} }
func (m *ReportSummary) String() string { return proto.CompactTextString(m) }
func (*ReportSummary) ProtoMessage()    {}
func (*ReportSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{7}
}

func (m *ReportSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSummary.Unmarshal(m, b)
}
func (m *ReportSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSummary.Marshal(b, m, deterministic)
}
func (m *ReportSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSummary.Merge(m, src)
}
func (m *ReportSummary) XXX_Size() int {
	return xxx_messageInfo_ReportSummary.Size(m)
}
func (m *ReportSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSummary proto.InternalMessageInfo

func (m *ReportSummary) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *ReportSummary) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReportSummary) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *ReportSummary) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

type Trend struct {
	// Time in point for which the passed/failed/skipped data is valid.
	ReportTime string `protobuf:"bytes,1,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	// Total passed objects (nodes or controls) on the reports at the given report time.
	Passed int32 `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty"`
	// Total failed objects (nodes or controls) on the reports at the given report time.
	Failed int32 `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	// Total skipped objects (nodes or controls) on the reports at the given report time.
	Skipped int32 `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// Total waived objects (nodes or controls) on the reports at the given report time.
	Waived               int32    `protobuf:"varint,5,opt,name=waived,proto3" json:"waived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trend) Reset()         { *m = Trend{} }
func (m *Trend) String() string { return proto.CompactTextString(m) }
func (*Trend) ProtoMessage()    {}
func (*Trend) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{8}
}

func (m *Trend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trend.Unmarshal(m, b)
}
func (m *Trend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trend.Marshal(b, m, deterministic)
}
func (m *Trend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trend.Merge(m, src)
}
func (m *Trend) XXX_Size() int {
	return xxx_messageInfo_Trend.Size(m)
}
func (m *Trend) XXX_DiscardUnknown() {
	xxx_messageInfo_Trend.DiscardUnknown(m)
}

var xxx_messageInfo_Trend proto.InternalMessageInfo

func (m *Trend) GetReportTime() string {
	if m != nil {
		return m.ReportTime
	}
	return ""
}

func (m *Trend) GetPassed() int32 {
	if m != nil {
		return m.Passed
	}
	return 0
}

func (m *Trend) GetFailed() int32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *Trend) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

func (m *Trend) GetWaived() int32 {
	if m != nil {
		return m.Waived
	}
	return 0
}

type Trends struct {
	// Set of statistics for passed/failed/skipped nodes or controls in a trendgraph friendly data format.
	Trends               []*Trend `protobuf:"bytes,1,rep,name=trends,proto3" json:"trends,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trends) Reset()         { *m = Trends{} }
func (m *Trends) String() string { return proto.CompactTextString(m) }
func (*Trends) ProtoMessage()    {}
func (*Trends) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{9}
}

func (m *Trends) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trends.Unmarshal(m, b)
}
func (m *Trends) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trends.Marshal(b, m, deterministic)
}
func (m *Trends) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trends.Merge(m, src)
}
func (m *Trends) XXX_Size() int {
	return xxx_messageInfo_Trends.Size(m)
}
func (m *Trends) XXX_DiscardUnknown() {
	xxx_messageInfo_Trends.DiscardUnknown(m)
}

var xxx_messageInfo_Trends proto.InternalMessageInfo

func (m *Trends) GetTrends() []*Trend {
	if m != nil {
		return m.Trends
	}
	return nil
}

type Profile struct {
	// Set of statistics about the profiles executed in the reports.
	ProfileList []*ProfileList `protobuf:"bytes,1,rep,name=profile_list,json=profileList,proto3" json:"profile_list,omitempty"`
	// Intentionally blank.
	ProfileSummary *ProfileSummary `protobuf:"bytes,2,opt,name=profile_summary,json=profileSummary,proto3" json:"profile_summary,omitempty"`
	// Summary information about a specific profile's control results across the reports.
	ControlStats         []*ControlStats `protobuf:"bytes,3,rep,name=control_stats,json=controlStats,proto3" json:"control_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{10}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetProfileList() []*ProfileList {
	if m != nil {
		return m.ProfileList
	}
	return nil
}

func (m *Profile) GetProfileSummary() *ProfileSummary {
	if m != nil {
		return m.ProfileSummary
	}
	return nil
}

func (m *Profile) GetControlStats() []*ControlStats {
	if m != nil {
		return m.ControlStats
	}
	return nil
}

type ProfileList struct {
	// The profile name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The profile SHA ID.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Total number of nodes that failed this profile.
	Failures int32 `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	// Total number of failed nodes with major control failures that executed the profile.
	Majors int32 `protobuf:"varint,4,opt,name=majors,proto3" json:"majors,omitempty"`
	// Total number of failed nodes with minor control failures that executed the profile.
	Minors int32 `protobuf:"varint,5,opt,name=minors,proto3" json:"minors,omitempty"`
	// Total number of failed nodes with critical control failures that executed the profile.
	Criticals int32 `protobuf:"varint,6,opt,name=criticals,proto3" json:"criticals,omitempty"`
	// Total number of passed nodes that executed the profile.
	Passed int32 `protobuf:"varint,7,opt,name=passed,proto3" json:"passed,omitempty"`
	// Total number of skipped nodes that executed the profile.
	Skipped              int32    `protobuf:"varint,8,opt,name=skipped,proto3" json:"skipped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileList) Reset()         { *m = ProfileList{} }
func (m *ProfileList) String() string { return proto.CompactTextString(m) }
func (*ProfileList) ProtoMessage()    {}
func (*ProfileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{11}
}

func (m *ProfileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileList.Unmarshal(m, b)
}
func (m *ProfileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileList.Marshal(b, m, deterministic)
}
func (m *ProfileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileList.Merge(m, src)
}
func (m *ProfileList) XXX_Size() int {
	return xxx_messageInfo_ProfileList.Size(m)
}
func (m *ProfileList) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileList.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileList proto.InternalMessageInfo

func (m *ProfileList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProfileList) GetFailures() int32 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *ProfileList) GetMajors() int32 {
	if m != nil {
		return m.Majors
	}
	return 0
}

func (m *ProfileList) GetMinors() int32 {
	if m != nil {
		return m.Minors
	}
	return 0
}

func (m *ProfileList) GetCriticals() int32 {
	if m != nil {
		return m.Criticals
	}
	return 0
}

func (m *ProfileList) GetPassed() int32 {
	if m != nil {
		return m.Passed
	}
	return 0
}

func (m *ProfileList) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

// Summary information about a specific profile's execution across the reports.
type ProfileSummary struct {
	// Name of the profile.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Title of the profile.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Version of the profile.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// License info for the profile.
	License string `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	// Maintainer for the profile.
	Maintainer string `protobuf:"bytes,5,opt,name=maintainer,proto3" json:"maintainer,omitempty"`
	// Copyright info for the profile.
	Copyright string `protobuf:"bytes,6,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Copyright email info for the profile.
	CopyrightEmail string `protobuf:"bytes,7,opt,name=copyright_email,json=copyrightEmail,proto3" json:"copyright_email,omitempty"`
	// Summary description of the profile.
	Summary string `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`
	// Supports information for the profile (which os it can run on).
	Supports []*Support `protobuf:"bytes,9,rep,name=supports,proto3" json:"supports,omitempty"`
	// Intentionally blank.
	Stats *ProfileSummaryStats `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`
	// Dependency information about the profile (which profiles it inherits).
	Depends              []*reporting.Dependency `protobuf:"bytes,11,rep,name=depends,proto3" json:"depends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProfileSummary) Reset()         { *m = ProfileSummary{} }
func (m *ProfileSummary) String() string { return proto.CompactTextString(m) }
func (*ProfileSummary) ProtoMessage()    {}
func (*ProfileSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{12}
}

func (m *ProfileSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSummary.Unmarshal(m, b)
}
func (m *ProfileSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSummary.Marshal(b, m, deterministic)
}
func (m *ProfileSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSummary.Merge(m, src)
}
func (m *ProfileSummary) XXX_Size() int {
	return xxx_messageInfo_ProfileSummary.Size(m)
}
func (m *ProfileSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSummary proto.InternalMessageInfo

func (m *ProfileSummary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileSummary) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ProfileSummary) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProfileSummary) GetLicense() string {
	if m != nil {
		return m.License
	}
	return ""
}

func (m *ProfileSummary) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *ProfileSummary) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *ProfileSummary) GetCopyrightEmail() string {
	if m != nil {
		return m.CopyrightEmail
	}
	return ""
}

func (m *ProfileSummary) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ProfileSummary) GetSupports() []*Support {
	if m != nil {
		return m.Supports
	}
	return nil
}

func (m *ProfileSummary) GetStats() *ProfileSummaryStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *ProfileSummary) GetDepends() []*reporting.Dependency {
	if m != nil {
		return m.Depends
	}
	return nil
}

// Statistics about the nodes that executed the profile.
type ProfileSummaryStats struct {
	// Total number of failed nodes that executed the profile.
	Failed int32 `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty"`
	// Total number of passed nodes that executed the profile.
	Passed int32 `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty"`
	// Total number of skipped nodes that executed the profile.
	Skipped int32 `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// Not used.
	FailedNodes int32 `protobuf:"varint,4,opt,name=failed_nodes,json=failedNodes,proto3" json:"failed_nodes,omitempty"`
	// Not used.
	TotalNodes           int32    `protobuf:"varint,5,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileSummaryStats) Reset()         { *m = ProfileSummaryStats{} }
func (m *ProfileSummaryStats) String() string { return proto.CompactTextString(m) }
func (*ProfileSummaryStats) ProtoMessage()    {}
func (*ProfileSummaryStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{13}
}

func (m *ProfileSummaryStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSummaryStats.Unmarshal(m, b)
}
func (m *ProfileSummaryStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSummaryStats.Marshal(b, m, deterministic)
}
func (m *ProfileSummaryStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSummaryStats.Merge(m, src)
}
func (m *ProfileSummaryStats) XXX_Size() int {
	return xxx_messageInfo_ProfileSummaryStats.Size(m)
}
func (m *ProfileSummaryStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSummaryStats.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSummaryStats proto.InternalMessageInfo

func (m *ProfileSummaryStats) GetFailed() int32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *ProfileSummaryStats) GetPassed() int32 {
	if m != nil {
		return m.Passed
	}
	return 0
}

func (m *ProfileSummaryStats) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

func (m *ProfileSummaryStats) GetFailedNodes() int32 {
	if m != nil {
		return m.FailedNodes
	}
	return 0
}

func (m *ProfileSummaryStats) GetTotalNodes() int32 {
	if m != nil {
		return m.TotalNodes
	}
	return 0
}

type ControlStats struct {
	// Control ID.
	Control string `protobuf:"bytes,1,opt,name=control,proto3" json:"control,omitempty"`
	// Control title.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Count of passed nodes that executed the control.
	Passed int32 `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty"`
	// Count of failed nodes that executed the control.
	Failed int32 `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
	// Count of skipped nodes that executed the control.
	Skipped int32 `protobuf:"varint,5,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// Impact of the control.
	Impact               float32  `protobuf:"fixed32,6,opt,name=impact,proto3" json:"impact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlStats) Reset()         { *m = ControlStats{} }
func (m *ControlStats) String() string { return proto.CompactTextString(m) }
func (*ControlStats) ProtoMessage()    {}
func (*ControlStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{14}
}

func (m *ControlStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlStats.Unmarshal(m, b)
}
func (m *ControlStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlStats.Marshal(b, m, deterministic)
}
func (m *ControlStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlStats.Merge(m, src)
}
func (m *ControlStats) XXX_Size() int {
	return xxx_messageInfo_ControlStats.Size(m)
}
func (m *ControlStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlStats.DiscardUnknown(m)
}

var xxx_messageInfo_ControlStats proto.InternalMessageInfo

func (m *ControlStats) GetControl() string {
	if m != nil {
		return m.Control
	}
	return ""
}

func (m *ControlStats) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ControlStats) GetPassed() int32 {
	if m != nil {
		return m.Passed
	}
	return 0
}

func (m *ControlStats) GetFailed() int32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *ControlStats) GetSkipped() int32 {
	if m != nil {
		return m.Skipped
	}
	return 0
}

func (m *ControlStats) GetImpact() float32 {
	if m != nil {
		return m.Impact
	}
	return 0
}

type Support struct {
	// OS Name compatible with the profile. This is legacy InSpec syntax.
	OsName string `protobuf:"bytes,1,opt,name=os_name,json=os-name,proto3" json:"os_name,omitempty"`
	// OS Family compatible with the profile. This is legacy InSpec syntax.
	OsFamily string `protobuf:"bytes,2,opt,name=os_family,json=os-family,proto3" json:"os_family,omitempty"`
	// OS Release compatible with the profile.
	Release string `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	// InSpec Version compatible with the profile.
	InspecVersion string `protobuf:"bytes,4,opt,name=inspec_version,json=inspecVersion,proto3" json:"inspec_version,omitempty"`
	// Platform Name compatible with the profile.
	PlatformName string `protobuf:"bytes,5,opt,name=platform_name,json=platform-name,proto3" json:"platform_name,omitempty"`
	// Platform Family compatible with the profile.
	PlatformFamily string `protobuf:"bytes,6,opt,name=platform_family,json=platform-family,proto3" json:"platform_family,omitempty"`
	// Platform compatible with the profile.
	Platform             string   `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Support) Reset()         { *m = Support{} }
func (m *Support) String() string { return proto.CompactTextString(m) }
func (*Support) ProtoMessage()    {}
func (*Support) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{15}
}

func (m *Support) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Support.Unmarshal(m, b)
}
func (m *Support) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Support.Marshal(b, m, deterministic)
}
func (m *Support) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Support.Merge(m, src)
}
func (m *Support) XXX_Size() int {
	return xxx_messageInfo_Support.Size(m)
}
func (m *Support) XXX_DiscardUnknown() {
	xxx_messageInfo_Support.DiscardUnknown(m)
}

var xxx_messageInfo_Support proto.InternalMessageInfo

func (m *Support) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *Support) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Support) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *Support) GetInspecVersion() string {
	if m != nil {
		return m.InspecVersion
	}
	return ""
}

func (m *Support) GetPlatformName() string {
	if m != nil {
		return m.PlatformName
	}
	return ""
}

func (m *Support) GetPlatformFamily() string {
	if m != nil {
		return m.PlatformFamily
	}
	return ""
}

func (m *Support) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type Failures struct {
	// Top failed profiles across the infrastructure.
	Profiles []*FailureSummary `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	// Top failed platforms across the infrastructure.
	Platforms []*FailureSummary `protobuf:"bytes,2,rep,name=platforms,proto3" json:"platforms,omitempty"`
	// Top failed controls across the infrastructure.
	Controls []*FailureSummary `protobuf:"bytes,3,rep,name=controls,proto3" json:"controls,omitempty"`
	// Top failed environments across the infrastructure.
	Environments         []*FailureSummary `protobuf:"bytes,4,rep,name=environments,proto3" json:"environments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Failures) Reset()         { *m = Failures{} }
func (m *Failures) String() string { return proto.CompactTextString(m) }
func (*Failures) ProtoMessage()    {}
func (*Failures) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{16}
}

func (m *Failures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failures.Unmarshal(m, b)
}
func (m *Failures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failures.Marshal(b, m, deterministic)
}
func (m *Failures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failures.Merge(m, src)
}
func (m *Failures) XXX_Size() int {
	return xxx_messageInfo_Failures.Size(m)
}
func (m *Failures) XXX_DiscardUnknown() {
	xxx_messageInfo_Failures.DiscardUnknown(m)
}

var xxx_messageInfo_Failures proto.InternalMessageInfo

func (m *Failures) GetProfiles() []*FailureSummary {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *Failures) GetPlatforms() []*FailureSummary {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *Failures) GetControls() []*FailureSummary {
	if m != nil {
		return m.Controls
	}
	return nil
}

func (m *Failures) GetEnvironments() []*FailureSummary {
	if m != nil {
		return m.Environments
	}
	return nil
}

type FailureSummary struct {
	// Name of the object failing.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Total count of failures.
	Failures int32 `protobuf:"varint,2,opt,name=failures,proto3" json:"failures,omitempty"`
	// ID of the object, included if applicable.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Not used.
	Profile              string   `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailureSummary) Reset()         { *m = FailureSummary{} }
func (m *FailureSummary) String() string { return proto.CompactTextString(m) }
func (*FailureSummary) ProtoMessage()    {}
func (*FailureSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d5a4a44c0132ad9, []int{17}
}

func (m *FailureSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureSummary.Unmarshal(m, b)
}
func (m *FailureSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureSummary.Marshal(b, m, deterministic)
}
func (m *FailureSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureSummary.Merge(m, src)
}
func (m *FailureSummary) XXX_Size() int {
	return xxx_messageInfo_FailureSummary.Size(m)
}
func (m *FailureSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureSummary.DiscardUnknown(m)
}

var xxx_messageInfo_FailureSummary proto.InternalMessageInfo

func (m *FailureSummary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FailureSummary) GetFailures() int32 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *FailureSummary) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FailureSummary) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func init() {
	proto.RegisterEnum("chef.automate.api.compliance.reporting.stats.v1.Query_OrderType", Query_OrderType_name, Query_OrderType_value)
	proto.RegisterType((*Empty)(nil), "chef.automate.api.compliance.reporting.stats.v1.Empty")
	proto.RegisterType((*ListFilter)(nil), "chef.automate.api.compliance.reporting.stats.v1.ListFilter")
	proto.RegisterType((*Query)(nil), "chef.automate.api.compliance.reporting.stats.v1.Query")
	proto.RegisterType((*Summary)(nil), "chef.automate.api.compliance.reporting.stats.v1.Summary")
	proto.RegisterType((*ControlsSummary)(nil), "chef.automate.api.compliance.reporting.stats.v1.ControlsSummary")
	proto.RegisterType((*NodeSummary)(nil), "chef.automate.api.compliance.reporting.stats.v1.NodeSummary")
	proto.RegisterType((*Stats)(nil), "chef.automate.api.compliance.reporting.stats.v1.Stats")
	proto.RegisterType((*ReportSummary)(nil), "chef.automate.api.compliance.reporting.stats.v1.ReportSummary")
	proto.RegisterType((*Trend)(nil), "chef.automate.api.compliance.reporting.stats.v1.Trend")
	proto.RegisterType((*Trends)(nil), "chef.automate.api.compliance.reporting.stats.v1.Trends")
	proto.RegisterType((*Profile)(nil), "chef.automate.api.compliance.reporting.stats.v1.Profile")
	proto.RegisterType((*ProfileList)(nil), "chef.automate.api.compliance.reporting.stats.v1.ProfileList")
	proto.RegisterType((*ProfileSummary)(nil), "chef.automate.api.compliance.reporting.stats.v1.ProfileSummary")
	proto.RegisterType((*ProfileSummaryStats)(nil), "chef.automate.api.compliance.reporting.stats.v1.ProfileSummaryStats")
	proto.RegisterType((*ControlStats)(nil), "chef.automate.api.compliance.reporting.stats.v1.ControlStats")
	proto.RegisterType((*Support)(nil), "chef.automate.api.compliance.reporting.stats.v1.Support")
	proto.RegisterType((*Failures)(nil), "chef.automate.api.compliance.reporting.stats.v1.Failures")
	proto.RegisterType((*FailureSummary)(nil), "chef.automate.api.compliance.reporting.stats.v1.FailureSummary")
}

func init() {
	proto.RegisterFile("components/automate-gateway/api/compliance/reporting/stats/stats.proto", fileDescriptor_5d5a4a44c0132ad9)
}

var fileDescriptor_5d5a4a44c0132ad9 = []byte{
	// 1645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x6f, 0x1c, 0x45,
	0x16, 0xdf, 0xee, 0xf9, 0xec, 0x37, 0xf6, 0x38, 0x5b, 0xc9, 0x7a, 0x3b, 0x5e, 0x27, 0x71, 0x3a,
	0xd9, 0x5d, 0x13, 0xe4, 0x19, 0xc5, 0x88, 0x10, 0x0c, 0x84, 0x10, 0x3b, 0x39, 0x45, 0x49, 0x68,
	0x3b, 0x11, 0x4a, 0x84, 0x46, 0x95, 0x9e, 0xf2, 0xb8, 0xe2, 0xfe, 0x52, 0x77, 0xcd, 0x58, 0xc3,
	0x31, 0x27, 0x94, 0x2b, 0x27, 0x38, 0x21, 0x40, 0x48, 0x44, 0x42, 0xe2, 0x12, 0x29, 0x27, 0x0e,
	0xdc, 0x39, 0xf1, 0x2f, 0x70, 0x85, 0x03, 0x7f, 0x01, 0xaa, 0xaf, 0x9e, 0xee, 0xd8, 0x63, 0x79,
	0x06, 0x8b, 0x8b, 0xd5, 0xef, 0x57, 0xaf, 0xde, 0x57, 0xbd, 0xf7, 0xab, 0xf2, 0xc0, 0x2d, 0x2f,
	0x0a, 0xe2, 0x28, 0x24, 0x21, 0x4b, 0xdb, 0xb8, 0xcf, 0xa2, 0x00, 0x33, 0xb2, 0xd2, 0xc3, 0x8c,
	0xec, 0xe1, 0x61, 0x1b, 0xc7, 0xb4, 0xcd, 0xd7, 0x7d, 0x8a, 0x43, 0x8f, 0xb4, 0x13, 0x12, 0x47,
	0x09, 0xa3, 0x61, 0xaf, 0x9d, 0x32, 0xcc, 0x52, 0xf9, 0xb7, 0x15, 0x27, 0x11, 0x8b, 0x50, 0xdb,
	0xdb, 0x21, 0xdb, 0x2d, 0x6d, 0xa1, 0x85, 0x63, 0xda, 0x1a, 0xed, 0x6c, 0x65, 0x3b, 0x5b, 0x72,
	0xcf, 0xe0, 0xf2, 0xc2, 0x62, 0x2f, 0x8a, 0x7a, 0x3e, 0x11, 0x3e, 0x70, 0x18, 0x46, 0x0c, 0x33,
	0x1a, 0x85, 0xca, 0xdc, 0xc2, 0xf5, 0x03, 0xc3, 0x4a, 0x62, 0xaf, 0x2d, 0xd6, 0xbd, 0x95, 0x1e,
	0x09, 0x57, 0xe2, 0xc8, 0xa7, 0xde, 0xf0, 0x18, 0x2c, 0x50, 0x1c, 0x1c, 0x60, 0x61, 0x63, 0xaa,
	0xd2, 0x8c, 0x52, 0x15, 0x56, 0x9c, 0x1a, 0x54, 0x6e, 0x06, 0x31, 0x1b, 0x3a, 0x57, 0x01, 0x6e,
	0xd3, 0x94, 0xdd, 0xa2, 0x3e, 0x23, 0x09, 0x9a, 0x87, 0xea, 0x00, 0xfb, 0x7d, 0x92, 0xda, 0xa7,
	0x96, 0x4a, 0xcb, 0x96, 0xab, 0x24, 0x84, 0xa0, 0xcc, 0x86, 0x31, 0xb1, 0xff, 0xb5, 0x64, 0x2c,
	0x5b, 0xae, 0xf8, 0x76, 0x7e, 0x33, 0xa1, 0xf2, 0x61, 0x9f, 0x24, 0x43, 0xd4, 0x04, 0x93, 0x76,
	0xed, 0x7f, 0x8a, 0x35, 0x93, 0x76, 0x33, 0xed, 0x93, 0x23, 0x6d, 0x8e, 0xa5, 0xf4, 0x13, 0x62,
	0xa3, 0x25, 0x63, 0xb9, 0xe2, 0x8a, 0x6f, 0xb4, 0x00, 0x75, 0x1a, 0x32, 0x92, 0x0c, 0xb0, 0x6f,
	0x9f, 0x16, 0x78, 0x26, 0xa3, 0xfb, 0x50, 0xdb, 0x16, 0x31, 0xc9, 0x50, 0x1a, 0xab, 0xef, 0xb4,
	0x26, 0x3c, 0xcb, 0xd6, 0x28, 0x2f, 0x57, 0xdb, 0x42, 0x0f, 0xa0, 0x12, 0x25, 0x5d, 0x92, 0x88,
	0x4c, 0x9a, 0xab, 0xd7, 0x27, 0x36, 0x2a, 0x32, 0x6e, 0xdd, 0xe5, 0x36, 0xb6, 0x86, 0x31, 0x71,
	0xa5, 0x39, 0x91, 0x5e, 0x94, 0x30, 0x7b, 0x5e, 0xa6, 0xcc, 0xbf, 0x39, 0x16, 0xe3, 0x1e, 0xb1,
	0xff, 0x2d, 0x53, 0xe6, 0xdf, 0xe8, 0x34, 0xd4, 0x63, 0x92, 0x74, 0x04, 0x6e, 0x0b, 0xbc, 0x16,
	0x93, 0xe4, 0x1e, 0xee, 0x11, 0xe7, 0x2c, 0x58, 0x99, 0x59, 0x54, 0x83, 0xd2, 0x07, 0x9b, 0xeb,
	0x27, 0xfe, 0x81, 0xea, 0x50, 0xde, 0xb8, 0xb9, 0xb9, 0x7e, 0xc2, 0x70, 0x7e, 0x34, 0xa1, 0xb6,
	0xd9, 0x0f, 0x02, 0x9c, 0x0c, 0xd1, 0x2e, 0x9c, 0xf0, 0xa2, 0x90, 0x25, 0x91, 0x9f, 0x76, 0x52,
	0x89, 0xd9, 0xc6, 0x92, 0xb1, 0xdc, 0x98, 0x22, 0xa3, 0x75, 0x65, 0x48, 0xd9, 0x76, 0xe7, 0xbc,
	0x22, 0x80, 0x3a, 0x30, 0x13, 0x46, 0x5d, 0x92, 0x39, 0x32, 0x85, 0xa3, 0x77, 0x27, 0x76, 0x74,
	0x27, 0xea, 0x12, 0xed, 0xa4, 0x11, 0x8e, 0x04, 0x44, 0xa0, 0x29, 0xd5, 0x33, 0x17, 0x25, 0xe1,
	0xe2, 0xda, 0xc4, 0x2e, 0x5c, 0x01, 0x69, 0x27, 0xb3, 0x49, 0x5e, 0x74, 0xbe, 0x37, 0x60, 0xee,
	0x95, 0x64, 0x79, 0x0b, 0x6e, 0x63, 0xea, 0xf7, 0x13, 0x92, 0x8a, 0x02, 0x56, 0xdc, 0x4c, 0xe6,
	0xc3, 0x10, 0xe0, 0x27, 0x51, 0x92, 0x8a, 0x8c, 0x2b, 0xae, 0x92, 0x04, 0x4e, 0x43, 0x8e, 0x97,
	0x14, 0x2e, 0x24, 0xb4, 0x08, 0x96, 0x97, 0x50, 0x46, 0x3d, 0xec, 0xa7, 0x76, 0x59, 0x2c, 0x8d,
	0x00, 0xbe, 0x2b, 0xc6, 0x69, 0x4a, 0xba, 0x76, 0x45, 0xee, 0x92, 0x12, 0xb2, 0xa1, 0x96, 0xee,
	0xd2, 0x38, 0x26, 0x5d, 0xbb, 0x2a, 0x1b, 0x42, 0x89, 0xce, 0x4f, 0x06, 0x34, 0x72, 0x35, 0x13,
	0xf6, 0x55, 0xf6, 0x4c, 0x05, 0x3b, 0x02, 0xf2, 0x76, 0xcc, 0x82, 0x1d, 0xe4, 0xf0, 0xf3, 0x0b,
	0x47, 0x5b, 0x65, 0xd4, 0x05, 0x0c, 0xfd, 0x07, 0xac, 0x1d, 0xda, 0xdb, 0xe9, 0x24, 0x34, 0xdd,
	0x55, 0xb1, 0xd7, 0x39, 0xe0, 0xd2, 0x74, 0x17, 0x9d, 0x83, 0x46, 0x40, 0xba, 0xb4, 0x1f, 0xc8,
	0x65, 0x19, 0x3f, 0x48, 0x48, 0x28, 0x9c, 0x86, 0xba, 0x1f, 0xed, 0xc9, 0x55, 0x95, 0x84, 0x1f,
	0xed, 0xf1, 0x25, 0xe7, 0xa5, 0x01, 0x95, 0x4d, 0x7e, 0x3c, 0xc8, 0x86, 0x0a, 0x3f, 0x74, 0x59,
	0xe7, 0xd2, 0x0d, 0xd3, 0x36, 0x5c, 0x09, 0xf0, 0xc4, 0x62, 0x1f, 0xb3, 0xed, 0x28, 0x09, 0x74,
	0xad, 0x47, 0x00, 0x0f, 0x9f, 0x84, 0x03, 0x9a, 0x44, 0x61, 0xc0, 0x49, 0x4f, 0x87, 0x9f, 0xc7,
	0xf8, 0x31, 0xc6, 0x49, 0xb4, 0x4d, 0x7d, 0xa2, 0x2b, 0x9f, 0xc9, 0x3c, 0x35, 0xe1, 0xa6, 0xe3,
	0x85, 0x4c, 0xc5, 0x5e, 0x17, 0xc0, 0x7a, 0xc8, 0xf8, 0x46, 0xdd, 0xee, 0x2a, 0xf2, 0x4c, 0x76,
	0x7e, 0x30, 0x60, 0xb6, 0xd0, 0x50, 0xe8, 0x36, 0x54, 0x44, 0xab, 0x09, 0x1f, 0x8d, 0xd5, 0x2b,
	0x13, 0xf7, 0xa7, 0xa8, 0x84, 0x2b, 0x8d, 0xf0, 0x8e, 0xe0, 0x1f, 0x7d, 0x59, 0x11, 0xcb, 0x55,
	0x12, 0x8f, 0xa9, 0xdb, 0x4f, 0x04, 0xe9, 0x8b, 0x6a, 0x18, 0x6e, 0x26, 0xa3, 0x33, 0x00, 0x29,
	0xc3, 0x09, 0xeb, 0x74, 0x31, 0x23, 0xa2, 0x14, 0x96, 0x6b, 0x09, 0x64, 0x03, 0x33, 0xe2, 0x3c,
	0x33, 0xa0, 0xb2, 0x95, 0x90, 0xb0, 0xcb, 0xcf, 0x4c, 0xcd, 0x14, 0xa3, 0x01, 0x51, 0x1e, 0x40,
	0x42, 0x5b, 0x34, 0x20, 0xb9, 0x7e, 0x34, 0x0b, 0xfd, 0x38, 0x0f, 0x55, 0x3e, 0x01, 0xa4, 0xab,
	0xbb, 0x5b, 0x4a, 0xf9, 0xfe, 0x2a, 0x17, 0xfb, 0x6b, 0x1e, 0xaa, 0x7b, 0x98, 0x0e, 0x46, 0x9d,
	0x2d, 0x25, 0xe7, 0x23, 0xa8, 0x8a, 0x58, 0x52, 0x74, 0x07, 0xaa, 0x4c, 0x7c, 0xd9, 0x86, 0xe0,
	0xf2, 0xc9, 0x0b, 0x27, 0x0c, 0xb9, 0xca, 0x8a, 0xf3, 0xd2, 0x84, 0xda, 0x3d, 0x79, 0xbe, 0x9c,
	0x9d, 0xd4, 0x51, 0x77, 0x7c, 0x9a, 0x32, 0xe5, 0x61, 0x72, 0x76, 0x52, 0xf6, 0xf8, 0xa5, 0xe1,
	0x36, 0xe2, 0x91, 0x80, 0x76, 0x60, 0x4e, 0x3b, 0x28, 0x32, 0xe0, 0xfb, 0xd3, 0xfa, 0xd0, 0xfc,
	0xd4, 0x8c, 0x0b, 0x32, 0x7a, 0x0c, 0xb3, 0xaa, 0xf9, 0x3a, 0xb2, 0xcd, 0x4a, 0x22, 0x97, 0xf7,
	0xa6, 0xa5, 0x74, 0xd9, 0x6d, 0x33, 0x5e, 0x4e, 0x72, 0x7e, 0x36, 0xa0, 0x91, 0x4b, 0x95, 0x5f,
	0x52, 0x21, 0xce, 0x1a, 0x44, 0x7c, 0xab, 0xfb, 0xdc, 0xcc, 0xee, 0xf3, 0x3c, 0x49, 0x96, 0xc6,
	0x92, 0x64, 0x79, 0x0c, 0x49, 0x56, 0xc6, 0x93, 0x64, 0x75, 0x3c, 0x49, 0xd6, 0xc6, 0x91, 0x64,
	0xbd, 0x48, 0x92, 0x7f, 0x94, 0xa0, 0x59, 0x2c, 0xeb, 0x81, 0x29, 0x9d, 0x82, 0x0a, 0xa3, 0xcc,
	0x27, 0x2a, 0x2b, 0x29, 0x70, 0xb3, 0x03, 0x92, 0xa4, 0x7c, 0xd0, 0xe4, 0x28, 0x69, 0x91, 0xaf,
	0xf8, 0xd4, 0x23, 0x61, 0x4a, 0x44, 0x5e, 0x96, 0xab, 0x45, 0x74, 0x16, 0x20, 0xc0, 0x34, 0x64,
	0x98, 0x86, 0x24, 0x11, 0xc9, 0x59, 0x6e, 0x0e, 0x91, 0x2c, 0x1d, 0x0f, 0x13, 0xda, 0xdb, 0x61,
	0x22, 0x41, 0xcb, 0x1d, 0x01, 0xe8, 0xff, 0x30, 0x97, 0x09, 0x1d, 0x12, 0x60, 0xea, 0x8b, 0x4c,
	0x2d, 0xb7, 0x99, 0xc1, 0x37, 0x39, 0x2a, 0x32, 0x56, 0xdd, 0x56, 0x97, 0x01, 0x28, 0x11, 0x6d,
	0x41, 0x3d, 0xed, 0xc7, 0xfc, 0xcc, 0x53, 0xdb, 0x12, 0x0d, 0x72, 0x75, 0x72, 0x1e, 0x92, 0x06,
	0xdc, 0xcc, 0x12, 0x7a, 0xa8, 0xa9, 0x0d, 0x44, 0x6f, 0x6f, 0xfc, 0xc5, 0xde, 0x2e, 0x10, 0xdd,
	0x5d, 0xa8, 0x75, 0x49, 0x2c, 0xe6, 0xbf, 0x21, 0x02, 0x7e, 0xf3, 0xa8, 0xd6, 0x07, 0x97, 0x5b,
	0x1b, 0x62, 0x27, 0x09, 0xbd, 0xa1, 0xab, 0xad, 0x38, 0x5f, 0x1b, 0x70, 0xf2, 0x00, 0x7f, 0x39,
	0xee, 0x32, 0x0a, 0xdc, 0x35, 0x8e, 0xeb, 0x72, 0x6d, 0x55, 0x2a, 0x72, 0xda, 0x79, 0x98, 0x91,
	0x7b, 0x3b, 0xf2, 0xce, 0x92, 0xcd, 0xdd, 0x90, 0xd8, 0x1d, 0x71, 0x6b, 0x9d, 0x83, 0x06, 0x8b,
	0x18, 0xf6, 0x95, 0x86, 0xba, 0x15, 0x05, 0x24, 0x14, 0x9c, 0x2f, 0x0d, 0x98, 0xc9, 0x4f, 0x22,
	0x77, 0xa7, 0x66, 0x51, 0xf5, 0xa6, 0x16, 0xc7, 0xb4, 0xe7, 0x28, 0xec, 0xd2, 0x18, 0x8a, 0x2e,
	0x8f, 0xa3, 0xe8, 0xca, 0x3e, 0x8a, 0xa6, 0x41, 0x8c, 0x3d, 0xd9, 0x91, 0xa6, 0xab, 0x24, 0xe7,
	0x77, 0x83, 0xbf, 0x29, 0x45, 0x0b, 0xf0, 0xdd, 0x51, 0xda, 0xc9, 0x4d, 0x4e, 0x2d, 0x4a, 0x57,
	0xc4, 0xf0, 0x2c, 0x82, 0x15, 0xa5, 0x9d, 0x6d, 0x1c, 0x50, 0x7f, 0xa8, 0x22, 0xb4, 0xa2, 0x74,
	0x45, 0x02, 0x7c, 0x5f, 0x42, 0x7c, 0x82, 0x53, 0x7d, 0x1f, 0x69, 0x11, 0xfd, 0x17, 0x9a, 0x34,
	0x4c, 0x63, 0xe2, 0x75, 0xf4, 0x94, 0xc9, 0x59, 0x9a, 0x95, 0xe8, 0x03, 0x35, 0x6b, 0x17, 0x61,
	0x56, 0xdf, 0xf6, 0xd2, 0xbd, 0x1c, 0xaa, 0x0c, 0x94, 0x41, 0x2c, 0xc3, 0x5c, 0xa6, 0xa5, 0x42,
	0x91, 0xd3, 0x95, 0xc1, 0x3a, 0x20, 0xfe, 0x18, 0x50, 0x90, 0x1a, 0xae, 0x4c, 0x76, 0x3e, 0x2d,
	0x41, 0xfd, 0x96, 0xe6, 0xae, 0x47, 0xb9, 0x57, 0x83, 0xbc, 0x36, 0x26, 0xa7, 0x74, 0x65, 0x4c,
	0x53, 0xfa, 0xe8, 0xd9, 0xf1, 0x71, 0xf1, 0x51, 0x73, 0x2c, 0xd6, 0x73, 0xaf, 0xa2, 0x47, 0xb9,
	0x87, 0x4b, 0xe9, 0x98, 0x62, 0xd7, 0x06, 0x91, 0xf7, 0xca, 0x93, 0xab, 0x7c, 0x3c, 0x0e, 0x0a,
	0x46, 0x9d, 0x27, 0xd0, 0x2c, 0xae, 0x1f, 0x48, 0xdc, 0xf9, 0xbb, 0xc7, 0x7c, 0xe5, 0xee, 0x91,
	0xf7, 0x54, 0x29, 0xbb, 0xa7, 0x6c, 0xa8, 0xa9, 0xf2, 0x6b, 0xd2, 0x56, 0xe2, 0xea, 0x73, 0x0b,
	0x66, 0xc4, 0x0c, 0x6e, 0x92, 0x64, 0x40, 0x3d, 0x82, 0xbe, 0x31, 0xa1, 0xe1, 0x12, 0xdc, 0xd5,
	0xae, 0xaf, 0x4c, 0xf7, 0x8f, 0xe0, 0xc2, 0x34, 0xd4, 0x2b, 0xff, 0x1b, 0xf9, 0xca, 0x78, 0xfa,
	0xc2, 0xbe, 0x04, 0xce, 0x48, 0x7b, 0x2d, 0xd3, 0x5e, 0x13, 0xda, 0x6b, 0x9a, 0xf1, 0xcb, 0x09,
	0xc1, 0xdd, 0x67, 0x2f, 0xec, 0x1b, 0x47, 0xd2, 0x5e, 0xdc, 0xa7, 0xa3, 0x5c, 0xae, 0xf5, 0x08,
	0x7b, 0xfa, 0xcb, 0xaf, 0x9f, 0x99, 0xcb, 0xce, 0x85, 0x43, 0x7f, 0x40, 0x51, 0xea, 0xc6, 0x25,
	0xf4, 0xb9, 0x09, 0x16, 0x2f, 0x93, 0x7c, 0x53, 0x4e, 0x5b, 0xa4, 0xb7, 0xa6, 0x7b, 0xee, 0xa5,
	0xce, 0x17, 0xbc, 0x46, 0xcb, 0xb0, 0x74, 0x48, 0xd6, 0xe2, 0x45, 0x98, 0x55, 0xe8, 0xda, 0x11,
	0x74, 0x17, 0xf6, 0x69, 0x08, 0x6f, 0x59, 0x75, 0xfe, 0xe7, 0x9c, 0x3f, 0xac, 0x3a, 0xc2, 0x08,
	0xaf, 0xcd, 0x77, 0x26, 0xcc, 0xf0, 0xda, 0xdc, 0xd3, 0x13, 0xff, 0xf7, 0xf5, 0x90, 0x72, 0xe9,
	0x7c, 0xcb, 0xeb, 0xf3, 0x3a, 0x5c, 0x38, 0x24, 0xe7, 0x8c, 0x8f, 0x74, 0x89, 0x36, 0x8e, 0xa6,
	0x7e, 0x66, 0x9f, 0x92, 0xce, 0x33, 0x2b, 0xd4, 0x6b, 0xce, 0xc5, 0xc3, 0x0a, 0xa5, 0x4d, 0xf1,
	0x5a, 0x3d, 0x57, 0xb5, 0xca, 0xa8, 0x77, 0xda, 0x5a, 0xbd, 0x3d, 0x2d, 0x07, 0xa5, 0x47, 0x29,
	0x56, 0xc6, 0x2c, 0x47, 0x2b, 0x56, 0xa6, 0xbe, 0xbf, 0x58, 0xda, 0xeb, 0x51, 0x8b, 0xa5, 0x4d,
	0xad, 0x19, 0x97, 0x6e, 0xdc, 0x7f, 0xb8, 0xd9, 0xa3, 0x6c, 0xa7, 0xff, 0x98, 0x67, 0x26, 0x7e,
	0xc1, 0xcc, 0x7e, 0xe8, 0x6b, 0x4f, 0xff, 0xbb, 0xe8, 0xe3, 0xaa, 0xf8, 0xe5, 0xef, 0x8d, 0x3f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x7e, 0xf4, 0x20, 0x5c, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsServiceClient is the client API for StatsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsServiceClient interface {
	//
	//Read Summary
	//
	//Returns summary statistics for compliance reports.
	//General report summary information is the default.
	//Adding a `type` value of `nodes` or `controls` will return summary statistics for that object.
	//Supports filtering.
	//
	//Example:
	//```
	//{
	//"type":"nodes",
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadSummary(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Summary, error)
	//
	//Read Trend
	//
	//Returns trendgraph statistics for compliance reports.
	//The `type` field is required for this api call. Options are `nodes` or `controls`.
	//Requires minimum `interval` field of 3600 and defined start time and end time filters.
	//Supports filtering.
	//
	//Example:
	//```
	//{
	//"type":"nodes",
	//"interval":86400,
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadTrend(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Trends, error)
	//
	//Read Profiles
	//
	//Returns statistics and summary information for profiles executed as part of the compliance reports.
	//If called without specifying a profile ID (`id`), the API will return stats on all the profiles.
	//If the `id` field is provided (profile ID) as part of the query object, the `type` field must also be specified. Options are `controls` or `summary`.
	//Supports filtering.
	//
	//```
	//{
	//"type":"controls",
	//"id":"09adcbb3b9b3233d5de63cd98a5ba3e155b3aaeb66b5abed379f5fb1ff143988",
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadProfiles(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profile, error)
	//
	//Read Failures
	//
	//Returns the top failures for the specified object. A types filter is required for this api.
	//Supported values are `platform`, `environment`, `control`, and `profile`.
	//By default, the top ten failed objects for the specified type are returned.
	//Supports filtering and respects `size` parameter.
	//
	//Example:
	//```
	//{
	//"filters":[
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]},
	//{"type":"types","values":["platform","environment"]}
	//]
	//}
	//```
	ReadFailures(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Failures, error)
}

type statsServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatsServiceClient(cc *grpc.ClientConn) StatsServiceClient {
	return &statsServiceClient{cc}
}

func (c *statsServiceClient) ReadSummary(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Summary, error) {
	out := new(Summary)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadTrend(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Trends, error) {
	out := new(Trends)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadTrend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadProfiles(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadFailures(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Failures, error) {
	out := new(Failures)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadFailures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatsServiceServer is the server API for StatsService service.
type StatsServiceServer interface {
	//
	//Read Summary
	//
	//Returns summary statistics for compliance reports.
	//General report summary information is the default.
	//Adding a `type` value of `nodes` or `controls` will return summary statistics for that object.
	//Supports filtering.
	//
	//Example:
	//```
	//{
	//"type":"nodes",
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadSummary(context.Context, *Query) (*Summary, error)
	//
	//Read Trend
	//
	//Returns trendgraph statistics for compliance reports.
	//The `type` field is required for this api call. Options are `nodes` or `controls`.
	//Requires minimum `interval` field of 3600 and defined start time and end time filters.
	//Supports filtering.
	//
	//Example:
	//```
	//{
	//"type":"nodes",
	//"interval":86400,
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadTrend(context.Context, *Query) (*Trends, error)
	//
	//Read Profiles
	//
	//Returns statistics and summary information for profiles executed as part of the compliance reports.
	//If called without specifying a profile ID (`id`), the API will return stats on all the profiles.
	//If the `id` field is provided (profile ID) as part of the query object, the `type` field must also be specified. Options are `controls` or `summary`.
	//Supports filtering.
	//
	//```
	//{
	//"type":"controls",
	//"id":"09adcbb3b9b3233d5de63cd98a5ba3e155b3aaeb66b5abed379f5fb1ff143988",
	//"filters":[
	//{"type":"environment","values":["dev*"]},
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]}
	//]
	//}
	//```
	ReadProfiles(context.Context, *Query) (*Profile, error)
	//
	//Read Failures
	//
	//Returns the top failures for the specified object. A types filter is required for this api.
	//Supported values are `platform`, `environment`, `control`, and `profile`.
	//By default, the top ten failed objects for the specified type are returned.
	//Supports filtering and respects `size` parameter.
	//
	//Example:
	//```
	//{
	//"filters":[
	//{"type":"start_time","values":["2019-10-26T00:00:00Z"]},
	//{"type":"end_time","values":["2019-11-05T23:59:59Z"]},
	//{"type":"types","values":["platform","environment"]}
	//]
	//}
	//```
	ReadFailures(context.Context, *Query) (*Failures, error)
}

// UnimplementedStatsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatsServiceServer struct {
}

func (*UnimplementedStatsServiceServer) ReadSummary(ctx context.Context, req *Query) (*Summary, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSummary not implemented")
}
func (*UnimplementedStatsServiceServer) ReadTrend(ctx context.Context, req *Query) (*Trends, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTrend not implemented")
}
func (*UnimplementedStatsServiceServer) ReadProfiles(ctx context.Context, req *Query) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadProfiles not implemented")
}
func (*UnimplementedStatsServiceServer) ReadFailures(ctx context.Context, req *Query) (*Failures, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFailures not implemented")
}

func RegisterStatsServiceServer(s *grpc.Server, srv StatsServiceServer) {
	s.RegisterService(&_StatsService_serviceDesc, srv)
}

func _StatsService_ReadSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadSummary(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadTrend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadTrend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadTrend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadTrend(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadProfiles(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadFailures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadFailures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.reporting.stats.v1.StatsService/ReadFailures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadFailures(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.compliance.reporting.stats.v1.StatsService",
	HandlerType: (*StatsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadSummary",
			Handler:    _StatsService_ReadSummary_Handler,
		},
		{
			MethodName: "ReadTrend",
			Handler:    _StatsService_ReadTrend_Handler,
		},
		{
			MethodName: "ReadProfiles",
			Handler:    _StatsService_ReadProfiles_Handler,
		},
		{
			MethodName: "ReadFailures",
			Handler:    _StatsService_ReadFailures_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "components/automate-gateway/api/compliance/reporting/stats/stats.proto",
}
