// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: automate-gateway/api/deployment/deployment.proto

package deployment

import (
	context "context"
	_ "github.com/chef/automate/api/external/annotations/iam"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Version message
//
// The manifest version constructed with:
// * build_timestamp
type Version struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BuildTimestamp string                 `protobuf:"bytes,1,opt,name=build_timestamp,json=buildTimestamp,proto3" json:"build_timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_automate_gateway_api_deployment_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetBuildTimestamp() string {
	if x != nil {
		return x.BuildTimestamp
	}
	return ""
}

type ServiceVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersionsRequest) Reset() {
	*x = ServiceVersionsRequest{}
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersionsRequest) ProtoMessage() {}

func (x *ServiceVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersionsRequest.ProtoReflect.Descriptor instead.
func (*ServiceVersionsRequest) Descriptor() ([]byte, []int) {
	return file_automate_gateway_api_deployment_deployment_proto_rawDescGZIP(), []int{1}
}

type ServiceVersionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*ServiceVersion      `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersionsResponse) Reset() {
	*x = ServiceVersionsResponse{}
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersionsResponse) ProtoMessage() {}

func (x *ServiceVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersionsResponse.ProtoReflect.Descriptor instead.
func (*ServiceVersionsResponse) Descriptor() ([]byte, []int) {
	return file_automate_gateway_api_deployment_deployment_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceVersionsResponse) GetServices() []*ServiceVersion {
	if x != nil {
		return x.Services
	}
	return nil
}

type ServiceVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Origin        string                 `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Release       string                 `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersion) Reset() {
	*x = ServiceVersion{}
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersion) ProtoMessage() {}

func (x *ServiceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_automate_gateway_api_deployment_deployment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersion.ProtoReflect.Descriptor instead.
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return file_automate_gateway_api_deployment_deployment_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceVersion) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ServiceVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceVersion) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

var File_automate_gateway_api_deployment_deployment_proto protoreflect.FileDescriptor

const file_automate_gateway_api_deployment_deployment_proto_rawDesc = "" +
	"\n" +
	"0automate-gateway/api/deployment/deployment.proto\x12\x1cchef.automate.api.deployment\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a*external/annotations/iam/annotations.proto\"2\n" +
	"\aVersion\x12'\n" +
	"\x0fbuild_timestamp\x18\x01 \x01(\tR\x0ebuildTimestamp\"\x18\n" +
	"\x16ServiceVersionsRequest\"c\n" +
	"\x17ServiceVersionsResponse\x12H\n" +
	"\bservices\x18\x01 \x03(\v2,.chef.automate.api.deployment.ServiceVersionR\bservices\"p\n" +
	"\x0eServiceVersion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06origin\x18\x02 \x01(\tR\x06origin\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x18\n" +
	"\arelease\x18\x04 \x01(\tR\arelease2\x90\x03\n" +
	"\n" +
	"Deployment\x12\x9b\x01\n" +
	"\n" +
	"GetVersion\x12\x16.google.protobuf.Empty\x1a%.chef.automate.api.deployment.Version\"N\x8a\xb5\x183\n" +
	"\x16system:service:version\x12\x19system:serviceVersion:get\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v0/version\x12\xe3\x01\n" +
	"\x0fServiceVersions\x124.chef.automate.api.deployment.ServiceVersionsRequest\x1a5.chef.automate.api.deployment.ServiceVersionsResponse\"c\x8a\xb5\x184\n" +
	"\x16system:service:version\x12\x1asystem:serviceVersion:list\x82\xd3\xe4\x93\x02%\x12#/api/v0/deployment/service_versionsBEZCgithub.com/chef/automate/components/automate-gateway/api/deploymentb\x06proto3"

var (
	file_automate_gateway_api_deployment_deployment_proto_rawDescOnce sync.Once
	file_automate_gateway_api_deployment_deployment_proto_rawDescData []byte
)

func file_automate_gateway_api_deployment_deployment_proto_rawDescGZIP() []byte {
	file_automate_gateway_api_deployment_deployment_proto_rawDescOnce.Do(func() {
		file_automate_gateway_api_deployment_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_automate_gateway_api_deployment_deployment_proto_rawDesc), len(file_automate_gateway_api_deployment_deployment_proto_rawDesc)))
	})
	return file_automate_gateway_api_deployment_deployment_proto_rawDescData
}

var file_automate_gateway_api_deployment_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_automate_gateway_api_deployment_deployment_proto_goTypes = []any{
	(*Version)(nil),                 // 0: chef.automate.api.deployment.Version
	(*ServiceVersionsRequest)(nil),  // 1: chef.automate.api.deployment.ServiceVersionsRequest
	(*ServiceVersionsResponse)(nil), // 2: chef.automate.api.deployment.ServiceVersionsResponse
	(*ServiceVersion)(nil),          // 3: chef.automate.api.deployment.ServiceVersion
	(*emptypb.Empty)(nil),           // 4: google.protobuf.Empty
}
var file_automate_gateway_api_deployment_deployment_proto_depIdxs = []int32{
	3, // 0: chef.automate.api.deployment.ServiceVersionsResponse.services:type_name -> chef.automate.api.deployment.ServiceVersion
	4, // 1: chef.automate.api.deployment.Deployment.GetVersion:input_type -> google.protobuf.Empty
	1, // 2: chef.automate.api.deployment.Deployment.ServiceVersions:input_type -> chef.automate.api.deployment.ServiceVersionsRequest
	0, // 3: chef.automate.api.deployment.Deployment.GetVersion:output_type -> chef.automate.api.deployment.Version
	2, // 4: chef.automate.api.deployment.Deployment.ServiceVersions:output_type -> chef.automate.api.deployment.ServiceVersionsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_automate_gateway_api_deployment_deployment_proto_init() }
func file_automate_gateway_api_deployment_deployment_proto_init() {
	if File_automate_gateway_api_deployment_deployment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_automate_gateway_api_deployment_deployment_proto_rawDesc), len(file_automate_gateway_api_deployment_deployment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_automate_gateway_api_deployment_deployment_proto_goTypes,
		DependencyIndexes: file_automate_gateway_api_deployment_deployment_proto_depIdxs,
		MessageInfos:      file_automate_gateway_api_deployment_deployment_proto_msgTypes,
	}.Build()
	File_automate_gateway_api_deployment_deployment_proto = out.File
	file_automate_gateway_api_deployment_deployment_proto_goTypes = nil
	file_automate_gateway_api_deployment_deployment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeploymentClient is the client API for Deployment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentClient interface {
	GetVersion(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Version, error)
	ServiceVersions(ctx context.Context, in *ServiceVersionsRequest, opts ...grpc.CallOption) (*ServiceVersionsResponse, error)
}

type deploymentClient struct {
	cc grpc.ClientConnInterface
}

func NewDeploymentClient(cc grpc.ClientConnInterface) DeploymentClient {
	return &deploymentClient{cc}
}

func (c *deploymentClient) GetVersion(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/chef.automate.api.deployment.Deployment/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentClient) ServiceVersions(ctx context.Context, in *ServiceVersionsRequest, opts ...grpc.CallOption) (*ServiceVersionsResponse, error) {
	out := new(ServiceVersionsResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.deployment.Deployment/ServiceVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploymentServer is the server API for Deployment service.
type DeploymentServer interface {
	GetVersion(context.Context, *emptypb.Empty) (*Version, error)
	ServiceVersions(context.Context, *ServiceVersionsRequest) (*ServiceVersionsResponse, error)
}

// UnimplementedDeploymentServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentServer struct {
}

func (*UnimplementedDeploymentServer) GetVersion(context.Context, *emptypb.Empty) (*Version, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedDeploymentServer) ServiceVersions(context.Context, *ServiceVersionsRequest) (*ServiceVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceVersions not implemented")
}

func RegisterDeploymentServer(s *grpc.Server, srv DeploymentServer) {
	s.RegisterService(&_Deployment_serviceDesc, srv)
}

func _Deployment_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.deployment.Deployment/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetVersion(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployment_ServiceVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).ServiceVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.deployment.Deployment/ServiceVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).ServiceVersions(ctx, req.(*ServiceVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.deployment.Deployment",
	HandlerType: (*DeploymentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _Deployment_GetVersion_Handler,
		},
		{
			MethodName: "ServiceVersions",
			Handler:    _Deployment_ServiceVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "automate-gateway/api/deployment/deployment.proto",
}
