%% This file is intended for use in the Docker container only
%% You'll need to update it manually to reflect changes in the omnibus generated
%% sys.config. See: delivery/cookbooks/delivery/templates/default/delivery-sys.config.erb
%% -*- mode: erlang -*-
[
 {kernel, [
           {inet_dist_use_interface, {0,0,0,0}}
          ]},
 {sasl, [
         {errlog_type, error}
        ]},
 {lager, [
          %% Only write logs to stdout
          {handlers, [
                      {lager_console_backend, info}
                     ]},

          %% Whether to redirect error_logger messages into lager - defaults to true
          {error_logger_redirect, true}
         ]},
 {sqerl, [
          %% Database connection parameters
          {ip_mode, [ipv4]},
          {db_host, "postgres" },
          {db_port, 5432 },
          {db_user, "delivery" },
          {db_pass, "pokemon" },
          {db_name, "delivery" },
          {idle_check, 10000},
          {column_transforms, []},
          {prepared_statements, {sqerl_rec, statements,
            [[{app, delivery}, {app, github}, {app, scm}, {app, audit}, {app, notification}, {app, auth}, {app, jobs}]]}}
         ]},

 {pooler, [
           {pools, [[{name, sqerl },
                     {max_count,  100 },
                     {init_count, 20 },
                     {start_mfa, {sqerl_client, start_link, []}}]]}
          ]},

 {audit, [
          {max_events_in_memory, 10 }
 ]},
 {delivery, [
             {omnibus_version, "0.0.1"},
             {listen_ip, "0.0.0.0"},
             {listen_port, 9611},
             {hostname, "delivery"},

             {api_proto, "http"},

             {read_ttl_secs, 604800},
             {write_ttl_secs, 604800},

             %% These are not currently being used anywhere outside of helpers
             %% {deliv_git_ssh_authorized_keys_path, "/git/.ssh/authorized_keys"},
             %% {deliv_git_ssh_base_command, <<"<%= node['delivery']['user']['home'] %>/bin/delivery-git">>},

             %% where the repos are kept
             {deliv_git_repos_root, <<"/git/repos">>},

             {deliv_ssh_git_hostname, "delivery-git"},
             {deliv_ssh_git_host_address, "0.0.0.0"},
             {deliv_ssh_git_port, 8989},
             {deliv_ssh_git_server_keys_path, "/git/server_keys"},

             %% the path to our git repo template dir
             %% this must be an absolute path
             {deliv_git_repo_template, "/git/git_repo_template"},

             %% the path to our git working tree dir
             %% this must be an absolute path
             {deliv_git_working_tree_dir, <<"/git/working_tree">>},

             %% TODO: Instead of just reading this file these
             %% should be in the delivery attrs. For now I am
             %% just passing the generated file through.
             {deliv_chef_config, "/usr/src/app/config/erlang.cfg"},

             %% The deafult search to use when looking up build nodes. This is
             %% pre-pended and anded with whatever is set in .delivery/config.json
             {deliv_default_search, "(recipes:delivery_builder OR recipes:delivery_builder\\\\:\\\\:default "
                                    " OR recipes:delivery_build OR recipes:delivery_build\\\\:\\\\:default"
                                    " OR tags:delivery-build-node)"},

             %% deliv_push_jobs does polling on on-going jobs
             %% this is how long it should wait between two status updates (in ms)
             {push_jobs_status_interval, 5000},
             %% and this is how long it should wait to try and retry creating
             %% the job when no nodes were available (in ms, too)
             {push_jobs_retry_interval, 30000},
             %% Occationally pushy will provide a worker, but the worker will fail
             %% before the job has a chance to start.  This is how many times it should
             %% try restarting that job.
             {push_jobs_max_retries, 3},
             %% How long to wait for the push job to wait to find a worker and
             %% then complete (in seconds)
             {push_jobs_overall_timeout, 7200},
             %% Once the push job has found a worker, this is how long to wait
             %% for the push job to complete (in seconds)
             {push_jobs_run_timeout, 4500},
             %% How long to wait for a phase to confirm via job and logs that it is complete (in ms)
             {phase_job_confirmation_timeout, 300000},

             %% Configuration for notification settings
             {deliv_notify_config, []},

             %% LDAP config
             %% not setup
             {ldap,
                [{hosts, []},
                 {port, 3269},
                 {timeout, 5000},
                 {bind_dn, "OU=Employees,OU=Domain users,DC=examplecorp,DC=com"},
                 {bind_dn_password, "secret123"},
                 {encryption, start_tls},
                 {base_dn, "ldap_bind"},
                 {attr_login, "sAMAccountName"},
                 {attr_mail, "mail"},
                 {attr_full_name, "fullName"}
                 ]},

             % Path to OS trusted certificate store
             {trusted_certificates_file, "/etc/ssl/certs/ca-certificates.crt"},
             {ca_cert_chain_depth, 2},

             %% allow using deliv_http:req on some badssl hosts
             {no_ssl_verification, ["self-signed.badssl.com",
                                    "expired.badssl.com",
                                    "untrusted-root.badssl.com"]},

             % DR configuration
             {disaster_recovery_mode, standalone},
             {lsyncd_stat_path, "/lsyncd/supervise/stat"},
             {lsyncd_log_file_path, "/var/log/lsyncd/lsync-status.log"},

             % A2 configuration
             {a2_mode, false},

             % Enable Marketplace licensing
             %{marketplace_licensing, true},

             % Enable adoption mode
             %{adoption, true},

             %% setup proxy for outbound connections (such as github or bitbucket)
             {proxy_host, "squid"},
             {proxy_port, 3128},
             {proxy_user, ""},
             {proxy_password, ""},
             {no_proxy, ["localhost", "127.0.0.1"]},

             %% there are things that we only want running on dev boxes
             {is_dev_box, true},

             {deliv_fips_mode, false},
             {deliv_fips_stunnel_proxy_port, <<"36534">>}
          ]},

 {auth, [
         % oidc client(s)
         {oidc, [[{client_id, "587a8fc0b5fb5a846214"},
                  {client_secret, "dac40a235d6e1659b2e0221cd22cf609bca3964eb6a4a9fd79fe10ff4ce11ffd18f3a49a7f21016dbd7ef285753c1eca37d5"},
                  {client_redirect_uri, null}]
                 ]},
         {oidc_signing_key_file, "/etc/delivery/oidc_signing_key.pem"},
         {saml_entity_id, "https://saml.chef.io"}
        ]},
 {oauth2, [
           {backend, auth_oidc_backend} ]},

 {sync, [
         {non_descendants, allow} ]}
].
