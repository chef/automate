#!{{pkgPathFor "core/bash"}}/bin/bash

exec 2>&1

{{#if cfg.disable ~}}
exit 0
{{~else}}

# ElasticSearch >= 6 doesn't allow configuring index settings in the elasticsearch.yml
# so we need to configure these after ElasticSearch is up.

# The post-run hook is fired immediately after run and doesn't wait until
# elasticsearch is healthy. Therefore, we'll loop in the health-check until
# it's green (0) or yellow (1) before we try and make the request.

{{#if svc.me.cfg.http-host ~}}
HOST="{{svc.me.sys.ip}}"
{{else}}
HOST="127.0.0.1"
{{/if ~}}

source {{pkg.svc_config_path}}/health_check

# Ideally we could wait for this to be healthy in a loop forever but habitat
# doesn't currently kill hooks when a service is unloaded:
# https://github.com/habitat-sh/habitat/issues/7494
#
# Therefore, we'll ensure that this eventually times out and dies. If it's
# taking longer than 10 minutes to get to yellow or green we're in trouble.
if [[ $(wait_until_healthy 600) -ne 0 ]]; then
  echo "Timed out waiting for elasticsearch to become healthy, not applying index settings"
  exit 0 # always exit 0 in post-run or it'll retry
fi

echo "Configuring index settings"
curl \
  -s \
  -i \
  -H 'Content-Type: application/json'\
  -X PUT "http://${HOST}:{{cfg.network.port}}/_all/_settings?preserve_existing=true" \
  -d '{
    "index.number_of_replicas": "{{cfg.index.number_of_replicas}}",
    "index.refresh_interval": "{{cfg.index.refresh_interval}}"
  }'

# The health-check hook will return an error unless we signal to it though touching
# the sentinel.
touch ${POST_RUN_SENTINEL}

exit 0
{{~/if}}
