{
	"id": 0,
	"name": "chef-ui-library - v0.0.1",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 74,
			"name": "Status",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 78,
					"name": "loadFailure",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 20,
							"character": 13
						}
					]
				},
				{
					"id": 77,
					"name": "loadSuccess",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 19,
							"character": 13
						}
					]
				},
				{
					"id": 76,
					"name": "loading",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 18,
							"character": 9
						}
					]
				},
				{
					"id": 75,
					"name": "notLoaded",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 17,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						78,
						77,
						76,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.reducer.ts",
					"line": 16,
					"character": 18
				}
			]
		},
		{
			"id": 115,
			"name": "ChefAlert",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nDescription\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-alert type='success'>It's a success!</chef-alert>\n"
					},
					{
						"tag": "description",
						"text": "\nDescription\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-alert type='error'>Oh, no!</chef-alert>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-alert',\n  styleUrl: './chef-alert.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 116,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The alert type (either 'success' or 'error')"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-alert/chef-alert.tsx",
							"line": 24,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 119,
					"name": "alertIcon",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 120,
							"name": "alertIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 121,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "check_circle"
									},
									{
										"type": "stringLiteral",
										"value": "report_problem"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-alert/chef-alert.tsx",
							"line": 35,
							"character": 19
						}
					]
				},
				{
					"id": 117,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 118,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-alert/chef-alert.tsx",
							"line": 26,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						116
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						119,
						117
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-alert/chef-alert.tsx",
					"line": 20,
					"character": 22
				}
			]
		},
		{
			"id": 1580,
			"name": "ChefAside",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nBelongs within <chef-layout>: Defines content aside from the page content ex: sidebar\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-aside>Sidebar Markup Goes Here</chef-aside>\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-aside',\n  styleUrl: 'chef-aside.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1581,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1582,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-aside/chef-aside.tsx",
							"line": 17,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1581
					]
				}
			],
			"sources": [
				{
					"fileName": "src/templates/chef-aside/chef-aside.tsx",
					"line": 15,
					"character": 22
				}
			]
		},
		{
			"id": 122,
			"name": "ChefBadge",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\n`<chef-badge>` is used to Badges are generally used to provide context or emphasis on a\ncharacteristic of another object in the interface, e.g., the channel name for a Habitat\npackage. They are generally actionless. But when there are more descriptions needed to\nhelp explain the context, a hover state with tooltip can be added.\n\nSemantic colors can be applied to indicate: general, primary, critical, warning, and success.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-badge>general</chef-badge>\n<chef-badge primary>primary</chef-badge>\n<chef-badge critical>critical</chef-badge>\n<chef-badge warning>warning</chef-badge>\n<chef-badge success>success</chef-badge>\n\n<chef-separator></chef-separator>\n\n<chef-badge no-data>general</chef-badge>\n<chef-badge no-data primary>primary</chef-badge>\n<chef-badge no-data critical>critical</chef-badge>\n<chef-badge no-data warning>warning</chef-badge>\n<chef-badge no-data success>success</chef-badge>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-badge id=\"general-tooltip\" tooltip=\"Tooltip\">general</chef-badge>\n<chef-badge primary id=\"primary-tooltip\" tooltip=\"Tooltip\">primary</chef-badge>\n<chef-badge critical id=\"critical-tooltip\" tooltip=\"Tooltip\">critical</chef-badge>\n<chef-badge warning id=\"warning-tooltip\" tooltip=\"Tooltip\">warning</chef-badge>\n<chef-badge success id=\"success-tooltip\" tooltip=\"Tooltip\">success</chef-badge>\n\n<chef-separator></chef-separator>\n\n<chef-badge no-data id=\"general-2-tooltip\" tooltip=\"Tooltip\">general</chef-badge>\n<chef-badge no-data primary id=\"primary-2-tooltip\" tooltip=\"Tooltip\">primary</chef-badge>\n<chef-badge no-data critical id=\"critical-2-tooltip\" tooltip=\"Tooltip\">critical</chef-badge>\n<chef-badge no-data warning id=\"warning-2-tooltip\" tooltip=\"Tooltip\">warning</chef-badge>\n<chef-badge no-data success id=\"success-2-tooltip\" tooltip=\"Tooltip\">success</chef-badge>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-badge',\n  styleUrl: 'chef-badge.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 124,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The ID of the element to attach the tooltip"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-badge/chef-badge.tsx",
							"line": 56,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 123,
					"name": "noData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate badge has no data"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-badge/chef-badge.tsx",
							"line": 51,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 125,
					"name": "tooltip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text to be displayed within tooltips"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-badge/chef-badge.tsx",
							"line": 61,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 126,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 127,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-badge/chef-badge.tsx",
							"line": 63,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						124,
						123,
						125
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						126
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-badge/chef-badge.tsx",
					"line": 46,
					"character": 22
				}
			]
		},
		{
			"id": 1260,
			"name": "ChefBanner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nDisplays a header bar with the specified content and a button to take corrective action (if passed).\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-banner type=\"warn\">This is a warning without a button!</chef-banner>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-banner type=\"warn\" button-text=\"Click me\">\n   This is a warning with a button!&nbsp<a href=\"https://www.chef.io/contact-us/\" target=\"_blank\">Contact support for help</a>.\n</chef-banner>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-banner type=\"info\" button-text=\"Click me\">This is just info.</chef-banner>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-banner>This is also an info message.</chef-banner>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-banner',\n  styleUrl: 'chef-banner.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1263,
					"name": "buttonClicked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 37,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1262,
					"name": "buttonText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The text of the chef-button. If nothing is passed, there will not be a button."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 35,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1261,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The type of header to show. Can be one of 'warn' or 'info'."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 30,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"info\""
				},
				{
					"id": 1268,
					"name": "getIconString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1269,
							"name": "getIconString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": ""
									},
									{
										"type": "stringLiteral",
										"value": "warning"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 59,
							"character": 23
						}
					]
				},
				{
					"id": 1266,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1267,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 55,
							"character": 21
						}
					]
				},
				{
					"id": 1264,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1265,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-banner/chef-banner.tsx",
							"line": 39,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1263,
						1262,
						1261
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1268,
						1266,
						1264
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-banner/chef-banner.tsx",
					"line": 25,
					"character": 23
				}
			]
		},
		{
			"id": 128,
			"name": "ChefButton",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\n`<chef-button>` is used to display buttons. It has three style variants:\n\n- `primary`\n- `secondary`\n- `tertiary`\n\nAdding `caution` will modify these style variants to their cautious version.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  Primary\n</chef-button>\n<chef-button primary>\n  <chef-icon>alarm</chef-icon>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>Button Text</chef-button>\n<chef-button primary disabled>Button Text</chef-button>\n<chef-button primary caution>Button Text</chef-button>\n<chef-button primary caution disabled>Button Text</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>Button Text</chef-button>\n<chef-button secondary disabled>Button Text</chef-button>\n<chef-button secondary caution>Button Text</chef-button>\n<chef-button secondary caution disabled>Button Text</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>Button Text</chef-button>\n<chef-button tertiary disabled>Button Text</chef-button>\n<chef-button tertiary caution>Button Text</chef-button>\n<chef-button tertiary caution disabled>Button Text</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button primary disabled>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button primary caution>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n<chef-button primary caution disabled>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button secondary disabled>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button secondary caution>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n<chef-button secondary caution disabled>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button tertiary disabled>\n  <chef-icon>add</chef-icon>\n</chef-button>\n<chef-button tertiary caution>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n<chef-button tertiary caution disabled>\n  <chef-icon>remove</chef-icon>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary caution>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary caution disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary caution>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary caution disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary caution>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary caution disabled>\n  <chef-icon>close</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button primary disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button primary caution>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button primary caution disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button secondary disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button secondary caution>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button secondary caution disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button tertiary disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button tertiary caution>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n<chef-button tertiary caution disabled>\n  <span>Button Text</span>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button primary disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button primary caution>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button primary caution disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button secondary disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button secondary caution>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button secondary caution disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button tertiary disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button tertiary caution>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n<chef-button tertiary caution disabled>\n  <chef-icon>bookmark</chef-icon>\n  <span>Button Text</span>\n  <chef-icon>close</chef-icon>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button primary>\n  <chef-icon>save</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary caution>\n  <chef-icon>delete</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button primary caution disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>save</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary caution>\n  <chef-icon>delete</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button secondary caution disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button tertiary>\n  <chef-icon>save</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary caution>\n  <chef-icon>delete</chef-icon>\n  <span>Button Text</span>\n</chef-button>\n<chef-button tertiary caution disabled>\n  <chef-loading-spinner></chef-loading-spinner>\n  <span>Button Text</span>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button secondary disabled>\n  <chef-icon>chevron_left</chef-icon>\n</chef-button>\n<chef-button primary>1</chef-button>\n<chef-button secondary>2</chef-button>\n<chef-button secondary>3</chef-button>\n<chef-button secondary>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>chevron_left</chef-icon>\n</chef-button>\n<chef-button secondary>1</chef-button>\n<chef-button primary>2</chef-button>\n<chef-button secondary>3</chef-button>\n<chef-button secondary>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n\n<chef-separator></chef-separator>\n\n<chef-button secondary>\n  <chef-icon>chevron_left</chef-icon>\n</chef-button>\n<chef-button secondary>1</chef-button>\n<chef-button secondary>2</chef-button>\n<chef-button primary>3</chef-button>\n<chef-button secondary disabled>\n  <chef-icon>chevron_right</chef-icon>\n</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button type=\"reset\" tertiary>Cancel</chef-button>\n<chef-button type=\"button\" secondary>Save Draft</chef-button>\n<chef-button type=\"submit\" primary>Submit</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button url=\"/\" primary>Link!</chef-button>\n<chef-button url=\"/\" target=\"_blank\" secondary>Link in a new tab!</chef-button>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-button',\n  styleUrl: 'chef-button.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 134,
					"name": "caution",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate button as potentially dangerous"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 399,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 135,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate button as disabled"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 404,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 130,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Name for form to submit"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 379,
							"character": 37
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 131,
					"name": "primary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Create a primary button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 384,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 132,
					"name": "secondary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Create a secondary button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 389,
							"character": 42
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 137,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Target for links"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 414,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 133,
					"name": "tertiary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Create a tertiary button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 394,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 129,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The button type (either 'button', 'submit', or 'reset')"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 374,
							"character": 37
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "submit"
							},
							{
								"type": "stringLiteral",
								"value": "reset"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							}
						]
					},
					"defaultValue": "\"button\""
				},
				{
					"id": 136,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Url for links that look like buttons"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 409,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 138,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-button/chef-button.tsx",
							"line": 416,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						134,
						135,
						130,
						131,
						132,
						137,
						133,
						129,
						136
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						138
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-button/chef-button.tsx",
					"line": 369,
					"character": 23
				}
			]
		},
		{
			"id": 140,
			"name": "ChefCard",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nSimple atom to wrap content in chef styled \"card\". Provides a slot named 'label' to provide\na label for the card. Labels can be one or multiple elements and can be styled as necessary.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-card>\n  <span style='display:block; padding: 1em 0;' slot='label'>This is the card's label</span>\n  <p>Once upon a midnight dreary, while I pondered, weak and weary. Over many a\n     quaint and curious volume of forgotten lore. While I nodded, nearly napping,\n     suddenly there came a tapping. As of some one gently rapping, rapping at my\n     chamber door. 'Tis some visiter, I muttered, tapping at my chamber door. Only\n     this, and nothing more. Ah, distinctly I remember it was in the bleak December.\n     And each separate dying ember wrought its ghost upon the floor. Eagerly I wished\n     the morrow;—vainly I had sought to borrow. From my books surcease of\n     sorrow—sorrow for the lost Lenore. For the rare and radiant maiden whom the\n     angels name Lenore. Nameless here for evermore. And the silken sad uncertain\n     rustling of each purple curtain Thrilled me, filled me with fantastic terrors</p>\n</chef-card>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-card',\n  styleUrl: './chef-card.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 141,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 142,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-card/chef-card.tsx",
							"line": 29,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-card/chef-card.tsx",
					"line": 27,
					"character": 21
				}
			]
		},
		{
			"id": 143,
			"name": "ChefCheckbox",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\n`<chef-checkbox>` is used to display checkbox inputs. Clicking the checkbox,\nor pressing `space` while the checkbox is focused, will toggle the `checked`\nproperty. A `change` event emits when the `checked` property is toggled.\n"
					},
					{
						"tag": "example",
						"text": "\n<div class=\"form-field\">\n  <chef-checkbox>Label Text</chef-checkbox>\n</div>\n<div class=\"form-field\">\n  <chef-checkbox checked>Label Text</chef-checkbox>\n</div>\n<div class=\"form-field\">\n  <chef-checkbox disabled>Label Text</chef-checkbox>\n</div>\n<div class=\"form-field\">\n  <chef-checkbox indeterminate>Label Text</chef-checkbox>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-checkbox',\n  styleUrl: './chef-checkbox.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 147,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 37,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 144,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 31,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 146,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 35,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 145,
					"name": "indeterminate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 33,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 156,
					"name": "labelEl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 56,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 154,
					"name": "labelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 52,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 155,
					"name": "labelled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 54,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 159,
					"name": "componentDidRender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 160,
							"name": "componentDidRender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 62,
							"character": 20
						}
					]
				},
				{
					"id": 157,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 58,
							"character": 19
						}
					]
				},
				{
					"id": 148,
					"name": "handleKeydown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'keydown'"
							}
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "handleKeydown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 150,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 39,
							"character": 34
						}
					]
				},
				{
					"id": 151,
					"name": "handleToggle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "handleToggle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 153,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 45,
							"character": 31
						}
					]
				},
				{
					"id": 163,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 164,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 72,
							"character": 8
						}
					]
				},
				{
					"id": 161,
					"name": "toggle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 162,
							"name": "toggle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
							"line": 66,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						147,
						144,
						146,
						145,
						156,
						154,
						155
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						159,
						157,
						148,
						151,
						163,
						161
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
					"line": 29,
					"character": 25
				}
			]
		},
		{
			"id": 166,
			"name": "ChefClickOutside",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA wrapper element that fires an event when a user clicks outside of the wrapper. This can be used\nwithin modals/dialogs for closing the element when a user clicks outside of it, for example.\n\nThe 'omit' property allows you to prevent the 'clickOutside' event from being dispatched if a\nuser clicks on or within an element that contains the provided class name. This is useful if you\nwant to use `chef-click-outside` within a modal but you don't want the event to fire when the\nuser clicks on the button to open the modal.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-click-outside id=\"wrapper\" omit=\"omitted\">\n  <chef-markdown id=\"content\" text=\"# Click outside of me.\"></chef-markdown>\n</chef-click-outside>\n<chef-button class=\"omitted\" primary>An omitted click target</chef-button>\n<chef-button class=\"omitted\" primary>Another omitted click target</chef-button>\n\n<script>\n  const wrapper = document.getElementById('wrapper');\n  const content = document.getElementById('content');\n  wrapper.addEventListener('clickOutside', () => {\n    content.text = '# Thanks!';\n    setTimeout(() => content.text = '# Click outside of me.', 1000);\n  });\n</script>\n\n<style>\n  #wrapper { display: block; background: var(--chef-white); }\n  #content { padding: 1em; border: 1px solid; border-color: var(--chef-grey); }\n  .omitted { margin: 1em 1em 0 0; }\n</style>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-click-outside'\n}"
					}
				}
			],
			"children": [
				{
					"id": 168,
					"name": "clickOutside",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Expression to run when a user clicks outside of the element"
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
							"line": 45,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 167,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
							"line": 40,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 169,
					"name": "omit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Class name to omit. Any click event targets that are on or within an element that has this\nclass name will not dispatch a `clickOutside` event."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
							"line": 51,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 172,
					"name": "onDocumentClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'",
								"opts": "{ target: 'document' }"
							}
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "onDocumentClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 174,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
							"line": 59,
							"character": 58
						}
					]
				},
				{
					"id": 170,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 171,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
							"line": 53,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						168,
						167,
						169
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						172,
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-click-outside/chef-click-outside.tsx",
					"line": 38,
					"character": 29
				}
			]
		},
		{
			"id": 175,
			"name": "ChefClipboard",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-clipboard>` atom is used to copy content into the user's clipboard.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input id=\"input\" value=\"text to copy\"></chef-input>\n<chef-clipboard id=\"clipboard\" value=\"text to copy\"></chef-clipboard>\n<script>\n  const input = document.getElementById('input');\n  const clipboard = document.getElementById('clipboard');\n  input.addEventListener('input', e => clipboard.value = e.target.value);\n</script>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-table>\n  <chef-tr>\n    <chef-td>\n      <chef-clipboard value=\"Linux Baseline\"></chef-clipboard> Linux Baseline\n    </chef-td>\n    <chef-td>\n      <chef-clipboard value=\"owner/linux-baseline\"></chef-clipboard> owner/linux-baseline\n    </chef-td>\n    <chef-td>\n      <chef-clipboard value=\"Linux Baseline\" label=\"With Label and Icon\"></chef-clipboard>\n    </chef-td>\n    <chef-td>\n      <chef-clipboard value=\"owner/linux-baseline\" label=\"Without Icon\" icon=\"\"></chef-clipboard>\n    </chef-td>\n  </chef-tr>\n</chef-table>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-clipboard'\n}"
					}
				}
			],
			"children": [
				{
					"id": 177,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An optional icon that is displayed by default. To suppress the icon pass in the empty string."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 53,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"content_copy\""
				},
				{
					"id": 178,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An optional label that is empty by default. When present, it appears to the right of the icon (if the icon is present)."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 58,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 179,
					"name": "plain",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An optional attribute that creates a plain div instead of a chef-button as the carrier when set to true."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 63,
							"character": 38
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 180,
					"name": "tooltipText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 65,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": " preClickText"
				},
				{
					"id": 176,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The text to be copied to the clipboard."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 48,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 186,
					"name": "buttonProps",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 187,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 188,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189,
													"name": "tertiary",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
															"line": 97,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														189
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 190,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 191,
													"name": "primary",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
															"line": 99,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														191
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 95,
							"character": 17
						}
					]
				},
				{
					"id": 183,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 184,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 185,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 80,
							"character": 12
						}
					]
				},
				{
					"id": 181,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 67,
							"character": 30
						}
					]
				},
				{
					"id": 192,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 193,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
							"line": 103,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						177,
						178,
						179,
						180,
						176
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						186
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						183,
						181,
						192
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
					"line": 44,
					"character": 26
				}
			]
		},
		{
			"id": 1237,
			"name": "ChefColors",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nChef colors\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-colors',\n  styleUrl: 'chef-colors.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1238,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1239,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/design/chef-colors/chef-colors.tsx",
							"line": 14,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1238
					]
				}
			],
			"sources": [
				{
					"fileName": "src/design/chef-colors/chef-colors.tsx",
					"line": 12,
					"character": 23
				}
			]
		},
		{
			"id": 1270,
			"name": "ChefCombobox",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe combobox is used to layout combination chef-select and chef-input fields.\nThe combobox can support one or more chef-inputs. Additional elements are layed\nout via css grids.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-combobox>\n  <chef-select>\n    <chef-option>Select Something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n    <chef-option value='opt4'>Option 4</chef-option>\n  </chef-select>\n  <chef-input></chef-input>\n</chef-combobox>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-combobox>\n  <chef-select>\n    <chef-option>Select Something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n    <chef-option value='opt4'>Option 4</chef-option>\n  </chef-select>\n  <chef-input></chef-input>\n  <chef-input></chef-input>\n  <chef-input></chef-input>\n  <chef-input></chef-input>\n</chef-combobox>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-combobox>\n  <chef-select>\n    <chef-option>Select Something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n    <chef-option value='opt4'>Option 4</chef-option>\n  </chef-select>\n\n  <chef-input></chef-input>\n  <chef-button secondary caution><chef-icon>delete</chef-icon></chef-button>\n\n  <chef-input></chef-input>\n  <chef-button secondary caution><chef-icon>delete</chef-icon></chef-button>\n\n  <chef-input></chef-input>\n  <chef-button secondary caution><chef-icon>delete</chef-icon></chef-button>\n\n  <chef-input></chef-input>\n  <chef-button secondary caution><chef-icon>delete</chef-icon></chef-button>\n\n</chef-combobox>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-combobox',\n  styleUrl: './chef-combobox.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1272,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 68,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1271,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 66,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1273,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1274,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 70,
							"character": 18
						}
					]
				},
				{
					"id": 1275,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1276,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 74,
							"character": 20
						}
					]
				},
				{
					"id": 1277,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1278,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 78,
							"character": 8
						}
					]
				},
				{
					"id": 1279,
					"name": "wrapButtons",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1280,
							"name": "wrapButtons",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
							"line": 86,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1272,
						1271
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1273,
						1275,
						1277,
						1279
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-combobox/chef-combobox.tsx",
					"line": 64,
					"character": 25
				}
			]
		},
		{
			"id": 1194,
			"name": "ChefDataPoint",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nchef-data-point is used in conjunction with various charts to specify data points.\n"
					},
					{
						"tag": "example",
						"text": "\n<style>\n  chef-radial-chart .failed, chef-radial-chart .critical {\n    color: var(--chef-critical);\n  }\n chef-radial-chart .warning, chef-radial-chart .warning {\n    color: var(--chef-primary);\n  }\n  chef-radial-chart .success, chef-radial-chart .major {\n    color: var(--chef-ok);\n  }\n  chef-radial-chart .skipped, chef-radial-chart .minor {\n    color: var(--chef-unknown);\n  }\n</style>\n<chef-radial-chart style=\"width: 220px; height: 220px;\">\n  <span slot=\"innerText\">Text for the center of the chart</span>\n\n  <chef-data-point value=\"4\" class=\"failed\">4 Failed</chef-data-point>\n  <chef-data-point value=\"3\" class=\"warning\">3 Failed</chef-data-point>\n  <chef-data-point value=\"2\" class=\"success\">2 Successful</chef-data-point>\n  <chef-data-point value=\"1\" class=\"skipped\">1 Skipped</chef-data-point>\n\n  <chef-data-point value=\"4\" secondary class=\"critical\">Critical</chef-data-point>\n  <chef-data-point value=\"3\" secondary class=\"warning\">Warning</chef-data-point>\n  <chef-data-point value=\"2\" secondary class=\"major\">Major</chef-data-point>\n  <chef-data-point value=\"1\" secondary class=\"minor\">Minor</chef-data-point>\n</chef-radial-chart>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-data-point'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1196,
					"name": "secondary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Some charts support special secondary data points."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
							"line": 49,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1197,
					"name": "updated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
							"line": 51,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1195,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value assigned to the data point."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
							"line": 44,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1198,
					"name": "componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1199,
							"name": "componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
							"line": 53,
							"character": 21
						}
					]
				},
				{
					"id": 1200,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1201,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
							"line": 57,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1196,
						1197,
						1195
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1198,
						1200
					]
				}
			],
			"sources": [
				{
					"fileName": "src/charts/chef-data-point/chef-data-point.tsx",
					"line": 39,
					"character": 26
				}
			]
		},
		{
			"id": 1534,
			"name": "ChefDesignDocs",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-design-docs',\n  styleUrl: '../chef-ui-docs/chef-ui-docs.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1539,
					"name": "docIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 25,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1537,
					"name": "docType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 22,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1538,
					"name": "docs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "IndexedEntities",
						"id": 10,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DocEntity",
								"id": 57
							}
						]
					}
				},
				{
					"id": 1536,
					"name": "match",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 21,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1535,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ context: 'store' }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 20,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"name": "Store"
					}
				},
				{
					"id": 1540,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1541,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 27,
							"character": 19
						}
					]
				},
				{
					"id": 1544,
					"name": "nav",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1545,
							"name": "nav",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1546,
									"name": "docType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1547,
									"name": "docNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1548,
									"name": "docs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 69,
							"character": 13
						}
					]
				},
				{
					"id": 1542,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1543,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
							"line": 40,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1539,
						1537,
						1538,
						1536,
						1535
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1540,
						1544,
						1542
					]
				}
			],
			"sources": [
				{
					"fileName": "src/pages/chef-design-docs/chef-design-docs.tsx",
					"line": 18,
					"character": 27
				}
			]
		},
		{
			"id": 197,
			"name": "ChefDropdown",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nGeneric dropdown atom. This is a basic atom to be used for constructing\nthings like drop down menus and select boxes. This atom makes no assumptions\nabout how it's content is styled. It's up to the developer to style content\nappropriately.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button id='drop-toggle' primary>Click Me!</chef-button>\n<chef-dropdown id='drop'>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n  <p>Some content to go in my dropdown</p>\n</chef-dropdown>\n\n<script>\n  const toggle = document.getElementById('drop-toggle');\n  const dropdown = document.getElementById('drop');\n  toggle.addEventListener('click', e => dropdown.visible = !dropdown.visible);\n</script>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-dropdown',\n  styleUrl: './chef-dropdown.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 198,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-dropdown/chef-dropdown.tsx",
							"line": 36,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 199,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-dropdown/chef-dropdown.tsx",
							"line": 38,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						198
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						199
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-dropdown/chef-dropdown.tsx",
					"line": 34,
					"character": 25
				}
			]
		},
		{
			"id": 1243,
			"name": "ChefExample",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-example>` molecule is used to display syntax-highlighted example code alongside their\nrendered output.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-example code=\"<h1>Highlight me</h1>\"></chef-example>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-example',\n  styleUrl: 'chef-example.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1245,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The example code to be presented."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 22,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1244,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 17,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1246,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1247,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 24,
							"character": 18
						}
					]
				},
				{
					"id": 1248,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1249,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 28,
							"character": 20
						}
					]
				},
				{
					"id": 1252,
					"name": "execScripts",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1253,
							"name": "execScripts",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 39,
							"character": 21
						}
					]
				},
				{
					"id": 1250,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1251,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-example/chef-example.tsx",
							"line": 32,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1245,
						1244
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1246,
						1248,
						1252,
						1250
					]
				}
			],
			"sources": [
				{
					"fileName": "src/internal/chef-example/chef-example.tsx",
					"line": 15,
					"character": 24
				}
			]
		},
		{
			"id": 1281,
			"name": "ChefExpander",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-expander>` molecule is used to expand/collapse content.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-expander>\n  <h1>Some collapsed content</h1>\n</chef-expander>\n<chef-expander opened>\n  <h1>Some expanded content</h1>\n</chef-expander>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button secondary id='open-btn'>Open</chef-button>\n<chef-button secondary id='close-btn'>Close</chef-button>\n<chef-button secondary id='toggle-btn'>Toggle</chef-button>\n<chef-expander id='expander'>\n  <h1>Some content</h1>\n</chef-expander>\n\n<style>\n chef-button,\n chef-expander[opened] { margin: 1em; }\n</style>\n\n<script>\n  const openBtn = document.getElementById('open-btn');\n  const closeBtn = document.getElementById('close-btn');\n  const toggleBtn = document.getElementById('toggle-btn');\n  const expander = document.getElementById('expander');\n\n  openBtn.addEventListener('click', e => expander.open());\n  closeBtn.addEventListener('click', e => expander.close());\n  toggleBtn.addEventListener('click', e => expander.toggle());\n</script>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-expander',\n  styleUrl: 'chef-expander.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1282,
					"name": "opened",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicates that the expander is opened."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true, reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-expander/chef-expander.tsx",
							"line": 48,
							"character": 54
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1285,
					"name": "close",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1286,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-expander/chef-expander.tsx",
							"line": 56,
							"character": 13
						}
					]
				},
				{
					"id": 1283,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1284,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-expander/chef-expander.tsx",
							"line": 51,
							"character": 12
						}
					]
				},
				{
					"id": 1289,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1290,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-expander/chef-expander.tsx",
							"line": 65,
							"character": 8
						}
					]
				},
				{
					"id": 1287,
					"name": "toggle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1288,
							"name": "toggle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-expander/chef-expander.tsx",
							"line": 61,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1282
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1285,
						1283,
						1289,
						1287
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-expander/chef-expander.tsx",
					"line": 43,
					"character": 25
				}
			]
		},
		{
			"id": 1583,
			"name": "ChefHeader",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nBelongs within <chef-layout>: Specifies the  header for the application, that contains the main navigation.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-header>Main Navigation Goes HERE</chef-header>\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-header',\n  styleUrl: 'chef-header.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1584,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1585,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-header/chef-header.tsx",
							"line": 17,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1584
					]
				}
			],
			"sources": [
				{
					"fileName": "src/templates/chef-header/chef-header.tsx",
					"line": 15,
					"character": 23
				}
			]
		},
		{
			"id": 1254,
			"name": "ChefHeaderNav",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-header-nav',\n  styleUrl: 'chef-header-nav.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1255,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1256,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-header-nav/chef-header-nav.tsx",
							"line": 9,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1255
					]
				}
			],
			"sources": [
				{
					"fileName": "src/internal/chef-header-nav/chef-header-nav.tsx",
					"line": 7,
					"character": 26
				}
			]
		},
		{
			"id": 201,
			"name": "ChefHeading",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nChild component for chef-page-header that displays the heading. Only text and inline\nelements should be nested in this component.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page-header>\n  <chef-heading>Some Heading Text</chef-heading>\n  <chef-subheading>Some subheading text that goes below the heading.</chef-subheading>\n</chef-page-header>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-heading',\n  styleUrl: './chef-heading.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 202,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-heading/chef-heading.tsx",
							"line": 20,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						202
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-heading/chef-heading.tsx",
					"line": 19,
					"character": 24
				}
			]
		},
		{
			"id": 204,
			"name": "ChefIcon",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nDisplay a material icon.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-icon style='font-size: 5em'>accessibility</chef-icon>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-icon style='font-size: 5em; color: red;'>alarm</chef-icon>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-icon',\n  styleUrl: 'chef-icon.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 205,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 206,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-icon/chef-icon.tsx",
							"line": 19,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						205
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-icon/chef-icon.tsx",
					"line": 17,
					"character": 21
				}
			]
		},
		{
			"id": 207,
			"name": "ChefInput",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nAn atom for defining inputs with chef specific styling. The input type\nis supplied via the type prop and in most cases just passed down to the\ninternal input. So any type valid on a standard input should be valid\nfor chef-input. There are also some additional custom types that can\nprovide some added functionality. Currently the only additional type\nprovided is `key-value`. The key/value can be provided via the value\nattribute as a ':' delimited string, 'key:value'.\n\nThe underlying <input> element has autocomplete set to \"off\".\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input placeholder='Enter value...'></chef-input>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input disabled placeholder='Cannot change value'></chef-input>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input value='foobar' placeholder='Enter value...'></chef-input>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input type='key-value' placeholder='Enter value...'></chef-input>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input placeholder='Enter value...' autocomplete=\"on\"></chef-input>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input type='key-value' value='foobar:bizbang' placeholder='Enter value...'></chef-input>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-input',\n  styleUrl: './chef-input.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 212,
					"name": "autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Enable or disable autocomplete for input (defaults to \"off\")."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 62,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"off\""
				},
				{
					"id": 211,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate input as disabled"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 57,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 213,
					"name": "focused",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 64,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 210,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The placeholder text for the input."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 52,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 209,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The type of input to use"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 47,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"text\""
				},
				{
					"id": 208,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value contained within the input."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 42,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 226,
					"name": "handleChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 227,
							"name": "handleChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 228,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 113,
							"character": 14
						}
					]
				},
				{
					"id": 214,
					"name": "handleFocusin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'focusin'"
							}
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "handleFocusin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 66,
							"character": 34
						}
					]
				},
				{
					"id": 216,
					"name": "handleFocusout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'focusout'"
							}
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "handleFocusout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 70,
							"character": 36
						}
					]
				},
				{
					"id": 218,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 219,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 74,
							"character": 8
						}
					]
				},
				{
					"id": 220,
					"name": "renderContent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 221,
							"name": "renderContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 82,
							"character": 15
						}
					]
				},
				{
					"id": 224,
					"name": "renderDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 225,
							"name": "renderDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 101,
							"character": 15
						}
					]
				},
				{
					"id": 222,
					"name": "renderKeyValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 223,
							"name": "renderKeyValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input/chef-input.tsx",
							"line": 91,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						212,
						211,
						213,
						210,
						209,
						208
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						226,
						214,
						216,
						218,
						220,
						224,
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-input/chef-input.tsx",
					"line": 37,
					"character": 22
				}
			]
		},
		{
			"id": 229,
			"name": "ChefInputKeyValue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\n`chef-input-key-value` is the internal molecule used to implement the key-value\ntype for `chef-input`. For this reason it really shouldn't be used on its own.\nUse `<chef-input type='key-value'></chef-input>` instead. See [chef-input](./chef-input)\nfor more info.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-input type='key-value' value='foobar:bizbang'></chef-input>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-input-key-value',\n  styleUrl: './chef-input-key-value.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 234,
					"name": "changeEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 33,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "Event"
					},
					"defaultValue": " new Event('change', { bubbles: true })"
				},
				{
					"id": 233,
					"name": "editing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 31,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "key"
							},
							{
								"type": "stringLiteral",
								"value": "value"
							}
						]
					},
					"defaultValue": "\"key\""
				},
				{
					"id": 232,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 29,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 231,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The placeholder text for the input."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 27,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 230,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value contained within the input."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 22,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 235,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 236,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 35,
							"character": 18
						}
					]
				},
				{
					"id": 243,
					"name": "handleChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 244,
							"name": "handleChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 245,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 73,
							"character": 14
						}
					]
				},
				{
					"id": 239,
					"name": "handleUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 240,
							"name": "handleUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 241,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 242,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 53,
							"character": 14
						}
					]
				},
				{
					"id": 237,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
							"line": 39,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						234,
						233,
						232,
						231,
						230
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						235,
						243,
						239,
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-input-key-value/chef-input-key-value.tsx",
					"line": 17,
					"character": 30
				}
			]
		},
		{
			"id": 1586,
			"name": "ChefLayout",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nLayout container for <chef-header>, <chef-aside> and <chef-main>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-layout>\n   <chef-header style=\"border:1px dotted black;\">HEADER</chef-header>\n   <chef-aside style=\"border:1px dotted black;\">ASIDE</chef-aside>\n   <chef-main style=\"border:1px dotted black;\">MAIN</chef-main>\n</chef-layout>\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-layout',\n  styleUrl: 'chef-layout.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1587,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1588,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-layout/chef-layout.tsx",
							"line": 21,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1587
					]
				}
			],
			"sources": [
				{
					"fileName": "src/templates/chef-layout/chef-layout.tsx",
					"line": 19,
					"character": 23
				}
			]
		},
		{
			"id": 106,
			"name": "ChefLibraryApp",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-library-app'\n}"
					}
				}
			],
			"children": [
				{
					"id": 108,
					"name": "getDocs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/app.tsx",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "getDocs",
						"id": 7
					}
				},
				{
					"id": 107,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ context: 'store' }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/app.tsx",
							"line": 18,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 111,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 112,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/app.tsx",
							"line": 29,
							"character": 18
						}
					]
				},
				{
					"id": 109,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 110,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/app.tsx",
							"line": 22,
							"character": 19
						}
					]
				},
				{
					"id": 113,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 114,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/app.tsx",
							"line": 33,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						108,
						107
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						111,
						109,
						113
					]
				}
			],
			"sources": [
				{
					"fileName": "src/app.tsx",
					"line": 16,
					"character": 27
				}
			]
		},
		{
			"id": 246,
			"name": "ChefLoadingSpinner",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\n A simple loading spinner for all your loading UI needs.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-loading-spinner size='300'></chef-loading-spinner>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-loading-spinner',\n  styleUrl: './chef-loading-spinner.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 248,
					"name": "fixed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fixed styling (default is false and displays inline)"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-loading-spinner/chef-loading-spinner.tsx",
							"line": 24,
							"character": 38
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 247,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Width/height of the spinner"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-loading-spinner/chef-loading-spinner.tsx",
							"line": 19,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"16\""
				},
				{
					"id": 249,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 250,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-loading-spinner/chef-loading-spinner.tsx",
							"line": 26,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						248,
						247
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						249
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-loading-spinner/chef-loading-spinner.tsx",
					"line": 14,
					"character": 31
				}
			]
		},
		{
			"id": 251,
			"name": "ChefLogo",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-logo',\n  styleUrl: 'chef-logo.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 252,
					"name": "company",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-logo/chef-logo.tsx",
							"line": 8,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Unknown\""
				},
				{
					"id": 253,
					"name": "companyData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/atoms/chef-logo/chef-logo.tsx",
							"line": 10,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": " new Map([\n    [ 'Chef Software', 'chef-software.svg' ],\n    [ 'Slack', 'slack.svg' ],\n    [ 'Unknown', 'Unknown.svg' ],\n  ])"
				},
				{
					"id": 258,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-logo/chef-logo.tsx",
							"line": 22,
							"character": 8
						}
					]
				},
				{
					"id": 254,
					"name": "validateCompany",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Watch",
							"type": {
								"type": "reference",
								"name": "Watch"
							},
							"arguments": {
								"propName": "'company'"
							}
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "validateCompany",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 256,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 257,
									"name": "_oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-logo/chef-logo.tsx",
							"line": 17,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						252,
						253
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						258,
						254
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-logo/chef-logo.tsx",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 1589,
			"name": "ChefMain",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nBelongs within <chef-layout>: Specifies the main content of a document\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-main> Main Part of Page goes here </chef-main>\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-main',\n  styleUrl: 'chef-main.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1590,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1591,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-main/chef-main.tsx",
							"line": 17,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1590
					]
				}
			],
			"sources": [
				{
					"fileName": "src/templates/chef-main/chef-main.tsx",
					"line": 15,
					"character": 21
				}
			]
		},
		{
			"id": 260,
			"name": "ChefMarkdown",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-markdown>` atom is used to parse and display markdown text.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-markdown text=\"# Heading with a [link](#to-nothing)\"></chef-markdown>\n"
					},
					{
						"tag": "example",
						"text": "\n<textarea id='md-editor' placeholder='Type some markdown...'></textarea>\n<chef-markdown id='md-display'></chef-markdown>\n\n<style>\n #md-editor { width: 100%; min-height: 10em; }\n</style>\n\n<script>\n  const editor = document.getElementById('md-editor');\n  const display = document.getElementById('md-display');\n  editor.addEventListener('input', e => display.text = e.target.value);\n</script>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-markdown',\n  styleUrl: 'chef-markdown.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 261,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The markdown text to be parsed."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-markdown/chef-markdown.tsx",
							"line": 43,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 264,
					"name": "parse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 265,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 266,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-markdown/chef-markdown.tsx",
							"line": 52,
							"character": 15
						}
					]
				},
				{
					"id": 262,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 263,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-markdown/chef-markdown.tsx",
							"line": 45,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						261
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						264,
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-markdown/chef-markdown.tsx",
					"line": 39,
					"character": 25
				}
			]
		},
		{
			"id": 1291,
			"name": "ChefModal",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nDisplays a modal that may be closed if it is unlocked. It cannot be closed if\n`locked` is set to true.\n\nAn unlocked modal can be closed by clicking the exit button in the top right\ncorner, by clicking outside the modal, or by pressing `<escape>`.\nThe `visible` property is set to `false` by default.\n\nWhen you want to trigger the modal to display, set the `visible` property\nto `true`. It works best if you bind a variable on the parent Angular component\nto the modal's `visible` property.\n\n```html\n<chef-modal [visible]=\"modalVisibleVar\">\n```\n\nThe parent component should also include `openModal` and `closeModal` handler functions.\n\nThe modal always appears centered on the screen. The height automatically\nadjusts to fit its content. The width defaults to 700 pixels but can be adjusted\nby setting the following rule in the Angular parent component's css:\n\n```css\nchef-modal {\n   --modal-width: 500px;\n}\n```\n\nFor accessibility purposes, the element containing the rendered title of the modal\n(typically an `h2` or `h3`) must be given a unique ID, and that same ID\nshould be used for the modal's `label` property, as shown.\nThat `label` value is also set as the modal's `aria-labelledby` attribute.\n\n```html\n<chef-modal label=\"unique-id\">\n   <h2 id=\"unique-id\"> TITLE OF MODAL </h2>\n```\n\nUsing custom autofocus\nBy default, autofocus will apply to the modal itself on locked modals\nand to the close button on unlocked modals.  We can customize where\nthe autofocus goes first, by adding the attribute \"firstFocus\" to the\ndesired element.  Currently this works with all standard HTML input elements as\nwell as our custom chef-button element.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-modal locked=\"false\" label=\"unique-id\">\n<span id=\"unique-id\" slot=\"title\"> Hey! </span>\n<p>\n  Since the modal is strictly a display component, it can only be opened or\n  closed via external events.\n</p>\n<p>\n  To turn on this modal, go to the `Elements` pane of `Dev Tools` and select\n  the `chef-modal` element.\n</p>\n<p> Switch to the `Console` pane and type `$0.visible = true`. </p>\n<p> Type `$0.visible = false` to turn off the modal again.</p>\n</chef-modal>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-modal label=\"with-custom-focus\" label=\"example-id\">\n   <h2 slot=\"title\" id=\"example-id\"> Using custom autofocus </h2>\n   <label>this input will be focused upon opening</label>\n   <input type=\"text\" firstFocus/>\n</chef-modal>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-modal',\n  styleUrl: 'chef-modal.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1295,
					"name": "closeModal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Emitted when the modal closes."
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 108,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1296,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The html element of the modal."
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 113,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1294,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The modal's title.\nThe modal's `aria-labelledby` attribute is set to this value.\nThis should be a unique id, and should match the `id` attribute of the contained element\n(e.g. `h2`) that actually displays the title of the modal."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 103,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1292,
					"name": "locked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Prevents the modal from being closed when true."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 91,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1297,
					"name": "prevFocusedElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The last element to be focused before the modal opened."
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 118,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1293,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Displays or hides the modal."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 95,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1308,
					"name": "getFocusElement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1309,
							"name": "getFocusElement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1310,
									"name": "lockStatus",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 191,
							"character": 25
						}
					]
				},
				{
					"id": 1311,
					"name": "handleClose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1312,
							"name": "handleClose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 207,
							"character": 21
						}
					]
				},
				{
					"id": 1298,
					"name": "handleEscape",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'keydown'",
								"opts": "{ target: 'body' }"
							}
						}
					],
					"signatures": [
						{
							"id": 1299,
							"name": "handleEscape",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1300,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 121,
							"character": 53
						}
					]
				},
				{
					"id": 1304,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1305,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 143,
							"character": 8
						}
					]
				},
				{
					"id": 1306,
					"name": "renderButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1307,
							"name": "renderButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 174,
							"character": 22
						}
					]
				},
				{
					"id": 1301,
					"name": "setFocus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Watch",
							"type": {
								"type": "reference",
								"name": "Watch"
							},
							"arguments": {
								"propName": "'visible'"
							}
						}
					],
					"signatures": [
						{
							"id": 1302,
							"name": "setFocus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1303,
									"name": "visible",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-modal/chef-modal.tsx",
							"line": 128,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1295,
						1296,
						1294,
						1292,
						1297,
						1293
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1308,
						1311,
						1298,
						1304,
						1306,
						1301
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-modal/chef-modal.tsx",
					"line": 86,
					"character": 22
				}
			]
		},
		{
			"id": 268,
			"name": "ChefOption",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-option>` atom is used to specify options for the [`<chef-select>`](/molecules/chef-select),\n[`<chef-toggle>`](/molecules/chef-toggle), [`<chef-radio>`](/molecules/chef-radio), and\n[`<chef-phat-radio>`](/molecules/chef-phat-radio) molecules.\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2' selected>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select value='opt3'>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1' icon='assignment_ind'>Option 1</chef-option>\n    <chef-option value='opt2' icon='chrome_reader_mode'>Option 2</chef-option>\n    <chef-option value='opt3' icon='business_center'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle value='opt2'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle>\n  <chef-option value='opt1'><chef-icon>thumb_up</chef-icon></chef-option>\n  <chef-option value='opt2'><chef-icon>thumb_down</chef-icon></chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<script>\n  const toggle = document.querySelector('#ex1toggle');\n  toggle.addEventListener('toggle', (event) => alert(event.target.value));\n</script>\n\n<chef-toggle id='ex1toggle'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-radio>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-radio>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-phat-radio>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-phat-radio>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-option'\n}"
					}
				}
			],
			"signatures": [
				{
					"id": 270,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {},
					"parameters": [
						{
							"id": 271,
							"name": "getId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 272,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {},
					"parameters": [
						{
							"id": 273,
							"name": "getContents",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 274,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {},
					"parameters": [
						{
							"id": 275,
							"name": "getValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"children": [
				{
					"id": 1096,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1097,
							"name": "new ChefOption",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ChefOption",
								"id": 268
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 117,
							"character": 20
						}
					]
				},
				{
					"id": 563,
					"name": "ATTRIBUTE_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11046,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.ATTRIBUTE_NODE"
					}
				},
				{
					"id": 564,
					"name": "CDATA_SECTION_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a CDATASection node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11050,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.CDATA_SECTION_NODE"
					}
				},
				{
					"id": 565,
					"name": "COMMENT_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a Comment node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11054,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.COMMENT_NODE"
					}
				},
				{
					"id": 566,
					"name": "DOCUMENT_FRAGMENT_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a DocumentFragment node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11058,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_FRAGMENT_NODE"
					}
				},
				{
					"id": 567,
					"name": "DOCUMENT_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a document."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11062,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_NODE"
					}
				},
				{
					"id": 568,
					"name": "DOCUMENT_POSITION_CONTAINED_BY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set when other is a descendant of node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11066,
							"character": 43
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_CONTAINED_BY"
					}
				},
				{
					"id": 569,
					"name": "DOCUMENT_POSITION_CONTAINS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set when other is an ancestor of node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11070,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_CONTAINS"
					}
				},
				{
					"id": 570,
					"name": "DOCUMENT_POSITION_DISCONNECTED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set when node and other are not in the same tree."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11074,
							"character": 43
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_DISCONNECTED"
					}
				},
				{
					"id": 571,
					"name": "DOCUMENT_POSITION_FOLLOWING",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set when other is following node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11078,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_FOLLOWING"
					}
				},
				{
					"id": 572,
					"name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11079,
							"character": 54
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
					}
				},
				{
					"id": 573,
					"name": "DOCUMENT_POSITION_PRECEDING",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set when other is preceding node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11083,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_POSITION_PRECEDING"
					}
				},
				{
					"id": 574,
					"name": "DOCUMENT_TYPE_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a doctype."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11087,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.DOCUMENT_TYPE_NODE"
					}
				},
				{
					"id": 575,
					"name": "ELEMENT_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is an element."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11091,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.ELEMENT_NODE"
					}
				},
				{
					"id": 576,
					"name": "ENTITY_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11092,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.ENTITY_NODE"
					}
				},
				{
					"id": 577,
					"name": "ENTITY_REFERENCE_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11093,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.ENTITY_REFERENCE_NODE"
					}
				},
				{
					"id": 1087,
					"name": "HTMLElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6717,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1088,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1090,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1091,
											"name": "new __type",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6718,
											"character": 27
										}
									]
								},
								{
									"id": 1089,
									"name": "prototype",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6718,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1090
									]
								},
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1089
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
									"line": 6717,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 578,
					"name": "NOTATION_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11094,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.NOTATION_NODE"
					}
				},
				{
					"id": 579,
					"name": "PROCESSING_INSTRUCTION_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a ProcessingInstruction node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11098,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.PROCESSING_INSTRUCTION_NODE"
					}
				},
				{
					"id": 580,
					"name": "TEXT_NODE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "node is a Text node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11102,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.TEXT_NODE"
					}
				},
				{
					"id": 276,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6694,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.accessKey"
					}
				},
				{
					"id": 277,
					"name": "accessKeyLabel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6695,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.accessKeyLabel"
					}
				},
				{
					"id": 322,
					"name": "assignedSlot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5199,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "HTMLSlotElement"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Slotable.assignedSlot"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.assignedSlot"
					}
				},
				{
					"id": 323,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5200,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "NamedNodeMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.attributes"
					}
				},
				{
					"id": 278,
					"name": "autocapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6696,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.autocapitalize"
					}
				},
				{
					"id": 500,
					"name": "baseURI",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns node's node document's document base URL."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10961,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.baseURI"
					}
				},
				{
					"id": 604,
					"name": "childElementCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11505,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.childElementCount"
					}
				},
				{
					"id": 501,
					"name": "childNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the children."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10965,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "NodeListOf",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ChildNode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.childNodes"
					}
				},
				{
					"id": 605,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the child elements."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11509,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLCollection"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.children"
					}
				},
				{
					"id": 324,
					"name": "classList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5204,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "DOMTokenList"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.classList"
					}
				},
				{
					"id": 325,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the value of element's class content attribute. Can be set to change it."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5208,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.className"
					}
				},
				{
					"id": 326,
					"name": "clientHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5209,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.clientHeight"
					}
				},
				{
					"id": 327,
					"name": "clientLeft",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5210,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.clientLeft"
					}
				},
				{
					"id": 328,
					"name": "clientTop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5211,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.clientTop"
					}
				},
				{
					"id": 329,
					"name": "clientWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5212,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.clientWidth"
					}
				},
				{
					"id": 650,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5363,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ElementContentEditable.contentEditable"
					}
				},
				{
					"id": 1079,
					"name": "dataset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 8166,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "DOMStringMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLOrSVGElement.dataset"
					}
				},
				{
					"id": 279,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6697,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.dir"
					}
				},
				{
					"id": 280,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6698,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.draggable"
					}
				},
				{
					"id": 1094,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 115,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 502,
					"name": "firstChild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the first child."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10969,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChildNode"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.firstChild"
					}
				},
				{
					"id": 606,
					"name": "firstElementChild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the first child that is an element, and null otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11513,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Element"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.firstElementChild"
					}
				},
				{
					"id": 281,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6699,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.hidden"
					}
				},
				{
					"id": 330,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the value of element's id content attribute. Can be set to change it."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5216,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.id"
					}
				},
				{
					"id": 601,
					"name": "innerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 9789,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "InnerHTML.innerHTML"
					}
				},
				{
					"id": 282,
					"name": "innerText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6700,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.innerText"
					}
				},
				{
					"id": 651,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5364,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ElementContentEditable.inputMode"
					}
				},
				{
					"id": 503,
					"name": "isConnected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns true if node is connected and false otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10973,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.isConnected"
					}
				},
				{
					"id": 652,
					"name": "isContentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5365,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ElementContentEditable.isContentEditable"
					}
				},
				{
					"id": 283,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.lang"
					}
				},
				{
					"id": 504,
					"name": "lastChild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the last child."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10977,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChildNode"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.lastChild"
					}
				},
				{
					"id": 607,
					"name": "lastElementChild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the last child that is an element, and null otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11517,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Element"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.lastElementChild"
					}
				},
				{
					"id": 331,
					"name": "localName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the local name."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5220,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.localName"
					}
				},
				{
					"id": 332,
					"name": "namespaceURI",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the namespace."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5224,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "Node.namespaceURI"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.namespaceURI"
					}
				},
				{
					"id": 602,
					"name": "nextElementSibling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the first following sibling that is an element, and null otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11248,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Element"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NonDocumentTypeChildNode.nextElementSibling"
					}
				},
				{
					"id": 505,
					"name": "nextSibling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the next sibling."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10983,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChildNode"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.nextSibling"
					}
				},
				{
					"id": 506,
					"name": "nodeName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns a string appropriate for the type of node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10987,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.nodeName"
					}
				},
				{
					"id": 507,
					"name": "nodeType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the type of node."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10991,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.nodeType"
					}
				},
				{
					"id": 508,
					"name": "nodeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10992,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.nodeValue"
					}
				},
				{
					"id": 1080,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 8167,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLOrSVGElement.nonce"
					}
				},
				{
					"id": 284,
					"name": "offsetHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6702,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.offsetHeight"
					}
				},
				{
					"id": 285,
					"name": "offsetLeft",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6703,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.offsetLeft"
					}
				},
				{
					"id": 286,
					"name": "offsetParent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6704,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Element"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.offsetParent"
					}
				},
				{
					"id": 287,
					"name": "offsetTop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6705,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.offsetTop"
					}
				},
				{
					"id": 288,
					"name": "offsetWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6706,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.offsetWidth"
					}
				},
				{
					"id": 653,
					"name": "onabort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user aborts the download.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5876,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 654,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 655,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 656,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 657,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "UIEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5876,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onabort"
					}
				},
				{
					"id": 658,
					"name": "onanimationcancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5877,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 659,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 660,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 661,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 662,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "AnimationEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5877,
											"character": 22
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onanimationcancel"
					}
				},
				{
					"id": 663,
					"name": "onanimationend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5878,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 664,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 665,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 666,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 667,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "AnimationEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5878,
											"character": 19
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onanimationend"
					}
				},
				{
					"id": 668,
					"name": "onanimationiteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5879,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 669,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 670,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 671,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 672,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "AnimationEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5879,
											"character": 25
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onanimationiteration"
					}
				},
				{
					"id": 673,
					"name": "onanimationstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5880,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 674,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 675,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 676,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 677,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "AnimationEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5880,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onanimationstart"
					}
				},
				{
					"id": 678,
					"name": "onauxclick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5881,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 679,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 680,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 681,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 682,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5881,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onauxclick"
					}
				},
				{
					"id": 683,
					"name": "onblur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the object loses the input focus.",
						"tags": [
							{
								"tag": "param",
								"text": "The focus event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5886,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 684,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 685,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 686,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 687,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FocusEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5886,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onblur"
					}
				},
				{
					"id": 688,
					"name": "oncancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5887,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 689,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 690,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 691,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 692,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5887,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oncancel"
					}
				},
				{
					"id": 693,
					"name": "oncanplay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when playback is possible, but would require further buffering.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5892,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 694,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 695,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 696,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 697,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5892,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oncanplay"
					}
				},
				{
					"id": 698,
					"name": "oncanplaythrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5893,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 699,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 700,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 701,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 702,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5893,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oncanplaythrough"
					}
				},
				{
					"id": 703,
					"name": "onchange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the contents of the object or selection have changed.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5898,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 705,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 706,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 707,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5898,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onchange"
					}
				},
				{
					"id": 708,
					"name": "onclick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user clicks the left mouse button on the object",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5903,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 709,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 710,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 711,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 712,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5903,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onclick"
					}
				},
				{
					"id": 713,
					"name": "onclose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5904,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 714,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 715,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 716,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 717,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5904,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onclose"
					}
				},
				{
					"id": 718,
					"name": "oncontextmenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5909,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 719,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 720,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 721,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 722,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5909,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oncontextmenu"
					}
				},
				{
					"id": 634,
					"name": "oncopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 4999,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 635,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 636,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 637,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DocumentAndElementEventHandlers"
													}
												},
												{
													"id": 638,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ClipboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 4999,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DocumentAndElementEventHandlers.oncopy"
					}
				},
				{
					"id": 723,
					"name": "oncuechange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5910,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 724,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 725,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 726,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 727,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5910,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oncuechange"
					}
				},
				{
					"id": 639,
					"name": "oncut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5000,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 640,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 641,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 642,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DocumentAndElementEventHandlers"
													}
												},
												{
													"id": 643,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ClipboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5000,
											"character": 10
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DocumentAndElementEventHandlers.oncut"
					}
				},
				{
					"id": 728,
					"name": "ondblclick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user double-clicks the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5915,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 729,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 730,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 731,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 732,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5915,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondblclick"
					}
				},
				{
					"id": 733,
					"name": "ondrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the source object continuously during a drag operation.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5920,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 734,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 735,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 736,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 737,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5920,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondrag"
					}
				},
				{
					"id": 738,
					"name": "ondragend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5925,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 739,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 740,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 741,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 742,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5925,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragend"
					}
				},
				{
					"id": 743,
					"name": "ondragenter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the target element when the user drags the object to a valid drop target.",
						"tags": [
							{
								"tag": "param",
								"text": "The drag event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5930,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 744,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 745,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 746,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 747,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5930,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragenter"
					}
				},
				{
					"id": 748,
					"name": "ondragexit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5931,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 749,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 750,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 751,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 752,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5931,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragexit"
					}
				},
				{
					"id": 753,
					"name": "ondragleave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
						"tags": [
							{
								"tag": "param",
								"text": "The drag event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5936,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 754,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 755,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 756,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 757,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5936,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragleave"
					}
				},
				{
					"id": 758,
					"name": "ondragover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the target element continuously while the user drags the object over a valid drop target.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5941,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 759,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 760,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 761,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 762,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5941,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragover"
					}
				},
				{
					"id": 763,
					"name": "ondragstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires on the source object when the user starts to drag a text selection or selected object.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5946,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 764,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 765,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 766,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 767,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5946,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondragstart"
					}
				},
				{
					"id": 768,
					"name": "ondrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5947,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 769,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 770,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 771,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 772,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DragEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5947,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondrop"
					}
				},
				{
					"id": 773,
					"name": "ondurationchange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the duration attribute is updated.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5952,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 774,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 775,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 776,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 777,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5952,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ondurationchange"
					}
				},
				{
					"id": 778,
					"name": "onemptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the media element is reset to its initial state.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5957,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 779,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 780,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 781,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 782,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5957,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onemptied"
					}
				},
				{
					"id": 783,
					"name": "onended",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the end of playback is reached.",
						"tags": [
							{
								"tag": "param",
								"text": "The event\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5962,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 784,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 785,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 786,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 787,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5962,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onended"
					}
				},
				{
					"id": 788,
					"name": "onerror",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when an error occurs during object loading.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5967,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "OnErrorEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onerror"
					}
				},
				{
					"id": 789,
					"name": "onfocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the object receives focus.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5972,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 790,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 791,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 792,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 793,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "FocusEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5972,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onfocus"
					}
				},
				{
					"id": 333,
					"name": "onfullscreenchange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5225,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 334,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 335,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 336,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Element"
													}
												},
												{
													"id": 337,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5225,
											"character": 23
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.onfullscreenchange"
					}
				},
				{
					"id": 338,
					"name": "onfullscreenerror",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5226,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 339,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 340,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 341,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Element"
													}
												},
												{
													"id": 342,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5226,
											"character": 22
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.onfullscreenerror"
					}
				},
				{
					"id": 794,
					"name": "ongotpointercapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5973,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 795,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 796,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 797,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 798,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5973,
											"character": 24
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ongotpointercapture"
					}
				},
				{
					"id": 799,
					"name": "oninput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5974,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 800,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 801,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 802,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 803,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5974,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oninput"
					}
				},
				{
					"id": 804,
					"name": "oninvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5975,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 805,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 806,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 807,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 808,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5975,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.oninvalid"
					}
				},
				{
					"id": 809,
					"name": "onkeydown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user presses a key.",
						"tags": [
							{
								"tag": "param",
								"text": "The keyboard event\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5980,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 810,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 811,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 812,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 813,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "KeyboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5980,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onkeydown"
					}
				},
				{
					"id": 814,
					"name": "onkeypress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user presses an alphanumeric key.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5985,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 815,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 816,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 817,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 818,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "KeyboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5985,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onkeypress"
					}
				},
				{
					"id": 819,
					"name": "onkeyup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user releases a key.",
						"tags": [
							{
								"tag": "param",
								"text": "The keyboard event\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5990,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 820,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 821,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 822,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 823,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "KeyboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5990,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onkeyup"
					}
				},
				{
					"id": 824,
					"name": "onload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires immediately after the browser loads the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5995,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 825,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 826,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 827,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 828,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5995,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onload"
					}
				},
				{
					"id": 829,
					"name": "onloadeddata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when media data is loaded at the current playback position.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6000,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 830,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 831,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 832,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 833,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6000,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onloadeddata"
					}
				},
				{
					"id": 834,
					"name": "onloadedmetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the duration and dimensions of the media have been determined.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6005,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 835,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 836,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 837,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 838,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6005,
											"character": 21
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onloadedmetadata"
					}
				},
				{
					"id": 839,
					"name": "onloadend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6006,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 840,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 841,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 842,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 843,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ProgressEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6006,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onloadend"
					}
				},
				{
					"id": 844,
					"name": "onloadstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when Internet Explorer begins looking for media data.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6011,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 845,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 846,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 847,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 848,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6011,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onloadstart"
					}
				},
				{
					"id": 849,
					"name": "onlostpointercapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6012,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 850,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 851,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 852,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 853,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6012,
											"character": 25
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onlostpointercapture"
					}
				},
				{
					"id": 854,
					"name": "onmousedown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user clicks the object with either mouse button.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6017,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 855,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 856,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 857,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 858,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6017,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmousedown"
					}
				},
				{
					"id": 859,
					"name": "onmouseenter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6018,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 860,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 861,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 862,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 863,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6018,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmouseenter"
					}
				},
				{
					"id": 864,
					"name": "onmouseleave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6019,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 865,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 866,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 867,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 868,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6019,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmouseleave"
					}
				},
				{
					"id": 869,
					"name": "onmousemove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user moves the mouse over the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6024,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 870,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 871,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 872,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 873,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6024,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmousemove"
					}
				},
				{
					"id": 874,
					"name": "onmouseout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6029,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 875,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 876,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 877,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 878,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6029,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmouseout"
					}
				},
				{
					"id": 879,
					"name": "onmouseover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user moves the mouse pointer into the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6034,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 880,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 881,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 882,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 883,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6034,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmouseover"
					}
				},
				{
					"id": 884,
					"name": "onmouseup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user releases a mouse button while the mouse is over the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The mouse event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6039,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 885,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 886,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 887,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 888,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "MouseEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6039,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onmouseup"
					}
				},
				{
					"id": 644,
					"name": "onpaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5001,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 645,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 646,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 647,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "DocumentAndElementEventHandlers"
													}
												},
												{
													"id": 648,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ClipboardEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 5001,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DocumentAndElementEventHandlers.onpaste"
					}
				},
				{
					"id": 889,
					"name": "onpause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when playback is paused.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6044,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 890,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 891,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 892,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 893,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6044,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpause"
					}
				},
				{
					"id": 894,
					"name": "onplay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the play method is requested.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6049,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 895,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 896,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 897,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 898,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6049,
											"character": 11
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onplay"
					}
				},
				{
					"id": 899,
					"name": "onplaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the audio or video has started playing.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6054,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 900,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 901,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 902,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 903,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6054,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onplaying"
					}
				},
				{
					"id": 904,
					"name": "onpointercancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6055,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 905,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 906,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 907,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 908,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6055,
											"character": 20
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointercancel"
					}
				},
				{
					"id": 909,
					"name": "onpointerdown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6056,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 910,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 911,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 912,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 913,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6056,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerdown"
					}
				},
				{
					"id": 914,
					"name": "onpointerenter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6057,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 915,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 916,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 917,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 918,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6057,
											"character": 19
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerenter"
					}
				},
				{
					"id": 919,
					"name": "onpointerleave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6058,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 920,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 921,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 922,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 923,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6058,
											"character": 19
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerleave"
					}
				},
				{
					"id": 924,
					"name": "onpointermove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6059,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 925,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 926,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 927,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 928,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6059,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointermove"
					}
				},
				{
					"id": 929,
					"name": "onpointerout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6060,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 930,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 931,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 932,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 933,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6060,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerout"
					}
				},
				{
					"id": 934,
					"name": "onpointerover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6061,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 936,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 937,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 938,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6061,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerover"
					}
				},
				{
					"id": 939,
					"name": "onpointerup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6062,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 940,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 941,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 942,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 943,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "PointerEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6062,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onpointerup"
					}
				},
				{
					"id": 944,
					"name": "onprogress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs to indicate progress while downloading media data.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6067,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 945,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 946,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 947,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 948,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ProgressEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6067,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onprogress"
					}
				},
				{
					"id": 949,
					"name": "onratechange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the playback rate is increased or decreased.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6072,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 950,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 951,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 952,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 953,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6072,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onratechange"
					}
				},
				{
					"id": 954,
					"name": "onreset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user resets a form.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6077,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 955,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 956,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 957,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 958,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6077,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onreset"
					}
				},
				{
					"id": 959,
					"name": "onresize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6078,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 960,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 961,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 962,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 963,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "UIEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6078,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onresize"
					}
				},
				{
					"id": 964,
					"name": "onscroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the user repositions the scroll box in the scroll bar on the object.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6083,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 965,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 966,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 967,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 968,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6083,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onscroll"
					}
				},
				{
					"id": 969,
					"name": "onsecuritypolicyviolation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6084,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 970,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 971,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 972,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 973,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "SecurityPolicyViolationEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6084,
											"character": 30
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onsecuritypolicyviolation"
					}
				},
				{
					"id": 974,
					"name": "onseeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the seek operation ends.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6089,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 975,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 976,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 977,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 978,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6089,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onseeked"
					}
				},
				{
					"id": 979,
					"name": "onseeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the current playback position is moved.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6094,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 980,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 981,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 982,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 983,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6094,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onseeking"
					}
				},
				{
					"id": 984,
					"name": "onselect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Fires when the current selection changes.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6099,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 986,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 987,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 988,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6099,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onselect"
					}
				},
				{
					"id": 989,
					"name": "onselectionchange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6100,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 990,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 991,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 992,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 993,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6100,
											"character": 22
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onselectionchange"
					}
				},
				{
					"id": 994,
					"name": "onselectstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6101,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 995,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 996,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 997,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 998,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6101,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onselectstart"
					}
				},
				{
					"id": 999,
					"name": "onstalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the download has stopped.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6106,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1000,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1001,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1002,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1003,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6106,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onstalled"
					}
				},
				{
					"id": 1004,
					"name": "onsubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6107,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1005,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1006,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1007,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1008,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6107,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onsubmit"
					}
				},
				{
					"id": 1009,
					"name": "onsuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs if the load operation has been intentionally halted.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6112,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1010,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1011,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1012,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1013,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6112,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onsuspend"
					}
				},
				{
					"id": 1014,
					"name": "ontimeupdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs to indicate the current playback position.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6117,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1015,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1016,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1017,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1018,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6117,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontimeupdate"
					}
				},
				{
					"id": 1019,
					"name": "ontoggle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6118,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1020,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1021,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1022,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1023,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6118,
											"character": 13
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontoggle"
					}
				},
				{
					"id": 1024,
					"name": "ontouchcancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6119,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1025,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1026,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1027,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1028,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TouchEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6119,
											"character": 18
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontouchcancel"
					}
				},
				{
					"id": 1029,
					"name": "ontouchend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6120,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1030,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1031,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1032,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1033,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TouchEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6120,
											"character": 15
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontouchend"
					}
				},
				{
					"id": 1034,
					"name": "ontouchmove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6121,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1035,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1036,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1037,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1038,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TouchEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6121,
											"character": 16
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontouchmove"
					}
				},
				{
					"id": 1039,
					"name": "ontouchstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6122,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1040,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1041,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1042,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1043,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TouchEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6122,
											"character": 17
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontouchstart"
					}
				},
				{
					"id": 1044,
					"name": "ontransitioncancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6123,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1045,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1046,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1047,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1048,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TransitionEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6123,
											"character": 23
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontransitioncancel"
					}
				},
				{
					"id": 1049,
					"name": "ontransitionend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6124,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1050,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1051,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1052,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1053,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TransitionEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6124,
											"character": 20
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontransitionend"
					}
				},
				{
					"id": 1054,
					"name": "ontransitionrun",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6125,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1055,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1056,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1057,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1058,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TransitionEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6125,
											"character": 20
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontransitionrun"
					}
				},
				{
					"id": 1059,
					"name": "ontransitionstart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6126,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1060,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1061,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1062,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1063,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "TransitionEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6126,
											"character": 22
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.ontransitionstart"
					}
				},
				{
					"id": 1064,
					"name": "onvolumechange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when the volume is changed, or playback is muted or unmuted.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6131,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1065,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1066,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1067,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1068,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6131,
											"character": 19
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onvolumechange"
					}
				},
				{
					"id": 1069,
					"name": "onwaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Occurs when playback stops because the next frame of a video resource is not available.",
						"tags": [
							{
								"tag": "param",
								"text": "The event.\n",
								"param": "ev"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6136,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1070,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1071,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1072,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1073,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6136,
											"character": 14
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onwaiting"
					}
				},
				{
					"id": 1074,
					"name": "onwheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6137,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1075,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1076,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1077,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GlobalEventHandlers"
													}
												},
												{
													"id": 1078,
													"name": "ev",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "WheelEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
											"line": 6137,
											"character": 12
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "GlobalEventHandlers.onwheel"
					}
				},
				{
					"id": 1093,
					"name": "optionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Used to identify different options.\nThis is set automatically so you shouldn't have to change it."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 113,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 343,
					"name": "outerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5227,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.outerHTML"
					}
				},
				{
					"id": 509,
					"name": "ownerDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the node document. Returns null for documents."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 10996,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Document"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.ownerDocument"
					}
				},
				{
					"id": 510,
					"name": "parentElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the parent element."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11000,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "HTMLElement"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.parentElement"
					}
				},
				{
					"id": 511,
					"name": "parentNode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the parent."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11004,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Node"
									},
									{
										"type": "reference",
										"name": "ParentNode"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.parentNode"
					}
				},
				{
					"id": 344,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the namespace prefix."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5231,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.prefix"
					}
				},
				{
					"id": 603,
					"name": "previousElementSibling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the first preceding sibling that is an element, and null otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11252,
							"character": 35
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Element"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NonDocumentTypeChildNode.previousElementSibling"
					}
				},
				{
					"id": 512,
					"name": "previousSibling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the previous sibling."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11008,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Node"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.previousSibling"
					}
				},
				{
					"id": 345,
					"name": "scrollHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5232,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollHeight"
					}
				},
				{
					"id": 346,
					"name": "scrollLeft",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5233,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollLeft"
					}
				},
				{
					"id": 347,
					"name": "scrollTop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5234,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollTop"
					}
				},
				{
					"id": 348,
					"name": "scrollWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5235,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollWidth"
					}
				},
				{
					"id": 1092,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specifies whether or not this option is selected."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 107,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 349,
					"name": "shadowRoot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5239,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ShadowRoot"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.shadowRoot"
					}
				},
				{
					"id": 350,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the value of element's slot content attribute. Can be set to change it."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5243,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.slot"
					}
				},
				{
					"id": 289,
					"name": "spellcheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6707,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.spellcheck"
					}
				},
				{
					"id": 649,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5359,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSStyleDeclaration"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ElementCSSInlineStyle.style"
					}
				},
				{
					"id": 1081,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 8168,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLOrSVGElement.tabIndex"
					}
				},
				{
					"id": 351,
					"name": "tagName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the HTML-uppercased qualified name."
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5247,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.tagName"
					}
				},
				{
					"id": 513,
					"name": "textContent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11009,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.textContent"
					}
				},
				{
					"id": 290,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6708,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.title"
					}
				},
				{
					"id": 291,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6709,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.translate"
					}
				},
				{
					"id": 269,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value that will be returned when the option is selected."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 6,
							"character": 7
						},
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 102,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1095,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 117,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 294,
					"name": "addEventListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 295,
							"name": "addEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 296,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementEventMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 297,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementEventMap"
											}
										}
									}
								},
								{
									"id": 298,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 299,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 300,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 301,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 302,
															"name": "ev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "typeParameter",
																	"name": "K",
																	"constraint": {
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "HTMLElementEventMap"
																		}
																	}
																},
																"objectType": {
																	"type": "reference",
																	"name": "HTMLElementEventMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
													"line": 6711,
													"character": 76
												}
											]
										}
									}
								},
								{
									"id": 303,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "AddEventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Element.addEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLElement.addEventListener"
							}
						},
						{
							"id": 304,
							"name": "addEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 305,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 306,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventListenerOrEventListenerObject"
									}
								},
								{
									"id": 307,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "AddEventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Element.addEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLElement.addEventListener"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6711,
							"character": 20
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6712,
							"character": 20
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Element.addEventListener"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.addEventListener"
					}
				},
				{
					"id": 590,
					"name": "after",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 591,
							"name": "after",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.",
								"text": "Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n"
							},
							"parameters": [
								{
									"id": 592,
									"name": "nodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChildNode.after"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 3586,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ChildNode.after"
					}
				},
				{
					"id": 584,
					"name": "animate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 585,
							"name": "animate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 586,
									"name": "keyframes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Keyframe"
												}
											},
											{
												"type": "reference",
												"name": "PropertyIndexedKeyframes"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 587,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "KeyframeAnimationOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Animation"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Animatable.animate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 1986,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Animatable.animate"
					}
				},
				{
					"id": 608,
					"name": "append",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 609,
							"name": "append",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.",
								"text": "Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n"
							},
							"parameters": [
								{
									"id": 610,
									"name": "nodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.append"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11523,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.append"
					}
				},
				{
					"id": 514,
					"name": "appendChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 515,
							"name": "appendChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 516,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								}
							],
							"parameters": [
								{
									"id": 517,
									"name": "newChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "Node"
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.appendChild"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11010,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.appendChild"
					}
				},
				{
					"id": 352,
					"name": "attachShadow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 353,
							"name": "attachShadow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a shadow root for element and returns it."
							},
							"parameters": [
								{
									"id": 354,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ShadowRootInit"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ShadowRoot"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.attachShadow"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5251,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.attachShadow"
					}
				},
				{
					"id": 593,
					"name": "before",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 594,
							"name": "before",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.",
								"text": "Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n"
							},
							"parameters": [
								{
									"id": 595,
									"name": "nodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChildNode.before"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 3592,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ChildNode.before"
					}
				},
				{
					"id": 1082,
					"name": "blur",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1083,
							"name": "blur",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLOrSVGElement.blur"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 8169,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLOrSVGElement.blur"
					}
				},
				{
					"id": 292,
					"name": "click",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 293,
							"name": "click",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLElement.click"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6710,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.click"
					}
				},
				{
					"id": 518,
					"name": "cloneNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 519,
							"name": "cloneNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a copy of node. If deep is true, the copy also includes the node's descendants."
							},
							"parameters": [
								{
									"id": 520,
									"name": "deep",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.cloneNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11014,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.cloneNode"
					}
				},
				{
					"id": 355,
					"name": "closest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 356,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise."
							},
							"typeParameter": [
								{
									"id": 357,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 358,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "HTMLElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.closest"
							}
						},
						{
							"id": 359,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 360,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 361,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "SVGElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "SVGElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.closest"
							}
						},
						{
							"id": 362,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 363,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"parameters": [
								{
									"id": 364,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E",
										"constraint": {
											"type": "reference",
											"name": "Element"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.closest"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5255,
							"character": 11
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5256,
							"character": 11
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5257,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.closest"
					}
				},
				{
					"id": 521,
					"name": "compareDocumentPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 522,
							"name": "compareDocumentPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a bitmask indicating the position of other relative to node."
							},
							"parameters": [
								{
									"id": 523,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.compareDocumentPosition"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11018,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.compareDocumentPosition"
					}
				},
				{
					"id": 1102,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1103,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 134,
							"character": 19
						}
					]
				},
				{
					"id": 524,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 525,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if other is an inclusive descendant of node, and false otherwise."
							},
							"parameters": [
								{
									"id": 526,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Node"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.contains"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11022,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.contains"
					}
				},
				{
					"id": 581,
					"name": "dispatchEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 582,
							"name": "dispatchEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise."
							},
							"parameters": [
								{
									"id": 583,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Event"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventTarget.dispatchEvent"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5526,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventTarget.dispatchEvent"
					}
				},
				{
					"id": 1084,
					"name": "focus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1085,
							"name": "focus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1086,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "FocusOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLOrSVGElement.focus"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 8170,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLOrSVGElement.focus"
					}
				},
				{
					"id": 588,
					"name": "getAnimations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 589,
							"name": "getAnimations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Animation"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Animatable.getAnimations"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 1987,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Animatable.getAnimations"
					}
				},
				{
					"id": 365,
					"name": "getAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 366,
							"name": "getAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise."
							},
							"parameters": [
								{
									"id": 367,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getAttribute"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5261,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getAttribute"
					}
				},
				{
					"id": 368,
					"name": "getAttributeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 369,
							"name": "getAttributeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise."
							},
							"parameters": [
								{
									"id": 370,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 371,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getAttributeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5265,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getAttributeNS"
					}
				},
				{
					"id": 372,
					"name": "getAttributeNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 373,
							"name": "getAttributeNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the qualified names of all element's attributes. Can contain duplicates."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getAttributeNames"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5269,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getAttributeNames"
					}
				},
				{
					"id": 374,
					"name": "getAttributeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 375,
							"name": "getAttributeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 376,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Attr"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getAttributeNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5270,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getAttributeNode"
					}
				},
				{
					"id": 377,
					"name": "getAttributeNodeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 378,
							"name": "getAttributeNodeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 379,
									"name": "namespaceURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 380,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Attr"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getAttributeNodeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5271,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getAttributeNodeNS"
					}
				},
				{
					"id": 381,
					"name": "getBoundingClientRect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 382,
							"name": "getBoundingClientRect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DOMRect"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getBoundingClientRect"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5272,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getBoundingClientRect"
					}
				},
				{
					"id": 383,
					"name": "getClientRects",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 384,
							"name": "getClientRects",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DOMRectList"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getClientRects"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5273,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getClientRects"
					}
				},
				{
					"id": 1098,
					"name": "getContent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1099,
							"name": "getContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 125,
							"character": 18
						}
					]
				},
				{
					"id": 385,
					"name": "getElementsByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 386,
							"name": "getElementsByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes."
							},
							"parameters": [
								{
									"id": 387,
									"name": "classNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Element"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByClassName"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5277,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getElementsByClassName"
					}
				},
				{
					"id": 388,
					"name": "getElementsByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 389,
							"name": "getElementsByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 390,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 391,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "HTMLElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagName"
							}
						},
						{
							"id": 392,
							"name": "getElementsByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 393,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 394,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "SVGElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "SVGElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagName"
							}
						},
						{
							"id": 395,
							"name": "getElementsByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 396,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Element"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagName"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5278,
							"character": 24
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5279,
							"character": 24
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5280,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getElementsByTagName"
					}
				},
				{
					"id": 397,
					"name": "getElementsByTagNameNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 398,
							"name": "getElementsByTagNameNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 399,
									"name": "namespaceURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "stringLiteral",
										"value": "http://www.w3.org/1999/xhtml"
									}
								},
								{
									"id": 400,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagNameNS"
							}
						},
						{
							"id": 401,
							"name": "getElementsByTagNameNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 402,
									"name": "namespaceURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "stringLiteral",
										"value": "http://www.w3.org/2000/svg"
									}
								},
								{
									"id": 403,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SVGElement"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagNameNS"
							}
						},
						{
							"id": 404,
							"name": "getElementsByTagNameNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 405,
									"name": "namespaceURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 406,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLCollectionOf",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Element"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.getElementsByTagNameNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5281,
							"character": 26
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5282,
							"character": 26
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5283,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.getElementsByTagNameNS"
					}
				},
				{
					"id": 527,
					"name": "getRootNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 528,
							"name": "getRootNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns node's root."
							},
							"parameters": [
								{
									"id": 529,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "GetRootNodeOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.getRootNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11026,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.getRootNode"
					}
				},
				{
					"id": 1100,
					"name": "getWidth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1101,
							"name": "getWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 130,
							"character": 16
						}
					]
				},
				{
					"id": 407,
					"name": "hasAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 408,
							"name": "hasAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise."
							},
							"parameters": [
								{
									"id": 409,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.hasAttribute"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5287,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.hasAttribute"
					}
				},
				{
					"id": 410,
					"name": "hasAttributeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 411,
							"name": "hasAttributeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if element has an attribute whose namespace is namespace and local name is localName."
							},
							"parameters": [
								{
									"id": 412,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 413,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.hasAttributeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5291,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.hasAttributeNS"
					}
				},
				{
					"id": 414,
					"name": "hasAttributes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 415,
							"name": "hasAttributes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if element has attributes, and false otherwise."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.hasAttributes"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5295,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.hasAttributes"
					}
				},
				{
					"id": 530,
					"name": "hasChildNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 531,
							"name": "hasChildNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether node has children."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.hasChildNodes"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11030,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.hasChildNodes"
					}
				},
				{
					"id": 416,
					"name": "hasPointerCapture",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 417,
							"name": "hasPointerCapture",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 418,
									"name": "pointerId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.hasPointerCapture"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5296,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.hasPointerCapture"
					}
				},
				{
					"id": 419,
					"name": "insertAdjacentElement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 420,
							"name": "insertAdjacentElement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 421,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "InsertPosition"
									}
								},
								{
									"id": 422,
									"name": "insertedElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.insertAdjacentElement"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5297,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.insertAdjacentElement"
					}
				},
				{
					"id": 423,
					"name": "insertAdjacentHTML",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 424,
							"name": "insertAdjacentHTML",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 425,
									"name": "where",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "InsertPosition"
									}
								},
								{
									"id": 426,
									"name": "html",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.insertAdjacentHTML"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5298,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.insertAdjacentHTML"
					}
				},
				{
					"id": 427,
					"name": "insertAdjacentText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "insertAdjacentText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 429,
									"name": "where",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "InsertPosition"
									}
								},
								{
									"id": 430,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.insertAdjacentText"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5299,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.insertAdjacentText"
					}
				},
				{
					"id": 532,
					"name": "insertBefore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "insertBefore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 534,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								}
							],
							"parameters": [
								{
									"id": 535,
									"name": "newChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "Node"
										}
									}
								},
								{
									"id": 536,
									"name": "refChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Node"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.insertBefore"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11031,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.insertBefore"
					}
				},
				{
					"id": 537,
					"name": "isDefaultNamespace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 538,
							"name": "isDefaultNamespace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 539,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.isDefaultNamespace"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11032,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.isDefaultNamespace"
					}
				},
				{
					"id": 540,
					"name": "isEqualNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 541,
							"name": "isEqualNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether node and otherNode have the same properties."
							},
							"parameters": [
								{
									"id": 542,
									"name": "otherNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Node"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.isEqualNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11036,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.isEqualNode"
					}
				},
				{
					"id": 543,
					"name": "isSameNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 544,
							"name": "isSameNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 545,
									"name": "otherNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Node"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.isSameNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11037,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.isSameNode"
					}
				},
				{
					"id": 546,
					"name": "lookupNamespaceURI",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 547,
							"name": "lookupNamespaceURI",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 548,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.lookupNamespaceURI"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11038,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.lookupNamespaceURI"
					}
				},
				{
					"id": 549,
					"name": "lookupPrefix",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 550,
							"name": "lookupPrefix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 551,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.lookupPrefix"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11039,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.lookupPrefix"
					}
				},
				{
					"id": 431,
					"name": "matches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 432,
							"name": "matches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if matching selectors against element's root yields element, and false otherwise."
							},
							"parameters": [
								{
									"id": 433,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.matches"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5303,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.matches"
					}
				},
				{
					"id": 434,
					"name": "msGetRegionContent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 435,
							"name": "msGetRegionContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.msGetRegionContent"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5304,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.msGetRegionContent"
					}
				},
				{
					"id": 552,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 553,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.normalize"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11043,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.normalize"
					}
				},
				{
					"id": 611,
					"name": "prepend",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 612,
							"name": "prepend",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.",
								"text": "Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n"
							},
							"parameters": [
								{
									"id": 613,
									"name": "nodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.prepend"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11529,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.prepend"
					}
				},
				{
					"id": 614,
					"name": "querySelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 615,
							"name": "querySelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first element that is a descendant of node that matches selectors."
							},
							"typeParameter": [
								{
									"id": 616,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 617,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "HTMLElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelector"
							}
						},
						{
							"id": 618,
							"name": "querySelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 619,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 620,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "SVGElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "SVGElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelector"
							}
						},
						{
							"id": 621,
							"name": "querySelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 622,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"parameters": [
								{
									"id": 623,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "E",
										"constraint": {
											"type": "reference",
											"name": "Element"
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelector"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11533,
							"character": 17
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11534,
							"character": 17
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11535,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.querySelector"
					}
				},
				{
					"id": 624,
					"name": "querySelectorAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 625,
							"name": "querySelectorAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns all element descendants of node that match selectors."
							},
							"typeParameter": [
								{
									"id": 626,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 627,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeListOf",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "HTMLElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "HTMLElementTagNameMap"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelectorAll"
							}
						},
						{
							"id": 628,
							"name": "querySelectorAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 629,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 630,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "SVGElementTagNameMap"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeListOf",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "SVGElementTagNameMap"
												}
											}
										},
										"objectType": {
											"type": "reference",
											"name": "SVGElementTagNameMap"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelectorAll"
							}
						},
						{
							"id": 631,
							"name": "querySelectorAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 632,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"parameters": [
								{
									"id": 633,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeListOf",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "E",
										"constraint": {
											"type": "reference",
											"name": "Element"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParentNode.querySelectorAll"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11539,
							"character": 20
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11540,
							"character": 20
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11541,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ParentNode.querySelectorAll"
					}
				},
				{
					"id": 436,
					"name": "releasePointerCapture",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 437,
							"name": "releasePointerCapture",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 438,
									"name": "pointerId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.releasePointerCapture"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5305,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.releasePointerCapture"
					}
				},
				{
					"id": 596,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 597,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes node."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChildNode.remove"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 3596,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ChildNode.remove"
					}
				},
				{
					"id": 439,
					"name": "removeAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 440,
							"name": "removeAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes element's first attribute whose qualified name is qualifiedName."
							},
							"parameters": [
								{
									"id": 441,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.removeAttribute"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5309,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.removeAttribute"
					}
				},
				{
					"id": 442,
					"name": "removeAttributeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 443,
							"name": "removeAttributeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes element's attribute whose namespace is namespace and local name is localName."
							},
							"parameters": [
								{
									"id": 444,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 445,
									"name": "localName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.removeAttributeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5313,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.removeAttributeNS"
					}
				},
				{
					"id": 446,
					"name": "removeAttributeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 447,
							"name": "removeAttributeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 448,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Attr"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Attr"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.removeAttributeNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5314,
							"character": 23
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.removeAttributeNode"
					}
				},
				{
					"id": 554,
					"name": "removeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 555,
							"name": "removeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 556,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								}
							],
							"parameters": [
								{
									"id": 557,
									"name": "oldChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "Node"
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.removeChild"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11044,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.removeChild"
					}
				},
				{
					"id": 308,
					"name": "removeEventListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 309,
							"name": "removeEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 310,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "HTMLElementEventMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 311,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"name": "HTMLElementEventMap"
											}
										}
									}
								},
								{
									"id": 312,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 313,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 314,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 315,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 316,
															"name": "ev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "typeParameter",
																	"name": "K",
																	"constraint": {
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "HTMLElementEventMap"
																		}
																	}
																},
																"objectType": {
																	"type": "reference",
																	"name": "HTMLElementEventMap"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
													"line": 6713,
													"character": 79
												}
											]
										}
									}
								},
								{
									"id": 317,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "EventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Element.removeEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLElement.removeEventListener"
							}
						},
						{
							"id": 318,
							"name": "removeEventListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 319,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 320,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventListenerOrEventListenerObject"
									}
								},
								{
									"id": 321,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "EventListenerOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "Element.removeEventListener"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "HTMLElement.removeEventListener"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6713,
							"character": 23
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 6714,
							"character": 23
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Element.removeEventListener"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "HTMLElement.removeEventListener"
					}
				},
				{
					"id": 1104,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1105,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-option/chef-option.tsx",
							"line": 138,
							"character": 8
						}
					]
				},
				{
					"id": 558,
					"name": "replaceChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 559,
							"name": "replaceChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 560,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								}
							],
							"parameters": [
								{
									"id": 561,
									"name": "newChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node"
									}
								},
								{
									"id": 562,
									"name": "oldChild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "Node"
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "Node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Node.replaceChild"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 11045,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Node.replaceChild"
					}
				},
				{
					"id": 598,
					"name": "replaceWith",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 599,
							"name": "replaceWith",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.",
								"text": "Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n"
							},
							"parameters": [
								{
									"id": 600,
									"name": "nodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"name": "Node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChildNode.replaceWith"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 3602,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ChildNode.replaceWith"
					}
				},
				{
					"id": 449,
					"name": "requestFullscreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "requestFullscreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Displays element fullscreen and resolves promise when done.",
								"text": "When supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n"
							},
							"parameters": [
								{
									"id": 451,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "FullscreenOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.requestFullscreen"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5320,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.requestFullscreen"
					}
				},
				{
					"id": 452,
					"name": "requestPointerLock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 453,
							"name": "requestPointerLock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.requestPointerLock"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5321,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.requestPointerLock"
					}
				},
				{
					"id": 454,
					"name": "scroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 455,
							"name": "scroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 456,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ScrollToOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scroll"
							}
						},
						{
							"id": 457,
							"name": "scroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 458,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 459,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scroll"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5322,
							"character": 10
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5323,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scroll"
					}
				},
				{
					"id": 460,
					"name": "scrollBy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 461,
							"name": "scrollBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 462,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ScrollToOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scrollBy"
							}
						},
						{
							"id": 463,
							"name": "scrollBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 464,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 465,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scrollBy"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5324,
							"character": 12
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5325,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollBy"
					}
				},
				{
					"id": 466,
					"name": "scrollIntoView",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 467,
							"name": "scrollIntoView",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 468,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "ScrollIntoViewOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scrollIntoView"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5326,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollIntoView"
					}
				},
				{
					"id": 469,
					"name": "scrollTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 470,
							"name": "scrollTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 471,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ScrollToOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scrollTo"
							}
						},
						{
							"id": 472,
							"name": "scrollTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 473,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 474,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.scrollTo"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5327,
							"character": 12
						},
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5328,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.scrollTo"
					}
				},
				{
					"id": 475,
					"name": "setAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "setAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the value of element's first attribute whose qualified name is qualifiedName to value."
							},
							"parameters": [
								{
									"id": 477,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.setAttribute"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5332,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.setAttribute"
					}
				},
				{
					"id": 479,
					"name": "setAttributeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 480,
							"name": "setAttributeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value."
							},
							"parameters": [
								{
									"id": 481,
									"name": "namespace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								},
								{
									"id": 482,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 483,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.setAttributeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5336,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.setAttributeNS"
					}
				},
				{
					"id": 484,
					"name": "setAttributeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 485,
							"name": "setAttributeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 486,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Attr"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Attr"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.setAttributeNode"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5337,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.setAttributeNode"
					}
				},
				{
					"id": 487,
					"name": "setAttributeNodeNS",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 488,
							"name": "setAttributeNodeNS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 489,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Attr"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Attr"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.setAttributeNodeNS"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5338,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.setAttributeNodeNS"
					}
				},
				{
					"id": 490,
					"name": "setPointerCapture",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 491,
							"name": "setPointerCapture",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 492,
									"name": "pointerId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.setPointerCapture"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5339,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.setPointerCapture"
					}
				},
				{
					"id": 493,
					"name": "toggleAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 494,
							"name": "toggleAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.",
								"text": "Returns true if qualifiedName is now present, and false otherwise.\n"
							},
							"parameters": [
								{
									"id": 495,
									"name": "qualifiedName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 496,
									"name": "force",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.toggleAttribute"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5345,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.toggleAttribute"
					}
				},
				{
					"id": 497,
					"name": "webkitMatchesSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 498,
							"name": "webkitMatchesSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 499,
									"name": "selectors",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Element.webkitMatchesSelector"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.dom.d.ts",
							"line": 5346,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Element.webkitMatchesSelector"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1096
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						563,
						564,
						565,
						566,
						567,
						568,
						569,
						570,
						571,
						572,
						573,
						574,
						575,
						576,
						577,
						1087,
						578,
						579,
						580,
						276,
						277,
						322,
						323,
						278,
						500,
						604,
						501,
						605,
						324,
						325,
						326,
						327,
						328,
						329,
						650,
						1079,
						279,
						280,
						1094,
						502,
						606,
						281,
						330,
						601,
						282,
						651,
						503,
						652,
						283,
						504,
						607,
						331,
						332,
						602,
						505,
						506,
						507,
						508,
						1080,
						284,
						285,
						286,
						287,
						288,
						653,
						658,
						663,
						668,
						673,
						678,
						683,
						688,
						693,
						698,
						703,
						708,
						713,
						718,
						634,
						723,
						639,
						728,
						733,
						738,
						743,
						748,
						753,
						758,
						763,
						768,
						773,
						778,
						783,
						788,
						789,
						333,
						338,
						794,
						799,
						804,
						809,
						814,
						819,
						824,
						829,
						834,
						839,
						844,
						849,
						854,
						859,
						864,
						869,
						874,
						879,
						884,
						644,
						889,
						894,
						899,
						904,
						909,
						914,
						919,
						924,
						929,
						934,
						939,
						944,
						949,
						954,
						959,
						964,
						969,
						974,
						979,
						984,
						989,
						994,
						999,
						1004,
						1009,
						1014,
						1019,
						1024,
						1029,
						1034,
						1039,
						1044,
						1049,
						1054,
						1059,
						1064,
						1069,
						1074,
						1093,
						343,
						509,
						510,
						511,
						344,
						603,
						512,
						345,
						346,
						347,
						348,
						1092,
						349,
						350,
						289,
						649,
						1081,
						351,
						513,
						290,
						291,
						269,
						1095
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						294,
						590,
						584,
						608,
						514,
						352,
						593,
						1082,
						292,
						518,
						355,
						521,
						1102,
						524,
						581,
						1084,
						588,
						365,
						368,
						372,
						374,
						377,
						381,
						383,
						1098,
						385,
						388,
						397,
						527,
						1100,
						407,
						410,
						414,
						530,
						416,
						419,
						423,
						427,
						532,
						537,
						540,
						543,
						546,
						549,
						431,
						434,
						552,
						611,
						614,
						624,
						436,
						596,
						439,
						442,
						446,
						554,
						308,
						1104,
						558,
						598,
						449,
						452,
						454,
						460,
						466,
						469,
						475,
						479,
						484,
						487,
						490,
						493,
						497
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-option/chef-option.tsx",
					"line": 5,
					"character": 27
				},
				{
					"fileName": "src/atoms/chef-option/chef-option.tsx",
					"line": 97,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "HTMLElement"
				}
			]
		},
		{
			"id": 1592,
			"name": "ChefPage",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nTemplate to wrap content in chef styled \"page\". Provides a slot for page content.\n\nEvents: confirm, cancel and secondaryConfirm\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page\n class=\"example-page-width\"\n heading=\"Add Members to Administrator\"\n subheading=\"Automate only displays local users and local teams. For other types of members add a member expression.\"\n secondary-btn-text=\"Add Member Expression\"\n secondary-btn-show=\"true\"\n confirm-btn-text=\"Add Member\"\n disable-confirm=\"true\"\n cancel-btn-text=\"Cancel\"\n>\n <chef-table>\n   <chef-thead>\n      <chef-tr>\n        <chef-th class=\"checkbox-row\"></chef-th>\n        <chef-th>ID</chef-th>\n        <chef-th>Type</chef-th>\n      </chef-tr>\n   </chef-thead>\n   <chef-tbody>\n     <chef-tr>\n       <chef-td>\n        <chef-checkbox></chef-checkbox>\n       </chef-td>\n       <chef-td>1</chef-td>\n       <chef-td>apple</chef-td>\n     </chef-tr>\n   </chef-tbody>\n </chef-table>\n</chef-page>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-page',\n  styleUrl: './chef-page.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1599,
					"name": "cancelBtnText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for cancel button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 79,
							"character": 46
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Cancel\""
				},
				{
					"id": 1605,
					"name": "close",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 98,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1604,
					"name": "confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 97,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1598,
					"name": "confirmBtnText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for confirm button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 74,
							"character": 47
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Confirm\""
				},
				{
					"id": 1600,
					"name": "confirmLoading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate confirm is loading"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 84,
							"character": 47
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1602,
					"name": "disableConfirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Disable confirm buttom"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 94,
							"character": 47
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 1595,
					"name": "errorMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for error message"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 59,
							"character": 45
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1593,
					"name": "heading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for page heading"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 49,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1601,
					"name": "pageLoading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicate page is loading"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 89,
							"character": 44
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1597,
					"name": "secondaryBtnShow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Show secondary button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 69,
							"character": 49
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1596,
					"name": "secondaryBtnText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for secondary button"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 64,
							"character": 49
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1603,
					"name": "secondaryConfirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 96,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1594,
					"name": "subheading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for page subheading"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 54,
							"character": 43
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1608,
					"name": "getLoading",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1609,
							"name": "getLoading",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 174,
							"character": 20
						}
					]
				},
				{
					"id": 1614,
					"name": "handleClose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1615,
							"name": "handleClose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 188,
							"character": 21
						}
					]
				},
				{
					"id": 1612,
					"name": "handleConfirm",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1613,
							"name": "handleConfirm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 184,
							"character": 23
						}
					]
				},
				{
					"id": 1610,
					"name": "handleSecondaryConfirm",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1611,
							"name": "handleSecondaryConfirm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 180,
							"character": 32
						}
					]
				},
				{
					"id": 1606,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1607,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/templates/chef-page/chef-page.tsx",
							"line": 100,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1599,
						1605,
						1604,
						1598,
						1600,
						1602,
						1595,
						1593,
						1601,
						1597,
						1596,
						1603,
						1594
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1608,
						1614,
						1612,
						1610,
						1606
					]
				}
			],
			"sources": [
				{
					"fileName": "src/templates/chef-page/chef-page.tsx",
					"line": 44,
					"character": 21
				}
			]
		},
		{
			"id": 1313,
			"name": "ChefPageHeader",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nHeader for most pages of the Automate UI. Note that only text and inline elements should be nested\ninside of the chef-heading and chef-subheading elements; if you want to nest block level elements\nin the header, put them below the chef-heading and chef-subheading (as shown in the last example).\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page-header>\n  <chef-heading>Some Heading Text</chef-heading>\n  <chef-subheading>Some subheading text that goes below the heading.</chef-subheading>\n</chef-page-header>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page-header>\n  <chef-heading>Heading</chef-heading>\n  <chef-subheading>\n   If you want to have <a href=\"#\">custom html and whatnot</a> in your text underneath\n   the header you can add it like this.\n  </chef-subheading>\n</chef-page-header>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page-header>\n  <chef-heading>Heading</chef-heading>\n  <chef-subheading>If you need to add buttons, use the header-buttons slot.</chef-subheading>\n  <div slot=\"header-buttons\">\n    <chef-button primary>Do a thing</chef-button>\n  </div>\n</chef-page-header>\n"
					},
					{
						"tag": "example",
						"text": "\n<style>\n .box-with-stuff {\n   padding: 10px;\n   margin-top: 10px;\n   background: #648FFF;\n   color: #FFF;\n   border-radius: 4px;\n }\n</style>\n\n<chef-page-header>\n  <chef-heading>Heading</chef-heading>\n  <chef-subheading>\n    If you need to add some block level elements underneath the subheading, add it below.\n  </chef-subheading>\n  <div class=\"box-with-stuff\">\n    A box with some stuff.\n  </div>\n</chef-page-header>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-page-header',\n  styleUrl: './chef-page-header.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1314,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-page-header/chef-page-header.tsx",
							"line": 60,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1315,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1316,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-page-header/chef-page-header.tsx",
							"line": 62,
							"character": 18
						}
					]
				},
				{
					"id": 1317,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1318,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-page-header/chef-page-header.tsx",
							"line": 66,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1314
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1315,
						1317
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-page-header/chef-page-header.tsx",
					"line": 59,
					"character": 27
				}
			]
		},
		{
			"id": 1319,
			"name": "ChefPaginator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nAdds pagination. The paginator functions by adding a query string in the form of 'page=<page number>' to the current pages url. To implement just subscribe to url changes and update your view accordingly. Anything passed as a child to the paginator will be rendered beside the paginator.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-paginator page-count='20' current-page='5'>\n</chef-paginator>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-paginator page-count='20' current-page='5'>\n  Some text to render with my fancy paginator\n</chef-paginator>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-paginator page-count='20' current-page='5'>\n  <strong>Maybe something bolder?</strong>\n</chef-paginator>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='height: 2000px'>\n  <chef-scrollfader>\n    <chef-paginator style='position: fixed; top: 50%; left: 40%;' page-count='20' current-page='5'>\n      In combo with the chef-scrollfader.\n    </chef-paginator>\n  </chef-scrollfader>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-paginator',\n  styleUrl: 'chef-paginator.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1321,
					"name": "currentPage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current page to highlight. This is the param that you will update on a page change."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 50,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"1\""
				},
				{
					"id": 1320,
					"name": "pageCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The total number of pages to show in the paginator"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 46,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"1\""
				},
				{
					"id": 1324,
					"name": "controlsLeft",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1325,
							"name": "controlsLeft",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1326,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 74,
							"character": 22
						}
					]
				},
				{
					"id": 1327,
					"name": "controlsRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1328,
							"name": "controlsRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1329,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1330,
									"name": "pageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 83,
							"character": 23
						}
					]
				},
				{
					"id": 1339,
					"name": "firstPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1340,
							"name": "firstPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 128,
							"character": 19
						}
					]
				},
				{
					"id": 1344,
					"name": "lastPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1345,
							"name": "lastPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1346,
									"name": "pageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 137,
							"character": 18
						}
					]
				},
				{
					"id": 1357,
					"name": "linkTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1358,
							"name": "linkTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1359,
									"name": "href",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1360,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1361,
									"name": "active",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 165,
							"character": 16
						}
					]
				},
				{
					"id": 1354,
					"name": "navigateTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1355,
							"name": "navigateTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1356,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 155,
							"character": 20
						}
					]
				},
				{
					"id": 1347,
					"name": "nextPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1348,
							"name": "nextPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1349,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1350,
									"name": "pageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 141,
							"character": 18
						}
					]
				},
				{
					"id": 1351,
					"name": "pageHref",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1352,
							"name": "pageHref",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1353,
									"name": "pageNum",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 146,
							"character": 18
						}
					]
				},
				{
					"id": 1331,
					"name": "pageLinks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1332,
							"name": "pageLinks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1333,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1334,
									"name": "pageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 92,
							"character": 19
						}
					]
				},
				{
					"id": 1335,
					"name": "pageNums",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1336,
							"name": "pageNums",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1337,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1338,
									"name": "pageCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 116,
							"character": 18
						}
					]
				},
				{
					"id": 1341,
					"name": "prevPage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1342,
							"name": "prevPage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1343,
									"name": "currentPage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 132,
							"character": 18
						}
					]
				},
				{
					"id": 1322,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1323,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
							"line": 52,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1321,
						1320
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1324,
						1327,
						1339,
						1344,
						1357,
						1354,
						1347,
						1351,
						1331,
						1335,
						1341,
						1322
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-paginator/chef-paginator.tsx",
					"line": 41,
					"character": 26
				}
			]
		},
		{
			"id": 1362,
			"name": "ChefPhatRadio",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA toggle button. Uses the chef-option atom to define it's different states.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-phat-radio>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-phat-radio>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-phat-radio deselectable value=\"opt2\">\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-phat-radio>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-phat-radio',\n  styleUrl: './chef-phat-radio.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1366,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 40,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1364,
					"name": "deselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An optional property that when true allows users to deselect an option by selecting a currently selected option"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 36,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1365,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 38,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1367,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 41,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1368,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 43,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLChefOptionElement"
					}
				},
				{
					"id": 1363,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value of the currently toggled option."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 31,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1381,
					"name": "clearOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1382,
							"name": "clearOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HTMLChefOptionElement"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 95,
							"character": 14
						}
					]
				},
				{
					"id": 1375,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1376,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 61,
							"character": 18
						}
					]
				},
				{
					"id": 1377,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1378,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 80,
							"character": 20
						}
					]
				},
				{
					"id": 1369,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1370,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1371,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 45,
							"character": 30
						}
					]
				},
				{
					"id": 1372,
					"name": "handleKeypress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'keypress'"
							}
						}
					],
					"signatures": [
						{
							"id": 1373,
							"name": "handleKeypress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1374,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 53,
							"character": 36
						}
					]
				},
				{
					"id": 1379,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1380,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 89,
							"character": 8
						}
					]
				},
				{
					"id": 1383,
					"name": "selectOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1384,
							"name": "selectOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1385,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLChefOptionElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
							"line": 101,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1366,
						1364,
						1365,
						1367,
						1368,
						1363
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1381,
						1375,
						1377,
						1369,
						1372,
						1379,
						1383
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-phat-radio/chef-phat-radio.tsx",
					"line": 26,
					"character": 26
				}
			]
		},
		{
			"id": 1106,
			"name": "ChefPill",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nDisplays text in pill form. Used for tagging things and whatnot.\nYou can set the background color and text color with css when using\nthe atom directly. When the atom is part of another molecule there\nare two css variables provided.\n--pill-background-color\n--pill-text-color\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-pill>Some Pill Text</chef-pill>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-pill style=\"background-color: blue; color: white\">Some Pill Text</chef-pill>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style=\"--pill-background-color: black; --pill-text-color: white\">\n  <chef-input type='key-value' value='foobar:bizbang'></chef-input>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-pill',\n  styleUrl: './chef-pill.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1107,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1108,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-pill/chef-pill.tsx",
							"line": 28,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1107
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-pill/chef-pill.tsx",
					"line": 27,
					"character": 21
				}
			]
		},
		{
			"id": 1109,
			"name": "ChefProgressBar",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-progress-bar>` atom is used to display progress status information.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"10\"></chef-progress-bar>\n<chef-progress-bar value=\"50\"></chef-progress-bar>\n<chef-progress-bar value=\"90\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"0.1\" value-min=\"0\" value-max=\"1\"></chef-progress-bar>\n<chef-progress-bar value=\"0.5\" value-min=\"0\" value-max=\"1\"></chef-progress-bar>\n<chef-progress-bar value=\"0.9\" value-min=\"0\" value-max=\"1\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"10\" prefix-text=\"10%\"></chef-progress-bar>\n<chef-progress-bar value=\"50\" prefix-text=\"50%\"></chef-progress-bar>\n<chef-progress-bar value=\"90\" prefix-text=\"90%\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"10\" suffix-text=\"10%\"></chef-progress-bar>\n<chef-progress-bar value=\"50\" suffix-text=\"50%\"></chef-progress-bar>\n<chef-progress-bar value=\"90\" suffix-text=\"90%\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"10\" prefix-text=\"10% Complete\" suffix-text=\"90% Remaining\"></chef-progress-bar>\n<chef-progress-bar value=\"50\" prefix-text=\"50% Complete\" suffix-text=\"50% Remaining\"></chef-progress-bar>\n<chef-progress-bar value=\"90\" prefix-text=\"90% Complete\" suffix-text=\"10% Remaining\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"10\" prefix-text=\"10% complete\" suffix-text=\"01:00:00 until finished\"></chef-progress-bar>\n<chef-progress-bar value=\"50\" prefix-text=\"50% complete\" suffix-text=\"00:30:00 until finished\"></chef-progress-bar>\n<chef-progress-bar value=\"90\" prefix-text=\"90% complete\" suffix-text=\"00:01:00 until finished\"></chef-progress-bar>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-progress-bar value=\"0\" value-max=\"150\" prefix-text=\"Upload starting\" suffix-text=\"0 of 150 uploaded\"></chef-progress-bar>\n<chef-progress-bar value=\"75\" value-max=\"150\" prefix-text=\"Upload in progress\" suffix-text=\"75 of 150 uploaded\"></chef-progress-bar>\n<chef-progress-bar value=\"150\" value-max=\"150\"  prefix-text=\"Upload completed\" suffix-text=\"150 of 150 uploaded\"></chef-progress-bar>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-progress-bar',\n  styleUrl: 'chef-progress-bar.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1113,
					"name": "prefixText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Optional text to display at the start of the progress bar."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 65,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1114,
					"name": "suffixText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Optional text to display at the end of the progress bar."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 70,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1110,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current progress value."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 50,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1112,
					"name": "valueMax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The maximum progress value."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 60,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 1111,
					"name": "valueMin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The minimum progress value."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 55,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1123,
					"name": "ariaValueMax",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1124,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 88,
							"character": 18
						}
					]
				},
				{
					"id": 1121,
					"name": "ariaValueMin",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1122,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 84,
							"character": 18
						}
					]
				},
				{
					"id": 1119,
					"name": "ariaValueNow",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1120,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 80,
							"character": 18
						}
					]
				},
				{
					"id": 1117,
					"name": "ariaValueText",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1118,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 76,
							"character": 19
						}
					]
				},
				{
					"id": 1115,
					"name": "hasProgressText",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1116,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 72,
							"character": 21
						}
					]
				},
				{
					"id": 1125,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1126,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
							"line": 92,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1113,
						1114,
						1110,
						1112,
						1111
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1123,
						1121,
						1119,
						1117,
						1115
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1125
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-progress-bar/chef-progress-bar.tsx",
					"line": 46,
					"character": 28
				}
			]
		},
		{
			"id": 1202,
			"name": "ChefRadialChart",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nchef-radial-chart is used to create radial charts. Data points are specified using\nchef-data-point. Colors and various styling can be done through css by setting a\nclass on chef-data-point. Secondary data points are displayed as an outer ring\naround the primary chart. There is also a slot, innerText, provided to add text\nto the center of the radial.\nModifying data points after render will not automatically trigger a re-render. After\nmodifying your data points call the `updateDataPoints()` method on the component to\ntrigger a re-render.\n"
					},
					{
						"tag": "example",
						"text": "\n<style>\n  chef-radial-chart .failed, chef-radial-chart .critical {\n    color: var(--chef-critical);\n  }\n  chef-radial-chart .warning, chef-radial-chart .warning {\n    color: var(--chef-warning);\n  }\n  chef-radial-chart .success, chef-radial-chart .major {\n    color: var(--chef-ok);\n  }\n  chef-radial-chart .skipped, chef-radial-chart .minor {\n    color: var(--chef-unknown);\n  }\n</style>\n<chef-radial-chart style=\"width: 220px; height: 220px;\">\n  <span slot=\"innerText\">Text for the center of the chart</span>\n\n  <chef-data-point value=\"4\" class=\"failed\">4 Failed</chef-data-point>\n  <chef-data-point value=\"3\" class=\"warning\">3 Warning</chef-data-point>\n  <chef-data-point value=\"2\" class=\"success\">2 Successful</chef-data-point>\n  <chef-data-point value=\"1\" class=\"skipped\">1 Skipped</chef-data-point>\n\n  <chef-data-point value=\"4\" secondary class=\"critical\">Critical</chef-data-point>\n  <chef-data-point value=\"3\" secondary class=\"warning\">Warning</chef-data-point>\n  <chef-data-point value=\"2\" secondary class=\"major\">Major</chef-data-point>\n  <chef-data-point value=\"1\" secondary class=\"minor\">Minor</chef-data-point>\n</chef-radial-chart>\n"
					},
					{
						"tag": "example",
						"text": "\n<style>\n  chef-radial-chart .failed, chef-radial-chart .critical {\n    color: var(--chef-critical);\n  }\n  chef-radial-chart .warning, chef-radial-chart .warning {\n    color: var(--chef-warning);\n  }\n  chef-radial-chart .success, chef-radial-chart .major {\n    color: var(--chef-ok);\n  }\n  chef-radial-chart .skipped, chef-radial-chart .minor {\n    color: var(--chef-unknown);\n  }\n</style>\n<chef-radial-chart gap-size=\"5\" style=\"width: 220px; height: 220px;\">\n  <span slot=\"innerText\">Text for the center of the chart</span>\n\n  <chef-data-point value=\"\" class=\"failed\">4 Failed</chef-data-point>\n  <chef-data-point value=\"\" class=\"warning\">3 Warning</chef-data-point>\n  <chef-data-point value=\"2\" class=\"success\">2 Successful</chef-data-point>\n  <chef-data-point value=\"1\" class=\"skipped\">1 Skipped</chef-data-point>\n</chef-radial-chart>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-radial-chart',\n  styleUrl: './chef-radial-chart.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1212,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1213,
							"name": "new ChefRadialChart",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ChefRadialChart",
								"id": 1202
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 105,
							"character": 3
						}
					]
				},
				{
					"id": 1209,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 101,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1204,
					"name": "gapSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The width of the gap (in degrees) to apply between chart segments."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 92,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "2"
				},
				{
					"id": 1203,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Optionally set an id. This is automatically set to a unique ID if left blank."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 87,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1205,
					"name": "tooltips",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Optionally hide tooltips. They are shown by default."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 97,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 1216,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1217,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 119,
							"character": 19
						}
					]
				},
				{
					"id": 1220,
					"name": "createTooltips",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1221,
							"name": "createTooltips",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1222,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 159,
							"character": 16
						}
					]
				},
				{
					"id": 1223,
					"name": "drawSegment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1224,
							"name": "drawSegment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1225,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1226,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1229,
													"name": "cornerRadius",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
															"line": 169,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "0"
												},
												{
													"id": 1227,
													"name": "innerRadius",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
															"line": 169,
															"character": 27
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1228,
													"name": "outerRadius",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
															"line": 169,
															"character": 40
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1229,
														1227,
														1228
													]
												}
											],
											"sources": [
												{
													"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
													"line": 169,
													"character": 14
												}
											]
										}
									}
								},
								{
									"id": 1230,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__1",
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 169,
							"character": 13
						}
					]
				},
				{
					"id": 1210,
					"name": "handleDataPointUpdated",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'updated'"
							}
						}
					],
					"signatures": [
						{
							"id": 1211,
							"name": "handleDataPointUpdated",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 103,
							"character": 43
						}
					]
				},
				{
					"id": 1231,
					"name": "handleHover",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1232,
							"name": "handleHover",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1233,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 183,
							"character": 13
						}
					]
				},
				{
					"id": 1218,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1219,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 123,
							"character": 8
						}
					]
				},
				{
					"id": 1214,
					"name": "updateDataPoints",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1215,
							"name": "updateDataPoints",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 112,
							"character": 24
						}
					]
				},
				{
					"id": 1206,
					"name": "dataPoints",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1207,
							"name": "primary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
									"line": 99,
									"character": 73
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "undefined"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1208,
							"name": "secondary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
									"line": 99,
									"character": 88
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "undefined"
								}
							},
							"defaultValue": " []"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1207,
								1208
							]
						}
					],
					"sources": [
						{
							"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
							"line": 99,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1212
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1209,
						1204,
						1203,
						1205
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1216,
						1220,
						1223,
						1210,
						1231,
						1218,
						1214
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1206
					]
				}
			],
			"sources": [
				{
					"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
					"line": 82,
					"character": 28
				}
			]
		},
		{
			"id": 1386,
			"name": "ChefRadio",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA toggle button. Uses the chef-option atom to define it's different states.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-radio>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-radio>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-radio',\n  styleUrl: './chef-radio.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1389,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 28,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1388,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 26,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1390,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 29,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1391,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 31,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLChefOptionElement"
					}
				},
				{
					"id": 1387,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value of the currently toggled option."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 24,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1401,
					"name": "clearOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1402,
							"name": "clearOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HTMLChefOptionElement"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 61,
							"character": 14
						}
					]
				},
				{
					"id": 1395,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1396,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 39,
							"character": 18
						}
					]
				},
				{
					"id": 1397,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1398,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 49,
							"character": 20
						}
					]
				},
				{
					"id": 1392,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1393,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1394,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 33,
							"character": 30
						}
					]
				},
				{
					"id": 1399,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1400,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-radio/chef-radio.tsx",
							"line": 55,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1389,
						1388,
						1390,
						1391,
						1387
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1401,
						1395,
						1397,
						1392,
						1399
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-radio/chef-radio.tsx",
					"line": 19,
					"character": 22
				}
			]
		},
		{
			"id": 1257,
			"name": "ChefReadMe",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-read-me',\n  styleUrl: 'chef-read-me.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1258,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1259,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/internal/chef-read-me/chef-read-me.tsx",
							"line": 9,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1258
					]
				}
			],
			"sources": [
				{
					"fileName": "src/internal/chef-read-me/chef-read-me.tsx",
					"line": 7,
					"character": 23
				}
			]
		},
		{
			"id": 1403,
			"name": "ChefScrollTop",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nButton that scrolls the user to the top of the page. The button is positioned\nto be displayed after the user scrolls the equivalent of one viewport height.\n"
					},
					{
						"tag": "example",
						"text": "\n<div style=\"height: 3000px\">\n Scroll to see the button and try it out!\n <chef-scroll-top></chef-scroll-top>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-scroll-top',\n  styleUrl: 'chef-scroll-top.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1404,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-scroll-top/chef-scroll-top.tsx",
							"line": 22,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1405,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1406,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-scroll-top/chef-scroll-top.tsx",
							"line": 24,
							"character": 8
						}
					]
				},
				{
					"id": 1407,
					"name": "scrollToTop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1408,
							"name": "scrollToTop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-scroll-top/chef-scroll-top.tsx",
							"line": 37,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1404
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1405,
						1407
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-scroll-top/chef-scroll-top.tsx",
					"line": 20,
					"character": 26
				}
			]
		},
		{
			"id": 1127,
			"name": "ChefScrollfader",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nScrollfader behavior. The element contained within the scrollfader will remain invisible until the page is scrolled to the scrollfader. The element will then fade in. This is generally used for elements that will have a fixed position on the page, otherwise they would never be visible.\n\nNote: IE11 Support is dependent on a polyfill.\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='height: 2000px'>\n  <h1>Scroll to see the scrollfader in action</h1>\n  <chef-scrollfader>\n    <h2 style='position: fixed;'>I should fade in when the document is scrolled</h2>\n  </chef-scrollfader>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-scrollfader',\n  styleUrl: 'chef-scrollfader.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1128,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-scrollfader/chef-scrollfader.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1131,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1132,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-scrollfader/chef-scrollfader.tsx",
							"line": 33,
							"character": 18
						}
					]
				},
				{
					"id": 1129,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1130,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-scrollfader/chef-scrollfader.tsx",
							"line": 26,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1128
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1131,
						1129
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-scrollfader/chef-scrollfader.tsx",
					"line": 22,
					"character": 28
				}
			]
		},
		{
			"id": 1409,
			"name": "ChefSelect",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-select>` molecule defines a custom select molecule. The select molecule\nwill fill the width of it's container.\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2' selected>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select value='opt3'>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select value='opt3' change='alert(\"Value Changed!\")'>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<div style='width: 200px'>\n  <chef-select disabled='true'>\n    <chef-option>select something</chef-option>\n    <chef-option value='opt1'>Option 1</chef-option>\n    <chef-option value='opt2'>Option 2</chef-option>\n    <chef-option value='opt3'>Option 3</chef-option>\n  </chef-select>\n</div>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-select',\n  styleUrl: 'chef-select.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1417,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 95,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1419,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Emitted when the value of the molecule changes."
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 101,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1411,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Disable your select menu by setting this to true"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 88,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1420,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 103,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1416,
					"name": "focused",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 94,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1415,
					"name": "focusedIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 93,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1418,
					"name": "minWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 96,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1412,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 90,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "HTMLChefOptionElement"
						}
					},
					"defaultValue": " []"
				},
				{
					"id": 1414,
					"name": "selectedContent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 92,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1413,
					"name": "selectedIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 91,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1410,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The selected value"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 83,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1454,
					"name": "activate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1455,
							"name": "activate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1456,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 240,
							"character": 18
						}
					]
				},
				{
					"id": 1448,
					"name": "clamp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1449,
							"name": "clamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1450,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 226,
							"character": 15
						}
					]
				},
				{
					"id": 1442,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1443,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 172,
							"character": 18
						}
					]
				},
				{
					"id": 1444,
					"name": "componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1445,
							"name": "componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 189,
							"character": 27
						}
					]
				},
				{
					"id": 1426,
					"name": "handleClickActivation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1427,
							"name": "handleClickActivation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1428,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 120,
							"character": 40
						}
					]
				},
				{
					"id": 1439,
					"name": "handleDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1440,
							"name": "handleDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1441,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 167,
							"character": 12
						}
					]
				},
				{
					"id": 1434,
					"name": "handleEscape",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1435,
							"name": "handleEscape",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 157,
							"character": 14
						}
					]
				},
				{
					"id": 1421,
					"name": "handleFocus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'focus'"
							}
						}
					],
					"signatures": [
						{
							"id": 1422,
							"name": "handleFocus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 105,
							"character": 30
						}
					]
				},
				{
					"id": 1423,
					"name": "handleFocusOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'focusout'"
							}
						}
					],
					"signatures": [
						{
							"id": 1424,
							"name": "handleFocusOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1425,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 111,
							"character": 36
						}
					]
				},
				{
					"id": 1432,
					"name": "handleKeyActivation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1433,
							"name": "handleKeyActivation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 147,
							"character": 21
						}
					]
				},
				{
					"id": 1429,
					"name": "handleKeydown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'keydown'"
							}
						}
					],
					"signatures": [
						{
							"id": 1430,
							"name": "handleKeydown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1431,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 133,
							"character": 34
						}
					]
				},
				{
					"id": 1436,
					"name": "handleUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1437,
							"name": "handleUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1438,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 162,
							"character": 10
						}
					]
				},
				{
					"id": 1451,
					"name": "makeSelection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1452,
							"name": "makeSelection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1453,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 230,
							"character": 23
						}
					]
				},
				{
					"id": 1446,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1447,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 197,
							"character": 8
						}
					]
				},
				{
					"id": 1457,
					"name": "syncOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1458,
							"name": "syncOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1459,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-select/chef-select.tsx",
							"line": 247,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1417,
						1419,
						1411,
						1420,
						1416,
						1415,
						1418,
						1412,
						1414,
						1413,
						1410
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1454,
						1448,
						1442,
						1444,
						1426,
						1439,
						1434,
						1421,
						1423,
						1432,
						1429,
						1436,
						1451,
						1446,
						1457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-select/chef-select.tsx",
					"line": 78,
					"character": 23
				}
			]
		},
		{
			"id": 1460,
			"name": "ChefSeparator",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-separator>` molecule is used to separate sections of content.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-separator></chef-separator>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-separator>\n  <chef-pill>10 of 48</chef-pill>\n</chef-separator>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-separator>\n  <chef-pill>\n    <chef-loading-spinner size='14'></chef-loading-spinner>\n    Loading...\n  </chef-pill>\n</chef-separator>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-separator>\n  <chef-button id='load-btn'>Load more</chef-button>\n</chef-separator>\n\n<script>\n  const loadBtn = document.getElementById('load-btn');\n  loadBtn.addEventListener('click', e => alert('load more'));\n</script>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-separator>\n  <chef-pill id='expand-pill'>\n    Scan Jobs <chef-pill>12</chef-pill>\n  </chef-pill>\n  <chef-button id='expand-btn'>\n    <chef-icon>add</chef-icon>\n  </chef-button>\n</chef-separator>\n<chef-expander id='expander'>\n  <h2>Some content</h2>\n</chef-expander>\n\n<style>\n  #expand-pill { background: var(--chef-lightest-grey); }\n  #expand-btn {\n    background: var(--chef-lightest-grey); position: absolute; right: 0; margin: 0;\n  }\n</style>\n\n<script>\n  const expandBtn = document.getElementById('expand-btn');\n  const expander = document.getElementById('expander');\n  expandBtn.addEventListener('click', () => expander.toggle());\n</script>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-separator',\n  styleUrl: 'chef-separator.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1461,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1462,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-separator/chef-separator.tsx",
							"line": 65,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1461
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-separator/chef-separator.tsx",
					"line": 63,
					"character": 26
				}
			]
		},
		{
			"id": 1463,
			"name": "ChefSidePanel",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nSlide out panel from the right. This is a very simple atom - it accepts one property\nto determine whether it should be shown or hidden as well as comes with the default\nstyling of positioning the close button in the top right corner. For the button to be\nstyled properly, make sure to put label=\"close\" attribute on your button.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-button id='open-button' class='open-button' primary>\n  Open, sesame!\n</chef-button>\n<chef-side-panel visible='true' id='side-panel'>\n <chef-button label=\"close\" id='close-button' secondary>\n   <chef-icon>close</chef-icon>\n </chef-button>\n More side panel content!\n</chef-side-panel>\n\n<script>\n  const panel = document.getElementById('side-panel');\n  const closeBtn = document.getElementById('close-button');\n  const openBtn = document.getElementById('open-button');\n\n  closeBtn.addEventListener('click', e => panel.setAttribute('visible', 'false'));\n  openBtn.addEventListener('click', e => panel.setAttribute('visible', 'true'));\n\n  function clickOutside() {\n    panel.setAttribute('visible', 'false')\n  }\n</script>\n\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-side-panel',\n  styleUrl: 'chef-side-panel.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1465,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 47,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1464,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Boolean to show/hide the side panel"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 45,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1466,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1467,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 49,
							"character": 18
						}
					]
				},
				{
					"id": 1470,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1471,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 57,
							"character": 8
						}
					]
				},
				{
					"id": 1472,
					"name": "togglePanel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1473,
							"name": "togglePanel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 63,
							"character": 21
						}
					]
				},
				{
					"id": 1468,
					"name": "watchHandler",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Watch",
							"type": {
								"type": "reference",
								"name": "Watch"
							},
							"arguments": {
								"propName": "'visible'"
							}
						}
					],
					"signatures": [
						{
							"id": 1469,
							"name": "watchHandler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
							"line": 53,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1465,
						1464
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1466,
						1470,
						1472,
						1468
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-side-panel/chef-side-panel.tsx",
					"line": 40,
					"character": 26
				}
			]
		},
		{
			"id": 1133,
			"name": "ChefSnippet",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-snippet>` atom is used to display syntax-highlighted code blocks.\n\nAs of 2018.10.25 the default supported languages are:\n\n -  markup (and aliases xml, html mathml, and svg)\n -  javascript (and alias js)\n -  css\n -  clike (read this one as \"like the C language\")\n\nAutomate is configured to use these additional languages as well:\n\n -  json\n -  ruby\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-snippet code=\"<h1>Highlight me</h1>\"></chef-snippet>\n"
					},
					{
						"tag": "example",
						"text": "\n<details style=\"margin:1em;cursor:pointer;\">\n  <summary>Example Snippet</summary>\n  <chef-snippet code=\"const el = document.querySelector('h1');\" lang=\"js\"></chef-snippet>\n</details>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-snippet',\n  styleUrl: 'chef-snippet.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1134,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The code snippet to be highlighted."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-snippet/chef-snippet.tsx",
							"line": 46,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1135,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The language the code snippet is written in.\nSee the \"Description\" for active languages and http://prismjs.com/#languages-list for\na list of all available languages."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-snippet/chef-snippet.tsx",
							"line": 53,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"html\""
				},
				{
					"id": 1138,
					"name": "highlight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1139,
							"name": "highlight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1140,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1141,
									"name": "lang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"html\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-snippet/chef-snippet.tsx",
							"line": 62,
							"character": 19
						}
					]
				},
				{
					"id": 1136,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1137,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-snippet/chef-snippet.tsx",
							"line": 55,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1134,
						1135
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1138,
						1136
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-snippet/chef-snippet.tsx",
					"line": 42,
					"character": 24
				}
			]
		},
		{
			"id": 1142,
			"name": "ChefSortToggle",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-sort-toggle>` atom is used to display a sort button.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-sort-toggle order='none'></chef-sort-toggle>\n<chef-sort-toggle order='asc'></chef-sort-toggle>\n<chef-sort-toggle order='desc'></chef-sort-toggle>\n<chef-sort-toggle></chef-sort-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-table class='table'>\n  <chef-tr>\n    <chef-th>\n      Name\n      <chef-sort-toggle sort=\"name\"></chef-sort-toggle>\n    </chef-th>\n    <chef-th>\n      Date Created\n      <chef-sort-toggle sort=\"date\" order='asc'></chef-sort-toggle>\n    </chef-th>\n    <chef-th>\n      Status\n      <chef-sort-toggle sort=\"status\" order='desc'></chef-sort-toggle>\n    </chef-th>\n  </chef-tr>\n</chef-table>\n<chef-snippet class='snippet' lang='js'></chef-snippet>\n\n<style>\n  .table { margin: 1em; }\n</style>\n\n<script>\n  const table = document.querySelector('.table');\n  const snippet = document.querySelector('.snippet');\n  table.addEventListener('sort-toggled', event => {\n    snippet.code = JSON.stringify(event.detail, null, 2);\n  });\n</script>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-sort-toggle',\n  styleUrl: 'chef-sort-toggle.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1143,
					"name": "order",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicates whether sort button is displayed as `asc` ↑, `desc` ↓, or `none` ↕."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true, reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 53,
							"character": 53
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "asc"
							},
							{
								"type": "stringLiteral",
								"value": "desc"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					},
					"defaultValue": "\"none\""
				},
				{
					"id": 1144,
					"name": "sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Optionally assign a column sort name."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 58,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1145,
					"name": "sortToggled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "`sort-toggled` event is emitted whenever the `order` prop is changed.",
						"text": "Detail: `{ order: 'asc' | 'desc' | 'none', sort: string }`\n"
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {
								"opts": "{ eventName: 'sort-toggled', bubbles: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 65,
							"character": 66
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1150,
					"name": "onClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1151,
							"name": "onClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 101,
							"character": 17
						}
					]
				},
				{
					"id": 1148,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1149,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 90,
							"character": 8
						}
					]
				},
				{
					"id": 1146,
					"name": "toggle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Method",
							"type": {
								"type": "reference",
								"name": "Method"
							},
							"arguments": {}
						}
					],
					"signatures": [
						{
							"id": 1147,
							"name": "toggle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Toggles order `prop` between `asc` ↑, `desc` ↓, or `none` ↕."
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
							"line": 71,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1143,
						1144,
						1145
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1150,
						1148,
						1146
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-sort-toggle/chef-sort-toggle.tsx",
					"line": 48,
					"character": 27
				}
			]
		},
		{
			"id": 1474,
			"name": "ChefStatusFilterGroup",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA group of status filters. Uses the chef-option atom to render the status filters.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-status-filter-group id=\"filters-example\">\n  <chef-option class=\"filter general\" value=\"general\">\n    <chef-icon class=\"filter-icon\">group_work</chef-icon>\n    <div class=\"filter-label\">Total</div>\n    <div class=\"filter-total\">30</div>\n  </chef-option>\n  <chef-option class=\"filter critical\" value='critical'>\n    <chef-icon class=\"filter-icon\">warning</chef-icon>\n    <div class=\"filter-label\">Critical</div>\n    <div class=\"filter-total\">10</div>\n  </chef-option>\n  <chef-option class=\"filter warning\" value='warning'>\n    <chef-icon class=\"filter-icon\">error</chef-icon>\n    <div class=\"filter-label\">Warning</div>\n    <div class=\"filter-total\">5</div>\n  </chef-option>\n  <chef-option class=\"filter success\" value='success'>\n    <chef-icon class=\"filter-icon\">check_circle</chef-icon>\n    <div class=\"filter-label\">OK</div>\n    <div class=\"filter-total\">5</div>\n  </chef-option>\n  <chef-option class=\"filter disconnected\" value='disconnected'>\n    <chef-icon class=\"filter-icon\"></chef-icon>\n    <div class=\"filter-label\">Disconnected</div>\n    <div class=\"filter-total\">8</div>\n  </chef-option>\n  <chef-option class=\"filter connected\" value='connected'>\n    <chef-icon class=\"filter-icon\">link</chef-icon>\n    <div class=\"filter-label\">Connected</div>\n    <div class=\"filter-total\">22</div>\n  </chef-option>\n  <chef-option class=\"filter unknown\" value='unknown'>\n    <chef-icon class=\"filter-icon\">help</chef-icon>\n    <div class=\"filter-label\">Unknown</div>\n    <div class=\"filter-total\">10</div>\n  </chef-option>\n</chef-status-filter-group>\n\n<chef-button id=\"lean-toggle\" primary>Toggle lean attribute</chef-button>\n\n<script>\n  const button = document.getElementById('lean-toggle');\n  const filters = document.getElementById('filters-example');\n  button.addEventListener('click', () => filters.toggleAttribute('lean'));\n</script>\n\n<style>\n  #lean-toggle { margin-left: 0; }\n</style>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-status-filter-group',\n  styleUrl: './chef-status-filter-group.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1477,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 72,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1476,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 70,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1478,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 73,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1479,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 75,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLChefOptionElement"
					}
				},
				{
					"id": 1475,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value of the currently toggled option."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 68,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1489,
					"name": "clearOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1490,
							"name": "clearOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HTMLChefOptionElement"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 114,
							"character": 14
						}
					]
				},
				{
					"id": 1483,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1484,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 86,
							"character": 18
						}
					]
				},
				{
					"id": 1485,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1486,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 102,
							"character": 20
						}
					]
				},
				{
					"id": 1480,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1481,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1482,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 77,
							"character": 30
						}
					]
				},
				{
					"id": 1491,
					"name": "handleKeypress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1492,
							"name": "handleKeypress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1493,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 120,
							"character": 16
						}
					]
				},
				{
					"id": 1487,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1488,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
							"line": 108,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1477,
						1476,
						1478,
						1479,
						1475
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1489,
						1483,
						1485,
						1480,
						1491,
						1487
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-status-filter-group/chef-status-filter-group.tsx",
					"line": 63,
					"character": 34
				}
			]
		},
		{
			"id": 1152,
			"name": "ChefStep",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-step>` atom is used to define a step within a\n[`<chef-stepper>`](/molecules/chef-stepper) molecule.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step>Add nodes</chef-step>\n  <chef-step>Add credentials</chef-step>\n  <chef-step selected>Preview nodes</chef-step>\n  <chef-step disabled>Add profiles</chef-step>\n  <chef-step disabled>Add scheduler</chef-step>\n</chef-stepper>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step>\n    <chef-icon>check</chef-icon>\n    <a href=\"\">Add nodes</a>\n  </chef-step>\n  <chef-step>\n    <chef-icon>check</chef-icon>\n    <a href=\"\">Add credentials</a>\n  </chef-step>\n  <chef-step selected>\n    <a href=\"\">Preview nodes</a>\n  </chef-step>\n  <chef-step disabled>\n    <a href=\"\">Add profiles</a>\n  </chef-step>\n  <chef-step disabled>\n    <a href=\"\">Add scheduler</a>\n  </chef-step>\n</chef-stepper>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-step',\n  styleUrl: 'chef-step.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1153,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicates that the step is disabled."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-step/chef-step.tsx",
							"line": 47,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1154,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicates that the step is selected."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-step/chef-step.tsx",
							"line": 52,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1155,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1156,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-step/chef-step.tsx",
							"line": 54,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1153,
						1154
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1155
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-step/chef-step.tsx",
					"line": 42,
					"character": 21
				}
			]
		},
		{
			"id": 1494,
			"name": "ChefStepper",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nThe `<chef-stepper>` molecule is used to display a list of\n[`<chef-step>`](/atoms/chef-step) atoms.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step selected>Add nodes</chef-step>\n  <chef-step disabled>Add credentials</chef-step>\n  <chef-step disabled>Preview nodes</chef-step>\n  <chef-step disabled>Add profiles</chef-step>\n  <chef-step disabled>Add scheduler</chef-step>\n</chef-stepper>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step>Add nodes</chef-step>\n  <chef-step>Add credentials</chef-step>\n  <chef-step selected>Preview nodes</chef-step>\n  <chef-step disabled>Add profiles</chef-step>\n  <chef-step disabled>Add scheduler</chef-step>\n</chef-stepper>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step>Add nodes</chef-step>\n  <chef-step>Add credentials</chef-step>\n  <chef-step>Preview nodes</chef-step>\n  <chef-step>Add profiles</chef-step>\n  <chef-step selected>Add scheduler</chef-step>\n</chef-stepper>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-stepper>\n  <chef-step>Add nodes</chef-step>\n  <chef-step>Add credentials</chef-step>\n  <chef-step selected>Preview nodes</chef-step>\n  <chef-step>Add profiles</chef-step>\n  <chef-step>Add scheduler</chef-step>\n</chef-stepper>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-stepper',\n  styleUrl: 'chef-stepper.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1495,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1496,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-stepper/chef-stepper.tsx",
							"line": 50,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1495
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-stepper/chef-stepper.tsx",
					"line": 48,
					"character": 24
				}
			]
		},
		{
			"id": 1157,
			"name": "ChefSubheading",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nChild component for chef-page-header that displays the sub-heading (the text below the heading).\nOnly text and inline elements should be nested inside of this element.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-page-header>\n  <chef-heading>Some Heading Text</chef-heading>\n  <chef-subheading>Some subheading text that goes below the heading.</chef-subheading>\n</chef-page-header>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-subheading',\n  styleUrl: './chef-subheading.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1158,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1159,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-subheading/chef-subheading.tsx",
							"line": 20,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1158
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-subheading/chef-subheading.tsx",
					"line": 19,
					"character": 27
				}
			]
		},
		{
			"id": 1497,
			"name": "ChefTabSelector",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA selection of tabs. Uses the chef-option atom to define its different states.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tab-selector>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-tab-selector>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tab-selector value='opt2'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-tab-selector>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tab-selector>\n  <chef-option value='opt1'><chef-icon>thumb_up</chef-icon></chef-option>\n  <chef-option value='opt2'><chef-icon>thumb_down</chef-icon></chef-option>\n</chef-tab-selector>\n"
					},
					{
						"tag": "example",
						"text": "\n<script>\n  const toggle = document.querySelector('#ex1toggle');\n  toggle.addEventListener('change', (event) => alert(event.target.value));\n</script>\n\n<chef-tab-selector id='ex1toggle'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-tab-selector>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-tab-selector',\n  styleUrl: './chef-tab-selector.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1500,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 53,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1499,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 51,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1501,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 54,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1502,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 56,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLChefOptionElement"
					}
				},
				{
					"id": 1498,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value of the currently selected tab."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 49,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1512,
					"name": "clearOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1513,
							"name": "clearOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HTMLChefOptionElement"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 89,
							"character": 14
						}
					]
				},
				{
					"id": 1506,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1507,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 67,
							"character": 18
						}
					]
				},
				{
					"id": 1508,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1509,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 77,
							"character": 20
						}
					]
				},
				{
					"id": 1503,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1504,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1505,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 58,
							"character": 30
						}
					]
				},
				{
					"id": 1510,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1511,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
							"line": 83,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1500,
						1499,
						1501,
						1502,
						1498
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1512,
						1506,
						1508,
						1503,
						1510
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-tab-selector/chef-tab-selector.tsx",
					"line": 44,
					"character": 28
				}
			]
		},
		{
			"id": 1514,
			"name": "ChefToggle",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA toggle button. Uses the chef-option atom to define it's different states.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle value='opt2'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-toggle>\n  <chef-option value='opt1'><chef-icon>thumb_up</chef-icon></chef-option>\n  <chef-option value='opt2'><chef-icon>thumb_down</chef-icon></chef-option>\n</chef-toggle>\n"
					},
					{
						"tag": "example",
						"text": "\n<script>\n  const toggle = document.querySelector('#ex1toggle');\n  toggle.addEventListener('change', (event) => alert(event.target.value));\n</script>\n\n<chef-toggle id='ex1toggle'>\n  <chef-option value='opt1'>Option 1</chef-option>\n  <chef-option value='opt2'>Option 2</chef-option>\n  <chef-option value='opt3'>Option 3</chef-option>\n</chef-toggle>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-toggle',\n  styleUrl: './chef-toggle.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1517,
					"name": "change",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 53,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1516,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 51,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1518,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Event",
							"type": {
								"type": "reference",
								"name": "Event"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 54,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitter"
					}
				},
				{
					"id": 1519,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 56,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLChefOptionElement"
					}
				},
				{
					"id": 1515,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The value of the currently toggled option."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ mutable: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 49,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"\""
				},
				{
					"id": 1529,
					"name": "clearOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1530,
							"name": "clearOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HTMLChefOptionElement"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 86,
							"character": 14
						}
					]
				},
				{
					"id": 1523,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1524,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 64,
							"character": 18
						}
					]
				},
				{
					"id": 1525,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1526,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 74,
							"character": 20
						}
					]
				},
				{
					"id": 1520,
					"name": "handleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Listen",
							"type": {
								"type": "reference",
								"name": "Listen"
							},
							"arguments": {
								"eventName": "'click'"
							}
						}
					],
					"signatures": [
						{
							"id": 1521,
							"name": "handleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1522,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 58,
							"character": 30
						}
					]
				},
				{
					"id": 1527,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1528,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
							"line": 80,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1517,
						1516,
						1518,
						1519,
						1515
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1529,
						1523,
						1525,
						1520,
						1527
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-toggle/chef-toggle.tsx",
					"line": 44,
					"character": 23
				}
			]
		},
		{
			"id": 1531,
			"name": "ChefToolbar",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA container for buttons for above tables\n"
					},
					{
						"tag": "example",
						"text": "\n\n<chef-toolbar>\n <chef-button>A button</chef-button>\n</chef-toolbar>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n    tag: 'chef-toolbar',\n    styleUrl: 'chef-toolbar.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1532,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1533,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/molecules/chef-toolbar/chef-toolbar.tsx",
							"line": 18,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1532
					]
				}
			],
			"sources": [
				{
					"fileName": "src/molecules/chef-toolbar/chef-toolbar.tsx",
					"line": 17,
					"character": 24
				}
			]
		},
		{
			"id": 1160,
			"name": "ChefTooltip",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nchef-tooltip provides a way to create simple tooltips for elements.\nYou can change the background color of the tooltip with the --tooltip-color css variable.\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip for='fancy-button'>Fancy Button Tooltip</chef-tooltip>\n<chef-button primary id='fancy-button'>A Button</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip for='another-button' delay=1000>A Tooltip with a longer delay</chef-tooltip>\n<chef-button primary id='another-button'>Another Button</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip for='not-a-button'>A tooltip for something other than a button</chef-tooltip>\n<div style='padding: 1em;' id='not-a-button'>This is not a button. But it has a tooltip.</div>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip for='complex-tooltip'>\n  <div style='padding: 1em;'>\n    <span style='color: red;'>Tooltips can even contain markup and styling</span>\n  </div>\n</chef-tooltip>\n<chef-button primary id='complex-tooltip'>Yet another button</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip style='--tooltip-color: lightblue;' for='fancy-background'>A Tooltip Of A Different Color</chef-tooltip>\n<chef-button primary id='fancy-background'>Colored Tooltips!</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip follow for='following-tooltip'>Tooltip that follows</chef-tooltip>\n<p id='following-tooltip'>\n   once upon a midnight dreary, while i pondered, weak and weary. over many a\n   quaint and curious volume of forgotten lore. while i nodded, nearly napping,\n   suddenly there came a tapping. as of some one gently rapping, rapping at my\n   chamber door. 'tis some visiter, i muttered, tapping at my chamber door. only\n   this, and nothing more. ah, distinctly i remember it was in the bleak december.\n   and each separate dying ember wrought its ghost upon the floor. eagerly i wished\n   the morrow;—vainly i had sought to borrow. from my books surcease of\n   sorrow—sorrow for the lost lenore. for the rare and radiant maiden whom the\n   angels name lenore. nameless here for evermore. and the silken sad uncertain\n   rustling of each purple curtain thrilled me, filled me with fantastic terrors\n</p>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip offset='-50 0' for='offset-tooltip'>offset tooltip</chef-tooltip>\n<chef-button primary id='offset-tooltip'>Button</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip position='left' for='left-tooltip'>Left</chef-tooltip>\n<chef-button primary id='left-tooltip'>Left</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip position='right' for='right-tooltip'>Right</chef-tooltip>\n<chef-button primary id='right-tooltip'>Right</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip position='bottom' for='bottom-tooltip'>Bottom</chef-tooltip>\n<chef-button primary id='bottom-tooltip'>Bottom</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip offset='0 -50' position='left' for='offset-position'>Left offset</chef-tooltip>\n<chef-button primary id='offset-position'>Left offset</chef-button>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip follow for='following-left' position='left'>Tooltip that follows</chef-tooltip>\n<p id='following-left'>\n   once upon a midnight dreary, while i pondered, weak and weary. over many a\n   quaint and curious volume of forgotten lore. while i nodded, nearly napping,\n   suddenly there came a tapping. as of some one gently rapping, rapping at my\n   chamber door. 'tis some visiter, i muttered, tapping at my chamber door. only\n   this, and nothing more. ah, distinctly i remember it was in the bleak december.\n   and each separate dying ember wrought its ghost upon the floor. eagerly i wished\n   the morrow;—vainly i had sought to borrow. from my books surcease of\n   sorrow—sorrow for the lost lenore. for the rare and radiant maiden whom the\n   angels name lenore. nameless here for evermore. and the silken sad uncertain\n   rustling of each purple curtain thrilled me, filled me with fantastic terrors\n</p>\n"
					},
					{
						"tag": "example",
						"text": "\n<chef-tooltip interactable for='interactable-example'>\n  The contents of this tooltip can be interacted with.\n</chef-tooltip>\n<chef-button primary id='interactable-example'>Interactable Tooltip</chef-button>\n<p>\n  By default, tooltip content can't be interacted with because the tooltip will hide\n  after leaving the tooltip target. Applying an <code>interactable</code> attribute\n  will prevent the tooltip from hiding while the mouse cursor is within the tooltip.\n</p>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-tooltip',\n  styleUrl: './chef-tooltip.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1168,
					"name": "_screenPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 132,
							"character": 26
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"defaultValue": " [0, 0]"
				},
				{
					"id": 1162,
					"name": "delay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The delay before the tooltip is displayed in milliseconds."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 108,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 1173,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 143,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1165,
					"name": "follow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "If set the tooltip will follow the mouse when it is over the targetted element."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 124,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1161,
					"name": "for",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The ID of the element to attach the tooltip"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ reflectToAttr: true }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 103,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1166,
					"name": "interactable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "If set the tooltip will allow the mouse cursor to interact with its content."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 129,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1164,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The x and y offset of the tooltip in pixels."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 119,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"0 0\""
				},
				{
					"id": 1163,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The position of the tooltip in relation to the mouse/element.\nCan be one of `top`, `left`, `right` or `bottom`."
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 114,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "top"
							},
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "bottom"
							}
						]
					},
					"defaultValue": "\"top\""
				},
				{
					"id": 1167,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 131,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1169,
					"name": "screenPosition",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExported": true
					},
					"getSignature": [
						{
							"id": 1172,
							"name": "__get",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"setSignature": [
						{
							"id": 1170,
							"name": "__set",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 1171,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 134,
							"character": 20
						},
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 139,
							"character": 20
						}
					]
				},
				{
					"id": 1174,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1175,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 145,
							"character": 18
						}
					]
				},
				{
					"id": 1176,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1177,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 156,
							"character": 8
						}
					]
				},
				{
					"id": 1184,
					"name": "setStaticPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1185,
							"name": "setStaticPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1186,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 246,
							"character": 19
						}
					]
				},
				{
					"id": 1178,
					"name": "setupDynamicPositioning",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1179,
							"name": "setupDynamicPositioning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1180,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 173,
							"character": 25
						}
					]
				},
				{
					"id": 1181,
					"name": "setupStaticPositioning",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1182,
							"name": "setupStaticPositioning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1183,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
							"line": 195,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1168,
						1162,
						1173,
						1165,
						1161,
						1166,
						1164,
						1163,
						1167
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1169
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1174,
						1176,
						1184,
						1178,
						1181
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-tooltip/chef-tooltip.tsx",
					"line": 98,
					"character": 24
				}
			]
		},
		{
			"id": 1187,
			"name": "ChefTrapFocus",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "\nA wrapper element that traps focus inside of the element. Very useful for accessibility purposes.\n"
					},
					{
						"tag": "example",
						"text": "\n\n<chef-trap-focus>\n <input type=\"text\"/>\n <p>Some non-focus-able text</p>\n <p tabindex=\"0\">Some focus-able text</p>\n <input type=\"text\"/>\n <button>Button</button>\n</chef-trap-focus>\n"
					}
				]
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-trap-focus'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1188,
					"name": "el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Element",
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-trap-focus/chef-trap-focus.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					}
				},
				{
					"id": 1189,
					"name": "trap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Class name to omit"
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-trap-focus/chef-trap-focus.tsx",
							"line": 29,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 1192,
					"name": "componentDidLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1193,
							"name": "componentDidLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-trap-focus/chef-trap-focus.tsx",
							"line": 37,
							"character": 18
						}
					]
				},
				{
					"id": 1190,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1191,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/atoms/chef-trap-focus/chef-trap-focus.tsx",
							"line": 31,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1188,
						1189
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1192,
						1190
					]
				}
			],
			"sources": [
				{
					"fileName": "src/atoms/chef-trap-focus/chef-trap-focus.tsx",
					"line": 22,
					"character": 26
				}
			]
		},
		{
			"id": 1240,
			"name": "ChefTypography",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-typography',\n  styleUrl: 'chef-typography.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1241,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1242,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/design/chef-typography/chef-typography.tsx",
							"line": 9,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1241
					]
				}
			],
			"sources": [
				{
					"fileName": "src/design/chef-typography/chef-typography.tsx",
					"line": 7,
					"character": 27
				}
			]
		},
		{
			"id": 1549,
			"name": "ChefUIDoc",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-ui-doc',\n  styleUrl: 'chef-ui-doc.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1550,
					"name": "doc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "DocEntity",
						"id": 57
					}
				},
				{
					"id": 1556,
					"name": "description",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1557,
							"name": "description",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1558,
									"name": "doc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 39,
							"character": 21
						}
					]
				},
				{
					"id": 1562,
					"name": "examples",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1563,
							"name": "examples",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1564,
									"name": "doc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 86,
							"character": 18
						}
					]
				},
				{
					"id": 1559,
					"name": "properties",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1560,
							"name": "properties",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1561,
									"name": "doc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 49,
							"character": 20
						}
					]
				},
				{
					"id": 1551,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1552,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 17,
							"character": 8
						}
					]
				},
				{
					"id": 1553,
					"name": "summary",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1554,
							"name": "summary",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1555,
									"name": "doc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
							"line": 28,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1550
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1556,
						1562,
						1559,
						1551,
						1553
					]
				}
			],
			"sources": [
				{
					"fileName": "src/pages/chef-ui-doc/chef-ui-doc.tsx",
					"line": 13,
					"character": 22
				}
			]
		},
		{
			"id": 1565,
			"name": "ChefUIDocs",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"opts": "{\n  tag: 'chef-ui-docs',\n  styleUrl: 'chef-ui-docs.scss'\n}"
					}
				}
			],
			"children": [
				{
					"id": 1570,
					"name": "docIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 25,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1568,
					"name": "docType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 22,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1569,
					"name": "docs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "State",
							"type": {
								"type": "reference",
								"name": "State"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "IndexedEntities",
						"id": 10,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DocEntity",
								"id": 57
							}
						]
					}
				},
				{
					"id": 1567,
					"name": "match",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 21,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1566,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Prop",
							"type": {
								"type": "reference",
								"name": "Prop"
							},
							"arguments": {
								"opts": "{ context: 'store' }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 20,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"name": "Store"
					}
				},
				{
					"id": 1571,
					"name": "componentWillLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1572,
							"name": "componentWillLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 27,
							"character": 19
						}
					]
				},
				{
					"id": 1575,
					"name": "nav",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 1576,
							"name": "nav",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1577,
									"name": "docType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1578,
									"name": "docNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1579,
									"name": "docs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 63,
							"character": 13
						}
					]
				},
				{
					"id": 1573,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1574,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
							"line": 40,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1570,
						1568,
						1569,
						1567,
						1566
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1571,
						1575,
						1573
					]
				}
			],
			"sources": [
				{
					"fileName": "src/pages/chef-ui-docs/chef-ui-docs.tsx",
					"line": 18,
					"character": 23
				}
			]
		},
		{
			"id": 57,
			"name": "DocEntity",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 67,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "new DocEntity",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 69,
									"name": "jsonDoc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 70,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									"defaultValue": " {}"
								}
							],
							"type": {
								"type": "reference",
								"name": "DocEntity",
								"id": 57
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 25,
							"character": 18
						}
					]
				},
				{
					"id": 60,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 19,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 66,
					"name": "docType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 25,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 65,
					"name": "examples",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 24,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "Entity.id",
						"id": 9
					}
				},
				{
					"id": 59,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 18,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 64,
					"name": "properties",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 23,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Property",
							"id": 53
						}
					}
				},
				{
					"id": 63,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 22,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 62,
					"name": "styleUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 61,
					"name": "tag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 20,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 71,
					"name": "create",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"signatures": [
						{
							"id": 72,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DocEntity",
								"id": 57
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 41,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						67
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						60,
						66,
						65,
						58,
						59,
						64,
						63,
						62,
						61
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						71
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.entity.ts",
					"line": 16,
					"character": 22
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Entity",
					"id": 8
				}
			]
		},
		{
			"id": 79,
			"name": "DocEntityState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 81,
					"name": "allIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 25,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 80,
					"name": "byId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "IndexedEntities",
						"id": 10,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DocEntity",
								"id": 57
							}
						]
					}
				},
				{
					"id": 82,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 26,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Status",
						"id": 74
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						81,
						80,
						82
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.reducer.ts",
					"line": 23,
					"character": 31
				}
			]
		},
		{
			"id": 8,
			"name": "Entity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 9,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/entities/entities.ts",
							"line": 7,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/entities.ts",
					"line": 6,
					"character": 23
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"name": "DocEntity",
					"id": 57
				}
			]
		},
		{
			"id": 10,
			"name": "IndexedEntities",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 11,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"indexSignature": [
				{
					"id": 12,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {},
					"parameters": [
						{
							"id": 13,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "T"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/entities.ts",
					"line": 10,
					"character": 32
				}
			]
		},
		{
			"id": 53,
			"name": "Property",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 56,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 12,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 54,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.entity.ts",
							"line": 11,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						56,
						55,
						54
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.entity.ts",
					"line": 10,
					"character": 18
				}
			]
		},
		{
			"id": 3,
			"name": "GET_DOCS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.actions.ts",
					"line": 3,
					"character": 21
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "DOCS::GET"
			},
			"defaultValue": "\"DOCS::GET\""
		},
		{
			"id": 5,
			"name": "GET_DOCS_FAILED",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.actions.ts",
					"line": 5,
					"character": 28
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "DOCS::GET::FAILED"
			},
			"defaultValue": "\"DOCS::GET::FAILED\""
		},
		{
			"id": 4,
			"name": "GET_DOCS_SUCCESS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.actions.ts",
					"line": 4,
					"character": 29
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "DOCS::GET::SUCCESS"
			},
			"defaultValue": "\"DOCS::GET::SUCCESS\""
		},
		{
			"id": 1235,
			"name": "PADDING",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
					"line": 10,
					"character": 13
				}
			],
			"type": {
				"type": "unknown",
				"name": "20"
			},
			"defaultValue": "20"
		},
		{
			"id": 1234,
			"name": "RADIUS",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "unknown",
				"name": "100"
			},
			"defaultValue": "100"
		},
		{
			"id": 1236,
			"name": "UID",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isLet": true
			},
			"sources": [
				{
					"fileName": "src/charts/chef-radial-chart/chef-radial-chart.tsx",
					"line": 12,
					"character": 7
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "0"
		},
		{
			"id": 83,
			"name": "docIndexer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.reducer.ts",
					"line": 14,
					"character": 16
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 84,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 85,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 86,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IndexedEntities",
								"id": 10,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					]
				}
			},
			"defaultValue": " indexer(DocEntity.create)"
		},
		{
			"id": 38,
			"name": "getComponentMetaData",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"tags": [
					{
						"tag": "param",
						"text": "The json object to extract metadata from.",
						"param": "json"
					},
					{
						"tag": "returns",
						"text": "An object containing the components metadata.\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 50,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 39,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 40,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 41,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 42,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 45,
											"name": "shadow",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/entities/docs/doc.helpers.ts",
													"line": 50,
													"character": 91
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 44,
											"name": "styleUrl",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/entities/docs/doc.helpers.ts",
													"line": 50,
													"character": 75
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "src/entities/docs/doc.helpers.ts",
													"line": 50,
													"character": 57
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												45,
												44,
												43
											]
										}
									],
									"sources": [
										{
											"fileName": "src/entities/docs/doc.helpers.ts",
											"line": 50,
											"character": 52
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.helpers.ts",
							"line": 50,
							"character": 34
						}
					]
				}
			},
			"defaultValue": "\n  pipe(getDecorators,\n       find(['name', 'Component']),\n       getOr('', ['arguments', 'opts']),\n       parseObjectString)"
		},
		{
			"id": 36,
			"name": "getDecorators",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 38,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "\n  getOr([], 'decorators')"
		},
		{
			"id": 20,
			"name": "getTagList",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 12,
					"character": 16
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 22,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 23,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.helpers.ts",
							"line": 12,
							"character": 17
						}
					]
				}
			},
			"defaultValue": "\n  getOr([], ['comment', 'tags'])"
		},
		{
			"id": 24,
			"name": "getTagText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 15,
					"character": 16
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 25,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 26,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 27,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.helpers.ts",
							"line": 15,
							"character": 17
						}
					]
				}
			},
			"defaultValue": "\n  pipe(get('text'), trim)"
		},
		{
			"id": 49,
			"name": "getType",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "The type of the component is derived from it's parent directory.\nIt can be one of 'atoms', 'molecules', 'charts' or 'templates'.",
				"tags": [
					{
						"tag": "param",
						"text": "The json object to extract the type from.",
						"param": "json"
					},
					{
						"tag": "returns",
						"text": "The string representing the component type.\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 79,
					"character": 20
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 50,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 51,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 52,
									"name": "json",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/entities/docs/doc.helpers.ts",
							"line": 79,
							"character": 21
						}
					]
				}
			},
			"defaultValue": "\n  pipe(get(['sources', 0, 'fileName']),\n       split('/'),\n       nth(1))"
		},
		{
			"id": 165,
			"name": "id",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isLet": true
			},
			"sources": [
				{
					"fileName": "src/atoms/chef-checkbox/chef-checkbox.tsx",
					"line": 3,
					"character": 6
				},
				{
					"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
					"line": 7,
					"character": 6
				},
				{
					"fileName": "src/atoms/chef-option/chef-option.tsx",
					"line": 3,
					"character": 6
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			},
			"defaultValue": "0"
		},
		{
			"id": 37,
			"name": "parseObjectString",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 41,
					"character": 23
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "\n  pipe(replace(/(\\w+):/ig, '\"$1\":'),\n       replace(/'/ig, '\"'),\n       (s) => s ? JSON.parse(s) : {})"
		},
		{
			"id": 195,
			"name": "postClickText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
					"line": 4,
					"character": 19
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "Copied!"
			},
			"defaultValue": "\"Copied!\""
		},
		{
			"id": 196,
			"name": "postClickTime",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
					"line": 5,
					"character": 19
				}
			],
			"type": {
				"type": "unknown",
				"name": "1500"
			},
			"defaultValue": "1500"
		},
		{
			"id": 194,
			"name": "preClickText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/atoms/chef-clipboard/chef-clipboard.tsx",
					"line": 3,
					"character": 18
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "Copy to clipboard"
			},
			"defaultValue": "\"Copy to clipboard\""
		},
		{
			"id": 267,
			"name": "renderer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Have the renderer display code blocks as `<chef-snippet>` tags instead\nof `<pre>` tags to keep styling of code blocks consistent."
			},
			"sources": [
				{
					"fileName": "src/atoms/chef-markdown/chef-markdown.tsx",
					"line": 8,
					"character": 14
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": " Object.assign(new marked.Renderer(), {\n  code: (code: string, lang: string) => {\n    return `<chef-snippet code=\"${code.replace(/\"/g, '&quot;')}\" lang=\"${lang}\"></chef-snippet>`;\n  }\n})"
		},
		{
			"id": 96,
			"name": "rootReducer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/root.reducer.ts",
					"line": 6,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 97,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 98,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 99,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "S"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 100,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "S"
							}
						}
					]
				}
			},
			"defaultValue": " combineReducers({\n  docs: docReducer\n})"
		},
		{
			"id": 101,
			"name": "configureStore",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 102,
					"name": "configureStore",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 103,
							"name": "initialState",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "Store",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "EmptyObject"
											},
											{
												"type": "intrinsic",
												"name": "Object"
											}
										]
									},
									{
										"type": "reference",
										"name": "AnyAction"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 104,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 105,
											"name": "dispatch",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/redux/index.d.ts",
													"line": 590,
													"character": 27
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "Ext1"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												105
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/store.ts",
					"line": 7,
					"character": 27
				}
			]
		},
		{
			"id": 92,
			"name": "docReducer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 93,
					"name": "docReducer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 94,
							"name": "state",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DocEntityState",
								"id": 79
							},
							"defaultValue": " initialState"
						},
						{
							"id": 95,
							"name": "action",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "DocEntityState",
						"id": 79
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.reducer.ts",
					"line": 35,
					"character": 26
				}
			]
		},
		{
			"id": 1,
			"name": "fetchDocs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2,
					"name": "fetchDocs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Promise",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Response"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.requests.ts",
					"line": 1,
					"character": 22
				}
			]
		},
		{
			"id": 32,
			"name": "filterTags",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"returns": "A list containing the text for each matching tag.\n"
			},
			"signatures": [
				{
					"id": 33,
					"name": "filterTags",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "A list containing the text for each matching tag.\n"
					},
					"parameters": [
						{
							"id": 34,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The tag name to search for."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35,
							"name": "json",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The json object to search through."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 33,
					"character": 23
				}
			]
		},
		{
			"id": 28,
			"name": "findTag",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"returns": "The text for the first matching tag.\n"
			},
			"signatures": [
				{
					"id": 29,
					"name": "findTag",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "The text for the first matching tag.\n"
					},
					"parameters": [
						{
							"id": 30,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The tag name to search for."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31,
							"name": "json",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The json object to search through."
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 23,
					"character": 20
				}
			]
		},
		{
			"id": 46,
			"name": "getComponentProps",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 47,
					"name": "getComponentProps",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 48,
							"name": "children",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.helpers.ts",
					"line": 56,
					"character": 33
				}
			]
		},
		{
			"id": 6,
			"name": "getDocs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 7,
					"name": "getDocs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "(Anonymous function)"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.actions.ts",
					"line": 7,
					"character": 20
				}
			]
		},
		{
			"id": 14,
			"name": "indexer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 15,
					"name": "indexer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 16,
							"name": "transform",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 17,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 18,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 19,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/entities/entities.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 87,
			"name": "initialState",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isConst": true
			},
			"children": [
				{
					"id": 90,
					"name": "allIds",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "undefined"
						}
					},
					"defaultValue": " []"
				},
				{
					"id": 88,
					"name": "byId",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 30,
							"character": 6
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 89,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {}
						}
					}
				},
				{
					"id": 91,
					"name": "status",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "src/entities/docs/doc.reducer.ts",
							"line": 32,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Status",
						"id": 74
					},
					"defaultValue": " Status.notLoaded"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						90,
						88,
						91
					]
				}
			],
			"sources": [
				{
					"fileName": "src/entities/docs/doc.reducer.ts",
					"line": 29,
					"character": 18
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				74
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				115,
				1580,
				122,
				1260,
				128,
				140,
				143,
				166,
				175,
				1237,
				1270,
				1194,
				1534,
				197,
				1243,
				1281,
				1583,
				1254,
				201,
				204,
				207,
				229,
				1586,
				106,
				246,
				251,
				1589,
				260,
				1291,
				268,
				1592,
				1313,
				1319,
				1362,
				1106,
				1109,
				1202,
				1386,
				1257,
				1403,
				1127,
				1409,
				1460,
				1463,
				1133,
				1142,
				1474,
				1152,
				1494,
				1157,
				1497,
				1514,
				1531,
				1160,
				1187,
				1240,
				1549,
				1565,
				57
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				79,
				8,
				10,
				53
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				3,
				5,
				4,
				1235,
				1234,
				1236,
				83,
				38,
				36,
				20,
				24,
				49,
				165,
				37,
				195,
				196,
				194,
				267,
				96
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				101,
				92,
				1,
				32,
				28,
				46,
				6,
				14
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				87
			]
		}
	]
}