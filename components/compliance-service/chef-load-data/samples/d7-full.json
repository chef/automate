{
  "platform": {
    "name": "debian",
    "release": "8.11"
  },
  "profiles": [
    {
      "name": "apache-baseline",
      "version": "2.0.2",
      "sha256": "3e1310b071dc4d706263e9d07083e10a92b4b69e4a36cffa1eda7eaecc09969a",
      "title": "DevSec Apache Baseline",
      "maintainer": "DevSec Hardening Framework Team",
      "summary": "Test-suite for best-practice apache hardening",
      "license": "Apache 2 license",
      "copyright": "DevSec Hardening Framework Team",
      "copyright_email": "hello@dev-sec.io",
      "supports": [
        {
          "os-family": "unix"
        }
      ],
      "attributes": [

      ],
      "groups": [
        {
          "id": "controls/apache_spec.rb",
          "controls": [
            "apache-01",
            "apache-02",
            "apache-03",
            "apache-04",
            "apache-05",
            "apache-06",
            "apache-07",
            "apache-08",
            "apache-09",
            "apache-10",
            "apache-11",
            "apache-12",
            "apache-13",
            "apache-14"
          ],
          "title": "Apache server config"
        }
      ],
      "controls": [
        {
          "id": "apache-01",
          "title": "Apache should be running",
          "desc": "Apache should be running.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-01' do\n  impact 1.0\n  title 'Apache should be running'\n  desc 'Apache should be running.'\n  describe service(apache.service) do\n    it { should be_installed }\n    it { should be_running }\n  end\nend\n",
          "source_location": {
            "line": 29,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 8.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-02",
          "title": "Apache should be enabled",
          "desc": "Configure apache service to be automatically started at boot time",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-02' do\n  impact 1.0\n  title 'Apache should be enabled'\n  desc 'Configure apache service to be automatically started at boot time'\n  only_if { os[:family] != 'ubuntu' && os[:release] != '16.04' } || only_if { os[:family] != 'debian' && os[:release] != '8' }\n  describe service(apache.service) do\n    it { should be_enabled }\n  end\nend\n",
          "source_location": {
            "line": 39,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-03",
          "title": "Apache should start max. 1 root-task",
          "desc": "The Apache service in its own non-privileged account. If the web server process runs with administrative privileges, an attack who obtains control over the apache process may control the entire system.",
          "impact": 0.5,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-03' do\n  title 'Apache should start max. 1 root-task'\n  desc 'The Apache service in its own non-privileged account. If the web server process runs with administrative privileges, an attack who obtains control over the apache process may control the entire system.'\n  total_tasks = command(\"ps aux | grep #{apache.service} | grep -v grep | grep root | wc -l | tr -d [:space:]\").stdout.to_i\n  describe total_tasks do\n    it { should eq 1 }\n  end\nend\n",
          "source_location": {
            "line": 49,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-04",
          "title": "Check Apache config folder owner, group and permissions.",
          "desc": "The Apache config folder should owned and grouped by root, be writable, readable and executable by owner. It should be readable, executable by group and not readable, not writeable by others.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-04' do\n  impact 1.0\n  title 'Check Apache config folder owner, group and permissions.'\n  desc 'The Apache config folder should owned and grouped by root, be writable, readable and executable by owner. It should be readable, executable by group and not readable, not writeable by others.'\n  describe file(apache.conf_dir) do\n    it { should be_owned_by 'root' }\n    it { should be_grouped_into 'root' }\n    it { should be_readable.by('owner') }\n    it { should be_writable.by('owner') }\n    it { should be_executable.by('owner') }\n    it { should be_readable.by('group') }\n    it { should_not be_writable.by('group') }\n    it { should be_executable.by('group') }\n    it { should_not be_readable.by('others') }\n    it { should_not be_writable.by('others') }\n    it { should be_executable.by('others') }\n  end\nend\n",
          "source_location": {
            "line": 58,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-05",
          "title": "Check Apache config file owner, group and permissions.",
          "desc": "The Apache config file should owned and grouped by root, only be writable and readable by owner and not write- and readable by others.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-05' do\n  impact 1.0\n  title 'Check Apache config file owner, group and permissions.'\n  desc 'The Apache config file should owned and grouped by root, only be writable and readable by owner and not write- and readable by others.'\n  describe file(apache.conf_path) do\n    it { should be_owned_by 'root' }\n    it { should be_grouped_into 'root' }\n    it { should be_readable.by('owner') }\n    it { should be_writable.by('owner') }\n    it { should_not be_executable.by('owner') }\n    it { should be_readable.by('group') }\n    it { should_not be_writable.by('group') }\n    it { should_not be_executable.by('group') }\n    it { should_not be_readable.by('others') }\n    it { should_not be_writable.by('others') }\n    it { should_not be_executable.by('others') }\n  end\n  describe file(File.join(apache.conf_dir, '/conf-enabled/hardening.conf')) do\n    it { should be_owned_by 'root' }\n    it { should be_grouped_into 'root' }\n    it { should be_readable.by('owner') }\n    it { should be_writable.by('owner') }\n    it { should_not be_executable.by('owner') }\n    it { should be_readable.by('group') }\n    it { should_not be_writable.by('group') }\n    it { should_not be_executable.by('group') }\n    it { should_not be_readable.by('others') }\n    it { should_not be_writable.by('others') }\n    it { should_not be_executable.by('others') }\n  end\nend\n",
          "source_location": {
            "line": 77,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-06",
          "title": "User and group should be set properly",
          "desc": "For security reasons it is recommended to run Apache in its own non-privileged account.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-06' do\n  impact 1.0\n  title 'User and group should be set properly'\n  desc 'For security reasons it is recommended to run Apache in its own non-privileged account.'\n  describe apache_conf do\n    its('User') { should eq [apache.user] }\n    its('Group') { should eq [apache.user] }\n  end\nend\n",
          "source_location": {
            "line": 109,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-07",
          "title": "Set the apache server token",
          "desc": "'ServerTokens Prod' tells Apache to return only Apache as product in the server response header on the every page request",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-07' do\n  impact 1.0\n  title 'Set the apache server token'\n  desc '\\'ServerTokens Prod\\' tells Apache to return only Apache as product in the server response header on the every page request'\n\n  describe file(File.join(apache.conf_dir, '/conf-enabled/security.conf')) do\n    its('content') { should match(/^ServerTokens Prod/) }\n  end\n\n  # open bug https://github.com/chef/inspec/issues/786, if the bug solved use this test\n  # describe apache_conf do\n  #   its('ServerTokens') { should eq 'Prod' }\n  # end\nend\n",
          "source_location": {
            "line": 119,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-08",
          "title": "Should not load certain modules",
          "desc": "Apache HTTP should not load legacy modules",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-08' do\n  impact 1.0\n  title 'Should not load certain modules'\n  desc 'Apache HTTP should not load legacy modules'\n\n  module_path = File.join(apache.conf_dir, '/mods-enabled/')\n  loaded_modules = command('ls ' << module_path).stdout.split.keep_if { |file_name| /.load/.match(file_name) }\n\n  loaded_modules.each do |id|\n    describe file(File.join(module_path, id)) do\n      its('content') { should_not match(/^\\s*?LoadModule\\s+?dav_module/) }\n      its('content') { should_not match(/^\\s*?LoadModule\\s+?cgid_module/) }\n      its('content') { should_not match(/^\\s*?LoadModule\\s+?cgi_module/) }\n      its('content') { should_not match(/^\\s*?LoadModule\\s+?include_module/) }\n    end\n  end\n\n  # open bug https://github.com/chef/inspec/issues/786, if the bug solved use this test\n  # describe apache_conf do\n  #   its('LoadModule') { should_not eq 'dav_module' }\n  #   its('LoadModule') { should_not eq 'cgid_module' }\n  #   its('LoadModule') { should_not eq 'cgi_module' }\n  #   its('LoadModule') { should_not eq 'include_module' }\n  #   its('content') { should_not match(/^\\s*?LoadModule\\s+?dav_module/) }\n  #   its('content') { should_not match(/^\\s*?LoadModule\\s+?cgid_module/) }\n  #   its('content') { should_not match(/^\\s*?LoadModule\\s+?cgi_module/) }\n  #   its('content') { should_not match(/^\\s*?LoadModule\\s+?include_module/) }\n  # end\nend\n",
          "source_location": {
            "line": 134,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-09",
          "title": "Disable TRACE-methods",
          "desc": "The web server doesn’t allow TRACE request and help in blocking Cross Site Tracing attack.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-09' do\n  impact 1.0\n  title 'Disable TRACE-methods'\n  desc 'The web server doesn’t allow TRACE request and help in blocking Cross Site Tracing attack.'\n\n  describe file(File.join(apache.conf_dir, '/conf-enabled/security.conf')) do\n    its('content') { should match(/^\\s*?TraceEnable\\s+?Off/) }\n  end\n\n  # open bug https://github.com/chef/inspec/issues/786, if the bug solved use this test\n  # describe apache_conf do\n  #   its('TraceEnable') { should eq 'Off' }\n  # end\nend\n",
          "source_location": {
            "line": 164,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-10",
          "title": "Disable insecure HTTP-methods",
          "desc": "Disable insecure HTTP-methods and allow only necessary methods.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-10' do\n  impact 1.0\n  title 'Disable insecure HTTP-methods'\n  desc 'Disable insecure HTTP-methods and allow only necessary methods.'\n\n  describe file(File.join(apache.conf_dir, '/conf-enabled/hardening.conf')) do\n    its('content') { should match(/^\\s*?<LimitExcept\\s+?GET\\s+?POST>/) }\n  end\n\n  # open bug https://github.com/chef/inspec/issues/786, if the bug solved use this test\n  # describe apache_conf do\n  #   its('LimitExcept') { should eq ['GET','POST'] }\n  # end\nend\n",
          "source_location": {
            "line": 179,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-11",
          "title": "Disable Apache’s follows Symbolic Links for directories in alias.conf",
          "desc": "Should include -FollowSymLinks or +SymLinksIfOwnerMatch for directories in alias.conf",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-11' do\n  impact 1.0\n  title 'Disable Apache’s follows Symbolic Links for directories in alias.conf'\n  desc 'Should include -FollowSymLinks or +SymLinksIfOwnerMatch for directories in alias.conf'\n\n  describe file(File.join(apache.conf_dir, '/mods-enabled/alias.conf')) do\n    its('content') { should match(/-FollowSymLinks/).or match(/\\+SymLinksIfOwnerMatch/) }\n  end\nend\n",
          "source_location": {
            "line": 194,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-12",
          "title": "Disable Directory Listing for directories in alias.conf",
          "desc": "Should include -Indexes for directories in alias.conf",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-12' do\n  impact 1.0\n  title 'Disable Directory Listing for directories in alias.conf'\n  desc 'Should include -Indexes for directories in alias.conf'\n\n  describe file(File.join(apache.conf_dir, '/mods-enabled/alias.conf')) do\n    its('content') { should match(/-Indexes/) }\n  end\nend\n",
          "source_location": {
            "line": 204,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-13",
          "title": "SSL honor cipher order",
          "desc": "When choosing a cipher during an SSLv3 or TLSv1 handshake, normally the client's preference is used. If this directive is enabled, the server's preference will be used instead.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-13' do\n  impact 1.0\n  title 'SSL honor cipher order'\n  desc 'When choosing a cipher during an SSLv3 or TLSv1 handshake, normally the client\\'s preference is used. If this directive is enabled, the server\\'s preference will be used instead.'\n\n  describe file(File.join(apache.conf_dir, '/mods-enabled/ssl.conf')) do\n    its('content') { should match(/^\\s*?SSLHonorCipherOrder\\s+?On/i) }\n  end\n\n  sites_enabled_path = File.join(apache.conf_dir, '/sites-enabled/')\n  loaded_sites = command('ls ' << sites_enabled_path).stdout.split.keep_if { |file_name| /.conf/.match(file_name) }\n\n  loaded_sites.each do |id|\n    virtual_host = file(File.join(sites_enabled_path, id)).content.gsub(/#.*$/, '').scan(%r{<virtualhost.*443(.*?)<\\/virtualhost>}im).flatten\n    next if virtual_host.empty?\n    describe virtual_host do\n      it { should include(/^\\s*?SSLHonorCipherOrder\\s+?On/i) }\n    end\n  end\nend\n",
          "source_location": {
            "line": 214,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 4.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        },
        {
          "id": "apache-14",
          "title": "Enable Apache Logging",
          "desc": "Apache allows you to logging independently of your OS logging. It is wise to enable Apache logging, because it provides more information, such as the commands entered by users that have interacted with your Web server.",
          "impact": 1.0,
          "refs": [

          ],
          "tags": {
          },
          "code": "control 'apache-14' do\n  impact 1.0\n  title 'Enable Apache Logging'\n  desc 'Apache allows you to logging independently of your OS logging. It is wise to enable Apache logging, because it provides more information, such as the commands entered by users that have interacted with your Web server.'\n\n  sites_enabled_path = File.join(apache.conf_dir, '/sites-enabled/')\n  loaded_sites = command('ls ' << sites_enabled_path).stdout.split.keep_if { |file_name| /.conf/.match(file_name) }\n\n  loaded_sites.each do |id|\n    describe file(File.join(sites_enabled_path, id)).content.gsub(/#.*$/, '').scan(%r{<virtualhost(.*?)<\\/virtualhost>}im).flatten do\n      it { should include(/CustomLog.*$/i) }\n    end\n  end\nend\n",
          "source_location": {
            "line": 235,
            "ref": "apache-baseline-2.0.2/controls/apache_spec.rb"
          },
          "results": [
            {
              "status": "skipped",
              "code_desc": "Operating System Detection",
              "run_time": 3.0e-06,
              "start_time": "2018-06-27T15:02:21+01:00",
              "resource": "Operating System Detection",
              "skip_message": "Skipped control due to only_if condition."
            }
          ]
        }
      ]
    }
  ],
  "statistics": {
    "duration": 0.001481
  },
  "version": "2.2.20",
  "node_name": "to_be_generated",
  "node_uuid": "to_be_generated",
  "report_uuid": "to_be_generated",
  "end_time": "to_be_generated",
  "environment": "to_be_generated",
  "type": "inspec_report"
}