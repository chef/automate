info:
  description: |
    # Authentication
    The standard way of authenticating for the Automate API is to generate an
    API token and pass that with your API requests with the `api-token` header.

    An admin token can be created and set to a variable using the following CLI helper:

    ```
    export TOKEN=`chef-automate admin-token`
    ```

    With an admin token you can access the entire Chef Automate API â€“ including administrative
    tasks such as managing local users, managing local teams, and managing authorization policies.
    Using the token, an example curl request looks like this:

    ```
    curl -s -H "api-token: $TOKEN" https://automate.example.com/api/v0/auth/policies -v
    ```

    With the admin token, it is possible to create standard tokens with more limited permissions.
    The following curl returns a new token object whose value can be set to a new variable:

    ```
    curl -s -H "api-token: $TOKEN" -d '{"description":"New Token"}' https://automate.example.com/api/v0/auth/tokens
    {
      "id": "9d7ae605-5b6a-4850-a12f-b5cb7fa732f5",
      "description": "New Token",
      "value": "bww8EEpr39_eYMnQ2zybtrP9uzk=",
      "active": false,
      "created": "2019-12-03T00:15:10Z",
      "updated": "2019-12-03T00:15:10Z"
    }

    export TOKEN2=bww8EEpr39_eYMnQ2zybtrP9uzk=
    ```

    The Chef Automate documentation covers policies, authentication, and authorization in greater detail.
    * **[Permission for An API Client](https://automate.chef.io/docs/authorization-overview/#permission-for-an-api-client)** walks through how to limit access to the Chef Automate API by writing a policy for a standard token.
    * **[API Tokens](https://automate.chef.io/docs/api-tokens/)** explains authentication in Chef Automate.
    * **[Authorization Overview](https://automate.chef.io/docs/authorization-overview/#overview)** explains authorization in Chef Automate.
