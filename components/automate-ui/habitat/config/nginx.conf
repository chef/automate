daemon off;
pid {{ pkg.svc_var_path }}/pid;
worker_processes {{ cfg.ngx.worker_processes }};

error_log stderr {{ cfg.log.level }};

events {
  worker_connections {{ cfg.ngx.events.worker_connections }};
}

http {
  {{#with cfg.ngx.http ~}}
  include        {{ pkgPathFor "core/nginx" }}/config/mime.types;
  default_type   {{ default_type }};

  sendfile       {{ sendfile }};
  tcp_nopush     {{ tcp_nopush }};
  tcp_nodelay    {{ tcp_nodelay }};

  keepalive_timeout {{ keepalive_timeout }};

  gzip {{ gzip }};
  gzip_vary {{ gzip_vary }};
  gzip_min_length {{ gzip_min_length }};
  gzip_proxied {{ gzip_proxied }};
  gzip_types {{ gzip_types }};
  gzip_disable "{{ gzip_disable }}";

  client_body_buffer_size {{ client_body_buffer_size }};
  {{/with ~ }}

  server_tokens off;

  client_body_temp_path {{ pkg.svc_var_path }}/client-body;
  fastcgi_temp_path {{ pkg.svc_var_path }}/fastcgi;
  proxy_temp_path {{ pkg.svc_var_path }}/proxy;
  scgi_temp_path {{ pkg.svc_var_path }}/scgi_temp_path;
  uwsgi_temp_path {{ pkg.svc_var_path }}/uwsgi;

  log_format chef '$remote_user [$time_local]  '
                  '"$request" $status "$request_time" $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" $request_length';

  access_log /dev/stdout chef;

  server {
    listen 127.0.0.1:{{cfg.service.port}} ssl;

    ssl_certificate {{pkg.svc_config_path}}/service.crt;
    ssl_certificate_key {{pkg.svc_config_path}}/service.key;
    ssl_client_certificate {{pkg.svc_config_path}}/root_ca.crt;
    ssl_verify_client {{ cfg.ngx.http.ssl_verify_client }};
    ssl_verify_depth {{ cfg.ngx.http.ssl_verify_depth }};

    ssl_protocols {{cfg.ngx.http.ssl_protocols}};
    ssl_ciphers {{cfg.ngx.http.ssl_ciphers}};
    ssl_prefer_server_ciphers on;

    location /custom_settings.js {
      add_header Cache-Control "private, no-cache, no-store";
      alias {{../pkg.svc_config_path}}/custom_settings.js;
      break;
    }

    root {{pkg.path}}/dist;
    location / {
      try_files $uri $uri/ /;
    }
  }
}
