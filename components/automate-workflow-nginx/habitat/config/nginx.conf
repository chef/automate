user hab hab;

daemon off;

events {
  worker_connections {{cfg.worker_connections}};
}

http {
  include {{ pkgPathFor "chef/openresty-noroot" }}/nginx/conf/mime.types;

  client_max_body_size {{cfg.client_max_body_size}};

  # Add additional headers along to the proxied server
  proxy_set_header Host              $host:$server_port;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Scheme          $scheme;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;

  proxy_http_version                 1.1;
  # Proxy buffering is beneficial to prevent a slow client from
  # consuming an upstream. The buffer allows the upstream to
  # complete the request processing and nginx to finish serving a
  # client on a slow link. We disable buffering to allow us to proxy
  # SSE endpoints. The directive is valid at the location level so
  # we could make this more granular. But for now, given Erlang and
  # cowboy handling the requests, we don't expect longer lived
  # cowboy request processes for slow link clients to be a big
  # issue. As we work out our SSE endpoints, it seems more
  # beneficial to not have to mess with location nginx config for
  # each one.
  # This nginx ML post has some details:
  # http://mailman.nginx.org/pipermail/nginx/2012-March/032608.html
  proxy_buffering                    off;
  proxy_pass_request_headers on; # This is the default

  # http://nginx.org/en/docs/syntax.html, specifically "A value without a
  # suffix means seconds. It is recommended to always specify a suffix."

  proxy_connect_timeout   60;
  proxy_send_timeout      300;
  proxy_read_timeout      300;

  sendfile {{cfg.sendfile}};
  tcp_nodelay {{cfg.tcp_nodelay}};
  tcp_nopush {{cfg.tcp_nopush}};

  {{#if cfg.gzip.enabled}}
  gzip {{cfg.gzip.enabled}};
  gzip_http_version {{cfg.gzip.http_version}};
  gzip_comp_level {{cfg.gzip.comp_level}};
  gzip_proxied {{cfg.gzip.proxied}};
  gzip_types {{strJoin cfg.gzip.types " "}};
  {{/if}}

  keepalive_timeout {{cfg.keepalive_timeout}};

  {{#if bind.automate-workflow-server}}
  upstream delivery {
      {{#eachAlive bind.automate-workflow-server.members as |member|}}
    server {{member.sys.ip}}:{{member.cfg.port}};
      {{/eachAlive}}
  }
  {{/if}}

  server {
    server_name {{cfg.server_name}};
    port_in_redirect off;
    server_tokens off; # see below

    listen {{cfg.port}};

    include {{pkg.svc_config_path}}/nginx-locations.conf;
  }

  server {
    server_name {{cfg.server_name}};

    # don't expose version in 'Server: openresty/1.9.7.2' headers or error messages
    # with "off", this returns 'Server: openresty'
    server_tokens off;

    listen {{cfg.ssl_port}} ssl;
    ssl_certificate {{pkg.svc_config_path}}/service.crt;
    ssl_certificate_key {{pkg.svc_config_path}}/service.key;
    ssl_client_certificate {{pkg.svc_config_path}}/root_ca.crt;

    ssl_session_timeout 5m;

    ssl_protocols {{cfg.ssl_protocols}};
    ssl_ciphers {{cfg.ssl_ciphers}};
    ssl_prefer_server_ciphers on;

    include {{pkg.svc_config_path}}/nginx-locations.conf;
  }
}
