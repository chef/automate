# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Security::Mgmt::V2020_01_01_preview
  module Models
    #
    # Settings for cloud authentication management
    #
    class AuthenticationDetailsProperties

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["awsCreds"] = "AwsCredsAuthenticationDetailsProperties"
      @@discriminatorMap["awsAssumeRole"] = "AwAssumeRoleAuthenticationDetailsProperties"
      @@discriminatorMap["gcpCredentials"] = "GcpCredentialsDetailsProperties"

      def initialize
        @authenticationType = "AuthenticationDetailsProperties"
      end

      attr_accessor :authenticationType

      # @return [AuthenticationProvisioningState] State of the multi-cloud
      # connector. Possible values include: 'Valid', 'Invalid', 'Expired',
      # 'IncorrectPolicy'
      attr_accessor :authentication_provisioning_state

      # @return [Array<PermissionProperty>] The permissions detected in the
      # cloud account.
      attr_accessor :granted_permissions


      #
      # Mapper for AuthenticationDetailsProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'AuthenticationDetailsProperties',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'authenticationType',
            uber_parent: 'AuthenticationDetailsProperties',
            class_name: 'AuthenticationDetailsProperties',
            model_properties: {
              authentication_provisioning_state: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'authenticationProvisioningState',
                type: {
                  name: 'String'
                }
              },
              granted_permissions: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'grantedPermissions',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'PermissionPropertyElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
