# Format: //devtools/kokoro/config/proto/build.proto

# Build logs will be here
action {
  define_artifacts {
    regex: "**/*sponge_log.xml"
  }
}

# Fetch the token needed for reporting release status to GitHub
before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "yoshi-automation-github-key"
    }
  }
}

# Fetch magictoken to use with Magic Github Proxy 
before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "releasetool-magictoken"
      backend_type: FASTCONFIGPUSH
    }
  }
}

# Fetch api key to use with Magic Github Proxy 
before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "magic-github-proxy-api-key"
      backend_type: FASTCONFIGPUSH
    }
  }
}

before_action {
  fetch_keystore {
    keystore_resource {
      keystore_config_id: 73713
      keyname: "docuploader_service_account"
    }
  }
}

# Download resources for system tests (service account key, etc.)
gfile_resources: "/bigstore/cloud-devrel-kokoro-resources/google-cloud-ruby"

# Download trampoline resources.
gfile_resources: "/bigstore/cloud-devrel-kokoro-resources/trampoline"

# Use the trampoline script to run in docker.
build_file: "google-api-ruby-client/.kokoro/trampoline.sh"

# Configure the docker image for kokoro-trampoline.
env_vars: {
    key: "TRAMPOLINE_IMAGE"
    value: "gcr.io/cloud-devrel-kokoro-resources/yoshi-ruby/release"
}

env_vars: {
    key: "TRAMPOLINE_BUILD_FILE"
    value: "github/google-api-ruby-client/.kokoro/build.sh"
}

env_vars: {
    key: "TRAMPOLINE_SCRIPT"
    value: "trampoline_v1.py"
}

env_vars: {
    key: "JOB_TYPE"
    value: "release"
}

env_vars: {
    key: "OS"
    value: "linux"
}

env_vars: {
    key: "REPO_DIR"
    value: "github/google-api-ruby-client"
}

env_vars: {
    key: "PACKAGE"
    value: "google-api-client"
}
