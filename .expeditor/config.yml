---
project:
  alias: automate

# Slack channel in Chef Software slack to send notifications about build failures, etc
slack:
  notify_channel: a2-notify

github:
  delete_branch_on_merge: true

# At the given time, trigger the following scheduled workloads
# https://expeditor.chef.io/docs/getting-started/subscriptions/#scheduling-workloads
schedules:
  - name: nightly_tests
    description: "Run nightly tests against development environment"
    cronline: "0 6 * * *"
  - name: cleanup_abandoned_a2_instances
    description: Cleanup abandoned a2instances
    cronline: "0 1 * * *" # every day at 1am
  - name: unlock_staging_area_in_case_of_stall
    description: Unlock staging area in case of stall
    cronline: "0 2 * * *" # every day at 2am

# These are our Buildkite pipelines where deploys take place
pipelines:
  - verify:
      description: Pull Request validation tests
      public: true
  - verify_private:
      description: Pull Request validation tests requiring access keys
  - habitat/build:
      description: Build the Habitat packages for Chef Automate
  - nightly:
      description: Nightly tests against master
      definition: .expeditor/nightly.pipeline.yml
  - post-promote:
      description: Generate and upload release artifacts
      definition: .expeditor/post-promote.pipeline.yml
      env:
        - CHANNEL: dev
  - deploy/dev:
      description: Deploy changes to a2-dev.cd.chef.co instances
      definition: .expeditor/deploy.pipeline.yml
      env:
        - CHANNEL: dev
  - deploy/acceptance:
      description: Deploy changes to a2-acceptance.cd.chef.co instances
      definition: .expeditor/deploy.pipeline.yml
      env:
        - CHANNEL: acceptance
  - deploy/ui-library:
      description: Deploy ui-library.cd.chef.co
      definition: .expeditor/deploy_ui_library.pipeline.yml
  - test-license-usage/dev:
      description: Test the license usage CLI command.
      definition: .expeditor/test-license-usage.pipeline.yml
      env:
        - CHANNEL: dev

promote:
  channels:
    - dev
    - acceptance
    - current
    - stable

staging_areas:
  - post_merge:
      workload: pull_request_merged:chef/automate:master:*

subscriptions:
  # dev -> acceptance promotion
  # These actions are taken when `/expeditor promote` is run from Slack
  - workload: project_promoted:{{agent_id}}:dev:*
    actions:
    - bash:.expeditor/promote-hab-pkgs-and-cli.sh:
        post_commit: true
    - purge_packages_chef_io_fastly:{{target_channel}}/automate/latest:
        post_commit: true
    - bash:.expeditor/announce-acceptance.sh:
        post_commit: true
    - trigger_pipeline:deploy/acceptance
  # acceptance -> current promotion
  - workload: project_promoted:{{agent_id}}:acceptance:*
    actions:
    - bash:.expeditor/promote-hab-pkgs-and-cli.sh:
        post_commit: true
    - purge_packages_chef_io_fastly:{{target_channel}}/automate/latest:
        post_commit: true
    - bash:.expeditor/publish-release-notes.sh:
        post_commit: true
    - bash:.expeditor/announce-release.sh:
        post_commit: true
    - bash:.expeditor/push-git-tag.sh:
        post_commit: true

  # These actions are taken, in order they are specified, anytime a Pull Request is merged.
  - workload: staged_workload_released:chef/automate:master:post_merge:*
    actions:
      - bash:.expeditor/generate-automate-cli-docs.sh:
          post_commit: false
          only_if_modified:
            - components/automate-cli/cmd/*
            - components/automate-cli/pkg/status/error_codes.go
            - components/automate-cli/Makefile
            - .expeditor/generate-automate-cli-docs.sh
      - bash:.expeditor/generate-automate-api-docs.sh:
          post_commit: false
          only_if_modified:
            - api/external/**/*.swagger.json
            - components/automate-gateway/api/**/*.swagger.json
      - trigger_pipeline:habitat/build:
          post_commit: true
      - trigger_pipeline:deploy/ui-library:
          post_commit: true
          only_if_modified:
            - components/chef-ui-library/*
  # When the habitat/build pipeline fails, unlock the staging area
  - workload: buildkite_build_failed:{{agent_id}}:habitat/build:*
    actions:
      - unlock_staging_area:post_merge:
          post_commit: true
          always_run: true
  # When the habitat/build pipeline completes successfully, unlock the staging area
  - workload: buildkite_build_passed:{{agent_id}}:habitat/build:*
    actions:
      - unlock_staging_area:post_merge:
          post_commit: true
          always_run: true
  # When the habitat/build pipeline is canceled, unlock the staging area
  - workload: buildkite_build_canceled:{{agent_id}}:habitat/build:*
    actions:
      - unlock_staging_area:post_merge:
          post_commit: true
          always_run: true
  # These actions are taken, in order they are specified, after the Habitat packages are successfully built
  - workload: buildkite_hab_build_group_published:{{agent_id}}:*
    actions:
      - built_in:promote_habitat_packages
      - trigger_pipeline:post-promote:
          post_commit: true
  - workload: buildkite_build_passed:{{agent_id}}:post-promote:*
    actions:
      - purge_packages_chef_io_fastly:dev/automate/latest:
          post_commit: true
      - trigger_pipeline:deploy/dev:
          post_commit: true
  # Update our compliance-profile pinnings when new profiles are released
  - workload: hab_package_published:unstable:chef/automate-compliance-profiles/*
    actions:
      - bash:.expeditor/update-compliance-profiles.sh:
          post_commit: false
  # Update our InSpec pinnings when a new version of InSpec is released
  - workload: hab_package_published:stable:chef/inspec/4.*
    actions:
      - bash:.expeditor/update-inspec-version.sh:
          post_commit: false
  # Update Habitat when it is released
  - workload: habitat-sh/habitat:master_completed:project_promoted:habitat-sh/habitat:master:current:*
    actions:
      - bash:.expeditor/update_habitat.sh:
          post_commit: false
  # Trigger various pipelines every night
  - workload: schedule_triggered:chef/automate:master:nightly_tests:*
    actions:
      - trigger_pipeline:nightly
      - trigger_pipeline:test-license-usage/dev
  - workload: schedule_triggered:{{agent_id}}:cleanup_abandoned_a2_instances:*
    actions:
      - bash:.expeditor/cleanup-abandoned-a2-instances.sh
  - workload: schedule_triggered:{{agent_id}}:unlock_staging_area_in_case_of_stall:*
    actions:
      - unlock_staging_area:post_merge:
          post_commit: true
          always_run: true
