#!/bin/bash
#
# Helper methods specific for the license-control-service

document "test_license_control_service" <<DOC
  Lint, vet and test the license control service
DOC
function test_license_control_service {
  install_if_missing core/curl curl;
  install_if_missing "$(desired_golang_ident)" go;

  chef-automate dev deploy-some chef/license-control-service --with-deps
  pushd components/license-control-service >/dev/null || return 1
    PG_URL="postgresql://automate@127.0.0.1:5432/chef_license_control_service?sslmode=verify-ca&sslkey=/hab/svc/automate-postgresql/config/server.key&sslcert=/hab/svc/automate-postgresql/config/server.crt&sslrootcert=/hab/svc/automate-postgresql/config/root.crt" make review test
  popd || return 1
}

document "telemetry_status" <<DOC
  Reports on the state of telemetry (enabled/disabled) along with other assorted meta-data.
DOC
function telemetry_status() {
  install_if_missing core/jq-static jq
  gateway_get /telemetry/config | jq
}

document "remove_dev_license" <<DOC
  This removes the dev-license that is usually applied when running
  'chef-automate dev deployinate'.

  This command is meant to be used for verifying changes related to the trial
  license lockout and license apply modals.
DOC
function remove_dev_license {
  chef-automate dev psql chef_license_control_service -- -c "UPDATE licenses SET active=NULL"
}
