// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: external/event_feed/response/event.proto

package response

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEventFeedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of events.
	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Total count of events.
	TotalEvents   int64 `protobuf:"varint,2,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventFeedResponse) Reset() {
	*x = GetEventFeedResponse{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventFeedResponse) ProtoMessage() {}

func (x *GetEventFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventFeedResponse.ProtoReflect.Descriptor instead.
func (*GetEventFeedResponse) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventFeedResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventFeedResponse) GetTotalEvents() int64 {
	if x != nil {
		return x.TotalEvents
	}
	return 0
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of event (cookbook, role, etc).
	EventType string `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	// Type of event task (create, update, delete).
	Task string `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	// Event start time.
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EntityName string                 `protobuf:"bytes,4,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// Event record requestor type.
	RequestorType string `protobuf:"bytes,5,opt,name=requestor_type,json=requestorType,proto3" json:"requestor_type,omitempty"`
	// Event record requestor name.
	RequestorName string `protobuf:"bytes,6,opt,name=requestor_name,json=requestorName,proto3" json:"requestor_name,omitempty"`
	// Hostname from which the record was gathered.
	ServiceHostname string `protobuf:"bytes,7,opt,name=service_hostname,json=serviceHostname,proto3" json:"service_hostname,omitempty"`
	// Used for grouping events together.
	StartId string `protobuf:"bytes,8,opt,name=start_id,json=startId,proto3" json:"start_id,omitempty"`
	// Used for grouping events together.
	EventCount int32 `protobuf:"varint,9,opt,name=event_count,json=eventCount,proto3" json:"event_count,omitempty"`
	// Used for grouping events together.
	ParentName string `protobuf:"bytes,16,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`
	// Used for grouping events together.
	ParentType string `protobuf:"bytes,17,opt,name=parent_type,json=parentType,proto3" json:"parent_type,omitempty"`
	// Used for grouping events together; equal to start_time if not grouped
	EndTime *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Used for grouping events together; equal to start_id if not grouped
	EndId string `protobuf:"bytes,19,opt,name=end_id,json=endId,proto3" json:"end_id,omitempty"`
	// Event's Chef Organization
	ChefOrganization string `protobuf:"bytes,20,opt,name=chef_organization,json=chefOrganization,proto3" json:"chef_organization,omitempty"`
	// Event's Chef Infra Server
	ChefInfraServer string `protobuf:"bytes,21,opt,name=chef_infra_server,json=chefInfraServer,proto3" json:"chef_infra_server,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *Event) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Event) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *Event) GetRequestorType() string {
	if x != nil {
		return x.RequestorType
	}
	return ""
}

func (x *Event) GetRequestorName() string {
	if x != nil {
		return x.RequestorName
	}
	return ""
}

func (x *Event) GetServiceHostname() string {
	if x != nil {
		return x.ServiceHostname
	}
	return ""
}

func (x *Event) GetStartId() string {
	if x != nil {
		return x.StartId
	}
	return ""
}

func (x *Event) GetEventCount() int32 {
	if x != nil {
		return x.EventCount
	}
	return 0
}

func (x *Event) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *Event) GetParentType() string {
	if x != nil {
		return x.ParentType
	}
	return ""
}

func (x *Event) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Event) GetEndId() string {
	if x != nil {
		return x.EndId
	}
	return ""
}

func (x *Event) GetChefOrganization() string {
	if x != nil {
		return x.ChefOrganization
	}
	return ""
}

func (x *Event) GetChefInfraServer() string {
	if x != nil {
		return x.ChefInfraServer
	}
	return ""
}

type GetEventTypeCountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total count of events.
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// Total count of events per type.
	Counts        []*EventCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTypeCountsResponse) Reset() {
	*x = GetEventTypeCountsResponse{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTypeCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTypeCountsResponse) ProtoMessage() {}

func (x *GetEventTypeCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTypeCountsResponse.ProtoReflect.Descriptor instead.
func (*GetEventTypeCountsResponse) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{2}
}

func (x *GetEventTypeCountsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetEventTypeCountsResponse) GetCounts() []*EventCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type GetEventTaskCountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total count of events.
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// Total count of events per type.
	Counts        []*EventCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTaskCountsResponse) Reset() {
	*x = GetEventTaskCountsResponse{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTaskCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTaskCountsResponse) ProtoMessage() {}

func (x *GetEventTaskCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTaskCountsResponse.ProtoReflect.Descriptor instead.
func (*GetEventTaskCountsResponse) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventTaskCountsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetEventTaskCountsResponse) GetCounts() []*EventCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type EventCount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Count of events.
	Count         int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventCount) Reset() {
	*x = EventCount{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCount) ProtoMessage() {}

func (x *EventCount) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCount.ProtoReflect.Descriptor instead.
func (*EventCount) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventCount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type EventExportResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exported reports in JSON or CSV.
	Content       []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventExportResponse) Reset() {
	*x = EventExportResponse{}
	mi := &file_external_event_feed_response_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventExportResponse) ProtoMessage() {}

func (x *EventExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_response_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventExportResponse.ProtoReflect.Descriptor instead.
func (*EventExportResponse) Descriptor() ([]byte, []int) {
	return file_external_event_feed_response_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventExportResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_external_event_feed_response_event_proto protoreflect.FileDescriptor

const file_external_event_feed_response_event_proto_rawDesc = "" +
	"\n" +
	"(external/event_feed/response/event.proto\x12%chef.automate.api.event_feed.response\x1a\x1fgoogle/protobuf/timestamp.proto\"\x7f\n" +
	"\x14GetEventFeedResponse\x12D\n" +
	"\x06events\x18\x01 \x03(\v2,.chef.automate.api.event_feed.response.EventR\x06events\x12!\n" +
	"\ftotal_events\x18\x02 \x01(\x03R\vtotalEvents\"\xb4\x04\n" +
	"\x05Event\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x12\n" +
	"\x04task\x18\x02 \x01(\tR\x04task\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12\x1f\n" +
	"\ventity_name\x18\x04 \x01(\tR\n" +
	"entityName\x12%\n" +
	"\x0erequestor_type\x18\x05 \x01(\tR\rrequestorType\x12%\n" +
	"\x0erequestor_name\x18\x06 \x01(\tR\rrequestorName\x12)\n" +
	"\x10service_hostname\x18\a \x01(\tR\x0fserviceHostname\x12\x19\n" +
	"\bstart_id\x18\b \x01(\tR\astartId\x12\x1f\n" +
	"\vevent_count\x18\t \x01(\x05R\n" +
	"eventCount\x12\x1f\n" +
	"\vparent_name\x18\x10 \x01(\tR\n" +
	"parentName\x12\x1f\n" +
	"\vparent_type\x18\x11 \x01(\tR\n" +
	"parentType\x125\n" +
	"\bend_time\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x15\n" +
	"\x06end_id\x18\x13 \x01(\tR\x05endId\x12+\n" +
	"\x11chef_organization\x18\x14 \x01(\tR\x10chefOrganization\x12*\n" +
	"\x11chef_infra_server\x18\x15 \x01(\tR\x0fchefInfraServer\"}\n" +
	"\x1aGetEventTypeCountsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12I\n" +
	"\x06counts\x18\x02 \x03(\v21.chef.automate.api.event_feed.response.EventCountR\x06counts\"}\n" +
	"\x1aGetEventTaskCountsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12I\n" +
	"\x06counts\x18\x02 \x03(\v21.chef.automate.api.event_feed.response.EventCountR\x06counts\"6\n" +
	"\n" +
	"EventCount\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"/\n" +
	"\x13EventExportResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontentB;Z9github.com/chef/automate/api/external/event_feed/responseb\x06proto3"

var (
	file_external_event_feed_response_event_proto_rawDescOnce sync.Once
	file_external_event_feed_response_event_proto_rawDescData []byte
)

func file_external_event_feed_response_event_proto_rawDescGZIP() []byte {
	file_external_event_feed_response_event_proto_rawDescOnce.Do(func() {
		file_external_event_feed_response_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_external_event_feed_response_event_proto_rawDesc), len(file_external_event_feed_response_event_proto_rawDesc)))
	})
	return file_external_event_feed_response_event_proto_rawDescData
}

var file_external_event_feed_response_event_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_external_event_feed_response_event_proto_goTypes = []any{
	(*GetEventFeedResponse)(nil),       // 0: chef.automate.api.event_feed.response.GetEventFeedResponse
	(*Event)(nil),                      // 1: chef.automate.api.event_feed.response.Event
	(*GetEventTypeCountsResponse)(nil), // 2: chef.automate.api.event_feed.response.GetEventTypeCountsResponse
	(*GetEventTaskCountsResponse)(nil), // 3: chef.automate.api.event_feed.response.GetEventTaskCountsResponse
	(*EventCount)(nil),                 // 4: chef.automate.api.event_feed.response.EventCount
	(*EventExportResponse)(nil),        // 5: chef.automate.api.event_feed.response.EventExportResponse
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
}
var file_external_event_feed_response_event_proto_depIdxs = []int32{
	1, // 0: chef.automate.api.event_feed.response.GetEventFeedResponse.events:type_name -> chef.automate.api.event_feed.response.Event
	6, // 1: chef.automate.api.event_feed.response.Event.start_time:type_name -> google.protobuf.Timestamp
	6, // 2: chef.automate.api.event_feed.response.Event.end_time:type_name -> google.protobuf.Timestamp
	4, // 3: chef.automate.api.event_feed.response.GetEventTypeCountsResponse.counts:type_name -> chef.automate.api.event_feed.response.EventCount
	4, // 4: chef.automate.api.event_feed.response.GetEventTaskCountsResponse.counts:type_name -> chef.automate.api.event_feed.response.EventCount
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_external_event_feed_response_event_proto_init() }
func file_external_event_feed_response_event_proto_init() {
	if File_external_event_feed_response_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_external_event_feed_response_event_proto_rawDesc), len(file_external_event_feed_response_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_event_feed_response_event_proto_goTypes,
		DependencyIndexes: file_external_event_feed_response_event_proto_depIdxs,
		MessageInfos:      file_external_event_feed_response_event_proto_msgTypes,
	}.Build()
	File_external_event_feed_response_event_proto = out.File
	file_external_event_feed_response_event_proto_goTypes = nil
	file_external_event_feed_response_event_proto_depIdxs = nil
}
