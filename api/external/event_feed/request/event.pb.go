// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: external/event_feed/request/event.proto

package request

import (
	query "github.com/chef/automate/api/external/common/query"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEventTypeCountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters to be applied to the request.
	Filter []string `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	// Earliest events to return.
	Start int64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// Latest events to return.
	End           int64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTypeCountsRequest) Reset() {
	*x = GetEventTypeCountsRequest{}
	mi := &file_external_event_feed_request_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTypeCountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTypeCountsRequest) ProtoMessage() {}

func (x *GetEventTypeCountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_request_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTypeCountsRequest.ProtoReflect.Descriptor instead.
func (*GetEventTypeCountsRequest) Descriptor() ([]byte, []int) {
	return file_external_event_feed_request_event_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventTypeCountsRequest) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetEventTypeCountsRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetEventTypeCountsRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type GetEventFeedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters to be applied to the request.
	Filter []string `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	// Earliest events to return.
	Start int64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// Latest events to return.
	End int64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	// Count of events to return per page.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used for pagination, to request results in ascending order.
	After int64 `protobuf:"varint,5,opt,name=after,proto3" json:"after,omitempty"`
	// Used for pagination, to request results in descending order.
	Before int64 `protobuf:"varint,6,opt,name=before,proto3" json:"before,omitempty"`
	// Used for pagination, to bookmark next set of results.
	Cursor string `protobuf:"bytes,7,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Used to group similar events together.
	Collapse      bool `protobuf:"varint,8,opt,name=collapse,proto3" json:"collapse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventFeedRequest) Reset() {
	*x = GetEventFeedRequest{}
	mi := &file_external_event_feed_request_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventFeedRequest) ProtoMessage() {}

func (x *GetEventFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_request_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventFeedRequest.ProtoReflect.Descriptor instead.
func (*GetEventFeedRequest) Descriptor() ([]byte, []int) {
	return file_external_event_feed_request_event_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventFeedRequest) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetEventFeedRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetEventFeedRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetEventFeedRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetEventFeedRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *GetEventFeedRequest) GetBefore() int64 {
	if x != nil {
		return x.Before
	}
	return 0
}

func (x *GetEventFeedRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetEventFeedRequest) GetCollapse() bool {
	if x != nil {
		return x.Collapse
	}
	return false
}

type GetEventTaskCountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters to be applied to the request.
	Filter []string `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	// Earliest events to return.
	Start int64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// Latest events to return.
	End           int64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTaskCountsRequest) Reset() {
	*x = GetEventTaskCountsRequest{}
	mi := &file_external_event_feed_request_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTaskCountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTaskCountsRequest) ProtoMessage() {}

func (x *GetEventTaskCountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_request_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTaskCountsRequest.ProtoReflect.Descriptor instead.
func (*GetEventTaskCountsRequest) Descriptor() ([]byte, []int) {
	return file_external_event_feed_request_event_proto_rawDescGZIP(), []int{2}
}

func (x *GetEventTaskCountsRequest) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetEventTaskCountsRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetEventTaskCountsRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type EventExportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON or CSV
	OutputType string `protobuf:"bytes,1,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	// Filters to be applied to the request.
	Filter []string `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty"`
	// Earliest events to return.
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// Latest events to return.
	End int64 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	// Order the results should be returned in.
	Order         query.SortOrder `protobuf:"varint,5,opt,name=order,proto3,enum=chef.automate.api.common.query.SortOrder" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventExportRequest) Reset() {
	*x = EventExportRequest{}
	mi := &file_external_event_feed_request_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventExportRequest) ProtoMessage() {}

func (x *EventExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_event_feed_request_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventExportRequest.ProtoReflect.Descriptor instead.
func (*EventExportRequest) Descriptor() ([]byte, []int) {
	return file_external_event_feed_request_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventExportRequest) GetOutputType() string {
	if x != nil {
		return x.OutputType
	}
	return ""
}

func (x *EventExportRequest) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *EventExportRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *EventExportRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *EventExportRequest) GetOrder() query.SortOrder {
	if x != nil {
		return x.Order
	}
	return query.SortOrder(0)
}

var File_external_event_feed_request_event_proto protoreflect.FileDescriptor

const file_external_event_feed_request_event_proto_rawDesc = "" +
	"\n" +
	"'external/event_feed/request/event.proto\x12$chef.automate.api.event_feed.request\x1a&external/common/query/parameters.proto\"[\n" +
	"\x19GetEventTypeCountsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x03(\tR\x06filter\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x03R\x03end\"\xd4\x01\n" +
	"\x13GetEventFeedRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x03(\tR\x06filter\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x03R\x03end\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x14\n" +
	"\x05after\x18\x05 \x01(\x03R\x05after\x12\x16\n" +
	"\x06before\x18\x06 \x01(\x03R\x06before\x12\x16\n" +
	"\x06cursor\x18\a \x01(\tR\x06cursor\x12\x1a\n" +
	"\bcollapse\x18\b \x01(\bR\bcollapse\"[\n" +
	"\x19GetEventTaskCountsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x03(\tR\x06filter\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x03R\x03end\"\xb6\x01\n" +
	"\x12EventExportRequest\x12\x1f\n" +
	"\voutput_type\x18\x01 \x01(\tR\n" +
	"outputType\x12\x16\n" +
	"\x06filter\x18\x02 \x03(\tR\x06filter\x12\x14\n" +
	"\x05start\x18\x03 \x01(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x04 \x01(\x03R\x03end\x12?\n" +
	"\x05order\x18\x05 \x01(\x0e2).chef.automate.api.common.query.SortOrderR\x05orderB:Z8github.com/chef/automate/api/external/event_feed/requestb\x06proto3"

var (
	file_external_event_feed_request_event_proto_rawDescOnce sync.Once
	file_external_event_feed_request_event_proto_rawDescData []byte
)

func file_external_event_feed_request_event_proto_rawDescGZIP() []byte {
	file_external_event_feed_request_event_proto_rawDescOnce.Do(func() {
		file_external_event_feed_request_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_external_event_feed_request_event_proto_rawDesc), len(file_external_event_feed_request_event_proto_rawDesc)))
	})
	return file_external_event_feed_request_event_proto_rawDescData
}

var file_external_event_feed_request_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_external_event_feed_request_event_proto_goTypes = []any{
	(*GetEventTypeCountsRequest)(nil), // 0: chef.automate.api.event_feed.request.GetEventTypeCountsRequest
	(*GetEventFeedRequest)(nil),       // 1: chef.automate.api.event_feed.request.GetEventFeedRequest
	(*GetEventTaskCountsRequest)(nil), // 2: chef.automate.api.event_feed.request.GetEventTaskCountsRequest
	(*EventExportRequest)(nil),        // 3: chef.automate.api.event_feed.request.EventExportRequest
	(query.SortOrder)(0),              // 4: chef.automate.api.common.query.SortOrder
}
var file_external_event_feed_request_event_proto_depIdxs = []int32{
	4, // 0: chef.automate.api.event_feed.request.EventExportRequest.order:type_name -> chef.automate.api.common.query.SortOrder
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_external_event_feed_request_event_proto_init() }
func file_external_event_feed_request_event_proto_init() {
	if File_external_event_feed_request_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_external_event_feed_request_event_proto_rawDesc), len(file_external_event_feed_request_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_event_feed_request_event_proto_goTypes,
		DependencyIndexes: file_external_event_feed_request_event_proto_depIdxs,
		MessageInfos:      file_external_event_feed_request_event_proto_msgTypes,
	}.Build()
	File_external_event_feed_request_event_proto = out.File
	file_external_event_feed_request_event_proto_goTypes = nil
	file_external_event_feed_request_event_proto_depIdxs = nil
}
