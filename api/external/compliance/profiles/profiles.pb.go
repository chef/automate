// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/compliance/profiles/profiles.proto

package profiles

import (
	context "context"
	fmt "fmt"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/api"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Query_OrderType int32

const (
	Query_ASC  Query_OrderType = 0
	Query_DESC Query_OrderType = 1
)

var Query_OrderType_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Query_OrderType_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Query_OrderType) String() string {
	return proto.EnumName(Query_OrderType_name, int32(x))
}

func (Query_OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{22, 0}
}

type Sha256 struct {
	Sha256               []string `protobuf:"bytes,1,rep,name=sha256,proto3" json:"sha256,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sha256) Reset()         { *m = Sha256{} }
func (m *Sha256) String() string { return proto.CompactTextString(m) }
func (*Sha256) ProtoMessage()    {}
func (*Sha256) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{0}
}

func (m *Sha256) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sha256.Unmarshal(m, b)
}
func (m *Sha256) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sha256.Marshal(b, m, deterministic)
}
func (m *Sha256) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sha256.Merge(m, src)
}
func (m *Sha256) XXX_Size() int {
	return xxx_messageInfo_Sha256.Size(m)
}
func (m *Sha256) XXX_DiscardUnknown() {
	xxx_messageInfo_Sha256.DiscardUnknown(m)
}

var xxx_messageInfo_Sha256 proto.InternalMessageInfo

func (m *Sha256) GetSha256() []string {
	if m != nil {
		return m.Sha256
	}
	return nil
}

type Missing struct {
	MissingSha256        []string `protobuf:"bytes,1,rep,name=missing_sha256,json=missingSha256,proto3" json:"missing_sha256,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Missing) Reset()         { *m = Missing{} }
func (m *Missing) String() string { return proto.CompactTextString(m) }
func (*Missing) ProtoMessage()    {}
func (*Missing) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{1}
}

func (m *Missing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Missing.Unmarshal(m, b)
}
func (m *Missing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Missing.Marshal(b, m, deterministic)
}
func (m *Missing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Missing.Merge(m, src)
}
func (m *Missing) XXX_Size() int {
	return xxx_messageInfo_Missing.Size(m)
}
func (m *Missing) XXX_DiscardUnknown() {
	xxx_messageInfo_Missing.DiscardUnknown(m)
}

var xxx_messageInfo_Missing proto.InternalMessageInfo

func (m *Missing) GetMissingSha256() []string {
	if m != nil {
		return m.MissingSha256
	}
	return nil
}

type ProfilePostRequest struct {
	// Associate an automate user with a profile. A profile is visible only to its associated user.
	Owner string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	// Intentionally blank.
	Chunk *Chunk `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	// Intentionally blank.
	Meta                 *Metadata `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProfilePostRequest) Reset()         { *m = ProfilePostRequest{} }
func (m *ProfilePostRequest) String() string { return proto.CompactTextString(m) }
func (*ProfilePostRequest) ProtoMessage()    {}
func (*ProfilePostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{2}
}

func (m *ProfilePostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfilePostRequest.Unmarshal(m, b)
}
func (m *ProfilePostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfilePostRequest.Marshal(b, m, deterministic)
}
func (m *ProfilePostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfilePostRequest.Merge(m, src)
}
func (m *ProfilePostRequest) XXX_Size() int {
	return xxx_messageInfo_ProfilePostRequest.Size(m)
}
func (m *ProfilePostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfilePostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfilePostRequest proto.InternalMessageInfo

func (m *ProfilePostRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfilePostRequest) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func (m *ProfilePostRequest) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

// Metadata about the profile.
type Metadata struct {
	// Name of the profile (as specified in the inspec.yml)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the profile.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Content type of the profile (e.g. application/json, application/x-gtar, application/gzip)
	ContentType          string   `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{3}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Metadata) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

// Profile contents in byte form.
type Chunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Position             int64    `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{4}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Chunk) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type ProfileData struct {
	// Automate user associated with the profile.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Name of the profile.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the profile.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Profile contents in byte form.
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileData) Reset()         { *m = ProfileData{} }
func (m *ProfileData) String() string { return proto.CompactTextString(m) }
func (*ProfileData) ProtoMessage()    {}
func (*ProfileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{5}
}

func (m *ProfileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileData.Unmarshal(m, b)
}
func (m *ProfileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileData.Marshal(b, m, deterministic)
}
func (m *ProfileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileData.Merge(m, src)
}
func (m *ProfileData) XXX_Size() int {
	return xxx_messageInfo_ProfileData.Size(m)
}
func (m *ProfileData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileData.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileData proto.InternalMessageInfo

func (m *ProfileData) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfileData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProfileData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Profiles struct {
	// List of profiles matching the query.
	Profiles []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	// Total count of profiles matching the query.
	Total                int32    `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profiles) Reset()         { *m = Profiles{} }
func (m *Profiles) String() string { return proto.CompactTextString(m) }
func (*Profiles) ProtoMessage()    {}
func (*Profiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{6}
}

func (m *Profiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profiles.Unmarshal(m, b)
}
func (m *Profiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profiles.Marshal(b, m, deterministic)
}
func (m *Profiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profiles.Merge(m, src)
}
func (m *Profiles) XXX_Size() int {
	return xxx_messageInfo_Profiles.Size(m)
}
func (m *Profiles) XXX_DiscardUnknown() {
	xxx_messageInfo_Profiles.DiscardUnknown(m)
}

var xxx_messageInfo_Profiles proto.InternalMessageInfo

func (m *Profiles) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *Profiles) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Profile struct {
	// The profile name, as specified in the inspec.yml
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The profile title, as specified in the inspec.yml
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The profile maintainer, as specified in the inspec.yml
	Maintainer string `protobuf:"bytes,3,opt,name=maintainer,proto3" json:"maintainer,omitempty"`
	// The profile copyright, as specified in the inspec.yml
	Copyright string `protobuf:"bytes,4,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// The profile copyright email, as specified in the inspec.yml
	CopyrightEmail string `protobuf:"bytes,5,opt,name=copyright_email,json=copyrightEmail,proto3" json:"copyright_email,omitempty"`
	// The profile license, as specified in the inspec.yml
	License string `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	// The profile summary, as specified in the inspec.yml
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	// The profile version, as specified in the inspec.yml
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	// The Automate user associated with the profile.
	Owner string `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	// The list of operating systems compatible with the profile, as specified in the inspec.yml
	Supports []*Support `protobuf:"bytes,16,rep,name=supports,proto3" json:"supports,omitempty"`
	// The list of dependencies the profile has, as specified in the inspec.yml
	Depends []*Dependency `protobuf:"bytes,17,rep,name=depends,proto3" json:"depends,omitempty"`
	// The SHA256 of the profile.
	Sha256 string   `protobuf:"bytes,18,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Groups []*Group `protobuf:"bytes,19,rep,name=groups,proto3" json:"groups,omitempty"`
	// The list of controls in the profile.
	Controls []*Control `protobuf:"bytes,20,rep,name=controls,proto3" json:"controls,omitempty"`
	// The list of attributes in the profile.
	Attributes []*Attribute `protobuf:"bytes,21,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// The latest version of the profile.
	LatestVersion        string   `protobuf:"bytes,22,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{7}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Profile) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *Profile) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *Profile) GetCopyrightEmail() string {
	if m != nil {
		return m.CopyrightEmail
	}
	return ""
}

func (m *Profile) GetLicense() string {
	if m != nil {
		return m.License
	}
	return ""
}

func (m *Profile) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Profile) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Profile) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Profile) GetSupports() []*Support {
	if m != nil {
		return m.Supports
	}
	return nil
}

func (m *Profile) GetDepends() []*Dependency {
	if m != nil {
		return m.Depends
	}
	return nil
}

func (m *Profile) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *Profile) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Profile) GetControls() []*Control {
	if m != nil {
		return m.Controls
	}
	return nil
}

func (m *Profile) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Profile) GetLatestVersion() string {
	if m != nil {
		return m.LatestVersion
	}
	return ""
}

type Group struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Controls             []string `protobuf:"bytes,3,rep,name=controls,proto3" json:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{8}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Group) GetControls() []string {
	if m != nil {
		return m.Controls
	}
	return nil
}

type Control struct {
	// The ID of the control.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The code (test) for the control.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the control.
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// The impact of the control.
	Impact float32 `protobuf:"fixed32,4,opt,name=impact,proto3" json:"impact,omitempty"`
	// The title of the control.
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Intentionally blank.
	SourceLocation *SourceLocation `protobuf:"bytes,6,opt,name=source_location,json=sourceLocation,proto3" json:"source_location,omitempty"`
	// The results of the control tests.
	Results []*Result `protobuf:"bytes,7,rep,name=results,proto3" json:"results,omitempty"`
	// The refs associated with the control.
	Refs []*Ref `protobuf:"bytes,8,rep,name=refs,proto3" json:"refs,omitempty"`
	// The tags associated with the control.
	Tags                 map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Control) Reset()         { *m = Control{} }
func (m *Control) String() string { return proto.CompactTextString(m) }
func (*Control) ProtoMessage()    {}
func (*Control) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{9}
}

func (m *Control) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Control.Unmarshal(m, b)
}
func (m *Control) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Control.Marshal(b, m, deterministic)
}
func (m *Control) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Control.Merge(m, src)
}
func (m *Control) XXX_Size() int {
	return xxx_messageInfo_Control.Size(m)
}
func (m *Control) XXX_DiscardUnknown() {
	xxx_messageInfo_Control.DiscardUnknown(m)
}

var xxx_messageInfo_Control proto.InternalMessageInfo

func (m *Control) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Control) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Control) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Control) GetImpact() float32 {
	if m != nil {
		return m.Impact
	}
	return 0
}

func (m *Control) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Control) GetSourceLocation() *SourceLocation {
	if m != nil {
		return m.SourceLocation
	}
	return nil
}

func (m *Control) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Control) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

func (m *Control) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Ref struct {
	// URL of the ref.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Ref for the control.
	Ref                  string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{10}
}

func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (m *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(m, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

func (m *Ref) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Ref) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type Result struct {
	// Status of the test results (passed, failed, skipped).
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The code (test) executed.
	CodeDesc string `protobuf:"bytes,2,opt,name=code_desc,json=codeDesc,proto3" json:"code_desc,omitempty"`
	// The amount of time it took to execute the test.
	RunTime float32 `protobuf:"fixed32,3,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	// The time the test started.
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The failure message.
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Reason for skipping the test.
	SkipMessage          string   `protobuf:"bytes,6,opt,name=skip_message,json=skipMessage,proto3" json:"skip_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{11}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Result) GetCodeDesc() string {
	if m != nil {
		return m.CodeDesc
	}
	return ""
}

func (m *Result) GetRunTime() float32 {
	if m != nil {
		return m.RunTime
	}
	return 0
}

func (m *Result) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Result) GetSkipMessage() string {
	if m != nil {
		return m.SkipMessage
	}
	return ""
}

type SourceLocation struct {
	Ref                  string   `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Line                 int32    `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceLocation) Reset()         { *m = SourceLocation{} }
func (m *SourceLocation) String() string { return proto.CompactTextString(m) }
func (*SourceLocation) ProtoMessage()    {}
func (*SourceLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{12}
}

func (m *SourceLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceLocation.Unmarshal(m, b)
}
func (m *SourceLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceLocation.Marshal(b, m, deterministic)
}
func (m *SourceLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceLocation.Merge(m, src)
}
func (m *SourceLocation) XXX_Size() int {
	return xxx_messageInfo_SourceLocation.Size(m)
}
func (m *SourceLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceLocation.DiscardUnknown(m)
}

var xxx_messageInfo_SourceLocation proto.InternalMessageInfo

func (m *SourceLocation) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *SourceLocation) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

type Attribute struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options              *Option  `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attribute) Reset()         { *m = Attribute{} }
func (m *Attribute) String() string { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()    {}
func (*Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{13}
}

func (m *Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attribute.Unmarshal(m, b)
}
func (m *Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attribute.Marshal(b, m, deterministic)
}
func (m *Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attribute.Merge(m, src)
}
func (m *Attribute) XXX_Size() int {
	return xxx_messageInfo_Attribute.Size(m)
}
func (m *Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Attribute proto.InternalMessageInfo

func (m *Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attribute) GetOptions() *Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Option struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Default              string   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{14}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Option) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type Support struct {
	// OS name supported by the profile.
	OsName string `protobuf:"bytes,1,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	// OS family supported by the profile.
	OsFamily string `protobuf:"bytes,2,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`
	// OS release supported by the profile.
	Release string `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	// Minimum InSpec version required for the profile.
	InspecVersion string `protobuf:"bytes,4,opt,name=inspec_version,json=inspecVersion,proto3" json:"inspec_version,omitempty"`
	// Platform supported by the profile.
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Support) Reset()         { *m = Support{} }
func (m *Support) String() string { return proto.CompactTextString(m) }
func (*Support) ProtoMessage()    {}
func (*Support) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{15}
}

func (m *Support) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Support.Unmarshal(m, b)
}
func (m *Support) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Support.Marshal(b, m, deterministic)
}
func (m *Support) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Support.Merge(m, src)
}
func (m *Support) XXX_Size() int {
	return xxx_messageInfo_Support.Size(m)
}
func (m *Support) XXX_DiscardUnknown() {
	xxx_messageInfo_Support.DiscardUnknown(m)
}

var xxx_messageInfo_Support proto.InternalMessageInfo

func (m *Support) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *Support) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Support) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *Support) GetInspecVersion() string {
	if m != nil {
		return m.InspecVersion
	}
	return ""
}

func (m *Support) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type Dependency struct {
	// Name of the profile.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URL of the profile.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Path of the profile.
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Git location of the profile.
	Git string `protobuf:"bytes,4,opt,name=git,proto3" json:"git,omitempty"`
	// Branch of the profile.
	Branch string `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	// Tag associated with the profile.
	Tag string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	// Commit sha for the profile.
	Commit string `protobuf:"bytes,7,opt,name=commit,proto3" json:"commit,omitempty"`
	// Version of the profile.
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	// Supermarket address of the profile.
	Supermarket string `protobuf:"bytes,9,opt,name=supermarket,proto3" json:"supermarket,omitempty"`
	// Github address of the profile.
	Github string `protobuf:"bytes,10,opt,name=github,proto3" json:"github,omitempty"`
	// Automate address of the profile.
	Compliance           string   `protobuf:"bytes,11,opt,name=compliance,proto3" json:"compliance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{16}
}

func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (m *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(m, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dependency) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Dependency) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Dependency) GetGit() string {
	if m != nil {
		return m.Git
	}
	return ""
}

func (m *Dependency) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Dependency) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Dependency) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Dependency) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Dependency) GetSupermarket() string {
	if m != nil {
		return m.Supermarket
	}
	return ""
}

func (m *Dependency) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Dependency) GetCompliance() string {
	if m != nil {
		return m.Compliance
	}
	return ""
}

type ProfileDetails struct {
	// Automate user associated with the profile.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Name of the profile.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the profile.
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileDetails) Reset()         { *m = ProfileDetails{} }
func (m *ProfileDetails) String() string { return proto.CompactTextString(m) }
func (*ProfileDetails) ProtoMessage()    {}
func (*ProfileDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{17}
}

func (m *ProfileDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileDetails.Unmarshal(m, b)
}
func (m *ProfileDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileDetails.Marshal(b, m, deterministic)
}
func (m *ProfileDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileDetails.Merge(m, src)
}
func (m *ProfileDetails) XXX_Size() int {
	return xxx_messageInfo_ProfileDetails.Size(m)
}
func (m *ProfileDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileDetails proto.InternalMessageInfo

func (m *ProfileDetails) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfileDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileDetails) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CheckResult struct {
	// Intentionally blank.
	Summary *ResultSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// Errors returned by the `inspec check` command.
	Errors []*CheckMessage `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// Warnings returned by the `inspec check` command.
	Warnings             []*CheckMessage `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CheckResult) Reset()         { *m = CheckResult{} }
func (m *CheckResult) String() string { return proto.CompactTextString(m) }
func (*CheckResult) ProtoMessage()    {}
func (*CheckResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{18}
}

func (m *CheckResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResult.Unmarshal(m, b)
}
func (m *CheckResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResult.Marshal(b, m, deterministic)
}
func (m *CheckResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResult.Merge(m, src)
}
func (m *CheckResult) XXX_Size() int {
	return xxx_messageInfo_CheckResult.Size(m)
}
func (m *CheckResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResult.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResult proto.InternalMessageInfo

func (m *CheckResult) GetSummary() *ResultSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *CheckResult) GetErrors() []*CheckMessage {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *CheckResult) GetWarnings() []*CheckMessage {
	if m != nil {
		return m.Warnings
	}
	return nil
}

type ResultSummary struct {
	// Boolean that denotes if the profile is valid or not (as reported by `inspec check`).
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// Timestamp of when the `inspec check` command was executed.
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Path of the checked profile.
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	// Count of controls in the profile.
	Controls             int32    `protobuf:"varint,4,opt,name=controls,proto3" json:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultSummary) Reset()         { *m = ResultSummary{} }
func (m *ResultSummary) String() string { return proto.CompactTextString(m) }
func (*ResultSummary) ProtoMessage()    {}
func (*ResultSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{19}
}

func (m *ResultSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultSummary.Unmarshal(m, b)
}
func (m *ResultSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultSummary.Marshal(b, m, deterministic)
}
func (m *ResultSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultSummary.Merge(m, src)
}
func (m *ResultSummary) XXX_Size() int {
	return xxx_messageInfo_ResultSummary.Size(m)
}
func (m *ResultSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ResultSummary proto.InternalMessageInfo

func (m *ResultSummary) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ResultSummary) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ResultSummary) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ResultSummary) GetControls() int32 {
	if m != nil {
		return m.Controls
	}
	return 0
}

type CheckMessage struct {
	// Profile file where the error or warning exists.
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// Profile line where the error or warning exists.
	Line int32 `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	// Column where the error or warning exists.
	Column int32 `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	// Control ID associated with the error or warning.
	ControlId string `protobuf:"bytes,4,opt,name=control_id,json=controlId,proto3" json:"control_id,omitempty"`
	// Message associated with the error or warning.
	Msg                  string   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckMessage) Reset()         { *m = CheckMessage{} }
func (m *CheckMessage) String() string { return proto.CompactTextString(m) }
func (*CheckMessage) ProtoMessage()    {}
func (*CheckMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{20}
}

func (m *CheckMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMessage.Unmarshal(m, b)
}
func (m *CheckMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMessage.Marshal(b, m, deterministic)
}
func (m *CheckMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMessage.Merge(m, src)
}
func (m *CheckMessage) XXX_Size() int {
	return xxx_messageInfo_CheckMessage.Size(m)
}
func (m *CheckMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMessage proto.InternalMessageInfo

func (m *CheckMessage) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *CheckMessage) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *CheckMessage) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

func (m *CheckMessage) GetControlId() string {
	if m != nil {
		return m.ControlId
	}
	return ""
}

func (m *CheckMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ListFilter struct {
	// List of values to filter on.
	Values []string `protobuf:"bytes,20,rep,name=values,proto3" json:"values,omitempty"`
	// The field to filter on.
	Type                 string   `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilter) Reset()         { *m = ListFilter{} }
func (m *ListFilter) String() string { return proto.CompactTextString(m) }
func (*ListFilter) ProtoMessage()    {}
func (*ListFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{21}
}

func (m *ListFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilter.Unmarshal(m, b)
}
func (m *ListFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilter.Marshal(b, m, deterministic)
}
func (m *ListFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilter.Merge(m, src)
}
func (m *ListFilter) XXX_Size() int {
	return xxx_messageInfo_ListFilter.Size(m)
}
func (m *ListFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilter proto.InternalMessageInfo

func (m *ListFilter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ListFilter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Query struct {
	// Filters to apply to the query
	Filters []*ListFilter `protobuf:"bytes,20,rep,name=filters,proto3" json:"filters,omitempty"`
	// Order in which to sort. Defaults to ASC.
	Order Query_OrderType `protobuf:"varint,21,opt,name=order,proto3,enum=chef.automate.api.compliance.profiles.v1.Query_OrderType" json:"order,omitempty"`
	// Field on which to sort.
	Sort string `protobuf:"bytes,22,opt,name=sort,proto3" json:"sort,omitempty"`
	// Page of results requested.
	Page int32 `protobuf:"varint,23,opt,name=page,proto3" json:"page,omitempty"`
	// Number of results to return per page.
	PerPage int32 `protobuf:"varint,24,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	// Automate user associated with the profile.
	Owner string `protobuf:"bytes,25,opt,name=owner,proto3" json:"owner,omitempty"`
	// Name of the profile (as defined in `inspec.yml`).
	Name string `protobuf:"bytes,26,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the profile (as defined in `inspec.yml`).
	Version              string   `protobuf:"bytes,27,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5235a531cc6986, []int{22}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetFilters() []*ListFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Query) GetOrder() Query_OrderType {
	if m != nil {
		return m.Order
	}
	return Query_ASC
}

func (m *Query) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *Query) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Query) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *Query) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Query) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Query) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterEnum("chef.automate.api.compliance.profiles.v1.Query_OrderType", Query_OrderType_name, Query_OrderType_value)
	proto.RegisterType((*Sha256)(nil), "chef.automate.api.compliance.profiles.v1.Sha256")
	proto.RegisterType((*Missing)(nil), "chef.automate.api.compliance.profiles.v1.Missing")
	proto.RegisterType((*ProfilePostRequest)(nil), "chef.automate.api.compliance.profiles.v1.ProfilePostRequest")
	proto.RegisterType((*Metadata)(nil), "chef.automate.api.compliance.profiles.v1.Metadata")
	proto.RegisterType((*Chunk)(nil), "chef.automate.api.compliance.profiles.v1.Chunk")
	proto.RegisterType((*ProfileData)(nil), "chef.automate.api.compliance.profiles.v1.ProfileData")
	proto.RegisterType((*Profiles)(nil), "chef.automate.api.compliance.profiles.v1.Profiles")
	proto.RegisterType((*Profile)(nil), "chef.automate.api.compliance.profiles.v1.Profile")
	proto.RegisterType((*Group)(nil), "chef.automate.api.compliance.profiles.v1.Group")
	proto.RegisterType((*Control)(nil), "chef.automate.api.compliance.profiles.v1.Control")
	proto.RegisterMapType((map[string]string)(nil), "chef.automate.api.compliance.profiles.v1.Control.TagsEntry")
	proto.RegisterType((*Ref)(nil), "chef.automate.api.compliance.profiles.v1.Ref")
	proto.RegisterType((*Result)(nil), "chef.automate.api.compliance.profiles.v1.Result")
	proto.RegisterType((*SourceLocation)(nil), "chef.automate.api.compliance.profiles.v1.SourceLocation")
	proto.RegisterType((*Attribute)(nil), "chef.automate.api.compliance.profiles.v1.Attribute")
	proto.RegisterType((*Option)(nil), "chef.automate.api.compliance.profiles.v1.Option")
	proto.RegisterType((*Support)(nil), "chef.automate.api.compliance.profiles.v1.Support")
	proto.RegisterType((*Dependency)(nil), "chef.automate.api.compliance.profiles.v1.Dependency")
	proto.RegisterType((*ProfileDetails)(nil), "chef.automate.api.compliance.profiles.v1.ProfileDetails")
	proto.RegisterType((*CheckResult)(nil), "chef.automate.api.compliance.profiles.v1.CheckResult")
	proto.RegisterType((*ResultSummary)(nil), "chef.automate.api.compliance.profiles.v1.ResultSummary")
	proto.RegisterType((*CheckMessage)(nil), "chef.automate.api.compliance.profiles.v1.CheckMessage")
	proto.RegisterType((*ListFilter)(nil), "chef.automate.api.compliance.profiles.v1.ListFilter")
	proto.RegisterType((*Query)(nil), "chef.automate.api.compliance.profiles.v1.Query")
}

func init() {
	proto.RegisterFile("api/external/compliance/profiles/profiles.proto", fileDescriptor_2a5235a531cc6986)
}

var fileDescriptor_2a5235a531cc6986 = []byte{
	// 1905 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4f, 0x73, 0x1c, 0x47,
	0x15, 0xcf, 0xac, 0xf6, 0xef, 0x5b, 0x5b, 0x36, 0x1d, 0xc7, 0x9e, 0xac, 0xe2, 0x20, 0x06, 0x52,
	0x88, 0x50, 0xde, 0x75, 0x14, 0xfc, 0x4f, 0xce, 0x01, 0x23, 0xc9, 0xa9, 0xa4, 0x22, 0xdb, 0x19,
	0xa9, 0x38, 0xc0, 0x61, 0xab, 0x35, 0xdb, 0x3b, 0xea, 0xd2, 0xcc, 0xf4, 0xd0, 0xdd, 0xe3, 0xb0,
	0xb8, 0x1c, 0xc0, 0xc5, 0xc9, 0x07, 0x2e, 0x5c, 0xc9, 0x81, 0xe2, 0xc8, 0x15, 0x1d, 0xe0, 0x1b,
	0x70, 0xe2, 0xc0, 0x57, 0xa0, 0x8a, 0x03, 0x27, 0xbe, 0x01, 0xf5, 0xba, 0x7b, 0x66, 0x57, 0xc9,
	0xda, 0xd1, 0x10, 0xe0, 0xd6, 0xef, 0x75, 0xbf, 0x5f, 0xbf, 0xfe, 0xbd, 0xd7, 0xaf, 0xdf, 0x0c,
	0x8c, 0x68, 0xce, 0x47, 0xec, 0xa7, 0x9a, 0xc9, 0x8c, 0x26, 0xa3, 0x48, 0xa4, 0x79, 0xc2, 0x69,
	0x16, 0xb1, 0x51, 0x2e, 0xc5, 0x94, 0x27, 0x4c, 0x55, 0x83, 0x61, 0x2e, 0x85, 0x16, 0x64, 0x23,
	0x3a, 0x62, 0xd3, 0x21, 0x2d, 0xb4, 0x48, 0xa9, 0x66, 0x43, 0x9a, 0xf3, 0xe1, 0xdc, 0x6a, 0x58,
	0x2d, 0x7e, 0xfc, 0xce, 0xe0, 0x8d, 0x58, 0x88, 0x38, 0x61, 0x66, 0x07, 0x9a, 0x65, 0x42, 0x53,
	0xcd, 0x45, 0xe6, 0x70, 0x06, 0x6b, 0x6e, 0xd6, 0x48, 0x87, 0xc5, 0x74, 0xc4, 0xd2, 0x5c, 0xcf,
	0xdc, 0xe4, 0xf7, 0x11, 0x52, 0x64, 0x2c, 0xd3, 0x6a, 0x54, 0x6e, 0x75, 0x2d, 0x96, 0x79, 0x64,
	0x97, 0x47, 0xd7, 0x62, 0x96, 0x5d, 0xcb, 0x45, 0xc2, 0xa3, 0xd9, 0x0b, 0xe0, 0xeb, 0x20, 0x70,
	0x9a, 0x7e, 0x11, 0x21, 0x58, 0x87, 0xf6, 0xfe, 0x11, 0xdd, 0xbc, 0x71, 0x93, 0x5c, 0x86, 0xb6,
	0x32, 0x23, 0xdf, 0x5b, 0x5f, 0xd9, 0xe8, 0x85, 0x4e, 0x0a, 0xae, 0x43, 0x67, 0x8f, 0x2b, 0xc5,
	0xb3, 0x98, 0xbc, 0x05, 0xab, 0xa9, 0x1d, 0x8e, 0x4f, 0x2d, 0x3d, 0xef, 0xb4, 0x16, 0x29, 0xf8,
	0x93, 0x07, 0xe4, 0x91, 0xa5, 0xe8, 0x91, 0x50, 0x3a, 0x64, 0x3f, 0x29, 0x98, 0xd2, 0xe4, 0x12,
	0xb4, 0xc4, 0x27, 0x19, 0x93, 0x7e, 0x6b, 0xdd, 0xdb, 0xe8, 0x85, 0x56, 0x20, 0xbb, 0xd0, 0x8a,
	0x8e, 0x8a, 0xec, 0xd8, 0x6f, 0xac, 0x7b, 0x1b, 0xfd, 0xcd, 0xd1, 0xf0, 0xac, 0xcc, 0x0f, 0xb7,
	0xd1, 0x2c, 0xb4, 0xd6, 0xe4, 0x3e, 0x34, 0x53, 0xa6, 0xa9, 0xbf, 0x62, 0x50, 0x36, 0xcf, 0x8e,
	0xb2, 0xc7, 0x34, 0x9d, 0x50, 0x4d, 0x43, 0x63, 0x1f, 0xfc, 0x18, 0xba, 0xa5, 0x86, 0x10, 0x68,
	0x66, 0x34, 0x65, 0xc6, 0xb3, 0x5e, 0x68, 0xc6, 0xc4, 0x87, 0xce, 0x63, 0x26, 0x15, 0x17, 0x99,
	0xd9, 0xaa, 0x17, 0x96, 0x22, 0xf9, 0x06, 0x9c, 0x8b, 0x44, 0xa6, 0x59, 0xa6, 0xc7, 0x7a, 0x96,
	0x33, 0xbf, 0x69, 0xa6, 0xfb, 0x4e, 0x77, 0x30, 0xcb, 0x59, 0x70, 0x0b, 0x5a, 0xc6, 0x69, 0x44,
	0xc6, 0x1d, 0x7c, 0x6f, 0xdd, 0xdb, 0x38, 0x17, 0x9a, 0x31, 0x19, 0x40, 0x37, 0x17, 0x8a, 0x63,
	0x70, 0xcc, 0x8e, 0x2b, 0x61, 0x25, 0x07, 0x0c, 0xfa, 0x8e, 0xd0, 0x1d, 0x5c, 0x5a, 0x31, 0xe9,
	0x2d, 0x32, 0x59, 0xcf, 0xdd, 0xd2, 0x85, 0xe6, 0xdc, 0x85, 0x40, 0x40, 0xd7, 0x6d, 0xa3, 0xc8,
	0x1e, 0x74, 0x4b, 0x9a, 0x4c, 0x94, 0xfb, 0x9b, 0xef, 0x9c, 0x9d, 0x54, 0x87, 0x12, 0x56, 0x10,
	0xe8, 0xb2, 0x16, 0x9a, 0x26, 0xfe, 0xa5, 0x75, 0x6f, 0xa3, 0x15, 0x5a, 0x21, 0xf8, 0x4b, 0x0b,
	0x3a, 0x6e, 0x6d, 0xe5, 0xbe, 0xb7, 0xe0, 0x3e, 0x5a, 0x71, 0x9d, 0x94, 0x67, 0xb2, 0x02, 0x79,
	0x13, 0x20, 0xa5, 0x3c, 0xd3, 0x94, 0x23, 0x07, 0xf6, 0x5c, 0x0b, 0x1a, 0xf2, 0x06, 0xf4, 0x22,
	0x91, 0xcf, 0x24, 0x8f, 0x8f, 0xb4, 0x0b, 0xc3, 0x5c, 0x41, 0xbe, 0x0d, 0x17, 0x2a, 0x61, 0xcc,
	0x52, 0xca, 0x13, 0x97, 0x90, 0xab, 0x95, 0x7a, 0x17, 0xb5, 0xc8, 0x5d, 0xc2, 0x23, 0x96, 0x29,
	0xe6, 0xb7, 0x2d, 0x77, 0x4e, 0xc4, 0x19, 0x55, 0xa4, 0x29, 0x95, 0x33, 0xbf, 0x63, 0x67, 0x9c,
	0xb8, 0xc8, 0x77, 0xf7, 0x34, 0xdf, 0x55, 0xcc, 0x7a, 0x8b, 0x31, 0xdb, 0x83, 0xae, 0x2a, 0xf2,
	0x5c, 0x48, 0xad, 0xfc, 0x8b, 0x75, 0x59, 0xde, 0xb7, 0x96, 0x61, 0x05, 0x41, 0x1e, 0x40, 0x67,
	0xc2, 0x72, 0x96, 0x4d, 0x94, 0xff, 0x35, 0x83, 0xf6, 0xbd, 0xb3, 0xa3, 0xed, 0x18, 0x43, 0x96,
	0x45, 0xb3, 0xb0, 0x04, 0x59, 0xa8, 0x09, 0xc4, 0x78, 0xed, 0x24, 0xf2, 0x3e, 0xb4, 0x63, 0x29,
	0x8a, 0x5c, 0xf9, 0xaf, 0x9a, 0x6d, 0x6a, 0xdc, 0xda, 0xf7, 0xd1, 0x2e, 0x74, 0xe6, 0x78, 0x7e,
	0xbc, 0x20, 0x52, 0x24, 0xca, 0xbf, 0x54, 0xf7, 0xfc, 0xdb, 0xd6, 0x32, 0xac, 0x20, 0xc8, 0x3e,
	0x00, 0xd5, 0x5a, 0xf2, 0xc3, 0x42, 0x33, 0xe5, 0xbf, 0x66, 0x00, 0xdf, 0x3d, 0x3b, 0xe0, 0xbd,
	0xd2, 0x36, 0x5c, 0x80, 0xc1, 0xaa, 0x97, 0x50, 0xcd, 0x94, 0x1e, 0x97, 0xa1, 0xbd, 0x6c, 0xc8,
	0x38, 0x6f, 0xb5, 0x3f, 0xb4, 0xca, 0xe0, 0x03, 0x68, 0x99, 0xb3, 0x91, 0x55, 0x68, 0xf0, 0x89,
	0x4b, 0xe3, 0x06, 0x9f, 0xbc, 0x20, 0x89, 0x07, 0x0b, 0x27, 0x5f, 0x31, 0x55, 0xb4, 0x92, 0x83,
	0x7f, 0xae, 0x40, 0xc7, 0x1d, 0xee, 0x0b, 0x68, 0x04, 0x9a, 0x91, 0x98, 0x54, 0xb7, 0x1c, 0xc7,
	0xe6, 0x2e, 0x33, 0x15, 0xb9, 0xab, 0x60, 0xc6, 0x18, 0x3a, 0x9e, 0xe6, 0x34, 0xb2, 0x37, 0xa0,
	0x11, 0x3a, 0x69, 0xee, 0x4d, 0x6b, 0xd1, 0x1b, 0x0a, 0x17, 0x94, 0x28, 0x64, 0xc4, 0xc6, 0x89,
	0x88, 0xcc, 0x03, 0x61, 0x72, 0xbe, 0xbf, 0x79, 0xbb, 0x46, 0x3a, 0x1a, 0x80, 0x8f, 0x9c, 0x7d,
	0xb8, 0xaa, 0x4e, 0xc9, 0xe4, 0x43, 0xe8, 0x48, 0xa6, 0x8a, 0x44, 0x2b, 0xbf, 0x63, 0x02, 0x73,
	0xfd, 0xec, 0xd0, 0xa1, 0x31, 0x0c, 0x4b, 0x00, 0x72, 0x0f, 0x9a, 0x92, 0x4d, 0x95, 0xdf, 0x35,
	0x40, 0xd7, 0xea, 0x00, 0x4d, 0x43, 0x63, 0x4a, 0x1e, 0x42, 0x53, 0xd3, 0x58, 0xf9, 0x3d, 0x03,
	0x71, 0xb7, 0x76, 0xd6, 0x0d, 0x0f, 0x68, 0xac, 0x76, 0x33, 0x2d, 0x67, 0xa1, 0x01, 0x1a, 0xdc,
	0x82, 0x5e, 0xa5, 0x22, 0x17, 0x61, 0xe5, 0x98, 0xcd, 0x5c, 0xd8, 0x70, 0x88, 0xbc, 0x3f, 0xa6,
	0x49, 0x51, 0x65, 0x81, 0x11, 0xb6, 0x1a, 0xb7, 0xbd, 0xe0, 0x3b, 0xb0, 0x12, 0xb2, 0x29, 0x9a,
	0x14, 0x32, 0x29, 0x4d, 0x0a, 0x99, 0xa0, 0x46, 0xb2, 0xa9, 0x33, 0xc0, 0x61, 0xf0, 0x47, 0x0f,
	0xda, 0x96, 0x0b, 0x73, 0x35, 0x35, 0xd5, 0x85, 0x72, 0x16, 0x4e, 0x22, 0x6b, 0x58, 0xfc, 0x26,
	0x6c, 0x6c, 0x12, 0xc2, 0x9a, 0x76, 0x51, 0xb1, 0x83, 0x49, 0xf1, 0x3a, 0x74, 0x65, 0x91, 0x8d,
	0x35, 0x4f, 0x99, 0x49, 0x96, 0x46, 0xd8, 0x91, 0x45, 0x76, 0xc0, 0x53, 0x46, 0xae, 0x02, 0x28,
	0x4d, 0xa5, 0xb6, 0x93, 0xae, 0x6a, 0x1a, 0x8d, 0x99, 0xf6, 0xa1, 0x93, 0x32, 0xa5, 0x68, 0x5c,
	0x26, 0x4e, 0x29, 0xe2, 0xbb, 0xa7, 0x8e, 0x79, 0x3e, 0x2e, 0xa7, 0x6d, 0xad, 0xec, 0xa3, 0x6e,
	0xcf, 0xaa, 0x82, 0x9b, 0xb0, 0x7a, 0x3a, 0x39, 0xca, 0xa3, 0x79, 0xd5, 0xd1, 0x30, 0x87, 0x13,
	0x9e, 0x59, 0x7a, 0x5a, 0xa1, 0x19, 0x07, 0xc7, 0xd0, 0xab, 0xae, 0xe4, 0xd2, 0xf7, 0xe1, 0x43,
	0xe8, 0x88, 0xdc, 0xb4, 0x33, 0xae, 0x7d, 0xa8, 0x91, 0x53, 0x0f, 0x8d, 0x61, 0x58, 0x02, 0x04,
	0x3b, 0xd0, 0xb6, 0x2a, 0xb2, 0x0e, 0x7d, 0x64, 0x4f, 0x72, 0x23, 0xba, 0x0d, 0x17, 0x55, 0xc8,
	0xc6, 0x84, 0x4d, 0x69, 0x91, 0x68, 0x47, 0x71, 0x29, 0x06, 0xbf, 0xf5, 0xa0, 0xe3, 0xea, 0x32,
	0xb9, 0x02, 0x1d, 0xa1, 0xc6, 0x0b, 0x4e, 0xb7, 0x85, 0x7a, 0x80, 0x6e, 0xaf, 0x41, 0x4f, 0xa8,
	0xf1, 0x94, 0xa6, 0x3c, 0x99, 0x95, 0x31, 0x12, 0xea, 0xbe, 0x91, 0x11, 0x5b, 0xb2, 0x84, 0x51,
	0xc5, 0xca, 0x27, 0xdb, 0x89, 0x58, 0x88, 0x78, 0xa6, 0x72, 0x16, 0x55, 0x85, 0xc8, 0x86, 0xe9,
	0xbc, 0xd5, 0xba, 0x42, 0x64, 0x1a, 0x89, 0x84, 0xea, 0xa9, 0x90, 0xa9, 0x8b, 0x55, 0x25, 0x07,
	0xbf, 0x6e, 0x00, 0xcc, 0x0b, 0xfd, 0x52, 0x4e, 0x5d, 0x1e, 0x36, 0xe6, 0x79, 0x48, 0xa0, 0x99,
	0x53, 0x7d, 0x54, 0x96, 0x17, 0x1c, 0xe3, 0xaa, 0x98, 0x97, 0xaf, 0x2b, 0x0e, 0x31, 0x21, 0x0f,
	0x25, 0xcd, 0xa2, 0x23, 0xb7, 0xa9, 0x93, 0x70, 0xa5, 0xa6, 0xb1, 0x4b, 0x0b, 0x1c, 0xe2, 0xca,
	0x48, 0xa4, 0x29, 0xd7, 0xee, 0xf5, 0x74, 0xd2, 0x4b, 0x1e, 0xcf, 0x75, 0xe8, 0xab, 0x22, 0x67,
	0x32, 0xa5, 0xf2, 0x98, 0x69, 0xf7, 0x84, 0x2e, 0xaa, 0x10, 0x33, 0xe6, 0xfa, 0xa8, 0x38, 0xf4,
	0xc1, 0x62, 0x5a, 0x09, 0x7b, 0x85, 0x79, 0xfc, 0xfd, 0xbe, 0xed, 0x15, 0xe6, 0x9a, 0xe0, 0x00,
	0x56, 0xcb, 0xce, 0x8a, 0x69, 0xca, 0x13, 0xf5, 0xdf, 0x68, 0xae, 0x82, 0x5f, 0x35, 0xa0, 0xbf,
	0x7d, 0xc4, 0xa2, 0x63, 0x77, 0x59, 0x3f, 0x9e, 0x37, 0x0c, 0x9e, 0xc9, 0xd3, 0x5b, 0x75, 0x6b,
	0xdf, 0xbe, 0x35, 0x9f, 0x77, 0x1a, 0x0f, 0xa0, 0xcd, 0xa4, 0x14, 0x12, 0x33, 0x1f, 0x2b, 0xd8,
	0xcd, 0x3a, 0x8d, 0x33, 0x8b, 0x8e, 0xdd, 0xdd, 0x0c, 0x1d, 0x0a, 0x09, 0xa1, 0xfb, 0x09, 0x95,
	0x19, 0xcf, 0x62, 0xfb, 0x1e, 0xfd, 0xe7, 0x88, 0x15, 0x4e, 0xf0, 0x04, 0xce, 0x9f, 0xf2, 0xde,
	0x15, 0x41, 0xf7, 0x9e, 0x75, 0x43, 0x2b, 0x60, 0xbf, 0x86, 0x45, 0x47, 0x69, 0x9a, 0xe6, 0x8e,
	0xe0, 0xb9, 0x02, 0xd3, 0xb9, 0x7a, 0x93, 0x2c, 0xcd, 0x95, 0x7c, 0xea, 0x11, 0x6d, 0x9a, 0xc2,
	0x31, 0x7f, 0x44, 0x7f, 0x0e, 0xe7, 0x16, 0xdd, 0xc2, 0x08, 0xa2, 0xbf, 0x65, 0xae, 0x97, 0x3d,
	0xe7, 0xe7, 0x8b, 0x8e, 0xcd, 0xce, 0xa4, 0x48, 0xed, 0x6e, 0xad, 0xd0, 0x49, 0x58, 0x20, 0x1d,
	0xf6, 0x98, 0x4f, 0xe6, 0x6d, 0xa5, 0xd1, 0x7c, 0x30, 0xc1, 0x34, 0x4f, 0x55, 0xec, 0x72, 0x1f,
	0x87, 0xc1, 0x6d, 0x80, 0x8f, 0xb8, 0xd2, 0xf7, 0x79, 0xa2, 0x99, 0x44, 0x58, 0x53, 0xf2, 0x6d,
	0x9f, 0xd3, 0x0b, 0x9d, 0x84, 0x2e, 0x98, 0xcf, 0x85, 0xd7, 0xac, 0x5b, 0x38, 0x0e, 0xfe, 0xda,
	0x80, 0xd6, 0xc7, 0x05, 0x33, 0x51, 0xee, 0x4c, 0x8d, 0x7d, 0xd9, 0x1e, 0xd5, 0x68, 0xe8, 0xe6,
	0x9b, 0x87, 0x25, 0x08, 0x79, 0x08, 0x2d, 0x21, 0x27, 0x4c, 0x9a, 0xed, 0x56, 0x37, 0xef, 0x9c,
	0x1d, 0xcd, 0xf8, 0x33, 0x7c, 0x88, 0xc6, 0xf8, 0x2d, 0x13, 0x5a, 0x1c, 0x74, 0x5f, 0x09, 0xa9,
	0x5d, 0x4b, 0x64, 0xc6, 0xb6, 0x5e, 0xc4, 0xcc, 0xbf, 0x62, 0x59, 0xc5, 0x31, 0xbe, 0x3c, 0x39,
	0x93, 0x63, 0xa3, 0xf7, 0x8d, 0xbe, 0x93, 0x33, 0xf9, 0x08, 0xa7, 0xaa, 0x0b, 0xf7, 0xfa, 0xb2,
	0x0b, 0x37, 0x58, 0x7e, 0xe1, 0xd6, 0x4e, 0x5f, 0xb8, 0x37, 0xa1, 0x57, 0xb9, 0x46, 0x3a, 0xb0,
	0x72, 0x6f, 0x7f, 0xfb, 0xe2, 0x2b, 0xa4, 0x0b, 0xcd, 0x9d, 0xdd, 0xfd, 0xed, 0x8b, 0xde, 0xe6,
	0x9f, 0xcf, 0xc1, 0x85, 0xf2, 0xd3, 0x66, 0x9f, 0xc9, 0xc7, 0x3c, 0x62, 0xe4, 0x97, 0x1e, 0xb4,
	0xb7, 0x25, 0xa3, 0x9a, 0x91, 0xf7, 0x6a, 0x7f, 0xda, 0x2c, 0x7c, 0xd8, 0x0e, 0x6e, 0xd4, 0xbc,
	0x28, 0xf6, 0x4e, 0x04, 0xaf, 0x6c, 0x78, 0xe4, 0x77, 0x0d, 0x68, 0x86, 0x8c, 0x4e, 0xc8, 0xed,
	0xda, 0x1e, 0xb8, 0x7a, 0x35, 0xa8, 0xff, 0x59, 0x16, 0xfc, 0xc1, 0x7b, 0x76, 0xe2, 0x7f, 0x17,
	0xbe, 0x39, 0x5f, 0xb6, 0x55, 0x2e, 0xdb, 0x52, 0x5a, 0x48, 0x1a, 0xb3, 0xad, 0x27, 0x26, 0x0c,
	0x4f, 0x49, 0x53, 0x32, 0x3a, 0x79, 0x7e, 0xe2, 0xdf, 0x84, 0xb5, 0x65, 0xcb, 0xcb, 0x65, 0x57,
	0x96, 0x4d, 0xc6, 0x4c, 0x3f, 0xfb, 0xdb, 0xdf, 0x7f, 0xd3, 0x78, 0x8f, 0x6c, 0x2d, 0xfd, 0xe9,
	0x82, 0xd0, 0x23, 0x87, 0x30, 0x7a, 0x82, 0x21, 0x7e, 0x3a, 0x72, 0x11, 0x1d, 0x3d, 0x71, 0x83,
	0xa7, 0xe4, 0xb3, 0x06, 0xac, 0x22, 0x47, 0xf7, 0xa5, 0x48, 0xf7, 0x6c, 0xb5, 0xff, 0xbf, 0xb2,
	0xf5, 0x19, 0xb2, 0x15, 0xc0, 0x60, 0xd9, 0x09, 0xdd, 0xeb, 0x53, 0x92, 0x74, 0xf7, 0xa5, 0xab,
	0xae, 0x2e, 0xcc, 0x59, 0xd5, 0xa3, 0xcf, 0x33, 0xb5, 0x49, 0xae, 0x2f, 0x32, 0x65, 0x57, 0x39,
	0x9e, 0x5e, 0xc4, 0xcf, 0xa7, 0xd0, 0x41, 0x7a, 0x0e, 0xa8, 0xfc, 0x0a, 0xbc, 0xdc, 0xa8, 0x6f,
	0x49, 0x35, 0x0d, 0x5e, 0xb9, 0xee, 0x91, 0x5f, 0x34, 0xa0, 0xbd, 0xc3, 0x12, 0xa6, 0xd9, 0x57,
	0xd8, 0xff, 0xf2, 0xd0, 0xfe, 0x29, 0x1b, 0x96, 0x7f, 0xca, 0x86, 0xbb, 0x69, 0xae, 0x67, 0xc1,
	0xef, 0x91, 0xfc, 0xb7, 0x5e, 0x9e, 0x7b, 0xed, 0x89, 0xd9, 0xfd, 0xf9, 0x89, 0x7f, 0xe7, 0xe5,
	0x0b, 0x97, 0x06, 0xc7, 0x1a, 0x1b, 0xf6, 0x6f, 0xbd, 0x7d, 0x63, 0x69, 0x9e, 0x7e, 0x69, 0x8a,
	0xfe, 0xc3, 0x83, 0x26, 0x96, 0x5b, 0x32, 0xaa, 0x59, 0x50, 0x07, 0x9b, 0xb5, 0x19, 0x53, 0xc1,
	0xcf, 0x9e, 0x9d, 0xf8, 0x57, 0xe1, 0xd5, 0x25, 0x87, 0x21, 0x6d, 0xc5, 0xa8, 0x8c, 0x8e, 0x9e,
	0x9f, 0xf8, 0xa3, 0xe5, 0x0b, 0xfc, 0x65, 0x14, 0x24, 0x5c, 0xd9, 0xf4, 0x5b, 0x0f, 0xd6, 0x96,
	0x12, 0x60, 0x51, 0xb7, 0xbc, 0xb7, 0xc9, 0xbf, 0x3c, 0x80, 0x3d, 0xa6, 0xe9, 0xbe, 0xd1, 0x90,
	0x1a, 0xfd, 0xb6, 0xfd, 0x39, 0x58, 0xe7, 0x02, 0xba, 0xdf, 0x8e, 0xc1, 0xa7, 0xff, 0xb3, 0xf3,
	0x7e, 0x2b, 0xf8, 0xfa, 0xd2, 0xf3, 0xa6, 0x4c, 0xd3, 0xea, 0xcc, 0x3f, 0xb8, 0xfb, 0xa3, 0x3b,
	0xb6, 0x9b, 0x44, 0x47, 0x47, 0xe8, 0x7e, 0xf5, 0xb3, 0xf5, 0x4b, 0x7f, 0x2c, 0x1f, 0xb6, 0x4d,
	0x42, 0xbf, 0xfb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xc5, 0x78, 0x9b, 0x83, 0x16, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProfilesServiceClient is the client API for ProfilesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfilesServiceClient interface {
	// grpc gateway is not able to handle multi-part upload; https://github.com/grpc-ecosystem/grpc-gateway/issues/410
	// so we do not auto-generate the route for profile upload; we instead custom handle with mux
	Create(ctx context.Context, opts ...grpc.CallOption) (ProfilesService_CreateClient, error)
	//
	//Show an installed profile
	//
	//Show the details of an installed profile given the profile name, owner (Automate user associated with the profile), and version.
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:get
	//```
	Read(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error)
	//
	//Show an available profile
	//
	//Show the details of an un-installed profile using the profile name and version.
	//in the UI, these are the profiles under the "Available" tab.
	//These profiles are created and maintained by Chef, shipped with Chef Automate.
	//
	//
	//Authorization Action:
	//```
	//compliance:marketProfiles:get
	//```
	ReadFromMarket(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error)
	// grpc gateway is not able to handle streaming; https://github.com/grpc-ecosystem/grpc-gateway/issues/435
	// so we do not auto-generate the route for profile download; we instead custom handle with mux
	ReadTar(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (ProfilesService_ReadTarClient, error)
	//
	//Delete an installed profile
	//
	//Delete an installed profile given the profile name, owner (Automate user associated with the profile), and version.
	//Note: this action "uninstalls" the profile. This has no impact on the market profiles.
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:delete
	//```
	Delete(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*empty.Empty, error)
	//
	//List all available profiles
	//
	//Lists all profiles available for the Automate instance.
	//Empty params return all "market" profiles.
	//Specifying the `owner` field returns all profiles installed for the specified user.
	//
	//Supports pagination, sorting, and filtering (wildcard supported).
	//
	//Supported sort fields: title, name (default: title)
	//Supported filter fields: name, version, title
	//
	//Example:
	//```
	//{
	//"filters":[
	//{"type": "title", "values": [ "Dev*"]}
	//],
	//"page": 1,
	//"per_page": 3,
	//"owner": "admin"
	//}
	//```
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:list
	//```
	List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profiles, error)
	MetaSearch(ctx context.Context, in *Sha256, opts ...grpc.CallOption) (*Missing, error)
}

type profilesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfilesServiceClient(cc grpc.ClientConnInterface) ProfilesServiceClient {
	return &profilesServiceClient{cc}
}

func (c *profilesServiceClient) Create(ctx context.Context, opts ...grpc.CallOption) (ProfilesService_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProfilesService_serviceDesc.Streams[0], "/chef.automate.api.compliance.profiles.v1.ProfilesService/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &profilesServiceCreateClient{stream}
	return x, nil
}

type ProfilesService_CreateClient interface {
	Send(*ProfilePostRequest) error
	CloseAndRecv() (*CheckResult, error)
	grpc.ClientStream
}

type profilesServiceCreateClient struct {
	grpc.ClientStream
}

func (x *profilesServiceCreateClient) Send(m *ProfilePostRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *profilesServiceCreateClient) CloseAndRecv() (*CheckResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CheckResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *profilesServiceClient) Read(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.profiles.v1.ProfilesService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) ReadFromMarket(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.profiles.v1.ProfilesService/ReadFromMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) ReadTar(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (ProfilesService_ReadTarClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProfilesService_serviceDesc.Streams[1], "/chef.automate.api.compliance.profiles.v1.ProfilesService/ReadTar", opts...)
	if err != nil {
		return nil, err
	}
	x := &profilesServiceReadTarClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProfilesService_ReadTarClient interface {
	Recv() (*ProfileData, error)
	grpc.ClientStream
}

type profilesServiceReadTarClient struct {
	grpc.ClientStream
}

func (x *profilesServiceReadTarClient) Recv() (*ProfileData, error) {
	m := new(ProfileData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *profilesServiceClient) Delete(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.profiles.v1.ProfilesService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profiles, error) {
	out := new(Profiles)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.profiles.v1.ProfilesService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) MetaSearch(ctx context.Context, in *Sha256, opts ...grpc.CallOption) (*Missing, error) {
	out := new(Missing)
	err := c.cc.Invoke(ctx, "/chef.automate.api.compliance.profiles.v1.ProfilesService/MetaSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfilesServiceServer is the server API for ProfilesService service.
type ProfilesServiceServer interface {
	// grpc gateway is not able to handle multi-part upload; https://github.com/grpc-ecosystem/grpc-gateway/issues/410
	// so we do not auto-generate the route for profile upload; we instead custom handle with mux
	Create(ProfilesService_CreateServer) error
	//
	//Show an installed profile
	//
	//Show the details of an installed profile given the profile name, owner (Automate user associated with the profile), and version.
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:get
	//```
	Read(context.Context, *ProfileDetails) (*Profile, error)
	//
	//Show an available profile
	//
	//Show the details of an un-installed profile using the profile name and version.
	//in the UI, these are the profiles under the "Available" tab.
	//These profiles are created and maintained by Chef, shipped with Chef Automate.
	//
	//
	//Authorization Action:
	//```
	//compliance:marketProfiles:get
	//```
	ReadFromMarket(context.Context, *ProfileDetails) (*Profile, error)
	// grpc gateway is not able to handle streaming; https://github.com/grpc-ecosystem/grpc-gateway/issues/435
	// so we do not auto-generate the route for profile download; we instead custom handle with mux
	ReadTar(*ProfileDetails, ProfilesService_ReadTarServer) error
	//
	//Delete an installed profile
	//
	//Delete an installed profile given the profile name, owner (Automate user associated with the profile), and version.
	//Note: this action "uninstalls" the profile. This has no impact on the market profiles.
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:delete
	//```
	Delete(context.Context, *ProfileDetails) (*empty.Empty, error)
	//
	//List all available profiles
	//
	//Lists all profiles available for the Automate instance.
	//Empty params return all "market" profiles.
	//Specifying the `owner` field returns all profiles installed for the specified user.
	//
	//Supports pagination, sorting, and filtering (wildcard supported).
	//
	//Supported sort fields: title, name (default: title)
	//Supported filter fields: name, version, title
	//
	//Example:
	//```
	//{
	//"filters":[
	//{"type": "title", "values": [ "Dev*"]}
	//],
	//"page": 1,
	//"per_page": 3,
	//"owner": "admin"
	//}
	//```
	//
	//
	//Authorization Action:
	//```
	//compliance:profiles:list
	//```
	List(context.Context, *Query) (*Profiles, error)
	MetaSearch(context.Context, *Sha256) (*Missing, error)
}

// UnimplementedProfilesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProfilesServiceServer struct {
}

func (*UnimplementedProfilesServiceServer) Create(srv ProfilesService_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProfilesServiceServer) Read(ctx context.Context, req *ProfileDetails) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedProfilesServiceServer) ReadFromMarket(ctx context.Context, req *ProfileDetails) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFromMarket not implemented")
}
func (*UnimplementedProfilesServiceServer) ReadTar(req *ProfileDetails, srv ProfilesService_ReadTarServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTar not implemented")
}
func (*UnimplementedProfilesServiceServer) Delete(ctx context.Context, req *ProfileDetails) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedProfilesServiceServer) List(ctx context.Context, req *Query) (*Profiles, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedProfilesServiceServer) MetaSearch(ctx context.Context, req *Sha256) (*Missing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaSearch not implemented")
}

func RegisterProfilesServiceServer(s *grpc.Server, srv ProfilesServiceServer) {
	s.RegisterService(&_ProfilesService_serviceDesc, srv)
}

func _ProfilesService_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProfilesServiceServer).Create(&profilesServiceCreateServer{stream})
}

type ProfilesService_CreateServer interface {
	SendAndClose(*CheckResult) error
	Recv() (*ProfilePostRequest, error)
	grpc.ServerStream
}

type profilesServiceCreateServer struct {
	grpc.ServerStream
}

func (x *profilesServiceCreateServer) SendAndClose(m *CheckResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *profilesServiceCreateServer) Recv() (*ProfilePostRequest, error) {
	m := new(ProfilePostRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProfilesService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.profiles.v1.ProfilesService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).Read(ctx, req.(*ProfileDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_ReadFromMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).ReadFromMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.profiles.v1.ProfilesService/ReadFromMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).ReadFromMarket(ctx, req.(*ProfileDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_ReadTar_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProfileDetails)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProfilesServiceServer).ReadTar(m, &profilesServiceReadTarServer{stream})
}

type ProfilesService_ReadTarServer interface {
	Send(*ProfileData) error
	grpc.ServerStream
}

type profilesServiceReadTarServer struct {
	grpc.ServerStream
}

func (x *profilesServiceReadTarServer) Send(m *ProfileData) error {
	return x.ServerStream.SendMsg(m)
}

func _ProfilesService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.profiles.v1.ProfilesService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).Delete(ctx, req.(*ProfileDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.profiles.v1.ProfilesService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).List(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_MetaSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Sha256)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).MetaSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.compliance.profiles.v1.ProfilesService/MetaSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).MetaSearch(ctx, req.(*Sha256))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfilesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.compliance.profiles.v1.ProfilesService",
	HandlerType: (*ProfilesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _ProfilesService_Read_Handler,
		},
		{
			MethodName: "ReadFromMarket",
			Handler:    _ProfilesService_ReadFromMarket_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ProfilesService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ProfilesService_List_Handler,
		},
		{
			MethodName: "MetaSearch",
			Handler:    _ProfilesService_MetaSearch_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _ProfilesService_Create_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReadTar",
			Handler:       _ProfilesService_ReadTar_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/external/compliance/profiles/profiles.proto",
}
