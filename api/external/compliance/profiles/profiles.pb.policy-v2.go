// Code generated by protoc-gen-policy. DO NOT EDIT.
// source: api/external/compliance/profiles/profiles.proto

package profiles

import policyv2 "github.com/chef/automate/components/automate-gateway/authz/policy_v2"

func init() {
	policyv2.MapMethodTo("/chef.automate.api.compliance.profiles.v1.ProfilesService/Read", "compliance:profiles:{owner}", "compliance:profiles:get", "GET", "/compliance/profiles/read/{owner}/{name}/version/{version}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*ProfileDetails); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "owner":
					return m.Owner
				case "name":
					return m.Name
				case "version":
					return m.Version
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.compliance.profiles.v1.ProfilesService/ReadFromMarket", "compliance:profiles:market", "compliance:marketProfiles:get", "GET", "/compliance/market/read/{name}/version/{version}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*ProfileDetails); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "owner":
					return m.Owner
				case "name":
					return m.Name
				case "version":
					return m.Version
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.compliance.profiles.v1.ProfilesService/Delete", "compliance:profiles:{owner}", "compliance:profiles:delete", "DELETE", "/compliance/profiles/{owner}/{name}/version/{version}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*ProfileDetails); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "owner":
					return m.Owner
				case "name":
					return m.Name
				case "version":
					return m.Version
				default:
					return ""
				}
			})
		}
		return ""
	})
	policyv2.MapMethodTo("/chef.automate.api.compliance.profiles.v1.ProfilesService/List", "compliance:profiles", "compliance:profiles:list", "POST", "/compliance/profiles/search", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*Query); ok {
			return policyv2.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "sort":
					return m.Sort
				case "owner":
					return m.Owner
				case "name":
					return m.Name
				case "version":
					return m.Version
				default:
					return ""
				}
			})
		}
		return ""
	})
}
