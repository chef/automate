// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: external/ingest/request/liveness.proto

package request

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Liveness struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EventType        string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EntityUuid       string                 `protobuf:"bytes,2,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	ChefServerFqdn   string                 `protobuf:"bytes,3,opt,name=chef_server_fqdn,json=chefServerFqdn,proto3" json:"chef_server_fqdn,omitempty"`
	Source           string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	MessageVersion   string                 `protobuf:"bytes,5,opt,name=message_version,json=messageVersion,proto3" json:"message_version,omitempty"`
	OrganizationName string                 `protobuf:"bytes,6,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	NodeName         string                 `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Liveness) Reset() {
	*x = Liveness{}
	mi := &file_external_ingest_request_liveness_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Liveness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Liveness) ProtoMessage() {}

func (x *Liveness) ProtoReflect() protoreflect.Message {
	mi := &file_external_ingest_request_liveness_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Liveness.ProtoReflect.Descriptor instead.
func (*Liveness) Descriptor() ([]byte, []int) {
	return file_external_ingest_request_liveness_proto_rawDescGZIP(), []int{0}
}

func (x *Liveness) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Liveness) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Liveness) GetChefServerFqdn() string {
	if x != nil {
		return x.ChefServerFqdn
	}
	return ""
}

func (x *Liveness) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Liveness) GetMessageVersion() string {
	if x != nil {
		return x.MessageVersion
	}
	return ""
}

func (x *Liveness) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *Liveness) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

var File_external_ingest_request_liveness_proto protoreflect.FileDescriptor

const file_external_ingest_request_liveness_proto_rawDesc = "" +
	"\n" +
	"&external/ingest/request/liveness.proto\x12 chef.automate.api.ingest.request\"\xff\x01\n" +
	"\bLiveness\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1f\n" +
	"\ventity_uuid\x18\x02 \x01(\tR\n" +
	"entityUuid\x12(\n" +
	"\x10chef_server_fqdn\x18\x03 \x01(\tR\x0echefServerFqdn\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12'\n" +
	"\x0fmessage_version\x18\x05 \x01(\tR\x0emessageVersion\x12+\n" +
	"\x11organization_name\x18\x06 \x01(\tR\x10organizationName\x12\x1b\n" +
	"\tnode_name\x18\a \x01(\tR\bnodeNameB6Z4github.com/chef/automate/api/external/ingest/requestb\x06proto3"

var (
	file_external_ingest_request_liveness_proto_rawDescOnce sync.Once
	file_external_ingest_request_liveness_proto_rawDescData []byte
)

func file_external_ingest_request_liveness_proto_rawDescGZIP() []byte {
	file_external_ingest_request_liveness_proto_rawDescOnce.Do(func() {
		file_external_ingest_request_liveness_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_external_ingest_request_liveness_proto_rawDesc), len(file_external_ingest_request_liveness_proto_rawDesc)))
	})
	return file_external_ingest_request_liveness_proto_rawDescData
}

var file_external_ingest_request_liveness_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_external_ingest_request_liveness_proto_goTypes = []any{
	(*Liveness)(nil), // 0: chef.automate.api.ingest.request.Liveness
}
var file_external_ingest_request_liveness_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_external_ingest_request_liveness_proto_init() }
func file_external_ingest_request_liveness_proto_init() {
	if File_external_ingest_request_liveness_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_external_ingest_request_liveness_proto_rawDesc), len(file_external_ingest_request_liveness_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_ingest_request_liveness_proto_goTypes,
		DependencyIndexes: file_external_ingest_request_liveness_proto_depIdxs,
		MessageInfos:      file_external_ingest_request_liveness_proto_msgTypes,
	}.Build()
	File_external_ingest_request_liveness_proto = out.File
	file_external_ingest_request_liveness_proto_goTypes = nil
	file_external_ingest_request_liveness_proto_depIdxs = nil
}
