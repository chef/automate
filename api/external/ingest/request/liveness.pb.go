// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/ingest/request/liveness.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Liveness struct {
	EventType            string   `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EntityUuid           string   `protobuf:"bytes,2,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	ChefServerFqdn       string   `protobuf:"bytes,3,opt,name=chef_server_fqdn,json=chefServerFqdn,proto3" json:"chef_server_fqdn,omitempty"`
	Source               string   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	MessageVersion       string   `protobuf:"bytes,5,opt,name=message_version,json=messageVersion,proto3" json:"message_version,omitempty"`
	OrganizationName     string   `protobuf:"bytes,6,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	NodeName             string   `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Liveness) Reset()         { *m = Liveness{} }
func (m *Liveness) String() string { return proto.CompactTextString(m) }
func (*Liveness) ProtoMessage()    {}
func (*Liveness) Descriptor() ([]byte, []int) {
	return fileDescriptor_5f3ceef37c0406bf, []int{0}
}

func (m *Liveness) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Liveness.Unmarshal(m, b)
}
func (m *Liveness) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Liveness.Marshal(b, m, deterministic)
}
func (m *Liveness) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Liveness.Merge(m, src)
}
func (m *Liveness) XXX_Size() int {
	return xxx_messageInfo_Liveness.Size(m)
}
func (m *Liveness) XXX_DiscardUnknown() {
	xxx_messageInfo_Liveness.DiscardUnknown(m)
}

var xxx_messageInfo_Liveness proto.InternalMessageInfo

func (m *Liveness) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *Liveness) GetEntityUuid() string {
	if m != nil {
		return m.EntityUuid
	}
	return ""
}

func (m *Liveness) GetChefServerFqdn() string {
	if m != nil {
		return m.ChefServerFqdn
	}
	return ""
}

func (m *Liveness) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Liveness) GetMessageVersion() string {
	if m != nil {
		return m.MessageVersion
	}
	return ""
}

func (m *Liveness) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *Liveness) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func init() {
	proto.RegisterType((*Liveness)(nil), "chef.automate.api.ingest.request.Liveness")
}

func init() {
	proto.RegisterFile("api/external/ingest/request/liveness.proto", fileDescriptor_5f3ceef37c0406bf)
}

var fileDescriptor_5f3ceef37c0406bf = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4d, 0x4b, 0xf4, 0x30,
	0x14, 0x85, 0xe9, 0xfb, 0x6a, 0x9d, 0x46, 0xd0, 0x31, 0x0b, 0x09, 0x88, 0x38, 0xb8, 0x71, 0x50,
	0x48, 0x16, 0x8a, 0x3f, 0xc0, 0x85, 0x2b, 0x71, 0xe1, 0xd7, 0xc2, 0x4d, 0xc8, 0xb4, 0x77, 0x3a,
	0x81, 0xe9, 0x4d, 0x9b, 0x8f, 0x62, 0xfd, 0xf3, 0x4a, 0xd2, 0x0a, 0xae, 0x5c, 0x85, 0x3c, 0xe7,
	0x9c, 0x7b, 0x2f, 0x87, 0x5c, 0xaa, 0x56, 0x0b, 0xf8, 0xf0, 0x60, 0x51, 0x6d, 0x85, 0xc6, 0x1a,
	0x9c, 0x17, 0x16, 0xba, 0x10, 0xdf, 0xad, 0xee, 0x01, 0xc1, 0x39, 0xde, 0x5a, 0xe3, 0x0d, 0x5d,
	0x94, 0x1b, 0x58, 0x73, 0x15, 0xbc, 0x69, 0x94, 0x07, 0xae, 0x5a, 0xcd, 0xc7, 0x00, 0x9f, 0x02,
	0xe7, 0x5f, 0x19, 0x99, 0x3d, 0x4c, 0x21, 0x7a, 0x4a, 0x08, 0xf4, 0x80, 0x5e, 0xfa, 0xa1, 0x05,
	0x96, 0x2d, 0xb2, 0x65, 0xf1, 0x54, 0x24, 0xf2, 0x32, 0xb4, 0x40, 0xcf, 0xc8, 0x3e, 0xa0, 0xd7,
	0x7e, 0x90, 0x21, 0xe8, 0x8a, 0xfd, 0x4b, 0x3a, 0x19, 0xd1, 0x6b, 0xd0, 0x15, 0x5d, 0x92, 0x79,
	0x5c, 0x28, 0x1d, 0xd8, 0x1e, 0xac, 0x5c, 0x77, 0x15, 0xb2, 0xff, 0xc9, 0x75, 0x10, 0xf9, 0x73,
	0xc2, 0xf7, 0x5d, 0x85, 0xf4, 0x98, 0xe4, 0xce, 0x04, 0x5b, 0x02, 0xdb, 0x49, 0xfa, 0xf4, 0xa3,
	0x17, 0xe4, 0xb0, 0x01, 0xe7, 0x54, 0x0d, 0xb2, 0x07, 0xeb, 0xb4, 0x41, 0xb6, 0x3b, 0x0e, 0x98,
	0xf0, 0xdb, 0x48, 0xe9, 0x15, 0x39, 0x32, 0xb6, 0x56, 0xa8, 0x3f, 0x95, 0xd7, 0x06, 0x25, 0xaa,
	0x06, 0x58, 0x9e, 0xac, 0xf3, 0xdf, 0xc2, 0xa3, 0x6a, 0x80, 0x9e, 0x90, 0x02, 0x4d, 0x05, 0xa3,
	0x69, 0x2f, 0x99, 0x66, 0x11, 0x44, 0xf1, 0xee, 0xf6, 0xfd, 0xa6, 0xd6, 0x7e, 0x13, 0x56, 0xbc,
	0x34, 0x8d, 0x88, 0x77, 0x8a, 0x9f, 0xc2, 0xc4, 0x1f, 0x55, 0xaf, 0xf2, 0x54, 0xf1, 0xf5, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x59, 0x31, 0xfe, 0x90, 0x01, 0x00, 0x00,
}
