// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/secrets/secrets.proto

package secrets

import (
	context "context"
	fmt "fmt"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/api"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Query_OrderType int32

const (
	Query_ASC  Query_OrderType = 0
	Query_DESC Query_OrderType = 1
)

var Query_OrderType_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Query_OrderType_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Query_OrderType) String() string {
	return proto.EnumName(Query_OrderType_name, int32(x))
}

func (Query_OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{3, 0}
}

type UpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{0}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{1}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{2}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Query struct {
	Filters              []*Filter       `protobuf:"bytes,20,rep,name=filters,proto3" json:"filters,omitempty"`
	Order                Query_OrderType `protobuf:"varint,21,opt,name=order,proto3,enum=chef.automate.api.secrets.Query_OrderType" json:"order,omitempty"`
	Sort                 string          `protobuf:"bytes,22,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 int32           `protobuf:"varint,23,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              int32           `protobuf:"varint,24,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{3}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Query) GetOrder() Query_OrderType {
	if m != nil {
		return m.Order
	}
	return Query_ASC
}

func (m *Query) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *Query) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Query) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

type Secret struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	LastModified         *timestamp.Timestamp `protobuf:"bytes,20,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Tags                 []*Kv                `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty"`
	Data                 []*Kv                `protobuf:"bytes,22,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Secret) Reset()         { *m = Secret{} }
func (m *Secret) String() string { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()    {}
func (*Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{4}
}

func (m *Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secret.Unmarshal(m, b)
}
func (m *Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secret.Marshal(b, m, deterministic)
}
func (m *Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secret.Merge(m, src)
}
func (m *Secret) XXX_Size() int {
	return xxx_messageInfo_Secret.Size(m)
}
func (m *Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Secret proto.InternalMessageInfo

func (m *Secret) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Secret) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Secret) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Secret) GetLastModified() *timestamp.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Secret) GetTags() []*Kv {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Secret) GetData() []*Kv {
	if m != nil {
		return m.Data
	}
	return nil
}

type Secrets struct {
	Secrets              []*Secret `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
	Total                int32     `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Secrets) Reset()         { *m = Secrets{} }
func (m *Secrets) String() string { return proto.CompactTextString(m) }
func (*Secrets) ProtoMessage()    {}
func (*Secrets) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{5}
}

func (m *Secrets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secrets.Unmarshal(m, b)
}
func (m *Secrets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secrets.Marshal(b, m, deterministic)
}
func (m *Secrets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secrets.Merge(m, src)
}
func (m *Secrets) XXX_Size() int {
	return xxx_messageInfo_Secrets.Size(m)
}
func (m *Secrets) XXX_DiscardUnknown() {
	xxx_messageInfo_Secrets.DiscardUnknown(m)
}

var xxx_messageInfo_Secrets proto.InternalMessageInfo

func (m *Secrets) GetSecrets() []*Secret {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *Secrets) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Filter struct {
	Key                  string   `protobuf:"bytes,20,opt,name=key,proto3" json:"key,omitempty"`
	Exclude              bool     `protobuf:"varint,22,opt,name=exclude,proto3" json:"exclude,omitempty"`
	Values               []string `protobuf:"bytes,23,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{6}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Filter) GetExclude() bool {
	if m != nil {
		return m.Exclude
	}
	return false
}

func (m *Filter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Kv struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kv) Reset()         { *m = Kv{} }
func (m *Kv) String() string { return proto.CompactTextString(m) }
func (*Kv) ProtoMessage()    {}
func (*Kv) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac8fabc120c5cbd2, []int{7}
}

func (m *Kv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kv.Unmarshal(m, b)
}
func (m *Kv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kv.Marshal(b, m, deterministic)
}
func (m *Kv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kv.Merge(m, src)
}
func (m *Kv) XXX_Size() int {
	return xxx_messageInfo_Kv.Size(m)
}
func (m *Kv) XXX_DiscardUnknown() {
	xxx_messageInfo_Kv.DiscardUnknown(m)
}

var xxx_messageInfo_Kv proto.InternalMessageInfo

func (m *Kv) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Kv) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("chef.automate.api.secrets.Query_OrderType", Query_OrderType_name, Query_OrderType_value)
	proto.RegisterType((*UpdateResponse)(nil), "chef.automate.api.secrets.UpdateResponse")
	proto.RegisterType((*DeleteResponse)(nil), "chef.automate.api.secrets.DeleteResponse")
	proto.RegisterType((*Id)(nil), "chef.automate.api.secrets.Id")
	proto.RegisterType((*Query)(nil), "chef.automate.api.secrets.Query")
	proto.RegisterType((*Secret)(nil), "chef.automate.api.secrets.Secret")
	proto.RegisterType((*Secrets)(nil), "chef.automate.api.secrets.Secrets")
	proto.RegisterType((*Filter)(nil), "chef.automate.api.secrets.Filter")
	proto.RegisterType((*Kv)(nil), "chef.automate.api.secrets.Kv")
}

func init() { proto.RegisterFile("api/external/secrets/secrets.proto", fileDescriptor_ac8fabc120c5cbd2) }

var fileDescriptor_ac8fabc120c5cbd2 = []byte{
	// 814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0x66, 0xf6, 0xc7, 0x9b, 0x9c, 0xb6, 0xe9, 0x32, 0x6c, 0xb6, 0xd3, 0x15, 0x3f, 0x8b, 0x6f,
	0xd8, 0x06, 0x62, 0x8b, 0xe5, 0x2e, 0x5c, 0x50, 0x48, 0x41, 0xaa, 0x5a, 0x04, 0x38, 0xed, 0x4d,
	0x85, 0x14, 0x4d, 0xec, 0x13, 0x67, 0x84, 0xd7, 0x63, 0x79, 0x66, 0xa3, 0xae, 0x10, 0x37, 0xb9,
	0x42, 0xb9, 0xe5, 0x09, 0xb8, 0x83, 0x07, 0x58, 0x89, 0x3b, 0x1e, 0x82, 0x57, 0x40, 0x42, 0xbc,
	0x05, 0x9a, 0x19, 0x3b, 0x54, 0xde, 0x76, 0x37, 0x48, 0x5c, 0x79, 0xe6, 0xcc, 0x77, 0xbe, 0xf9,
	0xe6, 0x3b, 0x47, 0xc7, 0xe0, 0xf3, 0x42, 0x84, 0xf8, 0x5c, 0x63, 0x99, 0xf3, 0x2c, 0x54, 0x18,
	0x97, 0xa8, 0x55, 0xfd, 0x0d, 0x8a, 0x52, 0x6a, 0x49, 0xef, 0xc6, 0x67, 0x78, 0x1a, 0xf0, 0xb9,
	0x96, 0x33, 0xae, 0x31, 0xe0, 0x85, 0x08, 0x2a, 0xc0, 0xe8, 0x9d, 0x54, 0xca, 0x34, 0xc3, 0xd0,
	0x02, 0x4f, 0xe6, 0xa7, 0xa1, 0x16, 0x33, 0x54, 0x9a, 0xcf, 0x0a, 0x97, 0x3b, 0x7a, 0xb3, 0x02,
	0x98, 0x6b, 0x78, 0x9e, 0x4b, 0xcd, 0xb5, 0x90, 0x79, 0xc5, 0x3c, 0xba, 0x1f, 0xcb, 0x59, 0x21,
	0x73, 0xcc, 0xb5, 0x0a, 0x6b, 0xfe, 0xfd, 0xb4, 0x2c, 0x62, 0x47, 0x18, 0xef, 0xa7, 0x98, 0xef,
	0x17, 0x32, 0x13, 0xf1, 0xe2, 0x7f, 0x60, 0x10, 0x7c, 0xb6, 0xca, 0xe0, 0xf7, 0x61, 0xe7, 0x69,
	0x91, 0x70, 0x8d, 0x11, 0xaa, 0x42, 0xe6, 0x0a, 0x4d, 0xe4, 0x01, 0x66, 0xf8, 0x42, 0x64, 0x00,
	0xad, 0x87, 0x09, 0xdd, 0x81, 0x96, 0x48, 0x18, 0x19, 0x93, 0xc9, 0x76, 0xd4, 0x12, 0x89, 0xff,
	0x37, 0x81, 0xee, 0x37, 0x73, 0x2c, 0x17, 0xf4, 0x63, 0xe8, 0x9d, 0x8a, 0x4c, 0x63, 0xa9, 0xd8,
	0x60, 0xdc, 0x9e, 0xdc, 0x98, 0xbe, 0x1b, 0xbc, 0xd2, 0xb3, 0xe0, 0x0b, 0x8b, 0x8c, 0xea, 0x0c,
	0x7a, 0x1f, 0xba, 0xb2, 0x4c, 0xb0, 0x64, 0xbb, 0x63, 0x32, 0xd9, 0x99, 0xee, 0xad, 0x49, 0xb5,
	0xb7, 0x05, 0x5f, 0x19, 0xf4, 0x93, 0x45, 0x81, 0x91, 0x4b, 0xa4, 0x14, 0x3a, 0x4a, 0x96, 0x9a,
	0x0d, 0xad, 0x34, 0xbb, 0x36, 0xb1, 0x82, 0xa7, 0xc8, 0xee, 0x8c, 0xc9, 0xa4, 0x1b, 0xd9, 0x35,
	0xbd, 0x0b, 0x5b, 0x05, 0x96, 0xc7, 0x36, 0xce, 0x6c, 0xbc, 0x57, 0x60, 0xf9, 0x35, 0x4f, 0xd1,
	0x7f, 0x1b, 0xb6, 0xaf, 0x68, 0x69, 0x0f, 0xda, 0x9f, 0x1e, 0x1d, 0xf6, 0x5f, 0xa3, 0x5b, 0xd0,
	0x79, 0xf0, 0xf9, 0xd1, 0x61, 0x9f, 0xf8, 0x7f, 0x11, 0xf0, 0x8e, 0xac, 0x8a, 0xa6, 0x0d, 0xe6,
	0xa6, 0x9c, 0xcf, 0x90, 0xb5, 0xdc, 0xed, 0x66, 0x6d, 0x62, 0x7a, 0x51, 0x20, 0x6b, 0xbb, 0x98,
	0x59, 0xd3, 0x4f, 0xe0, 0x56, 0xc6, 0x95, 0x3e, 0x9e, 0xc9, 0x44, 0x9c, 0x0a, 0x4c, 0xd8, 0x60,
	0x4c, 0x26, 0x37, 0xa6, 0xa3, 0xc0, 0xb5, 0x48, 0x50, 0xf7, 0x50, 0xf0, 0xa4, 0xee, 0xa1, 0xe8,
	0xa6, 0x49, 0xf8, 0xb2, 0xc2, 0xd3, 0x0f, 0xa1, 0xa3, 0x79, 0xaa, 0xd8, 0xae, 0xb5, 0xf8, 0xad,
	0x35, 0x3e, 0x3d, 0x3a, 0x8f, 0x2c, 0xd4, 0xa4, 0x24, 0x5c, 0x73, 0x36, 0xbc, 0x56, 0x8a, 0x81,
	0xfa, 0xdf, 0x42, 0xcf, 0x3d, 0x54, 0x99, 0xb2, 0x56, 0xc7, 0x8c, 0x6c, 0x2c, 0xab, 0x4b, 0x8a,
	0xea, 0x0c, 0x3a, 0x80, 0xae, 0x96, 0x9a, 0x67, 0xf6, 0x99, 0xdd, 0xc8, 0x6d, 0xfc, 0xc7, 0xe0,
	0xb9, 0xfa, 0xd3, 0x3e, 0xb4, 0xbf, 0xc3, 0x85, 0x3d, 0xdd, 0x8e, 0xcc, 0x92, 0x32, 0xe8, 0xe1,
	0xf3, 0x38, 0x9b, 0x27, 0x68, 0x2b, 0xb9, 0x15, 0xd5, 0x5b, 0x3a, 0x04, 0xef, 0x9c, 0x67, 0x73,
	0x54, 0xec, 0xce, 0xb8, 0x3d, 0xd9, 0x8e, 0xaa, 0x9d, 0xff, 0x01, 0xb4, 0x1e, 0x9d, 0xd7, 0x4c,
	0xe4, 0x5f, 0xa6, 0x01, 0x74, 0x2d, 0xa2, 0xaa, 0x89, 0xdb, 0x4c, 0x7f, 0xec, 0xc1, 0x4e, 0xf5,
	0xb4, 0x23, 0x2c, 0xcf, 0x45, 0x8c, 0xf4, 0x67, 0x02, 0xde, 0x61, 0x89, 0x5c, 0x23, 0xdd, 0xfc,
	0xb6, 0xd1, 0x3a, 0xff, 0x1e, 0x26, 0xfe, 0xd3, 0x8b, 0x25, 0x7b, 0xfd, 0xca, 0x32, 0xea, 0xc5,
	0x96, 0xf8, 0x72, 0xc9, 0xee, 0xc1, 0xed, 0x2a, 0x78, 0x50, 0x1f, 0x0e, 0x1b, 0x81, 0x03, 0x07,
	0xbe, 0xf8, 0xe3, 0xcf, 0x9f, 0x5a, 0xb7, 0xfc, 0xad, 0x7a, 0x02, 0x1d, 0x90, 0x3d, 0xfa, 0x2b,
	0x81, 0x4e, 0x84, 0x3c, 0xa1, 0xeb, 0xaf, 0x1f, 0x6d, 0x7e, 0x80, 0x7f, 0x7c, 0xb1, 0x64, 0x03,
	0xb8, 0x59, 0x93, 0x7f, 0x2f, 0x92, 0x1f, 0x68, 0xa7, 0x44, 0x9e, 0x5c, 0x2e, 0xd9, 0xfb, 0x30,
	0x68, 0x6a, 0xb2, 0xe7, 0x6f, 0x34, 0xa3, 0x29, 0x6a, 0x2b, 0x93, 0xd2, 0xfe, 0xd5, 0xc0, 0x14,
	0x49, 0x68, 0xc1, 0xbf, 0x13, 0xf0, 0xdc, 0x34, 0xb9, 0x8e, 0x9f, 0xf7, 0xd6, 0x40, 0x1a, 0x33,
	0x29, 0xbd, 0x58, 0xb2, 0x61, 0x43, 0xb9, 0x37, 0xb7, 0x98, 0xcb, 0x25, 0x0b, 0x5e, 0xa1, 0x7d,
	0xc5, 0x65, 0x97, 0x61, 0xe5, 0xef, 0x4e, 0x57, 0xe4, 0x1b, 0xb7, 0x7f, 0x23, 0xe0, 0xb9, 0xe9,
	0xb7, 0xc9, 0xef, 0x75, 0xea, 0x1b, 0xf3, 0x33, 0x79, 0x99, 0xfa, 0xc4, 0x62, 0xfe, 0x8b, 0x7a,
	0x97, 0xe1, 0xcc, 0xdf, 0x5b, 0x35, 0xff, 0x17, 0x02, 0x9d, 0xc7, 0x42, 0x69, 0x3a, 0xde, 0x34,
	0x42, 0x47, 0xfe, 0xc6, 0xe2, 0x28, 0xff, 0x59, 0xa3, 0x9d, 0x15, 0xf2, 0x32, 0x3e, 0xbb, 0x5c,
	0xb2, 0xf7, 0x56, 0xdb, 0x79, 0xe5, 0x01, 0x99, 0x50, 0xae, 0x4b, 0x06, 0xfe, 0xed, 0x17, 0x7e,
	0xab, 0x86, 0xe1, 0x80, 0xec, 0x7d, 0x16, 0x3e, 0xdb, 0x4f, 0x85, 0x3e, 0x9b, 0x9f, 0x04, 0xb1,
	0x9c, 0x85, 0x46, 0xcb, 0xd5, 0xdf, 0x2b, 0x7c, 0xd9, 0x1f, 0xf9, 0xc4, 0xb3, 0xd3, 0xf1, 0xa3,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x00, 0xfc, 0x37, 0xb0, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SecretsServiceClient is the client API for SecretsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecretsServiceClient interface {
	Create(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*Id, error)
	Read(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Secret, error)
	Update(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Secrets, error)
}

type secretsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSecretsServiceClient(cc grpc.ClientConnInterface) SecretsServiceClient {
	return &secretsServiceClient{cc}
}

func (c *secretsServiceClient) Create(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/chef.automate.api.secrets.SecretsService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretsServiceClient) Read(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Secret, error) {
	out := new(Secret)
	err := c.cc.Invoke(ctx, "/chef.automate.api.secrets.SecretsService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretsServiceClient) Update(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.secrets.SecretsService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretsServiceClient) Delete(ctx context.Context, in *Id, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.secrets.SecretsService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretsServiceClient) List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Secrets, error) {
	out := new(Secrets)
	err := c.cc.Invoke(ctx, "/chef.automate.api.secrets.SecretsService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecretsServiceServer is the server API for SecretsService service.
type SecretsServiceServer interface {
	Create(context.Context, *Secret) (*Id, error)
	Read(context.Context, *Id) (*Secret, error)
	Update(context.Context, *Secret) (*UpdateResponse, error)
	Delete(context.Context, *Id) (*DeleteResponse, error)
	List(context.Context, *Query) (*Secrets, error)
}

// UnimplementedSecretsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSecretsServiceServer struct {
}

func (*UnimplementedSecretsServiceServer) Create(ctx context.Context, req *Secret) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSecretsServiceServer) Read(ctx context.Context, req *Id) (*Secret, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedSecretsServiceServer) Update(ctx context.Context, req *Secret) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedSecretsServiceServer) Delete(ctx context.Context, req *Id) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedSecretsServiceServer) List(ctx context.Context, req *Query) (*Secrets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterSecretsServiceServer(s *grpc.Server, srv SecretsServiceServer) {
	s.RegisterService(&_SecretsService_serviceDesc, srv)
}

func _SecretsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Secret)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.secrets.SecretsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretsServiceServer).Create(ctx, req.(*Secret))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretsService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretsServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.secrets.SecretsService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretsServiceServer).Read(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Secret)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretsServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.secrets.SecretsService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretsServiceServer).Update(ctx, req.(*Secret))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretsService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretsServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.secrets.SecretsService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretsServiceServer).Delete(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretsService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretsServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.secrets.SecretsService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretsServiceServer).List(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecretsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.secrets.SecretsService",
	HandlerType: (*SecretsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SecretsService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _SecretsService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _SecretsService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SecretsService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SecretsService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/external/secrets/secrets.proto",
}
