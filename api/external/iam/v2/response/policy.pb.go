// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: external/iam/v2/response/policy.proto

package response

import (
	common "github.com/chef/automate/api/external/iam/v2/common"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreatePolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *common.Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *CreatePolicyResp) Reset() {
	*x = CreatePolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyResp) ProtoMessage() {}

func (x *CreatePolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyResp.ProtoReflect.Descriptor instead.
func (*CreatePolicyResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePolicyResp) GetPolicy() *common.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetPolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *common.Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetPolicyResp) Reset() {
	*x = GetPolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResp) ProtoMessage() {}

func (x *GetPolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResp.ProtoReflect.Descriptor instead.
func (*GetPolicyResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{1}
}

func (x *GetPolicyResp) GetPolicy() *common.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListPoliciesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*common.Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *ListPoliciesResp) Reset() {
	*x = ListPoliciesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResp) ProtoMessage() {}

func (x *ListPoliciesResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResp.ProtoReflect.Descriptor instead.
func (*ListPoliciesResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{2}
}

func (x *ListPoliciesResp) GetPolicies() []*common.Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type DeletePolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePolicyResp) Reset() {
	*x = DeletePolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyResp) ProtoMessage() {}

func (x *DeletePolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyResp.ProtoReflect.Descriptor instead.
func (*DeletePolicyResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{3}
}

type UpdatePolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *common.Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *UpdatePolicyResp) Reset() {
	*x = UpdatePolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyResp) ProtoMessage() {}

func (x *UpdatePolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyResp.ProtoReflect.Descriptor instead.
func (*UpdatePolicyResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePolicyResp) GetPolicy() *common.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetPolicyVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *common.Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetPolicyVersionResp) Reset() {
	*x = GetPolicyVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyVersionResp) ProtoMessage() {}

func (x *GetPolicyVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyVersionResp.ProtoReflect.Descriptor instead.
func (*GetPolicyVersionResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{5}
}

func (x *GetPolicyVersionResp) GetVersion() *common.Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type ListPolicyMembersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of policy members.
	Members []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *ListPolicyMembersResp) Reset() {
	*x = ListPolicyMembersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPolicyMembersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyMembersResp) ProtoMessage() {}

func (x *ListPolicyMembersResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyMembersResp.ProtoReflect.Descriptor instead.
func (*ListPolicyMembersResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{6}
}

func (x *ListPolicyMembersResp) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type ReplacePolicyMembersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resulting list of policy members.
	Members []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *ReplacePolicyMembersResp) Reset() {
	*x = ReplacePolicyMembersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplacePolicyMembersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplacePolicyMembersResp) ProtoMessage() {}

func (x *ReplacePolicyMembersResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplacePolicyMembersResp.ProtoReflect.Descriptor instead.
func (*ReplacePolicyMembersResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{7}
}

func (x *ReplacePolicyMembersResp) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type RemovePolicyMembersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resulting list of policy members.
	Members []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *RemovePolicyMembersResp) Reset() {
	*x = RemovePolicyMembersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePolicyMembersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePolicyMembersResp) ProtoMessage() {}

func (x *RemovePolicyMembersResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePolicyMembersResp.ProtoReflect.Descriptor instead.
func (*RemovePolicyMembersResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{8}
}

func (x *RemovePolicyMembersResp) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type AddPolicyMembersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *AddPolicyMembersResp) Reset() {
	*x = AddPolicyMembersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPolicyMembersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPolicyMembersResp) ProtoMessage() {}

func (x *AddPolicyMembersResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPolicyMembersResp.ProtoReflect.Descriptor instead.
func (*AddPolicyMembersResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{9}
}

func (x *AddPolicyMembersResp) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type CreateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *common.Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleResp) Reset() {
	*x = CreateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResp) ProtoMessage() {}

func (x *CreateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResp.ProtoReflect.Descriptor instead.
func (*CreateRoleResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRoleResp) GetRole() *common.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*common.Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ListRolesResp) Reset() {
	*x = ListRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesResp) ProtoMessage() {}

func (x *ListRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesResp.ProtoReflect.Descriptor instead.
func (*ListRolesResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{11}
}

func (x *ListRolesResp) GetRoles() []*common.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *common.Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleResp) Reset() {
	*x = GetRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleResp) ProtoMessage() {}

func (x *GetRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleResp.ProtoReflect.Descriptor instead.
func (*GetRoleResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoleResp) GetRole() *common.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type DeleteRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRoleResp) Reset() {
	*x = DeleteRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResp) ProtoMessage() {}

func (x *DeleteRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{13}
}

type UpdateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *common.Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleResp) Reset() {
	*x = UpdateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResp) ProtoMessage() {}

func (x *UpdateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRoleResp) GetRole() *common.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *common.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateProjectResp) Reset() {
	*x = CreateProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResp) ProtoMessage() {}

func (x *CreateProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResp.ProtoReflect.Descriptor instead.
func (*CreateProjectResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{15}
}

func (x *CreateProjectResp) GetProject() *common.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *common.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateProjectResp) Reset() {
	*x = UpdateProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResp) ProtoMessage() {}

func (x *UpdateProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResp.ProtoReflect.Descriptor instead.
func (*UpdateProjectResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateProjectResp) GetProject() *common.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *common.Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectResp) Reset() {
	*x = GetProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResp) ProtoMessage() {}

func (x *GetProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResp.ProtoReflect.Descriptor instead.
func (*GetProjectResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectResp) GetProject() *common.Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type ListProjectsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*common.Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListProjectsResp) Reset() {
	*x = ListProjectsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResp) ProtoMessage() {}

func (x *ListProjectsResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResp.ProtoReflect.Descriptor instead.
func (*ListProjectsResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{18}
}

func (x *ListProjectsResp) GetProjects() []*common.Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type DeleteProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProjectResp) Reset() {
	*x = DeleteProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectResp) ProtoMessage() {}

func (x *DeleteProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectResp.ProtoReflect.Descriptor instead.
func (*DeleteProjectResp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{19}
}

type UpgradeToV2Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports []string `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
}

func (x *UpgradeToV2Resp) Reset() {
	*x = UpgradeToV2Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeToV2Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeToV2Resp) ProtoMessage() {}

func (x *UpgradeToV2Resp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeToV2Resp.ProtoReflect.Descriptor instead.
func (*UpgradeToV2Resp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{20}
}

func (x *UpgradeToV2Resp) GetReports() []string {
	if x != nil {
		return x.Reports
	}
	return nil
}

type ResetToV1Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetToV1Resp) Reset() {
	*x = ResetToV1Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_iam_v2_response_policy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetToV1Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetToV1Resp) ProtoMessage() {}

func (x *ResetToV1Resp) ProtoReflect() protoreflect.Message {
	mi := &file_external_iam_v2_response_policy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetToV1Resp.ProtoReflect.Descriptor instead.
func (*ResetToV1Resp) Descriptor() ([]byte, []int) {
	return file_external_iam_v2_response_policy_proto_rawDescGZIP(), []int{21}
}

var File_external_iam_v2_response_policy_proto protoreflect.FileDescriptor

var file_external_iam_v2_response_policy_proto_rawDesc = []byte{
	0x0a, 0x25, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76,
	0x32, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x1a, 0x23, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x3a, 0x8e, 0x02, 0x92, 0x41, 0x8a, 0x02, 0x32, 0x87, 0x02, 0x12, 0x84, 0x02,
	0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x20, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22, 0x69, 0x64, 0x22,
	0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x64, 0x61, 0x70, 0x3a,
	0x2a, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x3a, 0x20, 0x5b, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x22, 0x2c, 0x20, 0x22,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x2c, 0x20,
	0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x71, 0x61, 0x22, 0x2c, 0x22, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5d, 0x2c,
	0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a,
	0x20, 0x5b, 0x5d, 0x7d, 0x22, 0xda, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x3a, 0x8e, 0x02, 0x92, 0x41, 0x8a, 0x02, 0x32, 0x87, 0x02, 0x12, 0x84, 0x02, 0x7b, 0x22, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x20, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2d, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3a,
	0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x64, 0x61, 0x70, 0x3a, 0x2a, 0x22, 0x5d,
	0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x20,
	0x5b, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b,
	0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x32, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x2c, 0x20, 0x7b, 0x22, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x71, 0x61, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d,
	0x5d, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x5d,
	0x7d, 0x22, 0xad, 0x04, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x3a, 0xda, 0x03, 0x92, 0x41, 0xd6, 0x03, 0x32, 0xd3, 0x03, 0x12, 0xd0,
	0x03, 0x7b, 0x22, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b,
	0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x20, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x20, 0x31, 0x22, 0x2c, 0x22, 0x69, 0x64,
	0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2d, 0x31, 0x22, 0x2c, 0x22, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x64,
	0x61, 0x70, 0x3a, 0x2a, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20,
	0x22, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x22,
	0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x22, 0x5d, 0x2c, 0x20, 0x22,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22,
	0x7d, 0x2c, 0x20, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x71, 0x61, 0x22,
	0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x22, 0x3a, 0x20, 0x5b, 0x5d, 0x7d, 0x2c, 0x20, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x20, 0x32, 0x22, 0x2c, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2d, 0x32, 0x22, 0x2c, 0x22,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d,
	0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a, 0x74, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x2c, 0x20, 0x22,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x22,
	0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x5d, 0x2c,
	0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x5d, 0x7d, 0x5d,
	0x7d, 0x22, 0xa3, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x3a, 0x8e, 0x02, 0x92, 0x41, 0x8a, 0x02, 0x32, 0x87, 0x02,
	0x12, 0x84, 0x02, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22,
	0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x22, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x64,
	0x61, 0x70, 0x3a, 0x2a, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20,
	0x22, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x22,
	0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x22, 0x5d, 0x2c, 0x20, 0x22,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22,
	0x7d, 0x2c, 0x20, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x71, 0x61, 0x22,
	0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22, 0x41,
	0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x22, 0x3a, 0x20, 0x5b, 0x5d, 0x7d, 0x22, 0xe2, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x93, 0x02, 0x92, 0x41, 0x8f, 0x02, 0x32, 0x8c, 0x02,
	0x12, 0x89, 0x02, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x20, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x20, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x20, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x3a, 0x20, 0x5b, 0x22, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x6c, 0x64, 0x61, 0x70, 0x3a, 0x6e,
	0x65, 0x77, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2c, 0x20, 0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c,
	0x64, 0x61, 0x70, 0x3a, 0x6e, 0x65, 0x77, 0x74, 0x65, 0x61, 0x6d, 0x22, 0x5d, 0x2c, 0x20, 0x22,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x22, 0x2c,
	0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x5b, 0x22, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x32, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x3a, 0x20, 0x22,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x2c, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3a,
	0x20, 0x22, 0x71, 0x61, 0x22, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x3a, 0x20, 0x5b, 0x22, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5d, 0x2c, 0x20, 0x22, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x3a, 0x20, 0x22, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x5d, 0x7d, 0x22, 0x83, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x2e, 0x92, 0x41, 0x2b, 0x32, 0x29, 0x12, 0x27, 0x7b, 0x22, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x7b, 0x22, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x22, 0x3a, 0x22,
	0x56, 0x32, 0x22, 0x2c, 0x22, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0x3a, 0x22, 0x56, 0x31, 0x22,
	0x7d, 0x7d, 0x22, 0x70, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x3d, 0x92, 0x41, 0x3a, 0x32, 0x38, 0x12, 0x36, 0x7b, 0x22,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x74, 0x65, 0x61, 0x6d,
	0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22, 0x2c,
	0x20, 0x22, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a, 0x74, 0x65, 0x73,
	0x74, 0x22, 0x5d, 0x7d, 0x22, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x3d, 0x92, 0x41, 0x3a, 0x32,
	0x38, 0x12, 0x36, 0x7b, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b,
	0x22, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x3a, 0x74, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0x5c, 0x0a, 0x17, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x27,
	0x92, 0x41, 0x24, 0x32, 0x22, 0x12, 0x20, 0x7b, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x3a, 0x20, 0x5b, 0x22, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a,
	0x74, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0x6f, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x3d, 0x92, 0x41, 0x3a, 0x32, 0x38,
	0x12, 0x36, 0x7b, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22,
	0x74, 0x65, 0x61, 0x6d, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x3a, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x3a, 0x74, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x3a,
	0x74, 0x92, 0x41, 0x71, 0x32, 0x6f, 0x12, 0x6d, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20,
	0x52, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x3a, 0x20, 0x5b, 0x22, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x3a, 0x2a, 0x22, 0x2c, 0x20,
	0x22, 0x69, 0x61, 0x6d, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0xa0, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x3a, 0xd8, 0x01,
	0x92, 0x41, 0xd4, 0x01, 0x32, 0xd1, 0x01, 0x12, 0xce, 0x01, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x52, 0x6f, 0x6c,
	0x65, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x20, 0x5b,
	0x22, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x3a, 0x2a, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x61,
	0x6d, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x5d, 0x7d, 0x2c, 0x20, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x2d, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x52, 0x6f, 0x6c, 0x65, 0x20, 0x32, 0x22, 0x2c, 0x20, 0x22,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x3a, 0x2a, 0x22, 0x5d, 0x7d, 0x5d, 0x7d, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x3a, 0x74, 0x92, 0x41,
	0x71, 0x32, 0x6f, 0x12, 0x6d, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x52, 0x6f, 0x6c,
	0x65, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x20, 0x5b,
	0x22, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x3a, 0x2a, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x61,
	0x6d, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x5d, 0x7d, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x3a, 0x74, 0x92, 0x41, 0x71, 0x32, 0x6f, 0x12, 0x6d, 0x7b, 0x22,
	0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x73, 0x3a, 0x2a, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x61, 0x6d, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0xba, 0x01, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x3a, 0x74, 0x92, 0x41, 0x71, 0x32, 0x6f, 0x12, 0x6d, 0x7b, 0x22, 0x69, 0x64, 0x22,
	0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2c,
	0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x20, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x22, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x3a, 0x2a,
	0x22, 0x2c, 0x20, 0x22, 0x69, 0x61, 0x6d, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x3a, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x7d, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3c, 0x92, 0x41, 0x39,
	0x32, 0x37, 0x12, 0x35, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79,
	0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x2c, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3c, 0x92, 0x41,
	0x39, 0x32, 0x37, 0x12, 0x35, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d,
	0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x2c, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x22, 0x8b, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3c, 0x92, 0x41, 0x39, 0x32,
	0x37, 0x12, 0x35, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x2c,
	0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x8a, 0x01, 0x92,
	0x41, 0x86, 0x01, 0x32, 0x83, 0x01, 0x12, 0x80, 0x01, 0x7b, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20,
	0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x2c, 0x20, 0x7b, 0x22,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x69,
	0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2d, 0x32, 0x22, 0x7d, 0x5d, 0x7d, 0x22, 0x51, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x3a, 0x3c,
	0x92, 0x41, 0x39, 0x32, 0x37, 0x12, 0x35, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20,
	0x22, 0x4d, 0x79, 0x20, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7d, 0x22, 0x2b, 0x0a, 0x0f,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x54, 0x6f, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x66, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_external_iam_v2_response_policy_proto_rawDescOnce sync.Once
	file_external_iam_v2_response_policy_proto_rawDescData = file_external_iam_v2_response_policy_proto_rawDesc
)

func file_external_iam_v2_response_policy_proto_rawDescGZIP() []byte {
	file_external_iam_v2_response_policy_proto_rawDescOnce.Do(func() {
		file_external_iam_v2_response_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_external_iam_v2_response_policy_proto_rawDescData)
	})
	return file_external_iam_v2_response_policy_proto_rawDescData
}

var file_external_iam_v2_response_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_external_iam_v2_response_policy_proto_goTypes = []interface{}{
	(*CreatePolicyResp)(nil),         // 0: chef.automate.api.iam.v2.CreatePolicyResp
	(*GetPolicyResp)(nil),            // 1: chef.automate.api.iam.v2.GetPolicyResp
	(*ListPoliciesResp)(nil),         // 2: chef.automate.api.iam.v2.ListPoliciesResp
	(*DeletePolicyResp)(nil),         // 3: chef.automate.api.iam.v2.DeletePolicyResp
	(*UpdatePolicyResp)(nil),         // 4: chef.automate.api.iam.v2.UpdatePolicyResp
	(*GetPolicyVersionResp)(nil),     // 5: chef.automate.api.iam.v2.GetPolicyVersionResp
	(*ListPolicyMembersResp)(nil),    // 6: chef.automate.api.iam.v2.ListPolicyMembersResp
	(*ReplacePolicyMembersResp)(nil), // 7: chef.automate.api.iam.v2.ReplacePolicyMembersResp
	(*RemovePolicyMembersResp)(nil),  // 8: chef.automate.api.iam.v2.RemovePolicyMembersResp
	(*AddPolicyMembersResp)(nil),     // 9: chef.automate.api.iam.v2.AddPolicyMembersResp
	(*CreateRoleResp)(nil),           // 10: chef.automate.api.iam.v2.CreateRoleResp
	(*ListRolesResp)(nil),            // 11: chef.automate.api.iam.v2.ListRolesResp
	(*GetRoleResp)(nil),              // 12: chef.automate.api.iam.v2.GetRoleResp
	(*DeleteRoleResp)(nil),           // 13: chef.automate.api.iam.v2.DeleteRoleResp
	(*UpdateRoleResp)(nil),           // 14: chef.automate.api.iam.v2.UpdateRoleResp
	(*CreateProjectResp)(nil),        // 15: chef.automate.api.iam.v2.CreateProjectResp
	(*UpdateProjectResp)(nil),        // 16: chef.automate.api.iam.v2.UpdateProjectResp
	(*GetProjectResp)(nil),           // 17: chef.automate.api.iam.v2.GetProjectResp
	(*ListProjectsResp)(nil),         // 18: chef.automate.api.iam.v2.ListProjectsResp
	(*DeleteProjectResp)(nil),        // 19: chef.automate.api.iam.v2.DeleteProjectResp
	(*UpgradeToV2Resp)(nil),          // 20: chef.automate.api.iam.v2.UpgradeToV2Resp
	(*ResetToV1Resp)(nil),            // 21: chef.automate.api.iam.v2.ResetToV1Resp
	(*common.Policy)(nil),            // 22: chef.automate.api.iam.v2.Policy
	(*common.Version)(nil),           // 23: chef.automate.api.iam.v2.Version
	(*common.Role)(nil),              // 24: chef.automate.api.iam.v2.Role
	(*common.Project)(nil),           // 25: chef.automate.api.iam.v2.Project
}
var file_external_iam_v2_response_policy_proto_depIdxs = []int32{
	22, // 0: chef.automate.api.iam.v2.CreatePolicyResp.policy:type_name -> chef.automate.api.iam.v2.Policy
	22, // 1: chef.automate.api.iam.v2.GetPolicyResp.policy:type_name -> chef.automate.api.iam.v2.Policy
	22, // 2: chef.automate.api.iam.v2.ListPoliciesResp.policies:type_name -> chef.automate.api.iam.v2.Policy
	22, // 3: chef.automate.api.iam.v2.UpdatePolicyResp.policy:type_name -> chef.automate.api.iam.v2.Policy
	23, // 4: chef.automate.api.iam.v2.GetPolicyVersionResp.version:type_name -> chef.automate.api.iam.v2.Version
	24, // 5: chef.automate.api.iam.v2.CreateRoleResp.role:type_name -> chef.automate.api.iam.v2.Role
	24, // 6: chef.automate.api.iam.v2.ListRolesResp.roles:type_name -> chef.automate.api.iam.v2.Role
	24, // 7: chef.automate.api.iam.v2.GetRoleResp.role:type_name -> chef.automate.api.iam.v2.Role
	24, // 8: chef.automate.api.iam.v2.UpdateRoleResp.role:type_name -> chef.automate.api.iam.v2.Role
	25, // 9: chef.automate.api.iam.v2.CreateProjectResp.project:type_name -> chef.automate.api.iam.v2.Project
	25, // 10: chef.automate.api.iam.v2.UpdateProjectResp.project:type_name -> chef.automate.api.iam.v2.Project
	25, // 11: chef.automate.api.iam.v2.GetProjectResp.project:type_name -> chef.automate.api.iam.v2.Project
	25, // 12: chef.automate.api.iam.v2.ListProjectsResp.projects:type_name -> chef.automate.api.iam.v2.Project
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_external_iam_v2_response_policy_proto_init() }
func file_external_iam_v2_response_policy_proto_init() {
	if File_external_iam_v2_response_policy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_external_iam_v2_response_policy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoliciesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPolicyVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPolicyMembersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplacePolicyMembersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePolicyMembersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPolicyMembersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeToV2Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_iam_v2_response_policy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetToV1Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_external_iam_v2_response_policy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_iam_v2_response_policy_proto_goTypes,
		DependencyIndexes: file_external_iam_v2_response_policy_proto_depIdxs,
		MessageInfos:      file_external_iam_v2_response_policy_proto_msgTypes,
	}.Build()
	File_external_iam_v2_response_policy_proto = out.File
	file_external_iam_v2_response_policy_proto_rawDesc = nil
	file_external_iam_v2_response_policy_proto_goTypes = nil
	file_external_iam_v2_response_policy_proto_depIdxs = nil
}
