// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: external/data_lifecycle/data_lifecycle.proto

package data_lifecycle

import (
	context "context"
	_ "github.com/chef/automate/api/external/annotations/iam"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// JobStatus presents the current configuration of job, when it will be executed,
// and details about it's most recent execution.
type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Disabled       bool                   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Recurrence     string                 `protobuf:"bytes,3,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	Threshold      string                 `protobuf:"bytes,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	PurgePolicies  *PurgePolicies         `protobuf:"bytes,5,opt,name=purge_policies,json=purgePolicies,proto3" json:"purge_policies,omitempty"`
	LastElapsed    *durationpb.Duration   `protobuf:"bytes,6,opt,name=last_elapsed,json=lastElapsed,proto3" json:"last_elapsed,omitempty"`
	NextDueAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=next_due_at,json=nextDueAt,proto3" json:"next_due_at,omitempty"`
	LastEnqueuedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_enqueued_at,json=lastEnqueuedAt,proto3" json:"last_enqueued_at,omitempty"`
	LastStartedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_started_at,json=lastStartedAt,proto3" json:"last_started_at,omitempty"`
	LastEndedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_ended_at,json=lastEndedAt,proto3" json:"last_ended_at,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{0}
}

func (x *JobStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobStatus) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *JobStatus) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *JobStatus) GetThreshold() string {
	if x != nil {
		return x.Threshold
	}
	return ""
}

func (x *JobStatus) GetPurgePolicies() *PurgePolicies {
	if x != nil {
		return x.PurgePolicies
	}
	return nil
}

func (x *JobStatus) GetLastElapsed() *durationpb.Duration {
	if x != nil {
		return x.LastElapsed
	}
	return nil
}

func (x *JobStatus) GetNextDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextDueAt
	}
	return nil
}

func (x *JobStatus) GetLastEnqueuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEnqueuedAt
	}
	return nil
}

func (x *JobStatus) GetLastStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastStartedAt
	}
	return nil
}

func (x *JobStatus) GetLastEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEndedAt
	}
	return nil
}

// PurgePolicies are data lifecycle purge policies
type PurgePolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elasticsearch []*EsPolicy `protobuf:"bytes,1,rep,name=elasticsearch,proto3" json:"elasticsearch,omitempty"`
	Postgres      []*PgPolicy `protobuf:"bytes,2,rep,name=postgres,proto3" json:"postgres,omitempty"`
}

func (x *PurgePolicies) Reset() {
	*x = PurgePolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgePolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgePolicies) ProtoMessage() {}

func (x *PurgePolicies) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgePolicies.ProtoReflect.Descriptor instead.
func (*PurgePolicies) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{1}
}

func (x *PurgePolicies) GetElasticsearch() []*EsPolicy {
	if x != nil {
		return x.Elasticsearch
	}
	return nil
}

func (x *PurgePolicies) GetPostgres() []*PgPolicy {
	if x != nil {
		return x.Postgres
	}
	return nil
}

// PurgePolicyUpdate is purge policy configuration update
type PurgePolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elasticsearch []*EsPolicyUpdate `protobuf:"bytes,1,rep,name=elasticsearch,proto3" json:"elasticsearch,omitempty"`
	Postgres      []*PgPolicyUpdate `protobuf:"bytes,2,rep,name=postgres,proto3" json:"postgres,omitempty"`
}

func (x *PurgePolicyUpdate) Reset() {
	*x = PurgePolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgePolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgePolicyUpdate) ProtoMessage() {}

func (x *PurgePolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgePolicyUpdate.ProtoReflect.Descriptor instead.
func (*PurgePolicyUpdate) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{2}
}

func (x *PurgePolicyUpdate) GetElasticsearch() []*EsPolicyUpdate {
	if x != nil {
		return x.Elasticsearch
	}
	return nil
}

func (x *PurgePolicyUpdate) GetPostgres() []*PgPolicyUpdate {
	if x != nil {
		return x.Postgres
	}
	return nil
}

type EsPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index            string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	OlderThanDays    int32  `protobuf:"varint,3,opt,name=older_than_days,json=olderThanDays,proto3" json:"older_than_days,omitempty"`
	CustomPurgeField string `protobuf:"bytes,4,opt,name=custom_purge_field,json=customPurgeField,proto3" json:"custom_purge_field,omitempty"`
	Disabled         bool   `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *EsPolicy) Reset() {
	*x = EsPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsPolicy) ProtoMessage() {}

func (x *EsPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsPolicy.ProtoReflect.Descriptor instead.
func (*EsPolicy) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{3}
}

func (x *EsPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EsPolicy) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsPolicy) GetOlderThanDays() int32 {
	if x != nil {
		return x.OlderThanDays
	}
	return 0
}

func (x *EsPolicy) GetCustomPurgeField() string {
	if x != nil {
		return x.CustomPurgeField
	}
	return ""
}

func (x *EsPolicy) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type EsPolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName    string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	Disabled      bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	OlderThanDays int32  `protobuf:"varint,3,opt,name=older_than_days,json=olderThanDays,proto3" json:"older_than_days,omitempty"`
}

func (x *EsPolicyUpdate) Reset() {
	*x = EsPolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsPolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsPolicyUpdate) ProtoMessage() {}

func (x *EsPolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsPolicyUpdate.ProtoReflect.Descriptor instead.
func (*EsPolicyUpdate) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{4}
}

func (x *EsPolicyUpdate) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *EsPolicyUpdate) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *EsPolicyUpdate) GetOlderThanDays() int32 {
	if x != nil {
		return x.OlderThanDays
	}
	return 0
}

type PgPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Disabled bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *PgPolicy) Reset() {
	*x = PgPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgPolicy) ProtoMessage() {}

func (x *PgPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgPolicy.ProtoReflect.Descriptor instead.
func (*PgPolicy) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{5}
}

func (x *PgPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PgPolicy) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type PgPolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	Disabled   bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *PgPolicyUpdate) Reset() {
	*x = PgPolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgPolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgPolicyUpdate) ProtoMessage() {}

func (x *PgPolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgPolicyUpdate.ProtoReflect.Descriptor instead.
func (*PgPolicyUpdate) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{6}
}

func (x *PgPolicyUpdate) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *PgPolicyUpdate) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

// JobSettings are a job configuration setting update
type JobSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Disabled      bool               `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Recurrence    string             `protobuf:"bytes,3,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	Threshold     string             `protobuf:"bytes,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	PurgePolicies *PurgePolicyUpdate `protobuf:"bytes,5,opt,name=purge_policies,json=purgePolicies,proto3" json:"purge_policies,omitempty"`
}

func (x *JobSettings) Reset() {
	*x = JobSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSettings) ProtoMessage() {}

func (x *JobSettings) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSettings.ProtoReflect.Descriptor instead.
func (*JobSettings) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{7}
}

func (x *JobSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobSettings) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *JobSettings) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *JobSettings) GetThreshold() string {
	if x != nil {
		return x.Threshold
	}
	return ""
}

func (x *JobSettings) GetPurgePolicies() *PurgePolicyUpdate {
	if x != nil {
		return x.PurgePolicies
	}
	return nil
}

type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{8}
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infra      *GetInfraStatusResponse      `protobuf:"bytes,1,opt,name=infra,proto3" json:"infra,omitempty"`
	Compliance *GetComplianceStatusResponse `protobuf:"bytes,2,opt,name=compliance,proto3" json:"compliance,omitempty"`
	EventFeed  *GetEventFeedStatusResponse  `protobuf:"bytes,3,opt,name=event_feed,json=eventFeed,proto3" json:"event_feed,omitempty"`
	Services   *GetServicesStatusResponse   `protobuf:"bytes,4,opt,name=services,proto3" json:"services,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{9}
}

func (x *GetStatusResponse) GetInfra() *GetInfraStatusResponse {
	if x != nil {
		return x.Infra
	}
	return nil
}

func (x *GetStatusResponse) GetCompliance() *GetComplianceStatusResponse {
	if x != nil {
		return x.Compliance
	}
	return nil
}

func (x *GetStatusResponse) GetEventFeed() *GetEventFeedStatusResponse {
	if x != nil {
		return x.EventFeed
	}
	return nil
}

func (x *GetStatusResponse) GetServices() *GetServicesStatusResponse {
	if x != nil {
		return x.Services
	}
	return nil
}

type SetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infra      *SetInfraConfigRequest      `protobuf:"bytes,1,opt,name=infra,proto3" json:"infra,omitempty"`
	Compliance *SetComplianceConfigRequest `protobuf:"bytes,2,opt,name=compliance,proto3" json:"compliance,omitempty"`
	EventFeed  *SetEventFeedConfigRequest  `protobuf:"bytes,3,opt,name=event_feed,json=eventFeed,proto3" json:"event_feed,omitempty"`
	Services   *SetServicesConfigRequest   `protobuf:"bytes,4,opt,name=services,proto3" json:"services,omitempty"`
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{10}
}

func (x *SetConfigRequest) GetInfra() *SetInfraConfigRequest {
	if x != nil {
		return x.Infra
	}
	return nil
}

func (x *SetConfigRequest) GetCompliance() *SetComplianceConfigRequest {
	if x != nil {
		return x.Compliance
	}
	return nil
}

func (x *SetConfigRequest) GetEventFeed() *SetEventFeedConfigRequest {
	if x != nil {
		return x.EventFeed
	}
	return nil
}

func (x *SetConfigRequest) GetServices() *SetServicesConfigRequest {
	if x != nil {
		return x.Services
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{11}
}

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{12}
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{13}
}

type GetInfraStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfraStatusRequest) Reset() {
	*x = GetInfraStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfraStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfraStatusRequest) ProtoMessage() {}

func (x *GetInfraStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfraStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInfraStatusRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{14}
}

type GetInfraStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobStatus `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetInfraStatusResponse) Reset() {
	*x = GetInfraStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfraStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfraStatusResponse) ProtoMessage() {}

func (x *GetInfraStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfraStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInfraStatusResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{15}
}

func (x *GetInfraStatusResponse) GetJobs() []*JobStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunInfraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunInfraRequest) Reset() {
	*x = RunInfraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInfraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInfraRequest) ProtoMessage() {}

func (x *RunInfraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInfraRequest.ProtoReflect.Descriptor instead.
func (*RunInfraRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{16}
}

type RunInfraResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunInfraResponse) Reset() {
	*x = RunInfraResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInfraResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInfraResponse) ProtoMessage() {}

func (x *RunInfraResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInfraResponse.ProtoReflect.Descriptor instead.
func (*RunInfraResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{17}
}

type SetInfraConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSettings []*JobSettings `protobuf:"bytes,1,rep,name=job_settings,json=jobSettings,proto3" json:"job_settings,omitempty"`
}

func (x *SetInfraConfigRequest) Reset() {
	*x = SetInfraConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInfraConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInfraConfigRequest) ProtoMessage() {}

func (x *SetInfraConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInfraConfigRequest.ProtoReflect.Descriptor instead.
func (*SetInfraConfigRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{18}
}

func (x *SetInfraConfigRequest) GetJobSettings() []*JobSettings {
	if x != nil {
		return x.JobSettings
	}
	return nil
}

type SetInfraConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetInfraConfigResponse) Reset() {
	*x = SetInfraConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInfraConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInfraConfigResponse) ProtoMessage() {}

func (x *SetInfraConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInfraConfigResponse.ProtoReflect.Descriptor instead.
func (*SetInfraConfigResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{19}
}

type GetServicesStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServicesStatusRequest) Reset() {
	*x = GetServicesStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesStatusRequest) ProtoMessage() {}

func (x *GetServicesStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesStatusRequest.ProtoReflect.Descriptor instead.
func (*GetServicesStatusRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{20}
}

type GetServicesStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobStatus `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetServicesStatusResponse) Reset() {
	*x = GetServicesStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesStatusResponse) ProtoMessage() {}

func (x *GetServicesStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesStatusResponse.ProtoReflect.Descriptor instead.
func (*GetServicesStatusResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{21}
}

func (x *GetServicesStatusResponse) GetJobs() []*JobStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunServicesRequest) Reset() {
	*x = RunServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunServicesRequest) ProtoMessage() {}

func (x *RunServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunServicesRequest.ProtoReflect.Descriptor instead.
func (*RunServicesRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{22}
}

type RunServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunServicesResponse) Reset() {
	*x = RunServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunServicesResponse) ProtoMessage() {}

func (x *RunServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunServicesResponse.ProtoReflect.Descriptor instead.
func (*RunServicesResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{23}
}

type SetServicesConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSettings []*JobSettings `protobuf:"bytes,1,rep,name=job_settings,json=jobSettings,proto3" json:"job_settings,omitempty"`
}

func (x *SetServicesConfigRequest) Reset() {
	*x = SetServicesConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServicesConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServicesConfigRequest) ProtoMessage() {}

func (x *SetServicesConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServicesConfigRequest.ProtoReflect.Descriptor instead.
func (*SetServicesConfigRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{24}
}

func (x *SetServicesConfigRequest) GetJobSettings() []*JobSettings {
	if x != nil {
		return x.JobSettings
	}
	return nil
}

type SetServicesConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetServicesConfigResponse) Reset() {
	*x = SetServicesConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServicesConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServicesConfigResponse) ProtoMessage() {}

func (x *SetServicesConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServicesConfigResponse.ProtoReflect.Descriptor instead.
func (*SetServicesConfigResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{25}
}

type GetEventFeedStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEventFeedStatusRequest) Reset() {
	*x = GetEventFeedStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventFeedStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventFeedStatusRequest) ProtoMessage() {}

func (x *GetEventFeedStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventFeedStatusRequest.ProtoReflect.Descriptor instead.
func (*GetEventFeedStatusRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{26}
}

type GetEventFeedStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobStatus `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetEventFeedStatusResponse) Reset() {
	*x = GetEventFeedStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventFeedStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventFeedStatusResponse) ProtoMessage() {}

func (x *GetEventFeedStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventFeedStatusResponse.ProtoReflect.Descriptor instead.
func (*GetEventFeedStatusResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{27}
}

func (x *GetEventFeedStatusResponse) GetJobs() []*JobStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunEventFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunEventFeedRequest) Reset() {
	*x = RunEventFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunEventFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunEventFeedRequest) ProtoMessage() {}

func (x *RunEventFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunEventFeedRequest.ProtoReflect.Descriptor instead.
func (*RunEventFeedRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{28}
}

type RunEventFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunEventFeedResponse) Reset() {
	*x = RunEventFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunEventFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunEventFeedResponse) ProtoMessage() {}

func (x *RunEventFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunEventFeedResponse.ProtoReflect.Descriptor instead.
func (*RunEventFeedResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{29}
}

type SetEventFeedConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSettings []*JobSettings `protobuf:"bytes,1,rep,name=job_settings,json=jobSettings,proto3" json:"job_settings,omitempty"`
}

func (x *SetEventFeedConfigRequest) Reset() {
	*x = SetEventFeedConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEventFeedConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEventFeedConfigRequest) ProtoMessage() {}

func (x *SetEventFeedConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEventFeedConfigRequest.ProtoReflect.Descriptor instead.
func (*SetEventFeedConfigRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{30}
}

func (x *SetEventFeedConfigRequest) GetJobSettings() []*JobSettings {
	if x != nil {
		return x.JobSettings
	}
	return nil
}

type SetEventFeedConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetEventFeedConfigResponse) Reset() {
	*x = SetEventFeedConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEventFeedConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEventFeedConfigResponse) ProtoMessage() {}

func (x *SetEventFeedConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEventFeedConfigResponse.ProtoReflect.Descriptor instead.
func (*SetEventFeedConfigResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{31}
}

type GetComplianceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetComplianceStatusRequest) Reset() {
	*x = GetComplianceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceStatusRequest) ProtoMessage() {}

func (x *GetComplianceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetComplianceStatusRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{32}
}

type GetComplianceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobStatus `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetComplianceStatusResponse) Reset() {
	*x = GetComplianceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplianceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplianceStatusResponse) ProtoMessage() {}

func (x *GetComplianceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplianceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetComplianceStatusResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{33}
}

func (x *GetComplianceStatusResponse) GetJobs() []*JobStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunComplianceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunComplianceRequest) Reset() {
	*x = RunComplianceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunComplianceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunComplianceRequest) ProtoMessage() {}

func (x *RunComplianceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunComplianceRequest.ProtoReflect.Descriptor instead.
func (*RunComplianceRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{34}
}

type RunComplianceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunComplianceResponse) Reset() {
	*x = RunComplianceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunComplianceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunComplianceResponse) ProtoMessage() {}

func (x *RunComplianceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunComplianceResponse.ProtoReflect.Descriptor instead.
func (*RunComplianceResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{35}
}

type SetComplianceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSettings []*JobSettings `protobuf:"bytes,1,rep,name=job_settings,json=jobSettings,proto3" json:"job_settings,omitempty"`
}

func (x *SetComplianceConfigRequest) Reset() {
	*x = SetComplianceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComplianceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComplianceConfigRequest) ProtoMessage() {}

func (x *SetComplianceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComplianceConfigRequest.ProtoReflect.Descriptor instead.
func (*SetComplianceConfigRequest) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{36}
}

func (x *SetComplianceConfigRequest) GetJobSettings() []*JobSettings {
	if x != nil {
		return x.JobSettings
	}
	return nil
}

type SetComplianceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetComplianceConfigResponse) Reset() {
	*x = SetComplianceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComplianceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComplianceConfigResponse) ProtoMessage() {}

func (x *SetComplianceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_data_lifecycle_data_lifecycle_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComplianceConfigResponse.ProtoReflect.Descriptor instead.
func (*SetComplianceConfigResponse) Descriptor() ([]byte, []int) {
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP(), []int{37}
}

var File_external_data_lifecycle_data_lifecycle_proto protoreflect.FileDescriptor

var file_external_data_lifecycle_data_lifecycle_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x04, 0x0a, 0x09,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x56, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x67, 0x65,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x0d, 0x70, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x44, 0x75, 0x65, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x50, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x22,
	0xb9, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d,
	0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x4c, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2e, 0x50, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x08,
	0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x75,
	0x72, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x75, 0x0a, 0x0e, 0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x08, 0x50,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x0e, 0x50, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x5a, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xf8, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x12, 0x5d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0xf3, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x12, 0x5c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x56, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x59, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x69, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x6a,
	0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x6a, 0x6f,
	0x62, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x0b, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x1b, 0x0a, 0x19,
	0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14,
	0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6e, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xed, 0x1c, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x12, 0xd3, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a,
	0xb5, 0x18, 0x16, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x3a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x1a, 0x12, 0x18, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x3a, 0x67, 0x65, 0x74, 0x12, 0xd9, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x16, 0x0a, 0x14, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x8a, 0xb5, 0x18, 0x1d, 0x12, 0x1b, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x72, 0x75, 0x6e, 0x3a, 0x01, 0x2a, 0x8a,
	0xb5, 0x18, 0x13, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x3a, 0x72, 0x75, 0x6e, 0x8a, 0xb5, 0x18, 0x1a, 0x12, 0x18, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x72, 0x75, 0x6e, 0x3a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0xed, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72,
	0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x1c, 0x0a, 0x1a, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x3a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x19, 0x12, 0x17, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x3a, 0x67, 0x65, 0x74, 0x12, 0xdb, 0x01, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x72,
	0x61, 0x12, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x72, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x72,
	0x75, 0x6e, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x19, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x3a, 0x72,
	0x75, 0x6e, 0x8a, 0xb5, 0x18, 0x1c, 0x12, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x3a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0xf3, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72,
	0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x1a, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x1c, 0x0a, 0x1a, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x3a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x8a, 0xb5, 0x18, 0x1c, 0x12, 0x1a, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x3a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xff, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63, 0x68, 0x65,
	0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12,
	0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x1f, 0x0a, 0x1d, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x3a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x1c, 0x12, 0x1a,
	0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x67, 0x65, 0x74, 0x12, 0xed, 0x01, 0x0a, 0x0b, 0x52,
	0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x68, 0x65,
	0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22,
	0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x72, 0x75, 0x6e, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x1c, 0x0a, 0x1a, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x3a, 0x72, 0x75, 0x6e, 0x8a, 0xb5, 0x18, 0x1f, 0x12, 0x1d, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x85, 0x02, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2b, 0x1a, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x1f,
	0x0a, 0x1d, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x8a,
	0xb5, 0x18, 0x1f, 0x12, 0x1d, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x3a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x86, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x66, 0x65, 0x65, 0x64, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x20, 0x0a, 0x1e, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x3a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x1d, 0x12, 0x1b,
	0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x67, 0x65, 0x74, 0x12, 0xf4, 0x01, 0x0a, 0x0c,
	0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x35, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e,
	0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2d, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18,
	0x1d, 0x0a, 0x1b, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x3a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x72, 0x75, 0x6e, 0x8a, 0xb5,
	0x18, 0x20, 0x12, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x3a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x8c, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x28, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x66, 0x65, 0x65, 0x64, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x20, 0x0a, 0x1e, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x8a, 0xb5, 0x18,
	0x20, 0x12, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x3a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x3a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x8b, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18, 0x21, 0x0a, 0x1f, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x8a, 0xb5, 0x18,
	0x1e, 0x12, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x67, 0x65, 0x74, 0x12,
	0xf9, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x36, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x77, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x72, 0x75,
	0x6e, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x1e, 0x0a, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x3a, 0x72, 0x75, 0x6e, 0x8a, 0xb5, 0x18, 0x21, 0x12, 0x1f, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x91, 0x02, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3c, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x30, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x3a, 0x01, 0x2a, 0x8a, 0xb5, 0x18, 0x21, 0x0a, 0x1f, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x3a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x8a, 0xb5, 0x18, 0x21, 0x12, 0x1f,
	0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x3a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68,
	0x65, 0x66, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_external_data_lifecycle_data_lifecycle_proto_rawDescOnce sync.Once
	file_external_data_lifecycle_data_lifecycle_proto_rawDescData = file_external_data_lifecycle_data_lifecycle_proto_rawDesc
)

func file_external_data_lifecycle_data_lifecycle_proto_rawDescGZIP() []byte {
	file_external_data_lifecycle_data_lifecycle_proto_rawDescOnce.Do(func() {
		file_external_data_lifecycle_data_lifecycle_proto_rawDescData = protoimpl.X.CompressGZIP(file_external_data_lifecycle_data_lifecycle_proto_rawDescData)
	})
	return file_external_data_lifecycle_data_lifecycle_proto_rawDescData
}

var file_external_data_lifecycle_data_lifecycle_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_external_data_lifecycle_data_lifecycle_proto_goTypes = []interface{}{
	(*JobStatus)(nil),                   // 0: chef.automate.api.data_lifecycle.JobStatus
	(*PurgePolicies)(nil),               // 1: chef.automate.api.data_lifecycle.PurgePolicies
	(*PurgePolicyUpdate)(nil),           // 2: chef.automate.api.data_lifecycle.PurgePolicyUpdate
	(*EsPolicy)(nil),                    // 3: chef.automate.api.data_lifecycle.EsPolicy
	(*EsPolicyUpdate)(nil),              // 4: chef.automate.api.data_lifecycle.EsPolicyUpdate
	(*PgPolicy)(nil),                    // 5: chef.automate.api.data_lifecycle.PgPolicy
	(*PgPolicyUpdate)(nil),              // 6: chef.automate.api.data_lifecycle.PgPolicyUpdate
	(*JobSettings)(nil),                 // 7: chef.automate.api.data_lifecycle.JobSettings
	(*GetStatusRequest)(nil),            // 8: chef.automate.api.data_lifecycle.GetStatusRequest
	(*GetStatusResponse)(nil),           // 9: chef.automate.api.data_lifecycle.GetStatusResponse
	(*SetConfigRequest)(nil),            // 10: chef.automate.api.data_lifecycle.SetConfigRequest
	(*SetConfigResponse)(nil),           // 11: chef.automate.api.data_lifecycle.SetConfigResponse
	(*RunRequest)(nil),                  // 12: chef.automate.api.data_lifecycle.RunRequest
	(*RunResponse)(nil),                 // 13: chef.automate.api.data_lifecycle.RunResponse
	(*GetInfraStatusRequest)(nil),       // 14: chef.automate.api.data_lifecycle.GetInfraStatusRequest
	(*GetInfraStatusResponse)(nil),      // 15: chef.automate.api.data_lifecycle.GetInfraStatusResponse
	(*RunInfraRequest)(nil),             // 16: chef.automate.api.data_lifecycle.RunInfraRequest
	(*RunInfraResponse)(nil),            // 17: chef.automate.api.data_lifecycle.RunInfraResponse
	(*SetInfraConfigRequest)(nil),       // 18: chef.automate.api.data_lifecycle.SetInfraConfigRequest
	(*SetInfraConfigResponse)(nil),      // 19: chef.automate.api.data_lifecycle.SetInfraConfigResponse
	(*GetServicesStatusRequest)(nil),    // 20: chef.automate.api.data_lifecycle.GetServicesStatusRequest
	(*GetServicesStatusResponse)(nil),   // 21: chef.automate.api.data_lifecycle.GetServicesStatusResponse
	(*RunServicesRequest)(nil),          // 22: chef.automate.api.data_lifecycle.RunServicesRequest
	(*RunServicesResponse)(nil),         // 23: chef.automate.api.data_lifecycle.RunServicesResponse
	(*SetServicesConfigRequest)(nil),    // 24: chef.automate.api.data_lifecycle.SetServicesConfigRequest
	(*SetServicesConfigResponse)(nil),   // 25: chef.automate.api.data_lifecycle.SetServicesConfigResponse
	(*GetEventFeedStatusRequest)(nil),   // 26: chef.automate.api.data_lifecycle.GetEventFeedStatusRequest
	(*GetEventFeedStatusResponse)(nil),  // 27: chef.automate.api.data_lifecycle.GetEventFeedStatusResponse
	(*RunEventFeedRequest)(nil),         // 28: chef.automate.api.data_lifecycle.RunEventFeedRequest
	(*RunEventFeedResponse)(nil),        // 29: chef.automate.api.data_lifecycle.RunEventFeedResponse
	(*SetEventFeedConfigRequest)(nil),   // 30: chef.automate.api.data_lifecycle.SetEventFeedConfigRequest
	(*SetEventFeedConfigResponse)(nil),  // 31: chef.automate.api.data_lifecycle.SetEventFeedConfigResponse
	(*GetComplianceStatusRequest)(nil),  // 32: chef.automate.api.data_lifecycle.GetComplianceStatusRequest
	(*GetComplianceStatusResponse)(nil), // 33: chef.automate.api.data_lifecycle.GetComplianceStatusResponse
	(*RunComplianceRequest)(nil),        // 34: chef.automate.api.data_lifecycle.RunComplianceRequest
	(*RunComplianceResponse)(nil),       // 35: chef.automate.api.data_lifecycle.RunComplianceResponse
	(*SetComplianceConfigRequest)(nil),  // 36: chef.automate.api.data_lifecycle.SetComplianceConfigRequest
	(*SetComplianceConfigResponse)(nil), // 37: chef.automate.api.data_lifecycle.SetComplianceConfigResponse
	(*durationpb.Duration)(nil),         // 38: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),       // 39: google.protobuf.Timestamp
}
var file_external_data_lifecycle_data_lifecycle_proto_depIdxs = []int32{
	1,  // 0: chef.automate.api.data_lifecycle.JobStatus.purge_policies:type_name -> chef.automate.api.data_lifecycle.PurgePolicies
	38, // 1: chef.automate.api.data_lifecycle.JobStatus.last_elapsed:type_name -> google.protobuf.Duration
	39, // 2: chef.automate.api.data_lifecycle.JobStatus.next_due_at:type_name -> google.protobuf.Timestamp
	39, // 3: chef.automate.api.data_lifecycle.JobStatus.last_enqueued_at:type_name -> google.protobuf.Timestamp
	39, // 4: chef.automate.api.data_lifecycle.JobStatus.last_started_at:type_name -> google.protobuf.Timestamp
	39, // 5: chef.automate.api.data_lifecycle.JobStatus.last_ended_at:type_name -> google.protobuf.Timestamp
	3,  // 6: chef.automate.api.data_lifecycle.PurgePolicies.elasticsearch:type_name -> chef.automate.api.data_lifecycle.EsPolicy
	5,  // 7: chef.automate.api.data_lifecycle.PurgePolicies.postgres:type_name -> chef.automate.api.data_lifecycle.PgPolicy
	4,  // 8: chef.automate.api.data_lifecycle.PurgePolicyUpdate.elasticsearch:type_name -> chef.automate.api.data_lifecycle.EsPolicyUpdate
	6,  // 9: chef.automate.api.data_lifecycle.PurgePolicyUpdate.postgres:type_name -> chef.automate.api.data_lifecycle.PgPolicyUpdate
	2,  // 10: chef.automate.api.data_lifecycle.JobSettings.purge_policies:type_name -> chef.automate.api.data_lifecycle.PurgePolicyUpdate
	15, // 11: chef.automate.api.data_lifecycle.GetStatusResponse.infra:type_name -> chef.automate.api.data_lifecycle.GetInfraStatusResponse
	33, // 12: chef.automate.api.data_lifecycle.GetStatusResponse.compliance:type_name -> chef.automate.api.data_lifecycle.GetComplianceStatusResponse
	27, // 13: chef.automate.api.data_lifecycle.GetStatusResponse.event_feed:type_name -> chef.automate.api.data_lifecycle.GetEventFeedStatusResponse
	21, // 14: chef.automate.api.data_lifecycle.GetStatusResponse.services:type_name -> chef.automate.api.data_lifecycle.GetServicesStatusResponse
	18, // 15: chef.automate.api.data_lifecycle.SetConfigRequest.infra:type_name -> chef.automate.api.data_lifecycle.SetInfraConfigRequest
	36, // 16: chef.automate.api.data_lifecycle.SetConfigRequest.compliance:type_name -> chef.automate.api.data_lifecycle.SetComplianceConfigRequest
	30, // 17: chef.automate.api.data_lifecycle.SetConfigRequest.event_feed:type_name -> chef.automate.api.data_lifecycle.SetEventFeedConfigRequest
	24, // 18: chef.automate.api.data_lifecycle.SetConfigRequest.services:type_name -> chef.automate.api.data_lifecycle.SetServicesConfigRequest
	0,  // 19: chef.automate.api.data_lifecycle.GetInfraStatusResponse.jobs:type_name -> chef.automate.api.data_lifecycle.JobStatus
	7,  // 20: chef.automate.api.data_lifecycle.SetInfraConfigRequest.job_settings:type_name -> chef.automate.api.data_lifecycle.JobSettings
	0,  // 21: chef.automate.api.data_lifecycle.GetServicesStatusResponse.jobs:type_name -> chef.automate.api.data_lifecycle.JobStatus
	7,  // 22: chef.automate.api.data_lifecycle.SetServicesConfigRequest.job_settings:type_name -> chef.automate.api.data_lifecycle.JobSettings
	0,  // 23: chef.automate.api.data_lifecycle.GetEventFeedStatusResponse.jobs:type_name -> chef.automate.api.data_lifecycle.JobStatus
	7,  // 24: chef.automate.api.data_lifecycle.SetEventFeedConfigRequest.job_settings:type_name -> chef.automate.api.data_lifecycle.JobSettings
	0,  // 25: chef.automate.api.data_lifecycle.GetComplianceStatusResponse.jobs:type_name -> chef.automate.api.data_lifecycle.JobStatus
	7,  // 26: chef.automate.api.data_lifecycle.SetComplianceConfigRequest.job_settings:type_name -> chef.automate.api.data_lifecycle.JobSettings
	8,  // 27: chef.automate.api.data_lifecycle.DataLifecycle.GetStatus:input_type -> chef.automate.api.data_lifecycle.GetStatusRequest
	10, // 28: chef.automate.api.data_lifecycle.DataLifecycle.SetConfig:input_type -> chef.automate.api.data_lifecycle.SetConfigRequest
	12, // 29: chef.automate.api.data_lifecycle.DataLifecycle.Run:input_type -> chef.automate.api.data_lifecycle.RunRequest
	14, // 30: chef.automate.api.data_lifecycle.DataLifecycle.GetInfraStatus:input_type -> chef.automate.api.data_lifecycle.GetInfraStatusRequest
	16, // 31: chef.automate.api.data_lifecycle.DataLifecycle.RunInfra:input_type -> chef.automate.api.data_lifecycle.RunInfraRequest
	18, // 32: chef.automate.api.data_lifecycle.DataLifecycle.SetInfraConfig:input_type -> chef.automate.api.data_lifecycle.SetInfraConfigRequest
	20, // 33: chef.automate.api.data_lifecycle.DataLifecycle.GetServicesStatus:input_type -> chef.automate.api.data_lifecycle.GetServicesStatusRequest
	22, // 34: chef.automate.api.data_lifecycle.DataLifecycle.RunServices:input_type -> chef.automate.api.data_lifecycle.RunServicesRequest
	24, // 35: chef.automate.api.data_lifecycle.DataLifecycle.SetServicesConfig:input_type -> chef.automate.api.data_lifecycle.SetServicesConfigRequest
	26, // 36: chef.automate.api.data_lifecycle.DataLifecycle.GetEventFeedStatus:input_type -> chef.automate.api.data_lifecycle.GetEventFeedStatusRequest
	28, // 37: chef.automate.api.data_lifecycle.DataLifecycle.RunEventFeed:input_type -> chef.automate.api.data_lifecycle.RunEventFeedRequest
	30, // 38: chef.automate.api.data_lifecycle.DataLifecycle.SetEventFeedConfig:input_type -> chef.automate.api.data_lifecycle.SetEventFeedConfigRequest
	32, // 39: chef.automate.api.data_lifecycle.DataLifecycle.GetComplianceStatus:input_type -> chef.automate.api.data_lifecycle.GetComplianceStatusRequest
	34, // 40: chef.automate.api.data_lifecycle.DataLifecycle.RunCompliance:input_type -> chef.automate.api.data_lifecycle.RunComplianceRequest
	36, // 41: chef.automate.api.data_lifecycle.DataLifecycle.SetComplianceConfig:input_type -> chef.automate.api.data_lifecycle.SetComplianceConfigRequest
	9,  // 42: chef.automate.api.data_lifecycle.DataLifecycle.GetStatus:output_type -> chef.automate.api.data_lifecycle.GetStatusResponse
	11, // 43: chef.automate.api.data_lifecycle.DataLifecycle.SetConfig:output_type -> chef.automate.api.data_lifecycle.SetConfigResponse
	13, // 44: chef.automate.api.data_lifecycle.DataLifecycle.Run:output_type -> chef.automate.api.data_lifecycle.RunResponse
	15, // 45: chef.automate.api.data_lifecycle.DataLifecycle.GetInfraStatus:output_type -> chef.automate.api.data_lifecycle.GetInfraStatusResponse
	17, // 46: chef.automate.api.data_lifecycle.DataLifecycle.RunInfra:output_type -> chef.automate.api.data_lifecycle.RunInfraResponse
	19, // 47: chef.automate.api.data_lifecycle.DataLifecycle.SetInfraConfig:output_type -> chef.automate.api.data_lifecycle.SetInfraConfigResponse
	21, // 48: chef.automate.api.data_lifecycle.DataLifecycle.GetServicesStatus:output_type -> chef.automate.api.data_lifecycle.GetServicesStatusResponse
	23, // 49: chef.automate.api.data_lifecycle.DataLifecycle.RunServices:output_type -> chef.automate.api.data_lifecycle.RunServicesResponse
	25, // 50: chef.automate.api.data_lifecycle.DataLifecycle.SetServicesConfig:output_type -> chef.automate.api.data_lifecycle.SetServicesConfigResponse
	27, // 51: chef.automate.api.data_lifecycle.DataLifecycle.GetEventFeedStatus:output_type -> chef.automate.api.data_lifecycle.GetEventFeedStatusResponse
	29, // 52: chef.automate.api.data_lifecycle.DataLifecycle.RunEventFeed:output_type -> chef.automate.api.data_lifecycle.RunEventFeedResponse
	31, // 53: chef.automate.api.data_lifecycle.DataLifecycle.SetEventFeedConfig:output_type -> chef.automate.api.data_lifecycle.SetEventFeedConfigResponse
	33, // 54: chef.automate.api.data_lifecycle.DataLifecycle.GetComplianceStatus:output_type -> chef.automate.api.data_lifecycle.GetComplianceStatusResponse
	35, // 55: chef.automate.api.data_lifecycle.DataLifecycle.RunCompliance:output_type -> chef.automate.api.data_lifecycle.RunComplianceResponse
	37, // 56: chef.automate.api.data_lifecycle.DataLifecycle.SetComplianceConfig:output_type -> chef.automate.api.data_lifecycle.SetComplianceConfigResponse
	42, // [42:57] is the sub-list for method output_type
	27, // [27:42] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_external_data_lifecycle_data_lifecycle_proto_init() }
func file_external_data_lifecycle_data_lifecycle_proto_init() {
	if File_external_data_lifecycle_data_lifecycle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgePolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgePolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsPolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgPolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfraStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfraStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInfraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInfraResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInfraConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInfraConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServicesConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServicesConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventFeedStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventFeedStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunEventFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunEventFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEventFeedConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEventFeedConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplianceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunComplianceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunComplianceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComplianceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_data_lifecycle_data_lifecycle_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComplianceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_external_data_lifecycle_data_lifecycle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_external_data_lifecycle_data_lifecycle_proto_goTypes,
		DependencyIndexes: file_external_data_lifecycle_data_lifecycle_proto_depIdxs,
		MessageInfos:      file_external_data_lifecycle_data_lifecycle_proto_msgTypes,
	}.Build()
	File_external_data_lifecycle_data_lifecycle_proto = out.File
	file_external_data_lifecycle_data_lifecycle_proto_rawDesc = nil
	file_external_data_lifecycle_data_lifecycle_proto_goTypes = nil
	file_external_data_lifecycle_data_lifecycle_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataLifecycleClient is the client API for DataLifecycle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataLifecycleClient interface {
	// GetStatus returns the aggregate status across all data lifecycle jobs
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error)
	// SetConfig provides a singular endpoint for configuring all data lifecycle jobs
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	// Run runs all data lifecycle actions across all data lifecycle jobs
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	// GetInfraStatus returns the infra job scheduler status
	GetInfraStatus(ctx context.Context, in *GetInfraStatusRequest, opts ...grpc.CallOption) (*GetInfraStatusResponse, error)
	// RunInfra runs the infra data lifecycle jobs
	RunInfra(ctx context.Context, in *RunInfraRequest, opts ...grpc.CallOption) (*RunInfraResponse, error)
	// SetInfraConfig configures the infra data lifecycle scheduler and jobs
	SetInfraConfig(ctx context.Context, in *SetInfraConfigRequest, opts ...grpc.CallOption) (*SetInfraConfigResponse, error)
	//
	// Services
	//
	GetServicesStatus(ctx context.Context, in *GetServicesStatusRequest, opts ...grpc.CallOption) (*GetServicesStatusResponse, error)
	RunServices(ctx context.Context, in *RunServicesRequest, opts ...grpc.CallOption) (*RunServicesResponse, error)
	SetServicesConfig(ctx context.Context, in *SetServicesConfigRequest, opts ...grpc.CallOption) (*SetServicesConfigResponse, error)
	// GetEventFeedStatus returns the event feed job scheduler status
	GetEventFeedStatus(ctx context.Context, in *GetEventFeedStatusRequest, opts ...grpc.CallOption) (*GetEventFeedStatusResponse, error)
	// RunEventFeed runs the event feed data lifecycle jobs
	RunEventFeed(ctx context.Context, in *RunEventFeedRequest, opts ...grpc.CallOption) (*RunEventFeedResponse, error)
	// SetEventFeedConfig configures the event feed data lifecycle scheduler and jobs
	SetEventFeedConfig(ctx context.Context, in *SetEventFeedConfigRequest, opts ...grpc.CallOption) (*SetEventFeedConfigResponse, error)
	// GetComplianceStatus returns the compliance job scheduler status
	GetComplianceStatus(ctx context.Context, in *GetComplianceStatusRequest, opts ...grpc.CallOption) (*GetComplianceStatusResponse, error)
	// RunCompliance runs the compliance data lifecycle jobs
	RunCompliance(ctx context.Context, in *RunComplianceRequest, opts ...grpc.CallOption) (*RunComplianceResponse, error)
	// SetComplianceConfig configures the compliance data lifecycle scheduler and jobs
	SetComplianceConfig(ctx context.Context, in *SetComplianceConfigRequest, opts ...grpc.CallOption) (*SetComplianceConfigResponse, error)
}

type dataLifecycleClient struct {
	cc grpc.ClientConnInterface
}

func NewDataLifecycleClient(cc grpc.ClientConnInterface) DataLifecycleClient {
	return &dataLifecycleClient{cc}
}

func (c *dataLifecycleClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error) {
	out := new(GetStatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) GetInfraStatus(ctx context.Context, in *GetInfraStatusRequest, opts ...grpc.CallOption) (*GetInfraStatusResponse, error) {
	out := new(GetInfraStatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/GetInfraStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) RunInfra(ctx context.Context, in *RunInfraRequest, opts ...grpc.CallOption) (*RunInfraResponse, error) {
	out := new(RunInfraResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/RunInfra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) SetInfraConfig(ctx context.Context, in *SetInfraConfigRequest, opts ...grpc.CallOption) (*SetInfraConfigResponse, error) {
	out := new(SetInfraConfigResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/SetInfraConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) GetServicesStatus(ctx context.Context, in *GetServicesStatusRequest, opts ...grpc.CallOption) (*GetServicesStatusResponse, error) {
	out := new(GetServicesStatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/GetServicesStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) RunServices(ctx context.Context, in *RunServicesRequest, opts ...grpc.CallOption) (*RunServicesResponse, error) {
	out := new(RunServicesResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/RunServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) SetServicesConfig(ctx context.Context, in *SetServicesConfigRequest, opts ...grpc.CallOption) (*SetServicesConfigResponse, error) {
	out := new(SetServicesConfigResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/SetServicesConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) GetEventFeedStatus(ctx context.Context, in *GetEventFeedStatusRequest, opts ...grpc.CallOption) (*GetEventFeedStatusResponse, error) {
	out := new(GetEventFeedStatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/GetEventFeedStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) RunEventFeed(ctx context.Context, in *RunEventFeedRequest, opts ...grpc.CallOption) (*RunEventFeedResponse, error) {
	out := new(RunEventFeedResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/RunEventFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) SetEventFeedConfig(ctx context.Context, in *SetEventFeedConfigRequest, opts ...grpc.CallOption) (*SetEventFeedConfigResponse, error) {
	out := new(SetEventFeedConfigResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/SetEventFeedConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) GetComplianceStatus(ctx context.Context, in *GetComplianceStatusRequest, opts ...grpc.CallOption) (*GetComplianceStatusResponse, error) {
	out := new(GetComplianceStatusResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/GetComplianceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) RunCompliance(ctx context.Context, in *RunComplianceRequest, opts ...grpc.CallOption) (*RunComplianceResponse, error) {
	out := new(RunComplianceResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/RunCompliance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) SetComplianceConfig(ctx context.Context, in *SetComplianceConfigRequest, opts ...grpc.CallOption) (*SetComplianceConfigResponse, error) {
	out := new(SetComplianceConfigResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.data_lifecycle.DataLifecycle/SetComplianceConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataLifecycleServer is the server API for DataLifecycle service.
type DataLifecycleServer interface {
	// GetStatus returns the aggregate status across all data lifecycle jobs
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error)
	// SetConfig provides a singular endpoint for configuring all data lifecycle jobs
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	// Run runs all data lifecycle actions across all data lifecycle jobs
	Run(context.Context, *RunRequest) (*RunResponse, error)
	// GetInfraStatus returns the infra job scheduler status
	GetInfraStatus(context.Context, *GetInfraStatusRequest) (*GetInfraStatusResponse, error)
	// RunInfra runs the infra data lifecycle jobs
	RunInfra(context.Context, *RunInfraRequest) (*RunInfraResponse, error)
	// SetInfraConfig configures the infra data lifecycle scheduler and jobs
	SetInfraConfig(context.Context, *SetInfraConfigRequest) (*SetInfraConfigResponse, error)
	//
	// Services
	//
	GetServicesStatus(context.Context, *GetServicesStatusRequest) (*GetServicesStatusResponse, error)
	RunServices(context.Context, *RunServicesRequest) (*RunServicesResponse, error)
	SetServicesConfig(context.Context, *SetServicesConfigRequest) (*SetServicesConfigResponse, error)
	// GetEventFeedStatus returns the event feed job scheduler status
	GetEventFeedStatus(context.Context, *GetEventFeedStatusRequest) (*GetEventFeedStatusResponse, error)
	// RunEventFeed runs the event feed data lifecycle jobs
	RunEventFeed(context.Context, *RunEventFeedRequest) (*RunEventFeedResponse, error)
	// SetEventFeedConfig configures the event feed data lifecycle scheduler and jobs
	SetEventFeedConfig(context.Context, *SetEventFeedConfigRequest) (*SetEventFeedConfigResponse, error)
	// GetComplianceStatus returns the compliance job scheduler status
	GetComplianceStatus(context.Context, *GetComplianceStatusRequest) (*GetComplianceStatusResponse, error)
	// RunCompliance runs the compliance data lifecycle jobs
	RunCompliance(context.Context, *RunComplianceRequest) (*RunComplianceResponse, error)
	// SetComplianceConfig configures the compliance data lifecycle scheduler and jobs
	SetComplianceConfig(context.Context, *SetComplianceConfigRequest) (*SetComplianceConfigResponse, error)
}

// UnimplementedDataLifecycleServer can be embedded to have forward compatible implementations.
type UnimplementedDataLifecycleServer struct {
}

func (*UnimplementedDataLifecycleServer) GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedDataLifecycleServer) SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfig not implemented")
}
func (*UnimplementedDataLifecycleServer) Run(context.Context, *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedDataLifecycleServer) GetInfraStatus(context.Context, *GetInfraStatusRequest) (*GetInfraStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfraStatus not implemented")
}
func (*UnimplementedDataLifecycleServer) RunInfra(context.Context, *RunInfraRequest) (*RunInfraResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunInfra not implemented")
}
func (*UnimplementedDataLifecycleServer) SetInfraConfig(context.Context, *SetInfraConfigRequest) (*SetInfraConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInfraConfig not implemented")
}
func (*UnimplementedDataLifecycleServer) GetServicesStatus(context.Context, *GetServicesStatusRequest) (*GetServicesStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServicesStatus not implemented")
}
func (*UnimplementedDataLifecycleServer) RunServices(context.Context, *RunServicesRequest) (*RunServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunServices not implemented")
}
func (*UnimplementedDataLifecycleServer) SetServicesConfig(context.Context, *SetServicesConfigRequest) (*SetServicesConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetServicesConfig not implemented")
}
func (*UnimplementedDataLifecycleServer) GetEventFeedStatus(context.Context, *GetEventFeedStatusRequest) (*GetEventFeedStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventFeedStatus not implemented")
}
func (*UnimplementedDataLifecycleServer) RunEventFeed(context.Context, *RunEventFeedRequest) (*RunEventFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunEventFeed not implemented")
}
func (*UnimplementedDataLifecycleServer) SetEventFeedConfig(context.Context, *SetEventFeedConfigRequest) (*SetEventFeedConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEventFeedConfig not implemented")
}
func (*UnimplementedDataLifecycleServer) GetComplianceStatus(context.Context, *GetComplianceStatusRequest) (*GetComplianceStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceStatus not implemented")
}
func (*UnimplementedDataLifecycleServer) RunCompliance(context.Context, *RunComplianceRequest) (*RunComplianceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCompliance not implemented")
}
func (*UnimplementedDataLifecycleServer) SetComplianceConfig(context.Context, *SetComplianceConfigRequest) (*SetComplianceConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetComplianceConfig not implemented")
}

func RegisterDataLifecycleServer(s *grpc.Server, srv DataLifecycleServer) {
	s.RegisterService(&_DataLifecycle_serviceDesc, srv)
}

func _DataLifecycle_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_GetInfraStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfraStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).GetInfraStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/GetInfraStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).GetInfraStatus(ctx, req.(*GetInfraStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_RunInfra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunInfraRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).RunInfra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/RunInfra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).RunInfra(ctx, req.(*RunInfraRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_SetInfraConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetInfraConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).SetInfraConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/SetInfraConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).SetInfraConfig(ctx, req.(*SetInfraConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_GetServicesStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).GetServicesStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/GetServicesStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).GetServicesStatus(ctx, req.(*GetServicesStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_RunServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).RunServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/RunServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).RunServices(ctx, req.(*RunServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_SetServicesConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetServicesConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).SetServicesConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/SetServicesConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).SetServicesConfig(ctx, req.(*SetServicesConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_GetEventFeedStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventFeedStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).GetEventFeedStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/GetEventFeedStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).GetEventFeedStatus(ctx, req.(*GetEventFeedStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_RunEventFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunEventFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).RunEventFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/RunEventFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).RunEventFeed(ctx, req.(*RunEventFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_SetEventFeedConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEventFeedConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).SetEventFeedConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/SetEventFeedConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).SetEventFeedConfig(ctx, req.(*SetEventFeedConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_GetComplianceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComplianceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).GetComplianceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/GetComplianceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).GetComplianceStatus(ctx, req.(*GetComplianceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_RunCompliance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunComplianceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).RunCompliance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/RunCompliance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).RunCompliance(ctx, req.(*RunComplianceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_SetComplianceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetComplianceConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).SetComplianceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.data_lifecycle.DataLifecycle/SetComplianceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).SetComplianceConfig(ctx, req.(*SetComplianceConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataLifecycle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.data_lifecycle.DataLifecycle",
	HandlerType: (*DataLifecycleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _DataLifecycle_GetStatus_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _DataLifecycle_SetConfig_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _DataLifecycle_Run_Handler,
		},
		{
			MethodName: "GetInfraStatus",
			Handler:    _DataLifecycle_GetInfraStatus_Handler,
		},
		{
			MethodName: "RunInfra",
			Handler:    _DataLifecycle_RunInfra_Handler,
		},
		{
			MethodName: "SetInfraConfig",
			Handler:    _DataLifecycle_SetInfraConfig_Handler,
		},
		{
			MethodName: "GetServicesStatus",
			Handler:    _DataLifecycle_GetServicesStatus_Handler,
		},
		{
			MethodName: "RunServices",
			Handler:    _DataLifecycle_RunServices_Handler,
		},
		{
			MethodName: "SetServicesConfig",
			Handler:    _DataLifecycle_SetServicesConfig_Handler,
		},
		{
			MethodName: "GetEventFeedStatus",
			Handler:    _DataLifecycle_GetEventFeedStatus_Handler,
		},
		{
			MethodName: "RunEventFeed",
			Handler:    _DataLifecycle_RunEventFeed_Handler,
		},
		{
			MethodName: "SetEventFeedConfig",
			Handler:    _DataLifecycle_SetEventFeedConfig_Handler,
		},
		{
			MethodName: "GetComplianceStatus",
			Handler:    _DataLifecycle_GetComplianceStatus_Handler,
		},
		{
			MethodName: "RunCompliance",
			Handler:    _DataLifecycle_RunCompliance_Handler,
		},
		{
			MethodName: "SetComplianceConfig",
			Handler:    _DataLifecycle_SetComplianceConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external/data_lifecycle/data_lifecycle.proto",
}
