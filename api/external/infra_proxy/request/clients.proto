syntax = "proto3";

package chef.automate.api.infra_proxy.request;
option go_package = "github.com/chef/automate/api/external/infra_proxy/request";

message SearchQuery {
    // The search query used to identify a list of items.
    string q = 1;
    // The number of result pages to return.
    int32 start = 2;
    // The number of results on each page.
    int32 rows = 3;
}

message Clients {
    // Chef organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
    // Clients search query.
    SearchQuery search_query = 3;
}

message Client {
    // Chef organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
    // Client name.
    string name = 3;
}

message CreateClient {
    // Chef organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
    // Client name.
    string name = 3;
    // Boolean indicates client type is validator or not.
    bool validator = 4;
    // Boolean indicates whether it's required to create a key or not.
    bool create_key = 5;
}

message ClientKey {
    // Chef organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
    // Client name.
    string name = 3;
    // Client key name.
    string key = 4;
}
