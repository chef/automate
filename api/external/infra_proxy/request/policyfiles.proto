syntax = "proto3";

package chef.automate.api.infra_proxy.request;
option go_package = "github.com/chef/automate/api/external/infra_proxy/request";

import "protoc-gen-swagger/options/annotations.proto";

message Policyfiles {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
          required: ["org_id,server_id"]
        }
    };
    // Chef Organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
}

message Policyfile {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
          required: ["org_id,server_id,name,revision_id"]
        }
    };
    // Chef Organization ID.
    string org_id = 1;
    // Chef Infra Server ID.
    string server_id = 2;
    // Policyfile name.
    string name = 3;
    // Policyfile revision ID.
    string revision_id = 4;
}
