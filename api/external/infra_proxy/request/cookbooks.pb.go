// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/infra_proxy/request/cookbooks.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cookbooks struct {
	OrgId                string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookbooks) Reset()         { *m = Cookbooks{} }
func (m *Cookbooks) String() string { return proto.CompactTextString(m) }
func (*Cookbooks) ProtoMessage()    {}
func (*Cookbooks) Descriptor() ([]byte, []int) {
	return fileDescriptor_334f5d297dde2e18, []int{0}
}

func (m *Cookbooks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbooks.Unmarshal(m, b)
}
func (m *Cookbooks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbooks.Marshal(b, m, deterministic)
}
func (m *Cookbooks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbooks.Merge(m, src)
}
func (m *Cookbooks) XXX_Size() int {
	return xxx_messageInfo_Cookbooks.Size(m)
}
func (m *Cookbooks) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbooks.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbooks proto.InternalMessageInfo

func (m *Cookbooks) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Cookbooks) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type CookbooksAvailableVersions struct {
	OrgId                string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	NumVersions          string   `protobuf:"bytes,3,opt,name=num_versions,json=numVersions,proto3" json:"num_versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CookbooksAvailableVersions) Reset()         { *m = CookbooksAvailableVersions{} }
func (m *CookbooksAvailableVersions) String() string { return proto.CompactTextString(m) }
func (*CookbooksAvailableVersions) ProtoMessage()    {}
func (*CookbooksAvailableVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_334f5d297dde2e18, []int{1}
}

func (m *CookbooksAvailableVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbooksAvailableVersions.Unmarshal(m, b)
}
func (m *CookbooksAvailableVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbooksAvailableVersions.Marshal(b, m, deterministic)
}
func (m *CookbooksAvailableVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbooksAvailableVersions.Merge(m, src)
}
func (m *CookbooksAvailableVersions) XXX_Size() int {
	return xxx_messageInfo_CookbooksAvailableVersions.Size(m)
}
func (m *CookbooksAvailableVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbooksAvailableVersions.DiscardUnknown(m)
}

var xxx_messageInfo_CookbooksAvailableVersions proto.InternalMessageInfo

func (m *CookbooksAvailableVersions) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CookbooksAvailableVersions) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CookbooksAvailableVersions) GetNumVersions() string {
	if m != nil {
		return m.NumVersions
	}
	return ""
}

type Cookbook struct {
	OrgId                string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookbook) Reset()         { *m = Cookbook{} }
func (m *Cookbook) String() string { return proto.CompactTextString(m) }
func (*Cookbook) ProtoMessage()    {}
func (*Cookbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_334f5d297dde2e18, []int{2}
}

func (m *Cookbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbook.Unmarshal(m, b)
}
func (m *Cookbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbook.Marshal(b, m, deterministic)
}
func (m *Cookbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbook.Merge(m, src)
}
func (m *Cookbook) XXX_Size() int {
	return xxx_messageInfo_Cookbook.Size(m)
}
func (m *Cookbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbook.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbook proto.InternalMessageInfo

func (m *Cookbook) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Cookbook) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *Cookbook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cookbook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CookbookFileContent struct {
	// ID of the org.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// ID of the server.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	// Name of the cookbook.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the cookbook.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Cookbook data file URL.
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CookbookFileContent) Reset()         { *m = CookbookFileContent{} }
func (m *CookbookFileContent) String() string { return proto.CompactTextString(m) }
func (*CookbookFileContent) ProtoMessage()    {}
func (*CookbookFileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_334f5d297dde2e18, []int{3}
}

func (m *CookbookFileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookFileContent.Unmarshal(m, b)
}
func (m *CookbookFileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookFileContent.Marshal(b, m, deterministic)
}
func (m *CookbookFileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookFileContent.Merge(m, src)
}
func (m *CookbookFileContent) XXX_Size() int {
	return xxx_messageInfo_CookbookFileContent.Size(m)
}
func (m *CookbookFileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookFileContent.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookFileContent proto.InternalMessageInfo

func (m *CookbookFileContent) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CookbookFileContent) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CookbookFileContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookFileContent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CookbookFileContent) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*Cookbooks)(nil), "chef.automate.api.infra_proxy.request.Cookbooks")
	proto.RegisterType((*CookbooksAvailableVersions)(nil), "chef.automate.api.infra_proxy.request.CookbooksAvailableVersions")
	proto.RegisterType((*Cookbook)(nil), "chef.automate.api.infra_proxy.request.Cookbook")
	proto.RegisterType((*CookbookFileContent)(nil), "chef.automate.api.infra_proxy.request.CookbookFileContent")
}

func init() {
	proto.RegisterFile("api/external/infra_proxy/request/cookbooks.proto", fileDescriptor_334f5d297dde2e18)
}

var fileDescriptor_334f5d297dde2e18 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xbf, 0x4b, 0xfc, 0x40,
	0x10, 0xc5, 0xb9, 0xef, 0xfd, 0xf8, 0xde, 0xad, 0x16, 0xb2, 0x22, 0x04, 0x6d, 0x34, 0x20, 0x58,
	0xed, 0x0a, 0x56, 0x62, 0x21, 0x7a, 0x20, 0x5c, 0x6b, 0x61, 0x61, 0x13, 0x36, 0xc9, 0x5c, 0x6e,
	0xb9, 0xcd, 0x4e, 0x9c, 0xec, 0x86, 0xf3, 0x4f, 0xf0, 0xbf, 0x96, 0xac, 0x59, 0xb1, 0x13, 0x0e,
	0xec, 0x66, 0xde, 0xe3, 0xbd, 0x4f, 0x31, 0xc3, 0xae, 0x55, 0xa3, 0x25, 0xec, 0x1c, 0x90, 0x55,
	0x46, 0x6a, 0xbb, 0x26, 0x95, 0x35, 0x84, 0xbb, 0x77, 0x49, 0xf0, 0xe6, 0xa1, 0x75, 0xb2, 0x40,
	0xdc, 0xe6, 0x88, 0xdb, 0x56, 0x34, 0x84, 0x0e, 0xf9, 0x65, 0xb1, 0x81, 0xb5, 0x50, 0xde, 0x61,
	0xad, 0x1c, 0x08, 0xd5, 0x68, 0xf1, 0x23, 0x26, 0x86, 0x58, 0x7a, 0xcf, 0x16, 0xcb, 0x98, 0xe4,
	0x27, 0x6c, 0x86, 0x54, 0x65, 0xba, 0x4c, 0x46, 0xe7, 0xa3, 0xab, 0xc5, 0xf3, 0x14, 0xa9, 0x5a,
	0x95, 0xfc, 0x8c, 0x2d, 0x5a, 0xa0, 0x0e, 0xa8, 0x77, 0xfe, 0x05, 0x67, 0xfe, 0x25, 0xac, 0xca,
	0xb4, 0x65, 0xa7, 0xdf, 0x05, 0x0f, 0x9d, 0xd2, 0x46, 0xe5, 0x06, 0x5e, 0x80, 0x5a, 0x8d, 0x76,
	0xaf, 0x46, 0x7e, 0xc1, 0x0e, 0xad, 0xaf, 0xb3, 0x6e, 0xe8, 0x48, 0xc6, 0xc1, 0x3f, 0xb0, 0xbe,
	0x8e, 0xb5, 0xa9, 0x61, 0xf3, 0x08, 0xdd, 0x0b, 0xc1, 0xd9, 0xc4, 0xaa, 0x1a, 0x86, 0xea, 0x30,
	0xf3, 0x84, 0xfd, 0x1f, 0x90, 0xc9, 0x24, 0xc8, 0x71, 0x4d, 0x3f, 0x46, 0xec, 0x38, 0xe2, 0x9e,
	0xb4, 0x81, 0x25, 0x5a, 0x07, 0xd6, 0xfd, 0x3d, 0x99, 0x1f, 0xb1, 0xb1, 0x27, 0x93, 0x4c, 0x83,
	0xda, 0x8f, 0x8f, 0x77, 0xaf, 0xb7, 0x95, 0x76, 0x1b, 0x9f, 0x8b, 0x02, 0x6b, 0xd9, 0xdf, 0x58,
	0xc6, 0x1b, 0xcb, 0xdf, 0x7e, 0x24, 0x9f, 0x85, 0xd7, 0xb8, 0xf9, 0x0c, 0x00, 0x00, 0xff, 0xff,
	0x3b, 0x7f, 0x42, 0x17, 0x4e, 0x02, 0x00, 0x00,
}
