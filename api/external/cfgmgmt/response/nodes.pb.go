// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: external/cfgmgmt/response/nodes.proto

package response

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The chef_guid associated with the node.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the node.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The FQDN of the node.
	Fqdn string `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// The time on the latest received infra node report.
	Checkin *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=checkin,proto3" json:"checkin,omitempty"`
	// Count in seconds that the node has been active.
	UptimeSeconds int32 `protobuf:"varint,5,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	// The organization the node is associated with.
	Organization string `protobuf:"bytes,6,opt,name=organization,proto3" json:"organization,omitempty"`
	// The environment the node is in.
	Environment string `protobuf:"bytes,7,opt,name=environment,proto3" json:"environment,omitempty"`
	// The full platform information for the node (platform + version).
	Platform string `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	// The platform family information for the node.
	PlatformFamily string `protobuf:"bytes,9,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	// The platform version information for the node.
	PlatformVersion string `protobuf:"bytes,10,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	// The status on the latest infra report for the node.
	Status string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// The chef server associated with the node.
	SourceFqdn string `protobuf:"bytes,12,opt,name=source_fqdn,json=sourceFqdn,proto3" json:"source_fqdn,omitempty"`
	// The latest infra run report id for the node.
	LatestRunId string `protobuf:"bytes,13,opt,name=latest_run_id,json=latestRunId,proto3" json:"latest_run_id,omitempty"`
	// Boolean used to denote whether or not the run data for the node is in Automate.
	HasRunsData bool `protobuf:"varint,14,opt,name=has_runs_data,json=hasRunsData,proto3" json:"has_runs_data,omitempty"`
	// Timestamp on most recently received infra run report for the node.
	LastCcrReceived *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_ccr_received,json=lastCcrReceived,proto3" json:"last_ccr_received,omitempty"`
	// The policy name associated with the node.
	PolicyName string `protobuf:"bytes,16,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The policy group associated with the node.
	PolicyGroup string `protobuf:"bytes,17,opt,name=policy_group,json=policyGroup,proto3" json:"policy_group,omitempty"`
	// The policy revision associated with the node.
	PolicyRevision string `protobuf:"bytes,18,opt,name=policy_revision,json=policyRevision,proto3" json:"policy_revision,omitempty"`
	// Boolean used to denote whether or not the node has been identified to be running cookbooks with deprecations.
	HasDeprecations bool `protobuf:"varint,19,opt,name=has_deprecations,json=hasDeprecations,proto3" json:"has_deprecations,omitempty"`
	// Chef Infra version on the node.
	ChefVersion string `protobuf:"bytes,20,opt,name=chef_version,json=chefVersion,proto3" json:"chef_version,omitempty"`
	// Chef tags associated with the node.
	ChefTags []string `protobuf:"bytes,21,rep,name=chef_tags,json=chefTags,proto3" json:"chef_tags,omitempty"`
	// Count of cookbook deprectations on the node.
	DeprecationsCount int32 `protobuf:"varint,22,opt,name=deprecations_count,json=deprecationsCount,proto3" json:"deprecations_count,omitempty"`
	// Timestamp when the node was created
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ipaddress  string                 `protobuf:"bytes,24,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Ip6Address string                 `protobuf:"bytes,25,opt,name=ip6address,proto3" json:"ip6address,omitempty"`
	// timezone of the node
	Timezone              string `protobuf:"bytes,26,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Domain                string `protobuf:"bytes,27,opt,name=domain,proto3" json:"domain,omitempty"`
	Hostname              string `protobuf:"bytes,28,opt,name=hostname,proto3" json:"hostname,omitempty"`
	MemoryTotal           string `protobuf:"bytes,29,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
	Macaddress            string `protobuf:"bytes,30,opt,name=macaddress,proto3" json:"macaddress,omitempty"`
	DmiSystemSerialNumber string `protobuf:"bytes,31,opt,name=dmi_system_serial_number,json=dmiSystemSerialNumber,proto3" json:"dmi_system_serial_number,omitempty"`
	DmiSystemManufacturer string `protobuf:"bytes,32,opt,name=dmi_system_manufacturer,json=dmiSystemManufacturer,proto3" json:"dmi_system_manufacturer,omitempty"`
	VirtualizationRole    string `protobuf:"bytes,33,opt,name=virtualization_role,json=virtualizationRole,proto3" json:"virtualization_role,omitempty"`
	VirtualizationSystem  string `protobuf:"bytes,34,opt,name=virtualization_system,json=virtualizationSystem,proto3" json:"virtualization_system,omitempty"`
	KernelVersion         string `protobuf:"bytes,35,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelRelease         string `protobuf:"bytes,36,opt,name=kernel_release,json=kernelRelease,proto3" json:"kernel_release,omitempty"`
	CloudProvider         string `protobuf:"bytes,37,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Node) GetCheckin() *timestamppb.Timestamp {
	if x != nil {
		return x.Checkin
	}
	return nil
}

func (x *Node) GetUptimeSeconds() int32 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *Node) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Node) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Node) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Node) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *Node) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *Node) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Node) GetSourceFqdn() string {
	if x != nil {
		return x.SourceFqdn
	}
	return ""
}

func (x *Node) GetLatestRunId() string {
	if x != nil {
		return x.LatestRunId
	}
	return ""
}

func (x *Node) GetHasRunsData() bool {
	if x != nil {
		return x.HasRunsData
	}
	return false
}

func (x *Node) GetLastCcrReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCcrReceived
	}
	return nil
}

func (x *Node) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Node) GetPolicyGroup() string {
	if x != nil {
		return x.PolicyGroup
	}
	return ""
}

func (x *Node) GetPolicyRevision() string {
	if x != nil {
		return x.PolicyRevision
	}
	return ""
}

func (x *Node) GetHasDeprecations() bool {
	if x != nil {
		return x.HasDeprecations
	}
	return false
}

func (x *Node) GetChefVersion() string {
	if x != nil {
		return x.ChefVersion
	}
	return ""
}

func (x *Node) GetChefTags() []string {
	if x != nil {
		return x.ChefTags
	}
	return nil
}

func (x *Node) GetDeprecationsCount() int32 {
	if x != nil {
		return x.DeprecationsCount
	}
	return 0
}

func (x *Node) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Node) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *Node) GetIp6Address() string {
	if x != nil {
		return x.Ip6Address
	}
	return ""
}

func (x *Node) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Node) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Node) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Node) GetMemoryTotal() string {
	if x != nil {
		return x.MemoryTotal
	}
	return ""
}

func (x *Node) GetMacaddress() string {
	if x != nil {
		return x.Macaddress
	}
	return ""
}

func (x *Node) GetDmiSystemSerialNumber() string {
	if x != nil {
		return x.DmiSystemSerialNumber
	}
	return ""
}

func (x *Node) GetDmiSystemManufacturer() string {
	if x != nil {
		return x.DmiSystemManufacturer
	}
	return ""
}

func (x *Node) GetVirtualizationRole() string {
	if x != nil {
		return x.VirtualizationRole
	}
	return ""
}

func (x *Node) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *Node) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Node) GetKernelRelease() string {
	if x != nil {
		return x.KernelRelease
	}
	return ""
}

func (x *Node) GetCloudProvider() string {
	if x != nil {
		return x.CloudProvider
	}
	return ""
}

type NodeAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The chef_guid associated with the node.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Name of the node.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Run list for the node.
	RunList []string `protobuf:"bytes,3,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty"`
	// The environment for the node.
	ChefEnvironment string `protobuf:"bytes,4,opt,name=chef_environment,json=chefEnvironment,proto3" json:"chef_environment,omitempty"`
	// Stringified json of the normal attributes for the node.
	Normal string `protobuf:"bytes,5,opt,name=normal,proto3" json:"normal,omitempty"`
	// Stringified json of the default attributes for the node.
	Default string `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`
	// Stringified json of the override attributes for the node.
	Override string `protobuf:"bytes,7,opt,name=override,proto3" json:"override,omitempty"`
	// Stringified json of the automatic attributes for the node.
	Automatic string `protobuf:"bytes,13,opt,name=automatic,proto3" json:"automatic,omitempty"`
	// Count of normal attributes on the node.
	NormalValueCount int32 `protobuf:"varint,8,opt,name=normal_value_count,json=normalValueCount,proto3" json:"normal_value_count,omitempty"`
	// Count of default attributes on the node.
	DefaultValueCount int32 `protobuf:"varint,9,opt,name=default_value_count,json=defaultValueCount,proto3" json:"default_value_count,omitempty"`
	// Count of override attributes on the node.
	OverrideValueCount int32 `protobuf:"varint,10,opt,name=override_value_count,json=overrideValueCount,proto3" json:"override_value_count,omitempty"`
	// Total count of attributes on the node.
	AllValueCount int32 `protobuf:"varint,11,opt,name=all_value_count,json=allValueCount,proto3" json:"all_value_count,omitempty"`
	// Count of automatic attributes on the node.
	AutomaticValueCount int32 `protobuf:"varint,12,opt,name=automatic_value_count,json=automaticValueCount,proto3" json:"automatic_value_count,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NodeAttribute) Reset() {
	*x = NodeAttribute{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAttribute) ProtoMessage() {}

func (x *NodeAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAttribute.ProtoReflect.Descriptor instead.
func (*NodeAttribute) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{1}
}

func (x *NodeAttribute) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeAttribute) GetRunList() []string {
	if x != nil {
		return x.RunList
	}
	return nil
}

func (x *NodeAttribute) GetChefEnvironment() string {
	if x != nil {
		return x.ChefEnvironment
	}
	return ""
}

func (x *NodeAttribute) GetNormal() string {
	if x != nil {
		return x.Normal
	}
	return ""
}

func (x *NodeAttribute) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *NodeAttribute) GetOverride() string {
	if x != nil {
		return x.Override
	}
	return ""
}

func (x *NodeAttribute) GetAutomatic() string {
	if x != nil {
		return x.Automatic
	}
	return ""
}

func (x *NodeAttribute) GetNormalValueCount() int32 {
	if x != nil {
		return x.NormalValueCount
	}
	return 0
}

func (x *NodeAttribute) GetDefaultValueCount() int32 {
	if x != nil {
		return x.DefaultValueCount
	}
	return 0
}

func (x *NodeAttribute) GetOverrideValueCount() int32 {
	if x != nil {
		return x.OverrideValueCount
	}
	return 0
}

func (x *NodeAttribute) GetAllValueCount() int32 {
	if x != nil {
		return x.AllValueCount
	}
	return 0
}

func (x *NodeAttribute) GetAutomaticValueCount() int32 {
	if x != nil {
		return x.AutomaticValueCount
	}
	return 0
}

type Run struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the infra node run.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The chef_guid associated with the node.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Name of the node.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// The organization the node is associated with.
	Organization string `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	// Start time of the infra run.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End time of the infra run.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Source of the node run (e.g. chef-solo).
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	// Status of the infra node run.
	Status string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	// Resource count reported on the infra node run.
	TotalResourceCount int32 `protobuf:"varint,9,opt,name=total_resource_count,json=totalResourceCount,proto3" json:"total_resource_count,omitempty"`
	// Count of resources updated in the infra node run.
	UpdatedResourceCount int32 `protobuf:"varint,10,opt,name=updated_resource_count,json=updatedResourceCount,proto3" json:"updated_resource_count,omitempty"`
	// Chef-client version on the node.
	ChefVersion string `protobuf:"bytes,11,opt,name=chef_version,json=chefVersion,proto3" json:"chef_version,omitempty"`
	// Count in seconds that the node has been active.
	UptimeSeconds int32 `protobuf:"varint,12,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	// The environment for the node.
	Environment string `protobuf:"bytes,13,opt,name=environment,proto3" json:"environment,omitempty"`
	// FQDN of the node.
	Fqdn string `protobuf:"bytes,14,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// Chef server associated with the node.
	SourceFqdn string `protobuf:"bytes,15,opt,name=source_fqdn,json=sourceFqdn,proto3" json:"source_fqdn,omitempty"`
	// IP Address for the node.
	Ipaddress string `protobuf:"bytes,16,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	// Intentionally blank.
	Resources []*Resource `protobuf:"bytes,17,rep,name=resources,proto3" json:"resources,omitempty"`
	// Run list for the node.
	RunList []string `protobuf:"bytes,18,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty"`
	// Intentionally blank.
	Deprecations []*Deprecation `protobuf:"bytes,19,rep,name=deprecations,proto3" json:"deprecations,omitempty"`
	// Chef Error information, available on failed runs.
	Error *ChefError `protobuf:"bytes,20,opt,name=error,proto3" json:"error,omitempty"`
	// Unused field.
	Tags []string `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty"`
	// List of resource names for the node.
	ResourceNames []string `protobuf:"bytes,22,rep,name=resource_names,json=resourceNames,proto3" json:"resource_names,omitempty"`
	// List of recipes the node calls.
	Recipes []string `protobuf:"bytes,23,rep,name=recipes,proto3" json:"recipes,omitempty"`
	// List of tags associated with the node.
	ChefTags []string `protobuf:"bytes,24,rep,name=chef_tags,json=chefTags,proto3" json:"chef_tags,omitempty"`
	// List of cookbooks associated with the node.
	Cookbooks []string `protobuf:"bytes,25,rep,name=cookbooks,proto3" json:"cookbooks,omitempty"`
	// Full platform string for the node (family + version).
	Platform string `protobuf:"bytes,26,opt,name=platform,proto3" json:"platform,omitempty"`
	// Platform family for the node.
	PlatformFamily string `protobuf:"bytes,27,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	// Platform version for the node.
	PlatformVersion string `protobuf:"bytes,28,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	// List of roles associated with the node.
	Roles []string `protobuf:"bytes,29,rep,name=roles,proto3" json:"roles,omitempty"`
	// Policy name associated with the node.
	PolicyName string `protobuf:"bytes,30,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// Policy group associated with the node.
	PolicyGroup string `protobuf:"bytes,31,opt,name=policy_group,json=policyGroup,proto3" json:"policy_group,omitempty"`
	// Policy revision associated with the node.
	PolicyRevision string `protobuf:"bytes,32,opt,name=policy_revision,json=policyRevision,proto3" json:"policy_revision,omitempty"`
	// Expanded run list for the node.
	ExpandedRunList *ExpandedRunList `protobuf:"bytes,33,opt,name=expanded_run_list,json=expandedRunList,proto3" json:"expanded_run_list,omitempty"`
	// List of projects the node belongs to.
	Projects []string `protobuf:"bytes,34,rep,name=projects,proto3" json:"projects,omitempty"`
	// List of versioned cookbooks associated with the node.
	VersionedCookbooks []*VersionedCookbook `protobuf:"bytes,35,rep,name=versioned_cookbooks,json=versionedCookbooks,proto3" json:"versioned_cookbooks,omitempty"`
	// IP 6 Address for the node.
	Ip6Address string `protobuf:"bytes,36,opt,name=ip6address,proto3" json:"ip6address,omitempty"`
	// timezone of the node
	Timezone              string `protobuf:"bytes,37,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Domain                string `protobuf:"bytes,38,opt,name=domain,proto3" json:"domain,omitempty"`
	Hostname              string `protobuf:"bytes,39,opt,name=hostname,proto3" json:"hostname,omitempty"`
	MemoryTotal           string `protobuf:"bytes,40,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
	Macaddress            string `protobuf:"bytes,41,opt,name=macaddress,proto3" json:"macaddress,omitempty"`
	DmiSystemSerialNumber string `protobuf:"bytes,42,opt,name=dmi_system_serial_number,json=dmiSystemSerialNumber,proto3" json:"dmi_system_serial_number,omitempty"`
	DmiSystemManufacturer string `protobuf:"bytes,43,opt,name=dmi_system_manufacturer,json=dmiSystemManufacturer,proto3" json:"dmi_system_manufacturer,omitempty"`
	VirtualizationRole    string `protobuf:"bytes,44,opt,name=virtualization_role,json=virtualizationRole,proto3" json:"virtualization_role,omitempty"`
	VirtualizationSystem  string `protobuf:"bytes,45,opt,name=virtualization_system,json=virtualizationSystem,proto3" json:"virtualization_system,omitempty"`
	KernelVersion         string `protobuf:"bytes,46,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelRelease         string `protobuf:"bytes,47,opt,name=kernel_release,json=kernelRelease,proto3" json:"kernel_release,omitempty"`
	CloudProvider         string `protobuf:"bytes,48,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Run) Reset() {
	*x = Run{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{2}
}

func (x *Run) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Run) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Run) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Run) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Run) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Run) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Run) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Run) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Run) GetTotalResourceCount() int32 {
	if x != nil {
		return x.TotalResourceCount
	}
	return 0
}

func (x *Run) GetUpdatedResourceCount() int32 {
	if x != nil {
		return x.UpdatedResourceCount
	}
	return 0
}

func (x *Run) GetChefVersion() string {
	if x != nil {
		return x.ChefVersion
	}
	return ""
}

func (x *Run) GetUptimeSeconds() int32 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *Run) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Run) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Run) GetSourceFqdn() string {
	if x != nil {
		return x.SourceFqdn
	}
	return ""
}

func (x *Run) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *Run) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Run) GetRunList() []string {
	if x != nil {
		return x.RunList
	}
	return nil
}

func (x *Run) GetDeprecations() []*Deprecation {
	if x != nil {
		return x.Deprecations
	}
	return nil
}

func (x *Run) GetError() *ChefError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Run) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Run) GetResourceNames() []string {
	if x != nil {
		return x.ResourceNames
	}
	return nil
}

func (x *Run) GetRecipes() []string {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *Run) GetChefTags() []string {
	if x != nil {
		return x.ChefTags
	}
	return nil
}

func (x *Run) GetCookbooks() []string {
	if x != nil {
		return x.Cookbooks
	}
	return nil
}

func (x *Run) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Run) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *Run) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *Run) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Run) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Run) GetPolicyGroup() string {
	if x != nil {
		return x.PolicyGroup
	}
	return ""
}

func (x *Run) GetPolicyRevision() string {
	if x != nil {
		return x.PolicyRevision
	}
	return ""
}

func (x *Run) GetExpandedRunList() *ExpandedRunList {
	if x != nil {
		return x.ExpandedRunList
	}
	return nil
}

func (x *Run) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *Run) GetVersionedCookbooks() []*VersionedCookbook {
	if x != nil {
		return x.VersionedCookbooks
	}
	return nil
}

func (x *Run) GetIp6Address() string {
	if x != nil {
		return x.Ip6Address
	}
	return ""
}

func (x *Run) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Run) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Run) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Run) GetMemoryTotal() string {
	if x != nil {
		return x.MemoryTotal
	}
	return ""
}

func (x *Run) GetMacaddress() string {
	if x != nil {
		return x.Macaddress
	}
	return ""
}

func (x *Run) GetDmiSystemSerialNumber() string {
	if x != nil {
		return x.DmiSystemSerialNumber
	}
	return ""
}

func (x *Run) GetDmiSystemManufacturer() string {
	if x != nil {
		return x.DmiSystemManufacturer
	}
	return ""
}

func (x *Run) GetVirtualizationRole() string {
	if x != nil {
		return x.VirtualizationRole
	}
	return ""
}

func (x *Run) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *Run) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Run) GetKernelRelease() string {
	if x != nil {
		return x.KernelRelease
	}
	return ""
}

func (x *Run) GetCloudProvider() string {
	if x != nil {
		return x.CloudProvider
	}
	return ""
}

type ExpandedRunList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the run list collection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Intentionally blank.
	RunList       []*RunList `protobuf:"bytes,2,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpandedRunList) Reset() {
	*x = ExpandedRunList{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpandedRunList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandedRunList) ProtoMessage() {}

func (x *ExpandedRunList) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandedRunList.ProtoReflect.Descriptor instead.
func (*ExpandedRunList) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{3}
}

func (x *ExpandedRunList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExpandedRunList) GetRunList() []*RunList {
	if x != nil {
		return x.RunList
	}
	return nil
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource type.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name for the resource.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Id of the resource.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Duration of the resource processing.
	Duration string `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	// Change diff for the resource (if it was changed during the run).
	Delta string `protobuf:"bytes,5,opt,name=delta,proto3" json:"delta,omitempty"`
	// Cookbook name associated with the resource.
	CookbookName string `protobuf:"bytes,6,opt,name=cookbook_name,json=cookbookName,proto3" json:"cookbook_name,omitempty"`
	// Version of the cookbook associated with the resource.
	CookbookVersion string `protobuf:"bytes,7,opt,name=cookbook_version,json=cookbookVersion,proto3" json:"cookbook_version,omitempty"`
	// Status of the resource (e.g. 'up-to-date').
	Status string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	// Name of the recipe associated with the resource.
	RecipeName string `protobuf:"bytes,10,opt,name=recipe_name,json=recipeName,proto3" json:"recipe_name,omitempty"`
	// String result of the resource.
	Result string `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty"`
	// Conditional rule associated with the resource.
	Conditional string `protobuf:"bytes,16,opt,name=conditional,proto3" json:"conditional,omitempty"`
	// Boolean that denotes whether or not the resource failure should be ignored.
	IgnoreFailure bool `protobuf:"varint,17,opt,name=ignore_failure,json=ignoreFailure,proto3" json:"ignore_failure,omitempty"`
	// Chef Error information, available on failed runs.
	Error         *ChefError `protobuf:"bytes,18,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{4}
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Resource) GetDelta() string {
	if x != nil {
		return x.Delta
	}
	return ""
}

func (x *Resource) GetCookbookName() string {
	if x != nil {
		return x.CookbookName
	}
	return ""
}

func (x *Resource) GetCookbookVersion() string {
	if x != nil {
		return x.CookbookVersion
	}
	return ""
}

func (x *Resource) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Resource) GetRecipeName() string {
	if x != nil {
		return x.RecipeName
	}
	return ""
}

func (x *Resource) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Resource) GetConditional() string {
	if x != nil {
		return x.Conditional
	}
	return ""
}

func (x *Resource) GetIgnoreFailure() bool {
	if x != nil {
		return x.IgnoreFailure
	}
	return false
}

func (x *Resource) GetError() *ChefError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ChefError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Class for the error.
	Class string `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
	// Error message for the failed run.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Stacktrace for the failure.
	Backtrace []string `protobuf:"bytes,16,rep,name=backtrace,proto3" json:"backtrace,omitempty"`
	// Description for the error.
	Description   *Description `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChefError) Reset() {
	*x = ChefError{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChefError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChefError) ProtoMessage() {}

func (x *ChefError) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChefError.ProtoReflect.Descriptor instead.
func (*ChefError) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{5}
}

func (x *ChefError) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *ChefError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChefError) GetBacktrace() []string {
	if x != nil {
		return x.Backtrace
	}
	return nil
}

func (x *ChefError) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

type RunList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of run list item (e.g. 'recipe').
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name of run list item.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Version of run list item.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Boolean denoting whether or not the run list item was skipped.
	Skipped bool `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// Intentionally blank.
	Children      []*RunList `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunList) Reset() {
	*x = RunList{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunList) ProtoMessage() {}

func (x *RunList) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunList.ProtoReflect.Descriptor instead.
func (*RunList) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{6}
}

func (x *RunList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RunList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunList) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RunList) GetSkipped() bool {
	if x != nil {
		return x.Skipped
	}
	return false
}

func (x *RunList) GetChildren() []*RunList {
	if x != nil {
		return x.Children
	}
	return nil
}

type Description struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title for the error description.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// More information about the error.
	Sections      []*structpb.Struct `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Description) Reset() {
	*x = Description{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{7}
}

func (x *Description) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Description) GetSections() []*structpb.Struct {
	if x != nil {
		return x.Sections
	}
	return nil
}

type Deprecation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message for the deprecation.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Url reference for the deprecation.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Location of the deprecated code.
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deprecation) Reset() {
	*x = Deprecation{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deprecation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deprecation) ProtoMessage() {}

func (x *Deprecation) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deprecation.ProtoReflect.Descriptor instead.
func (*Deprecation) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{8}
}

func (x *Deprecation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Deprecation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Deprecation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type VersionedCookbook struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the cookbook.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the cookbook.
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionedCookbook) Reset() {
	*x = VersionedCookbook{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionedCookbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedCookbook) ProtoMessage() {}

func (x *VersionedCookbook) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedCookbook.ProtoReflect.Descriptor instead.
func (*VersionedCookbook) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{9}
}

func (x *VersionedCookbook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionedCookbook) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MissingNodeDurationCounts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of counted durations
	CountedDurations []*CountedDuration `protobuf:"bytes,1,rep,name=counted_durations,json=countedDurations,proto3" json:"counted_durations,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MissingNodeDurationCounts) Reset() {
	*x = MissingNodeDurationCounts{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissingNodeDurationCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingNodeDurationCounts) ProtoMessage() {}

func (x *MissingNodeDurationCounts) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingNodeDurationCounts.ProtoReflect.Descriptor instead.
func (*MissingNodeDurationCounts) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{10}
}

func (x *MissingNodeDurationCounts) GetCountedDurations() []*CountedDuration {
	if x != nil {
		return x.CountedDurations
	}
	return nil
}

type CountedDuration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Duration of the count. Example '3d'
	Duration string `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	// The number of nodes for this duration
	Count         int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountedDuration) Reset() {
	*x = CountedDuration{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountedDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedDuration) ProtoMessage() {}

func (x *CountedDuration) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedDuration.ProtoReflect.Descriptor instead.
func (*CountedDuration) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{11}
}

func (x *CountedDuration) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *CountedDuration) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NodeMetadataCounts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field Types for a node with value counts
	Types         []*TypeCount `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMetadataCounts) Reset() {
	*x = NodeMetadataCounts{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMetadataCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetadataCounts) ProtoMessage() {}

func (x *NodeMetadataCounts) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetadataCounts.ProtoReflect.Descriptor instead.
func (*NodeMetadataCounts) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{12}
}

func (x *NodeMetadataCounts) GetTypes() []*TypeCount {
	if x != nil {
		return x.Types
	}
	return nil
}

type TypeCount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Values of the field type with a count for each
	Values []*ValueCount `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// The field type counted
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeCount) Reset() {
	*x = TypeCount{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeCount) ProtoMessage() {}

func (x *TypeCount) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeCount.ProtoReflect.Descriptor instead.
func (*TypeCount) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{13}
}

func (x *TypeCount) GetValues() []*ValueCount {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *TypeCount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ValueCount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value counted
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// The number of this distinct value
	Count         int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValueCount) Reset() {
	*x = ValueCount{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValueCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueCount) ProtoMessage() {}

func (x *ValueCount) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueCount.ProtoReflect.Descriptor instead.
func (*ValueCount) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{14}
}

func (x *ValueCount) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ValueCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NodeRunsDailyStatusTimeSeries struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// runs status of a 24-hour duration
	Durations     []*RunDurationStatus `protobuf:"bytes,1,rep,name=durations,proto3" json:"durations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeRunsDailyStatusTimeSeries) Reset() {
	*x = NodeRunsDailyStatusTimeSeries{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRunsDailyStatusTimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRunsDailyStatusTimeSeries) ProtoMessage() {}

func (x *NodeRunsDailyStatusTimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRunsDailyStatusTimeSeries.ProtoReflect.Descriptor instead.
func (*NodeRunsDailyStatusTimeSeries) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{15}
}

func (x *NodeRunsDailyStatusTimeSeries) GetDurations() []*RunDurationStatus {
	if x != nil {
		return x.Durations
	}
	return nil
}

type RunDurationStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start of the duration (RFC3339)
	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// End of the duration (RFC3339)
	End string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// Prominent Run's status
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Prominent Run's ID
	RunId         string `protobuf:"bytes,4,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunDurationStatus) Reset() {
	*x = RunDurationStatus{}
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunDurationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDurationStatus) ProtoMessage() {}

func (x *RunDurationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_external_cfgmgmt_response_nodes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDurationStatus.ProtoReflect.Descriptor instead.
func (*RunDurationStatus) Descriptor() ([]byte, []int) {
	return file_external_cfgmgmt_response_nodes_proto_rawDescGZIP(), []int{16}
}

func (x *RunDurationStatus) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *RunDurationStatus) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *RunDurationStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RunDurationStatus) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

var File_external_cfgmgmt_response_nodes_proto protoreflect.FileDescriptor

const file_external_cfgmgmt_response_nodes_proto_rawDesc = "" +
	"\n" +
	"%external/cfgmgmt/response/nodes.proto\x12\"chef.automate.api.cfgmgmt.response\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xf9\n" +
	"\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04fqdn\x18\x03 \x01(\tR\x04fqdn\x124\n" +
	"\acheckin\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\acheckin\x12%\n" +
	"\x0euptime_seconds\x18\x05 \x01(\x05R\ruptimeSeconds\x12\"\n" +
	"\forganization\x18\x06 \x01(\tR\forganization\x12 \n" +
	"\venvironment\x18\a \x01(\tR\venvironment\x12\x1a\n" +
	"\bplatform\x18\b \x01(\tR\bplatform\x12'\n" +
	"\x0fplatform_family\x18\t \x01(\tR\x0eplatformFamily\x12)\n" +
	"\x10platform_version\x18\n" +
	" \x01(\tR\x0fplatformVersion\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12\x1f\n" +
	"\vsource_fqdn\x18\f \x01(\tR\n" +
	"sourceFqdn\x12\"\n" +
	"\rlatest_run_id\x18\r \x01(\tR\vlatestRunId\x12\"\n" +
	"\rhas_runs_data\x18\x0e \x01(\bR\vhasRunsData\x12F\n" +
	"\x11last_ccr_received\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\x0flastCcrReceived\x12\x1f\n" +
	"\vpolicy_name\x18\x10 \x01(\tR\n" +
	"policyName\x12!\n" +
	"\fpolicy_group\x18\x11 \x01(\tR\vpolicyGroup\x12'\n" +
	"\x0fpolicy_revision\x18\x12 \x01(\tR\x0epolicyRevision\x12)\n" +
	"\x10has_deprecations\x18\x13 \x01(\bR\x0fhasDeprecations\x12!\n" +
	"\fchef_version\x18\x14 \x01(\tR\vchefVersion\x12\x1b\n" +
	"\tchef_tags\x18\x15 \x03(\tR\bchefTags\x12-\n" +
	"\x12deprecations_count\x18\x16 \x01(\x05R\x11deprecationsCount\x129\n" +
	"\n" +
	"created_at\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1c\n" +
	"\tipaddress\x18\x18 \x01(\tR\tipaddress\x12\x1e\n" +
	"\n" +
	"ip6address\x18\x19 \x01(\tR\n" +
	"ip6address\x12\x1a\n" +
	"\btimezone\x18\x1a \x01(\tR\btimezone\x12\x16\n" +
	"\x06domain\x18\x1b \x01(\tR\x06domain\x12\x1a\n" +
	"\bhostname\x18\x1c \x01(\tR\bhostname\x12!\n" +
	"\fmemory_total\x18\x1d \x01(\tR\vmemoryTotal\x12\x1e\n" +
	"\n" +
	"macaddress\x18\x1e \x01(\tR\n" +
	"macaddress\x127\n" +
	"\x18dmi_system_serial_number\x18\x1f \x01(\tR\x15dmiSystemSerialNumber\x126\n" +
	"\x17dmi_system_manufacturer\x18  \x01(\tR\x15dmiSystemManufacturer\x12/\n" +
	"\x13virtualization_role\x18! \x01(\tR\x12virtualizationRole\x123\n" +
	"\x15virtualization_system\x18\" \x01(\tR\x14virtualizationSystem\x12%\n" +
	"\x0ekernel_version\x18# \x01(\tR\rkernelVersion\x12%\n" +
	"\x0ekernel_release\x18$ \x01(\tR\rkernelRelease\x12%\n" +
	"\x0ecloud_provider\x18% \x01(\tR\rcloudProvider\"\xda\x03\n" +
	"\rNodeAttribute\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\brun_list\x18\x03 \x03(\tR\arunList\x12)\n" +
	"\x10chef_environment\x18\x04 \x01(\tR\x0fchefEnvironment\x12\x16\n" +
	"\x06normal\x18\x05 \x01(\tR\x06normal\x12\x18\n" +
	"\adefault\x18\x06 \x01(\tR\adefault\x12\x1a\n" +
	"\boverride\x18\a \x01(\tR\boverride\x12\x1c\n" +
	"\tautomatic\x18\r \x01(\tR\tautomatic\x12,\n" +
	"\x12normal_value_count\x18\b \x01(\x05R\x10normalValueCount\x12.\n" +
	"\x13default_value_count\x18\t \x01(\x05R\x11defaultValueCount\x120\n" +
	"\x14override_value_count\x18\n" +
	" \x01(\x05R\x12overrideValueCount\x12&\n" +
	"\x0fall_value_count\x18\v \x01(\x05R\rallValueCount\x122\n" +
	"\x15automatic_value_count\x18\f \x01(\x05R\x13automaticValueCount\"\xa0\x0f\n" +
	"\x03Run\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\"\n" +
	"\forganization\x18\x04 \x01(\tR\forganization\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x16\n" +
	"\x06source\x18\a \x01(\tR\x06source\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x120\n" +
	"\x14total_resource_count\x18\t \x01(\x05R\x12totalResourceCount\x124\n" +
	"\x16updated_resource_count\x18\n" +
	" \x01(\x05R\x14updatedResourceCount\x12!\n" +
	"\fchef_version\x18\v \x01(\tR\vchefVersion\x12%\n" +
	"\x0euptime_seconds\x18\f \x01(\x05R\ruptimeSeconds\x12 \n" +
	"\venvironment\x18\r \x01(\tR\venvironment\x12\x12\n" +
	"\x04fqdn\x18\x0e \x01(\tR\x04fqdn\x12\x1f\n" +
	"\vsource_fqdn\x18\x0f \x01(\tR\n" +
	"sourceFqdn\x12\x1c\n" +
	"\tipaddress\x18\x10 \x01(\tR\tipaddress\x12J\n" +
	"\tresources\x18\x11 \x03(\v2,.chef.automate.api.cfgmgmt.response.ResourceR\tresources\x12\x19\n" +
	"\brun_list\x18\x12 \x03(\tR\arunList\x12S\n" +
	"\fdeprecations\x18\x13 \x03(\v2/.chef.automate.api.cfgmgmt.response.DeprecationR\fdeprecations\x12C\n" +
	"\x05error\x18\x14 \x01(\v2-.chef.automate.api.cfgmgmt.response.ChefErrorR\x05error\x12\x12\n" +
	"\x04tags\x18\x15 \x03(\tR\x04tags\x12%\n" +
	"\x0eresource_names\x18\x16 \x03(\tR\rresourceNames\x12\x18\n" +
	"\arecipes\x18\x17 \x03(\tR\arecipes\x12\x1b\n" +
	"\tchef_tags\x18\x18 \x03(\tR\bchefTags\x12\x1c\n" +
	"\tcookbooks\x18\x19 \x03(\tR\tcookbooks\x12\x1a\n" +
	"\bplatform\x18\x1a \x01(\tR\bplatform\x12'\n" +
	"\x0fplatform_family\x18\x1b \x01(\tR\x0eplatformFamily\x12)\n" +
	"\x10platform_version\x18\x1c \x01(\tR\x0fplatformVersion\x12\x14\n" +
	"\x05roles\x18\x1d \x03(\tR\x05roles\x12\x1f\n" +
	"\vpolicy_name\x18\x1e \x01(\tR\n" +
	"policyName\x12!\n" +
	"\fpolicy_group\x18\x1f \x01(\tR\vpolicyGroup\x12'\n" +
	"\x0fpolicy_revision\x18  \x01(\tR\x0epolicyRevision\x12_\n" +
	"\x11expanded_run_list\x18! \x01(\v23.chef.automate.api.cfgmgmt.response.ExpandedRunListR\x0fexpandedRunList\x12\x1a\n" +
	"\bprojects\x18\" \x03(\tR\bprojects\x12f\n" +
	"\x13versioned_cookbooks\x18# \x03(\v25.chef.automate.api.cfgmgmt.response.VersionedCookbookR\x12versionedCookbooks\x12\x1e\n" +
	"\n" +
	"ip6address\x18$ \x01(\tR\n" +
	"ip6address\x12\x1a\n" +
	"\btimezone\x18% \x01(\tR\btimezone\x12\x16\n" +
	"\x06domain\x18& \x01(\tR\x06domain\x12\x1a\n" +
	"\bhostname\x18' \x01(\tR\bhostname\x12!\n" +
	"\fmemory_total\x18( \x01(\tR\vmemoryTotal\x12\x1e\n" +
	"\n" +
	"macaddress\x18) \x01(\tR\n" +
	"macaddress\x127\n" +
	"\x18dmi_system_serial_number\x18* \x01(\tR\x15dmiSystemSerialNumber\x126\n" +
	"\x17dmi_system_manufacturer\x18+ \x01(\tR\x15dmiSystemManufacturer\x12/\n" +
	"\x13virtualization_role\x18, \x01(\tR\x12virtualizationRole\x123\n" +
	"\x15virtualization_system\x18- \x01(\tR\x14virtualizationSystem\x12%\n" +
	"\x0ekernel_version\x18. \x01(\tR\rkernelVersion\x12%\n" +
	"\x0ekernel_release\x18/ \x01(\tR\rkernelRelease\x12%\n" +
	"\x0ecloud_provider\x180 \x01(\tR\rcloudProvider\"i\n" +
	"\x0fExpandedRunList\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12F\n" +
	"\brun_list\x18\x02 \x03(\v2+.chef.automate.api.cfgmgmt.response.RunListR\arunList\"\xa3\x03\n" +
	"\bResource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\tR\bduration\x12\x14\n" +
	"\x05delta\x18\x05 \x01(\tR\x05delta\x12#\n" +
	"\rcookbook_name\x18\x06 \x01(\tR\fcookbookName\x12)\n" +
	"\x10cookbook_version\x18\a \x01(\tR\x0fcookbookVersion\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12\x1f\n" +
	"\vrecipe_name\x18\n" +
	" \x01(\tR\n" +
	"recipeName\x12\x16\n" +
	"\x06result\x18\v \x01(\tR\x06result\x12 \n" +
	"\vconditional\x18\x10 \x01(\tR\vconditional\x12%\n" +
	"\x0eignore_failure\x18\x11 \x01(\bR\rignoreFailure\x12C\n" +
	"\x05error\x18\x12 \x01(\v2-.chef.automate.api.cfgmgmt.response.ChefErrorR\x05error\"\xac\x01\n" +
	"\tChefError\x12\x14\n" +
	"\x05class\x18\x01 \x01(\tR\x05class\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tbacktrace\x18\x10 \x03(\tR\tbacktrace\x12Q\n" +
	"\vdescription\x18\x11 \x01(\v2/.chef.automate.api.cfgmgmt.response.DescriptionR\vdescription\"\xae\x01\n" +
	"\aRunList\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x18\n" +
	"\askipped\x18\x04 \x01(\bR\askipped\x12G\n" +
	"\bchildren\x18\x05 \x03(\v2+.chef.automate.api.cfgmgmt.response.RunListR\bchildren\"X\n" +
	"\vDescription\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x123\n" +
	"\bsections\x18\x02 \x03(\v2\x17.google.protobuf.StructR\bsections\"U\n" +
	"\vDeprecation\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\"A\n" +
	"\x11VersionedCookbook\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"}\n" +
	"\x19MissingNodeDurationCounts\x12`\n" +
	"\x11counted_durations\x18\x01 \x03(\v23.chef.automate.api.cfgmgmt.response.CountedDurationR\x10countedDurations\"C\n" +
	"\x0fCountedDuration\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\tR\bduration\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"Y\n" +
	"\x12NodeMetadataCounts\x12C\n" +
	"\x05types\x18\x01 \x03(\v2-.chef.automate.api.cfgmgmt.response.TypeCountR\x05types\"g\n" +
	"\tTypeCount\x12F\n" +
	"\x06values\x18\x01 \x03(\v2..chef.automate.api.cfgmgmt.response.ValueCountR\x06values\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"8\n" +
	"\n" +
	"ValueCount\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"t\n" +
	"\x1dNodeRunsDailyStatusTimeSeries\x12S\n" +
	"\tdurations\x18\x01 \x03(\v25.chef.automate.api.cfgmgmt.response.RunDurationStatusR\tdurations\"j\n" +
	"\x11RunDurationStatus\x12\x14\n" +
	"\x05start\x18\x01 \x01(\tR\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\tR\x03end\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x15\n" +
	"\x06run_id\x18\x04 \x01(\tR\x05runIdB8Z6github.com/chef/automate/api/external/cfgmgmt/responseb\x06proto3"

var (
	file_external_cfgmgmt_response_nodes_proto_rawDescOnce sync.Once
	file_external_cfgmgmt_response_nodes_proto_rawDescData []byte
)

func file_external_cfgmgmt_response_nodes_proto_rawDescGZIP() []byte {
	file_external_cfgmgmt_response_nodes_proto_rawDescOnce.Do(func() {
		file_external_cfgmgmt_response_nodes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_external_cfgmgmt_response_nodes_proto_rawDesc), len(file_external_cfgmgmt_response_nodes_proto_rawDesc)))
	})
	return file_external_cfgmgmt_response_nodes_proto_rawDescData
}

var file_external_cfgmgmt_response_nodes_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_external_cfgmgmt_response_nodes_proto_goTypes = []any{
	(*Node)(nil),                          // 0: chef.automate.api.cfgmgmt.response.Node
	(*NodeAttribute)(nil),                 // 1: chef.automate.api.cfgmgmt.response.NodeAttribute
	(*Run)(nil),                           // 2: chef.automate.api.cfgmgmt.response.Run
	(*ExpandedRunList)(nil),               // 3: chef.automate.api.cfgmgmt.response.ExpandedRunList
	(*Resource)(nil),                      // 4: chef.automate.api.cfgmgmt.response.Resource
	(*ChefError)(nil),                     // 5: chef.automate.api.cfgmgmt.response.ChefError
	(*RunList)(nil),                       // 6: chef.automate.api.cfgmgmt.response.RunList
	(*Description)(nil),                   // 7: chef.automate.api.cfgmgmt.response.Description
	(*Deprecation)(nil),                   // 8: chef.automate.api.cfgmgmt.response.Deprecation
	(*VersionedCookbook)(nil),             // 9: chef.automate.api.cfgmgmt.response.VersionedCookbook
	(*MissingNodeDurationCounts)(nil),     // 10: chef.automate.api.cfgmgmt.response.MissingNodeDurationCounts
	(*CountedDuration)(nil),               // 11: chef.automate.api.cfgmgmt.response.CountedDuration
	(*NodeMetadataCounts)(nil),            // 12: chef.automate.api.cfgmgmt.response.NodeMetadataCounts
	(*TypeCount)(nil),                     // 13: chef.automate.api.cfgmgmt.response.TypeCount
	(*ValueCount)(nil),                    // 14: chef.automate.api.cfgmgmt.response.ValueCount
	(*NodeRunsDailyStatusTimeSeries)(nil), // 15: chef.automate.api.cfgmgmt.response.NodeRunsDailyStatusTimeSeries
	(*RunDurationStatus)(nil),             // 16: chef.automate.api.cfgmgmt.response.RunDurationStatus
	(*timestamppb.Timestamp)(nil),         // 17: google.protobuf.Timestamp
	(*structpb.Struct)(nil),               // 18: google.protobuf.Struct
}
var file_external_cfgmgmt_response_nodes_proto_depIdxs = []int32{
	17, // 0: chef.automate.api.cfgmgmt.response.Node.checkin:type_name -> google.protobuf.Timestamp
	17, // 1: chef.automate.api.cfgmgmt.response.Node.last_ccr_received:type_name -> google.protobuf.Timestamp
	17, // 2: chef.automate.api.cfgmgmt.response.Node.created_at:type_name -> google.protobuf.Timestamp
	17, // 3: chef.automate.api.cfgmgmt.response.Run.start_time:type_name -> google.protobuf.Timestamp
	17, // 4: chef.automate.api.cfgmgmt.response.Run.end_time:type_name -> google.protobuf.Timestamp
	4,  // 5: chef.automate.api.cfgmgmt.response.Run.resources:type_name -> chef.automate.api.cfgmgmt.response.Resource
	8,  // 6: chef.automate.api.cfgmgmt.response.Run.deprecations:type_name -> chef.automate.api.cfgmgmt.response.Deprecation
	5,  // 7: chef.automate.api.cfgmgmt.response.Run.error:type_name -> chef.automate.api.cfgmgmt.response.ChefError
	3,  // 8: chef.automate.api.cfgmgmt.response.Run.expanded_run_list:type_name -> chef.automate.api.cfgmgmt.response.ExpandedRunList
	9,  // 9: chef.automate.api.cfgmgmt.response.Run.versioned_cookbooks:type_name -> chef.automate.api.cfgmgmt.response.VersionedCookbook
	6,  // 10: chef.automate.api.cfgmgmt.response.ExpandedRunList.run_list:type_name -> chef.automate.api.cfgmgmt.response.RunList
	5,  // 11: chef.automate.api.cfgmgmt.response.Resource.error:type_name -> chef.automate.api.cfgmgmt.response.ChefError
	7,  // 12: chef.automate.api.cfgmgmt.response.ChefError.description:type_name -> chef.automate.api.cfgmgmt.response.Description
	6,  // 13: chef.automate.api.cfgmgmt.response.RunList.children:type_name -> chef.automate.api.cfgmgmt.response.RunList
	18, // 14: chef.automate.api.cfgmgmt.response.Description.sections:type_name -> google.protobuf.Struct
	11, // 15: chef.automate.api.cfgmgmt.response.MissingNodeDurationCounts.counted_durations:type_name -> chef.automate.api.cfgmgmt.response.CountedDuration
	13, // 16: chef.automate.api.cfgmgmt.response.NodeMetadataCounts.types:type_name -> chef.automate.api.cfgmgmt.response.TypeCount
	14, // 17: chef.automate.api.cfgmgmt.response.TypeCount.values:type_name -> chef.automate.api.cfgmgmt.response.ValueCount
	16, // 18: chef.automate.api.cfgmgmt.response.NodeRunsDailyStatusTimeSeries.durations:type_name -> chef.automate.api.cfgmgmt.response.RunDurationStatus
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_external_cfgmgmt_response_nodes_proto_init() }
func file_external_cfgmgmt_response_nodes_proto_init() {
	if File_external_cfgmgmt_response_nodes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_external_cfgmgmt_response_nodes_proto_rawDesc), len(file_external_cfgmgmt_response_nodes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_external_cfgmgmt_response_nodes_proto_goTypes,
		DependencyIndexes: file_external_cfgmgmt_response_nodes_proto_depIdxs,
		MessageInfos:      file_external_cfgmgmt_response_nodes_proto_msgTypes,
	}.Build()
	File_external_cfgmgmt_response_nodes_proto = out.File
	file_external_cfgmgmt_response_nodes_proto_goTypes = nil
	file_external_cfgmgmt_response_nodes_proto_depIdxs = nil
}
