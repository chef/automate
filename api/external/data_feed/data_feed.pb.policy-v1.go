// Code generated by protoc-gen-policy. DO NOT EDIT.
// source: api/external/data_feed/data_feed.proto

package data_feed

import policy "github.com/chef/automate/components/automate-gateway/api/authz/policy"

func init() {
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/AddDestination", "datafeed:destination", "add", "POST", "/datafeed/destination", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*AddDestinationRequest); ok {
			return policy.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "name":
					return m.Name
				case "url":
					return m.Url
				case "secret":
					return m.Secret
				default:
					return ""
				}
			})
		}
		return ""
	})
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/GetDestination", "datafeed:destination:{id}", "read", "GET", "/datafeed/destination/{id}", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/DeleteDestination", "destination:destination:{id}", "delete", "DELETE", "/datafeed/destination/{id}", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/UpdateDestination", "datafeed:destination/{id}", "update", "PATCH", "/datafeed/destination/{id}", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*UpdateDestinationRequest); ok {
			return policy.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "name":
					return m.Name
				case "url":
					return m.Url
				case "secret":
					return m.Secret
				default:
					return ""
				}
			})
		}
		return ""
	})
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/ListDestinations", "datafeed:destinations", "list", "POST", "/datafeed/destinations", func(unexpandedResource string, input interface{}) string {
		return unexpandedResource
	})
	policy.MapMethodTo("/chef.automate.api.datafeed.DatafeedService/TestDestination", "datafeed:destinations:test", "test", "POST", "/datafeed/destinations/test", func(unexpandedResource string, input interface{}) string {
		if m, ok := input.(*URLValidationRequest); ok {
			return policy.ExpandParameterizedResource(unexpandedResource, func(want string) string {
				switch want {
				case "url":
					return m.Url
				default:
					return ""
				}
			})
		}
		return ""
	})
}
