// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/data_feed/data_feed.proto

package data_feed

import (
	context "context"
	fmt "fmt"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/api"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-policy/iam"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Destination struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Secret               string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{1}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Destination) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Destination) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Destination) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type DestinationResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestinationResponse) Reset()         { *m = DestinationResponse{} }
func (m *DestinationResponse) String() string { return proto.CompactTextString(m) }
func (*DestinationResponse) ProtoMessage()    {}
func (*DestinationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{2}
}

func (m *DestinationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestinationResponse.Unmarshal(m, b)
}
func (m *DestinationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestinationResponse.Marshal(b, m, deterministic)
}
func (m *DestinationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestinationResponse.Merge(m, src)
}
func (m *DestinationResponse) XXX_Size() int {
	return xxx_messageInfo_DestinationResponse.Size(m)
}
func (m *DestinationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DestinationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DestinationResponse proto.InternalMessageInfo

func (m *DestinationResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type DestinationId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestinationId) Reset()         { *m = DestinationId{} }
func (m *DestinationId) String() string { return proto.CompactTextString(m) }
func (*DestinationId) ProtoMessage()    {}
func (*DestinationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{3}
}

func (m *DestinationId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestinationId.Unmarshal(m, b)
}
func (m *DestinationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestinationId.Marshal(b, m, deterministic)
}
func (m *DestinationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestinationId.Merge(m, src)
}
func (m *DestinationId) XXX_Size() int {
	return xxx_messageInfo_DestinationId.Size(m)
}
func (m *DestinationId) XXX_DiscardUnknown() {
	xxx_messageInfo_DestinationId.DiscardUnknown(m)
}

var xxx_messageInfo_DestinationId proto.InternalMessageInfo

func (m *DestinationId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListDestinationResponse struct {
	Destinations         []*Destination `protobuf:"bytes,1,rep,name=destinations,proto3" json:"destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDestinationResponse) Reset()         { *m = ListDestinationResponse{} }
func (m *ListDestinationResponse) String() string { return proto.CompactTextString(m) }
func (*ListDestinationResponse) ProtoMessage()    {}
func (*ListDestinationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{4}
}

func (m *ListDestinationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDestinationResponse.Unmarshal(m, b)
}
func (m *ListDestinationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDestinationResponse.Marshal(b, m, deterministic)
}
func (m *ListDestinationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDestinationResponse.Merge(m, src)
}
func (m *ListDestinationResponse) XXX_Size() int {
	return xxx_messageInfo_ListDestinationResponse.Size(m)
}
func (m *ListDestinationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDestinationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDestinationResponse proto.InternalMessageInfo

func (m *ListDestinationResponse) GetDestinations() []*Destination {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type UsernamePassword struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsernamePassword) Reset()         { *m = UsernamePassword{} }
func (m *UsernamePassword) String() string { return proto.CompactTextString(m) }
func (*UsernamePassword) ProtoMessage()    {}
func (*UsernamePassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{5}
}

func (m *UsernamePassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsernamePassword.Unmarshal(m, b)
}
func (m *UsernamePassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsernamePassword.Marshal(b, m, deterministic)
}
func (m *UsernamePassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsernamePassword.Merge(m, src)
}
func (m *UsernamePassword) XXX_Size() int {
	return xxx_messageInfo_UsernamePassword.Size(m)
}
func (m *UsernamePassword) XXX_DiscardUnknown() {
	xxx_messageInfo_UsernamePassword.DiscardUnknown(m)
}

var xxx_messageInfo_UsernamePassword proto.InternalMessageInfo

func (m *UsernamePassword) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UsernamePassword) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SecretId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretId) Reset()         { *m = SecretId{} }
func (m *SecretId) String() string { return proto.CompactTextString(m) }
func (*SecretId) ProtoMessage()    {}
func (*SecretId) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{6}
}

func (m *SecretId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretId.Unmarshal(m, b)
}
func (m *SecretId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretId.Marshal(b, m, deterministic)
}
func (m *SecretId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretId.Merge(m, src)
}
func (m *SecretId) XXX_Size() int {
	return xxx_messageInfo_SecretId.Size(m)
}
func (m *SecretId) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretId.DiscardUnknown(m)
}

var xxx_messageInfo_SecretId proto.InternalMessageInfo

func (m *SecretId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type URLValidationRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Types that are valid to be assigned to Credentials:
	//	*URLValidationRequest_UsernamePassword
	//	*URLValidationRequest_SecretId
	//	*URLValidationRequest_None
	Credentials          isURLValidationRequest_Credentials `protobuf_oneof:"credentials"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *URLValidationRequest) Reset()         { *m = URLValidationRequest{} }
func (m *URLValidationRequest) String() string { return proto.CompactTextString(m) }
func (*URLValidationRequest) ProtoMessage()    {}
func (*URLValidationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfa5074251be5580, []int{7}
}

func (m *URLValidationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLValidationRequest.Unmarshal(m, b)
}
func (m *URLValidationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLValidationRequest.Marshal(b, m, deterministic)
}
func (m *URLValidationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLValidationRequest.Merge(m, src)
}
func (m *URLValidationRequest) XXX_Size() int {
	return xxx_messageInfo_URLValidationRequest.Size(m)
}
func (m *URLValidationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLValidationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLValidationRequest proto.InternalMessageInfo

func (m *URLValidationRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type isURLValidationRequest_Credentials interface {
	isURLValidationRequest_Credentials()
}

type URLValidationRequest_UsernamePassword struct {
	UsernamePassword *UsernamePassword `protobuf:"bytes,2,opt,name=username_password,json=usernamePassword,proto3,oneof"`
}

type URLValidationRequest_SecretId struct {
	SecretId *SecretId `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3,oneof"`
}

type URLValidationRequest_None struct {
	None *Empty `protobuf:"bytes,4,opt,name=none,proto3,oneof"`
}

func (*URLValidationRequest_UsernamePassword) isURLValidationRequest_Credentials() {}

func (*URLValidationRequest_SecretId) isURLValidationRequest_Credentials() {}

func (*URLValidationRequest_None) isURLValidationRequest_Credentials() {}

func (m *URLValidationRequest) GetCredentials() isURLValidationRequest_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *URLValidationRequest) GetUsernamePassword() *UsernamePassword {
	if x, ok := m.GetCredentials().(*URLValidationRequest_UsernamePassword); ok {
		return x.UsernamePassword
	}
	return nil
}

func (m *URLValidationRequest) GetSecretId() *SecretId {
	if x, ok := m.GetCredentials().(*URLValidationRequest_SecretId); ok {
		return x.SecretId
	}
	return nil
}

func (m *URLValidationRequest) GetNone() *Empty {
	if x, ok := m.GetCredentials().(*URLValidationRequest_None); ok {
		return x.None
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*URLValidationRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*URLValidationRequest_UsernamePassword)(nil),
		(*URLValidationRequest_SecretId)(nil),
		(*URLValidationRequest_None)(nil),
	}
}

func init() {
	proto.RegisterType((*Empty)(nil), "chef.automate.api.datafeed.Empty")
	proto.RegisterType((*Destination)(nil), "chef.automate.api.datafeed.Destination")
	proto.RegisterType((*DestinationResponse)(nil), "chef.automate.api.datafeed.DestinationResponse")
	proto.RegisterType((*DestinationId)(nil), "chef.automate.api.datafeed.DestinationId")
	proto.RegisterType((*ListDestinationResponse)(nil), "chef.automate.api.datafeed.ListDestinationResponse")
	proto.RegisterType((*UsernamePassword)(nil), "chef.automate.api.datafeed.UsernamePassword")
	proto.RegisterType((*SecretId)(nil), "chef.automate.api.datafeed.SecretId")
	proto.RegisterType((*URLValidationRequest)(nil), "chef.automate.api.datafeed.URLValidationRequest")
}

func init() {
	proto.RegisterFile("api/external/data_feed/data_feed.proto", fileDescriptor_dfa5074251be5580)
}

var fileDescriptor_dfa5074251be5580 = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0x41, 0x4f, 0xe3, 0x46,
	0x14, 0xc7, 0x71, 0x92, 0x86, 0xe4, 0xa5, 0x40, 0x98, 0x02, 0x75, 0x1d, 0x5a, 0xc0, 0xad, 0x28,
	0x45, 0x25, 0xa6, 0x41, 0x55, 0xab, 0x1c, 0xaa, 0x96, 0x52, 0x15, 0x5a, 0x0e, 0x95, 0x29, 0x3d,
	0x94, 0x03, 0x1a, 0x3c, 0x43, 0x18, 0xc9, 0xb1, 0x5d, 0xcf, 0xb8, 0x2d, 0xaa, 0x2a, 0xa1, 0x9c,
	0xaa, 0x1c, 0x7a, 0xd8, 0xfd, 0x2c, 0xf9, 0x08, 0xfb, 0x09, 0xf6, 0x03, 0xec, 0x65, 0x57, 0xfb,
	0x15, 0xf6, 0xb6, 0xab, 0x99, 0xc4, 0xe0, 0x04, 0xc7, 0x64, 0xd1, 0xee, 0xc5, 0xf2, 0xbc, 0xf7,
	0x7f, 0xcf, 0xef, 0xf7, 0xde, 0x93, 0x6d, 0x58, 0xc7, 0x01, 0xb3, 0xe8, 0xdf, 0x82, 0x86, 0x1e,
	0x76, 0x2d, 0x82, 0x05, 0x3e, 0x3d, 0xa7, 0x94, 0xdc, 0xdc, 0xd5, 0x83, 0xd0, 0x17, 0x3e, 0x32,
	0x9c, 0x0b, 0x7a, 0x5e, 0xc7, 0x91, 0xf0, 0xdb, 0x58, 0xd0, 0x3a, 0x0e, 0x58, 0x5d, 0x4a, 0xa4,
	0xc2, 0x58, 0x6e, 0xf9, 0x7e, 0xcb, 0xa5, 0x96, 0x4c, 0x85, 0x3d, 0xcf, 0x17, 0x58, 0x30, 0xdf,
	0xe3, 0xfd, 0x48, 0xe3, 0x5b, 0xc7, 0x6f, 0x07, 0xbe, 0x47, 0x3d, 0xc1, 0xad, 0x38, 0x7e, 0xab,
	0x15, 0x06, 0x8e, 0xa5, 0xfc, 0xce, 0x56, 0x8b, 0x7a, 0x5b, 0x81, 0xef, 0x32, 0xe7, 0xf2, 0x0d,
	0x64, 0x60, 0xb8, 0x7d, 0x3b, 0x83, 0x39, 0x0d, 0xef, 0xfc, 0xd0, 0x0e, 0xc4, 0xa5, 0x79, 0x02,
	0x95, 0x3d, 0xca, 0x05, 0xf3, 0x94, 0x1b, 0xcd, 0x42, 0x8e, 0x11, 0x5d, 0x5b, 0xd5, 0x36, 0xf2,
	0x76, 0x8e, 0x11, 0x84, 0xa0, 0xe0, 0xe1, 0x36, 0xd5, 0x73, 0xab, 0xda, 0x46, 0xd9, 0x56, 0xf7,
	0xa8, 0x0a, 0xf9, 0x28, 0x74, 0xf5, 0xbc, 0x32, 0xc9, 0x5b, 0xb4, 0x04, 0x45, 0x4e, 0x9d, 0x90,
	0x0a, 0xbd, 0xa0, 0x8c, 0x83, 0x93, 0x69, 0xc1, 0x7b, 0x89, 0xe4, 0x36, 0xe5, 0x81, 0xef, 0x71,
	0x8a, 0x74, 0x98, 0xe6, 0x91, 0xe3, 0x50, 0xce, 0xd5, 0x93, 0x4a, 0x76, 0x7c, 0x34, 0x57, 0x60,
	0x26, 0x11, 0x70, 0x40, 0x46, 0xeb, 0x31, 0xcf, 0xe1, 0xfd, 0x43, 0xc6, 0x45, 0x5a, 0xd6, 0x9f,
	0xe1, 0x5d, 0x72, 0x63, 0x96, 0xa9, 0xf3, 0x1b, 0x95, 0xc6, 0xa7, 0xf5, 0xf1, 0x73, 0xaa, 0x27,
	0xd3, 0x0c, 0x05, 0x9b, 0x3f, 0x41, 0xf5, 0x98, 0xcb, 0x15, 0x68, 0xd3, 0x5f, 0x30, 0xe7, 0x7f,
	0xf9, 0x21, 0x41, 0x06, 0x94, 0xa2, 0x81, 0x4d, 0x55, 0x54, 0xb6, 0xaf, 0xcf, 0xd2, 0x17, 0x0c,
	0x74, 0x83, 0x5e, 0x5d, 0x9f, 0x4d, 0x03, 0x4a, 0x47, 0xaa, 0x1f, 0x43, 0x3c, 0x65, 0xc5, 0xf3,
	0x20, 0x07, 0x0b, 0xc7, 0xf6, 0xe1, 0x6f, 0xd8, 0x65, 0x64, 0x80, 0xf3, 0x47, 0x44, 0xb9, 0x88,
	0x9b, 0xac, 0xdd, 0x34, 0xf9, 0x04, 0xe6, 0xe3, 0xc7, 0x9d, 0x0e, 0x3d, 0xab, 0xd2, 0xf8, 0x3c,
	0x0b, 0x72, 0x94, 0x63, 0x7f, 0xca, 0xae, 0x46, 0xa3, 0x6c, 0xdf, 0x43, 0xb9, 0x3f, 0xb3, 0x53,
	0x46, 0xd4, 0x64, 0x2b, 0x8d, 0x4f, 0xb2, 0x92, 0xc6, 0x40, 0xfb, 0x53, 0x76, 0x89, 0xc7, 0x70,
	0x5f, 0x41, 0xc1, 0xf3, 0x3d, 0xaa, 0x96, 0xa0, 0xd2, 0x58, 0xcb, 0x8a, 0x57, 0xcb, 0xb7, 0x3f,
	0x65, 0xab, 0x80, 0xdd, 0x19, 0xa8, 0x38, 0x21, 0x25, 0xd4, 0x13, 0x0c, 0xbb, 0xbc, 0xf1, 0xa8,
	0x02, 0x73, 0x7b, 0x03, 0xe5, 0x11, 0x0d, 0xff, 0x64, 0x0e, 0x45, 0x4f, 0x34, 0x98, 0xfd, 0x8e,
	0x90, 0xe4, 0xae, 0x4e, 0x3a, 0x5a, 0xc3, 0x9a, 0x74, 0x07, 0x06, 0xab, 0x64, 0xf2, 0x4e, 0x4f,
	0xaf, 0xc1, 0x42, 0xac, 0x69, 0x26, 0x56, 0x03, 0xe5, 0x31, 0x21, 0xdd, 0x9e, 0xbe, 0x3d, 0xc6,
	0xad, 0xa7, 0x59, 0x9b, 0x98, 0x90, 0xce, 0xe3, 0xa7, 0x0f, 0x73, 0x86, 0xb9, 0x68, 0xc5, 0x02,
	0x2b, 0x29, 0xd0, 0x36, 0xd1, 0x73, 0x0d, 0x66, 0x7f, 0xa4, 0xc9, 0xd5, 0x46, 0x9f, 0x4d, 0x58,
	0xf8, 0x01, 0x31, 0x26, 0x6d, 0x86, 0x79, 0xa5, 0x75, 0x7a, 0xfa, 0x1a, 0x7c, 0x90, 0x5a, 0xe7,
	0x3f, 0x8c, 0xfc, 0x8b, 0x0a, 0x21, 0xc5, 0x12, 0xf1, 0xcb, 0x2c, 0x51, 0x3a, 0x67, 0x8b, 0x0a,
	0xc5, 0xb9, 0x8c, 0x8c, 0x54, 0x4e, 0x4b, 0xc5, 0x5e, 0xe5, 0x60, 0x7e, 0x8f, 0xba, 0x54, 0xd0,
	0x7b, 0xc2, 0xbe, 0xf6, 0x40, 0xff, 0x97, 0xd0, 0xeb, 0xb0, 0x9c, 0xac, 0xf5, 0x16, 0x52, 0x91,
	0xa8, 0x9a, 0xba, 0x3d, 0xfd, 0x9b, 0x3b, 0x94, 0x1f, 0x8d, 0xf3, 0xf6, 0x33, 0xf4, 0x5b, 0xb0,
	0x99, 0xd5, 0x82, 0x17, 0x1a, 0xcc, 0x1f, 0x07, 0x04, 0x0f, 0xb7, 0xe0, 0xed, 0x6d, 0xf4, 0x7f,
	0xb2, 0x01, 0x1f, 0xa7, 0x0f, 0xb4, 0x5f, 0x51, 0x31, 0x52, 0xe5, 0x74, 0x7b, 0xfa, 0xd7, 0x59,
	0x73, 0xaf, 0xa5, 0xba, 0xfa, 0xb1, 0x8a, 0x7b, 0xa5, 0x91, 0xc1, 0x2d, 0xf7, 0xfc, 0x99, 0x06,
	0xd5, 0x91, 0x77, 0x38, 0x47, 0x77, 0xbf, 0x2c, 0x8c, 0x9d, 0x2c, 0xc9, 0x98, 0x8f, 0x82, 0x79,
	0xd9, 0xe9, 0xe9, 0x1f, 0xc2, 0x62, 0x5a, 0xd1, 0x1c, 0x15, 0x5c, 0xc6, 0x45, 0xb7, 0xa7, 0xef,
	0x8c, 0x13, 0x18, 0xa9, 0xe6, 0xa6, 0x0c, 0x53, 0xac, 0x35, 0x73, 0x29, 0x95, 0x95, 0x4b, 0xce,
	0x97, 0x1a, 0xcc, 0xfd, 0x4a, 0x87, 0xca, 0x42, 0xdb, 0x99, 0x2f, 0xea, 0x94, 0xef, 0xc0, 0x3d,
	0x27, 0x6d, 0xc2, 0x98, 0xd2, 0x85, 0xfc, 0xb6, 0x14, 0xe4, 0x55, 0x0d, 0x3a, 0x4b, 0x95, 0xe1,
	0x53, 0xf0, 0xab, 0x66, 0x2d, 0x1d, 0xde, 0x92, 0x92, 0xa6, 0xb6, 0xb9, 0xfb, 0xc5, 0xef, 0x56,
	0x8b, 0x89, 0x8b, 0xe8, 0xac, 0xee, 0xf8, 0x6d, 0x4b, 0x72, 0x5c, 0xff, 0xad, 0x58, 0xe9, 0x7f,
	0x59, 0x67, 0x45, 0xf5, 0x7b, 0xb2, 0xf3, 0x2a, 0x00, 0x00, 0xff, 0xff, 0x03, 0x0a, 0xed, 0xb9,
	0x86, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DatafeedServiceClient is the client API for DatafeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatafeedServiceClient interface {
	AddDestination(ctx context.Context, in *Destination, opts ...grpc.CallOption) (*DestinationResponse, error)
	GetDestination(ctx context.Context, in *DestinationId, opts ...grpc.CallOption) (*Destination, error)
	DeleteDestination(ctx context.Context, in *DestinationId, opts ...grpc.CallOption) (*DestinationResponse, error)
	UpdateDestination(ctx context.Context, in *Destination, opts ...grpc.CallOption) (*DestinationResponse, error)
	ListDestinations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListDestinationResponse, error)
	TestDestination(ctx context.Context, in *URLValidationRequest, opts ...grpc.CallOption) (*DestinationResponse, error)
}

type datafeedServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatafeedServiceClient(cc *grpc.ClientConn) DatafeedServiceClient {
	return &datafeedServiceClient{cc}
}

func (c *datafeedServiceClient) AddDestination(ctx context.Context, in *Destination, opts ...grpc.CallOption) (*DestinationResponse, error) {
	out := new(DestinationResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/AddDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datafeedServiceClient) GetDestination(ctx context.Context, in *DestinationId, opts ...grpc.CallOption) (*Destination, error) {
	out := new(Destination)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/GetDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datafeedServiceClient) DeleteDestination(ctx context.Context, in *DestinationId, opts ...grpc.CallOption) (*DestinationResponse, error) {
	out := new(DestinationResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/DeleteDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datafeedServiceClient) UpdateDestination(ctx context.Context, in *Destination, opts ...grpc.CallOption) (*DestinationResponse, error) {
	out := new(DestinationResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/UpdateDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datafeedServiceClient) ListDestinations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListDestinationResponse, error) {
	out := new(ListDestinationResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/ListDestinations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datafeedServiceClient) TestDestination(ctx context.Context, in *URLValidationRequest, opts ...grpc.CallOption) (*DestinationResponse, error) {
	out := new(DestinationResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.api.datafeed.DatafeedService/TestDestination", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatafeedServiceServer is the server API for DatafeedService service.
type DatafeedServiceServer interface {
	AddDestination(context.Context, *Destination) (*DestinationResponse, error)
	GetDestination(context.Context, *DestinationId) (*Destination, error)
	DeleteDestination(context.Context, *DestinationId) (*DestinationResponse, error)
	UpdateDestination(context.Context, *Destination) (*DestinationResponse, error)
	ListDestinations(context.Context, *Empty) (*ListDestinationResponse, error)
	TestDestination(context.Context, *URLValidationRequest) (*DestinationResponse, error)
}

// UnimplementedDatafeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDatafeedServiceServer struct {
}

func (*UnimplementedDatafeedServiceServer) AddDestination(ctx context.Context, req *Destination) (*DestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDestination not implemented")
}
func (*UnimplementedDatafeedServiceServer) GetDestination(ctx context.Context, req *DestinationId) (*Destination, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDestination not implemented")
}
func (*UnimplementedDatafeedServiceServer) DeleteDestination(ctx context.Context, req *DestinationId) (*DestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDestination not implemented")
}
func (*UnimplementedDatafeedServiceServer) UpdateDestination(ctx context.Context, req *Destination) (*DestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDestination not implemented")
}
func (*UnimplementedDatafeedServiceServer) ListDestinations(ctx context.Context, req *Empty) (*ListDestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDestinations not implemented")
}
func (*UnimplementedDatafeedServiceServer) TestDestination(ctx context.Context, req *URLValidationRequest) (*DestinationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestDestination not implemented")
}

func RegisterDatafeedServiceServer(s *grpc.Server, srv DatafeedServiceServer) {
	s.RegisterService(&_DatafeedService_serviceDesc, srv)
}

func _DatafeedService_AddDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Destination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).AddDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/AddDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).AddDestination(ctx, req.(*Destination))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatafeedService_GetDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).GetDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/GetDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).GetDestination(ctx, req.(*DestinationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatafeedService_DeleteDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestinationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).DeleteDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/DeleteDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).DeleteDestination(ctx, req.(*DestinationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatafeedService_UpdateDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Destination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).UpdateDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/UpdateDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).UpdateDestination(ctx, req.(*Destination))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatafeedService_ListDestinations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).ListDestinations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/ListDestinations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).ListDestinations(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatafeedService_TestDestination_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLValidationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatafeedServiceServer).TestDestination(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.api.datafeed.DatafeedService/TestDestination",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatafeedServiceServer).TestDestination(ctx, req.(*URLValidationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatafeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.api.datafeed.DatafeedService",
	HandlerType: (*DatafeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDestination",
			Handler:    _DatafeedService_AddDestination_Handler,
		},
		{
			MethodName: "GetDestination",
			Handler:    _DatafeedService_GetDestination_Handler,
		},
		{
			MethodName: "DeleteDestination",
			Handler:    _DatafeedService_DeleteDestination_Handler,
		},
		{
			MethodName: "UpdateDestination",
			Handler:    _DatafeedService_UpdateDestination_Handler,
		},
		{
			MethodName: "ListDestinations",
			Handler:    _DatafeedService_ListDestinations_Handler,
		},
		{
			MethodName: "TestDestination",
			Handler:    _DatafeedService_TestDestination_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/external/data_feed/data_feed.proto",
}
