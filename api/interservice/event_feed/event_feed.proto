syntax="proto3";

package chef.automate.domain.event_feed.api;
option go_package = "github.com/chef/automate/api/interservice/event_feed";

import "interservice/event/event.proto";
import "google/protobuf/timestamp.proto";

service EventFeedService {
  rpc GetFeed(FeedRequest) returns (FeedResponse);
  rpc GetFeedSummary(FeedSummaryRequest) returns (FeedSummaryResponse);
  rpc GetFeedTimeline(FeedTimelineRequest) returns (FeedTimelineResponse);
  rpc HandleEvent(chef.automate.domain.event.api.EventMsg) returns (chef.automate.domain.event.api.EventResponse);
}

message FeedRequest {
  string UserID           = 1;
  int32 Size              = 2;
  int64 Start             = 4;
  int64 End               = 5;
  int64 Before            = 6;
  int64 After             = 7;
  repeated string Sort    = 8;
  repeated string Filters = 9;
  string Cursor           = 10;
}

message FeedResponse {
  repeated FeedEntry FeedEntries = 1;
  int64 TotalEntries             = 2;
}

message FeedEntry {
  string ID                                       = 1;
  string EventType                                = 2;
  string FeedType                                 = 3;
  repeated string Tags                            = 4;
  google.protobuf.Timestamp SourceEventPublished  = 5;
  google.protobuf.Timestamp Created               = 6;
  Producer Producer                               = 7;
  Actor Actor                                     = 8;
  string Verb                                     = 9;
  Object Object                                   = 10;
  Target Target                                   = 11;
}

message Producer {
  string ID                   = 1;
  string Name                 = 2;
  string ObjectType           = 3;
  repeated string PTags       = 4;
}

message Actor {
  string ID                   = 1;
  string Name                 = 2;
  string ObjectType           = 3;
}

message Object {
  string ID                   = 1;
  string Name                 = 2;
  string ObjectType           = 3;
}

message Target {
  string ID                   = 1;
  string Name                 = 2;
  string ObjectType           = 3;
}

message FeedSummaryRequest {
  int64 Start             = 1;
  int64 End               = 2;
  int32 Size              = 4;
  int32 From              = 5;
  string StartAfter       = 6;
  repeated string Filters = 7;
  string CountCategory    = 9;
}

message FeedSummaryResponse {
  int64 TotalEntries              = 1;
  repeated EntryCount EntryCounts = 2;
}

message EntryCount {
  string Category = 1;
  int64 Count     = 2;
}

message FeedTimelineRequest {
  string Start            = 1;
  string End              = 2;
  string Timezone         = 3;
  int32 Interval          = 4;
  repeated string Filters = 5;
}

message FeedTimelineResponse {
  string Start                    = 1;
  string End                      = 2;
  int32 Interval                  = 3;
  repeated ActionLine ActionLines = 4;
}

message ActionLine {
  string Action           = 1;
  repeated Timeslot Slots = 2;
}

message Timeslot {
  repeated EntryCount Counts = 1;
}
