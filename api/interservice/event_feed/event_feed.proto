syntax="proto3";

package chef.automate.domain.event_feed.api;
option go_package = "github.com/chef/automate/api/interservice/event_feed";

import "interservice/event/event.proto";
import "external/event_feed/request/event.proto";
import "external/event_feed/response/event.proto";
import "external/common/response.proto";
import "google/protobuf/timestamp.proto";
import "external/common/query/parameters.proto";

service EventFeedService {
  rpc GetFeed(FeedRequest) returns (FeedResponse);
  rpc GetFeedSummary(FeedSummaryRequest) returns (FeedSummaryResponse);
  rpc GetFeedTimeline(FeedTimelineRequest) returns (FeedTimelineResponse);
  rpc HandleEvent(chef.automate.domain.event.api.EventMsg) returns (chef.automate.domain.event.api.EventResponse);
  rpc EventExport(EventExportRequest) returns (stream EventExportResponse);
}

message FeedRequest {
  string user_id           = 1;
  int32 size              = 2;
  int64 start             = 4;
  int64 end               = 5;
  int64 before            = 6;
  int64 after             = 7;
  repeated string sort    = 8;
  repeated string filters = 9;
  string cursor           = 10;
}

message FeedResponse {
  repeated FeedEntry feed_entries = 1;
  int64 total_entries             = 2;
}

message FeedEntry {
  string id                                         = 1;
  string event_type                                 = 2;
  string feed_type                                  = 3;
  repeated string tags                              = 4;
  google.protobuf.Timestamp source_event_published  = 5;
  google.protobuf.Timestamp created                 = 6;
  Producer producer                                 = 7;
  Actor actor                                       = 8;
  string verb                                       = 9;
  Object object                                     = 10;
  Target target                                     = 11;
  Parent parent                                     = 12;
  // Event's Chef Organization
  string chef_organization                          = 13;
  // Event's Chef Infra Server
  string chef_infra_server                          = 14;
}

message Parent {
  string id = 1;
  string name = 2;
}

message Producer {
  string id                   = 1;
  string name                 = 2;
  string object_type          = 3;
  repeated string p_tags      = 4;
}

message Actor {
  string id                   = 1;
  string name                 = 2;
  string object_type           = 3;
}

message Object {
  string id                   = 1;
  string name                 = 2;
  string object_type           = 3;
}

message Target {
  string id                   = 1;
  string name                 = 2;
  string object_type           = 3;
}

message FeedSummaryRequest {
  int64 start             = 1;
  int64 end               = 2;
  int32 size              = 4;
  int32 from              = 5;
  string start_after       = 6;
  repeated string filters = 7;
  string count_category    = 9;
}

message FeedSummaryResponse {
  int64 total_entries              = 1;
  repeated EntryCount entry_counts = 2;
}

message EntryCount {
  string category = 1;
  int64 count     = 2;
}

message FeedTimelineRequest {
  string start            = 1;
  string end              = 2;
  string timezone         = 3;
  int32 interval          = 4;
  repeated string filters = 5;
}

message FeedTimelineResponse {
  string start                    = 1;
  string end                      = 2;
  int32 interval                  = 3;
  repeated ActionLine action_lines = 4;
}

message ActionLine {
  string action           = 1;
  repeated Timeslot slots = 2;
}

message Timeslot {
  repeated EntryCount counts = 1;
}

message EventExportResponse {
	// Exported reports in JSON or CSV.
	bytes content = 1;
}

message EventExportRequest {
  // JSON or CSV
  string output_type      = 1;
  // Filters to be applied to the request.
  repeated string filter = 2;
  // Earliest events to return.
  int64 start = 3;
  // Latest events to return.
  int64 end = 4;
  // Order the results should be returned in.
  chef.automate.api.common.query.SortOrder order = 5;
}
