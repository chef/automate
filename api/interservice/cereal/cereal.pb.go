// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/cereal/cereal.proto

package cereal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Parameters           []byte               `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	StartAfter           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty" toml:"start_after,omitempty" mapstructure:"start_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Task) GetStartAfter() *timestamp.Timestamp {
	if m != nil {
		return m.StartAfter
	}
	return nil
}

type WorkflowInstance struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string   `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string   `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	Parameters           []byte   `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	Payload              []byte   `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty" toml:"payload,omitempty" mapstructure:"payload,omitempty"`
	Result               []byte   `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty" toml:"result,omitempty" mapstructure:"result,omitempty"`
	Err                  string   `protobuf:"bytes,8,opt,name=err,proto3" json:"err,omitempty" toml:"err,omitempty" mapstructure:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *WorkflowInstance) Reset()         { *m = WorkflowInstance{} }
func (m *WorkflowInstance) String() string { return proto.CompactTextString(m) }
func (*WorkflowInstance) ProtoMessage()    {}
func (*WorkflowInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{1}
}

func (m *WorkflowInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowInstance.Unmarshal(m, b)
}
func (m *WorkflowInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowInstance.Marshal(b, m, deterministic)
}
func (m *WorkflowInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowInstance.Merge(m, src)
}
func (m *WorkflowInstance) XXX_Size() int {
	return xxx_messageInfo_WorkflowInstance.Size(m)
}
func (m *WorkflowInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowInstance.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowInstance proto.InternalMessageInfo

func (m *WorkflowInstance) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *WorkflowInstance) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *WorkflowInstance) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

func (m *WorkflowInstance) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *WorkflowInstance) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *WorkflowInstance) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *WorkflowInstance) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *WorkflowInstance) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type TaskResult struct {
	TaskName             string   `protobuf:"bytes,1,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty" toml:"task_name,omitempty" mapstructure:"task_name,omitempty"`
	Parameters           []byte   `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	ErrorText            string   `protobuf:"bytes,4,opt,name=error_text,json=errorText,proto3" json:"error_text,omitempty" toml:"error_text,omitempty" mapstructure:"error_text,omitempty"`
	Result               []byte   `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty" toml:"result,omitempty" mapstructure:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *TaskResult) Reset()         { *m = TaskResult{} }
func (m *TaskResult) String() string { return proto.CompactTextString(m) }
func (*TaskResult) ProtoMessage()    {}
func (*TaskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{2}
}

func (m *TaskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResult.Unmarshal(m, b)
}
func (m *TaskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResult.Marshal(b, m, deterministic)
}
func (m *TaskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResult.Merge(m, src)
}
func (m *TaskResult) XXX_Size() int {
	return xxx_messageInfo_TaskResult.Size(m)
}
func (m *TaskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResult.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResult proto.InternalMessageInfo

func (m *TaskResult) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *TaskResult) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *TaskResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskResult) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func (m *TaskResult) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type WorkflowEvent struct {
	Type                 string      `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	EnqueuedTaskCount    int64       `protobuf:"varint,2,opt,name=enqueued_task_count,json=enqueuedTaskCount,proto3" json:"enqueued_task_count,omitempty" toml:"enqueued_task_count,omitempty" mapstructure:"enqueued_task_count,omitempty"`
	CompletedTaskCount   int64       `protobuf:"varint,3,opt,name=completed_task_count,json=completedTaskCount,proto3" json:"completed_task_count,omitempty" toml:"completed_task_count,omitempty" mapstructure:"completed_task_count,omitempty"`
	TaskResult           *TaskResult `protobuf:"bytes,4,opt,name=task_result,json=taskResult,proto3" json:"task_result,omitempty" toml:"task_result,omitempty" mapstructure:"task_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32       `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *WorkflowEvent) Reset()         { *m = WorkflowEvent{} }
func (m *WorkflowEvent) String() string { return proto.CompactTextString(m) }
func (*WorkflowEvent) ProtoMessage()    {}
func (*WorkflowEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{3}
}

func (m *WorkflowEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowEvent.Unmarshal(m, b)
}
func (m *WorkflowEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowEvent.Marshal(b, m, deterministic)
}
func (m *WorkflowEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowEvent.Merge(m, src)
}
func (m *WorkflowEvent) XXX_Size() int {
	return xxx_messageInfo_WorkflowEvent.Size(m)
}
func (m *WorkflowEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowEvent proto.InternalMessageInfo

func (m *WorkflowEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WorkflowEvent) GetEnqueuedTaskCount() int64 {
	if m != nil {
		return m.EnqueuedTaskCount
	}
	return 0
}

func (m *WorkflowEvent) GetCompletedTaskCount() int64 {
	if m != nil {
		return m.CompletedTaskCount
	}
	return 0
}

func (m *WorkflowEvent) GetTaskResult() *TaskResult {
	if m != nil {
		return m.TaskResult
	}
	return nil
}

type DequeueWorkflowRequest struct {
	// Types that are valid to be assigned to Cmd:
	//	*DequeueWorkflowRequest_Dequeue_
	//	*DequeueWorkflowRequest_Continue_
	//	*DequeueWorkflowRequest_Done_
	//	*DequeueWorkflowRequest_Fail_
	Cmd                  isDequeueWorkflowRequest_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowRequest) Reset()         { *m = DequeueWorkflowRequest{} }
func (m *DequeueWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowRequest) ProtoMessage()    {}
func (*DequeueWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{4}
}

func (m *DequeueWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowRequest.Unmarshal(m, b)
}
func (m *DequeueWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowRequest.Merge(m, src)
}
func (m *DequeueWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowRequest.Size(m)
}
func (m *DequeueWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowRequest proto.InternalMessageInfo

type isDequeueWorkflowRequest_Cmd interface {
	isDequeueWorkflowRequest_Cmd()
}

type DequeueWorkflowRequest_Dequeue_ struct {
	Dequeue *DequeueWorkflowRequest_Dequeue `protobuf:"bytes,1,opt,name=dequeue,proto3,oneof"`
}

type DequeueWorkflowRequest_Continue_ struct {
	Continue *DequeueWorkflowRequest_Continue `protobuf:"bytes,2,opt,name=continue,proto3,oneof"`
}

type DequeueWorkflowRequest_Done_ struct {
	Done *DequeueWorkflowRequest_Done `protobuf:"bytes,3,opt,name=done,proto3,oneof"`
}

type DequeueWorkflowRequest_Fail_ struct {
	Fail *DequeueWorkflowRequest_Fail `protobuf:"bytes,4,opt,name=fail,proto3,oneof"`
}

func (*DequeueWorkflowRequest_Dequeue_) isDequeueWorkflowRequest_Cmd() {}

func (*DequeueWorkflowRequest_Continue_) isDequeueWorkflowRequest_Cmd() {}

func (*DequeueWorkflowRequest_Done_) isDequeueWorkflowRequest_Cmd() {}

func (*DequeueWorkflowRequest_Fail_) isDequeueWorkflowRequest_Cmd() {}

func (m *DequeueWorkflowRequest) GetCmd() isDequeueWorkflowRequest_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *DequeueWorkflowRequest) GetDequeue() *DequeueWorkflowRequest_Dequeue {
	if x, ok := m.GetCmd().(*DequeueWorkflowRequest_Dequeue_); ok {
		return x.Dequeue
	}
	return nil
}

func (m *DequeueWorkflowRequest) GetContinue() *DequeueWorkflowRequest_Continue {
	if x, ok := m.GetCmd().(*DequeueWorkflowRequest_Continue_); ok {
		return x.Continue
	}
	return nil
}

func (m *DequeueWorkflowRequest) GetDone() *DequeueWorkflowRequest_Done {
	if x, ok := m.GetCmd().(*DequeueWorkflowRequest_Done_); ok {
		return x.Done
	}
	return nil
}

func (m *DequeueWorkflowRequest) GetFail() *DequeueWorkflowRequest_Fail {
	if x, ok := m.GetCmd().(*DequeueWorkflowRequest_Fail_); ok {
		return x.Fail
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DequeueWorkflowRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DequeueWorkflowRequest_Dequeue_)(nil),
		(*DequeueWorkflowRequest_Continue_)(nil),
		(*DequeueWorkflowRequest_Done_)(nil),
		(*DequeueWorkflowRequest_Fail_)(nil),
	}
}

type DequeueWorkflowRequest_Dequeue struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	WorkflowNames        []string `protobuf:"bytes,2,rep,name=workflow_names,json=workflowNames,proto3" json:"workflow_names,omitempty" toml:"workflow_names,omitempty" mapstructure:"workflow_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowRequest_Dequeue) Reset()         { *m = DequeueWorkflowRequest_Dequeue{} }
func (m *DequeueWorkflowRequest_Dequeue) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowRequest_Dequeue) ProtoMessage()    {}
func (*DequeueWorkflowRequest_Dequeue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{4, 0}
}

func (m *DequeueWorkflowRequest_Dequeue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowRequest_Dequeue.Unmarshal(m, b)
}
func (m *DequeueWorkflowRequest_Dequeue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowRequest_Dequeue.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowRequest_Dequeue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowRequest_Dequeue.Merge(m, src)
}
func (m *DequeueWorkflowRequest_Dequeue) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowRequest_Dequeue.Size(m)
}
func (m *DequeueWorkflowRequest_Dequeue) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowRequest_Dequeue.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowRequest_Dequeue proto.InternalMessageInfo

func (m *DequeueWorkflowRequest_Dequeue) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DequeueWorkflowRequest_Dequeue) GetWorkflowNames() []string {
	if m != nil {
		return m.WorkflowNames
	}
	return nil
}

type DequeueWorkflowRequest_Continue struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty" toml:"payload,omitempty" mapstructure:"payload,omitempty"`
	Tasks                []*Task  `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty" toml:"tasks,omitempty" mapstructure:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowRequest_Continue) Reset()         { *m = DequeueWorkflowRequest_Continue{} }
func (m *DequeueWorkflowRequest_Continue) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowRequest_Continue) ProtoMessage()    {}
func (*DequeueWorkflowRequest_Continue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{4, 1}
}

func (m *DequeueWorkflowRequest_Continue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowRequest_Continue.Unmarshal(m, b)
}
func (m *DequeueWorkflowRequest_Continue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowRequest_Continue.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowRequest_Continue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowRequest_Continue.Merge(m, src)
}
func (m *DequeueWorkflowRequest_Continue) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowRequest_Continue.Size(m)
}
func (m *DequeueWorkflowRequest_Continue) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowRequest_Continue.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowRequest_Continue proto.InternalMessageInfo

func (m *DequeueWorkflowRequest_Continue) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *DequeueWorkflowRequest_Continue) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type DequeueWorkflowRequest_Fail struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty" toml:"err,omitempty" mapstructure:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowRequest_Fail) Reset()         { *m = DequeueWorkflowRequest_Fail{} }
func (m *DequeueWorkflowRequest_Fail) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowRequest_Fail) ProtoMessage()    {}
func (*DequeueWorkflowRequest_Fail) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{4, 2}
}

func (m *DequeueWorkflowRequest_Fail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowRequest_Fail.Unmarshal(m, b)
}
func (m *DequeueWorkflowRequest_Fail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowRequest_Fail.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowRequest_Fail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowRequest_Fail.Merge(m, src)
}
func (m *DequeueWorkflowRequest_Fail) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowRequest_Fail.Size(m)
}
func (m *DequeueWorkflowRequest_Fail) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowRequest_Fail.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowRequest_Fail proto.InternalMessageInfo

func (m *DequeueWorkflowRequest_Fail) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type DequeueWorkflowRequest_Done struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty" toml:"result,omitempty" mapstructure:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowRequest_Done) Reset()         { *m = DequeueWorkflowRequest_Done{} }
func (m *DequeueWorkflowRequest_Done) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowRequest_Done) ProtoMessage()    {}
func (*DequeueWorkflowRequest_Done) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{4, 3}
}

func (m *DequeueWorkflowRequest_Done) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowRequest_Done.Unmarshal(m, b)
}
func (m *DequeueWorkflowRequest_Done) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowRequest_Done.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowRequest_Done) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowRequest_Done.Merge(m, src)
}
func (m *DequeueWorkflowRequest_Done) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowRequest_Done.Size(m)
}
func (m *DequeueWorkflowRequest_Done) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowRequest_Done.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowRequest_Done proto.InternalMessageInfo

func (m *DequeueWorkflowRequest_Done) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type DequeueWorkflowResponse struct {
	// Types that are valid to be assigned to Cmd:
	//	*DequeueWorkflowResponse_Dequeue_
	//	*DequeueWorkflowResponse_Status_
	Cmd                  isDequeueWorkflowResponse_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowResponse) Reset()         { *m = DequeueWorkflowResponse{} }
func (m *DequeueWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowResponse) ProtoMessage()    {}
func (*DequeueWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{5}
}

func (m *DequeueWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowResponse.Unmarshal(m, b)
}
func (m *DequeueWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowResponse.Merge(m, src)
}
func (m *DequeueWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowResponse.Size(m)
}
func (m *DequeueWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowResponse proto.InternalMessageInfo

type isDequeueWorkflowResponse_Cmd interface {
	isDequeueWorkflowResponse_Cmd()
}

type DequeueWorkflowResponse_Dequeue_ struct {
	Dequeue *DequeueWorkflowResponse_Dequeue `protobuf:"bytes,1,opt,name=dequeue,proto3,oneof"`
}

type DequeueWorkflowResponse_Status_ struct {
	Status *DequeueWorkflowResponse_Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

func (*DequeueWorkflowResponse_Dequeue_) isDequeueWorkflowResponse_Cmd() {}

func (*DequeueWorkflowResponse_Status_) isDequeueWorkflowResponse_Cmd() {}

func (m *DequeueWorkflowResponse) GetCmd() isDequeueWorkflowResponse_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *DequeueWorkflowResponse) GetDequeue() *DequeueWorkflowResponse_Dequeue {
	if x, ok := m.GetCmd().(*DequeueWorkflowResponse_Dequeue_); ok {
		return x.Dequeue
	}
	return nil
}

func (m *DequeueWorkflowResponse) GetStatus() *DequeueWorkflowResponse_Status {
	if x, ok := m.GetCmd().(*DequeueWorkflowResponse_Status_); ok {
		return x.Status
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DequeueWorkflowResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DequeueWorkflowResponse_Dequeue_)(nil),
		(*DequeueWorkflowResponse_Status_)(nil),
	}
}

type DequeueWorkflowResponse_Dequeue struct {
	Instance             *WorkflowInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty" toml:"instance,omitempty" mapstructure:"instance,omitempty"`
	Event                *WorkflowEvent    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty" toml:"event,omitempty" mapstructure:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte            `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32             `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowResponse_Dequeue) Reset()         { *m = DequeueWorkflowResponse_Dequeue{} }
func (m *DequeueWorkflowResponse_Dequeue) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowResponse_Dequeue) ProtoMessage()    {}
func (*DequeueWorkflowResponse_Dequeue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{5, 0}
}

func (m *DequeueWorkflowResponse_Dequeue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowResponse_Dequeue.Unmarshal(m, b)
}
func (m *DequeueWorkflowResponse_Dequeue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowResponse_Dequeue.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowResponse_Dequeue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowResponse_Dequeue.Merge(m, src)
}
func (m *DequeueWorkflowResponse_Dequeue) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowResponse_Dequeue.Size(m)
}
func (m *DequeueWorkflowResponse_Dequeue) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowResponse_Dequeue.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowResponse_Dequeue proto.InternalMessageInfo

func (m *DequeueWorkflowResponse_Dequeue) GetInstance() *WorkflowInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *DequeueWorkflowResponse_Dequeue) GetEvent() *WorkflowEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type DequeueWorkflowResponse_Status struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty" toml:"err,omitempty" mapstructure:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueWorkflowResponse_Status) Reset()         { *m = DequeueWorkflowResponse_Status{} }
func (m *DequeueWorkflowResponse_Status) String() string { return proto.CompactTextString(m) }
func (*DequeueWorkflowResponse_Status) ProtoMessage()    {}
func (*DequeueWorkflowResponse_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{5, 1}
}

func (m *DequeueWorkflowResponse_Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueWorkflowResponse_Status.Unmarshal(m, b)
}
func (m *DequeueWorkflowResponse_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueWorkflowResponse_Status.Marshal(b, m, deterministic)
}
func (m *DequeueWorkflowResponse_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueWorkflowResponse_Status.Merge(m, src)
}
func (m *DequeueWorkflowResponse_Status) XXX_Size() int {
	return xxx_messageInfo_DequeueWorkflowResponse_Status.Size(m)
}
func (m *DequeueWorkflowResponse_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueWorkflowResponse_Status.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueWorkflowResponse_Status proto.InternalMessageInfo

func (m *DequeueWorkflowResponse_Status) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type EnqueueWorkflowRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string   `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string   `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	Parameters           []byte   `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *EnqueueWorkflowRequest) Reset()         { *m = EnqueueWorkflowRequest{} }
func (m *EnqueueWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*EnqueueWorkflowRequest) ProtoMessage()    {}
func (*EnqueueWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{6}
}

func (m *EnqueueWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueWorkflowRequest.Unmarshal(m, b)
}
func (m *EnqueueWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *EnqueueWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueWorkflowRequest.Merge(m, src)
}
func (m *EnqueueWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_EnqueueWorkflowRequest.Size(m)
}
func (m *EnqueueWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueWorkflowRequest proto.InternalMessageInfo

func (m *EnqueueWorkflowRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *EnqueueWorkflowRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *EnqueueWorkflowRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

func (m *EnqueueWorkflowRequest) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type EnqueueWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *EnqueueWorkflowResponse) Reset()         { *m = EnqueueWorkflowResponse{} }
func (m *EnqueueWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueWorkflowResponse) ProtoMessage()    {}
func (*EnqueueWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{7}
}

func (m *EnqueueWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueWorkflowResponse.Unmarshal(m, b)
}
func (m *EnqueueWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *EnqueueWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueWorkflowResponse.Merge(m, src)
}
func (m *EnqueueWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_EnqueueWorkflowResponse.Size(m)
}
func (m *EnqueueWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueWorkflowResponse proto.InternalMessageInfo

type CancelWorkflowRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string   `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string   `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CancelWorkflowRequest) Reset()         { *m = CancelWorkflowRequest{} }
func (m *CancelWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*CancelWorkflowRequest) ProtoMessage()    {}
func (*CancelWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{8}
}

func (m *CancelWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWorkflowRequest.Unmarshal(m, b)
}
func (m *CancelWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *CancelWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWorkflowRequest.Merge(m, src)
}
func (m *CancelWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_CancelWorkflowRequest.Size(m)
}
func (m *CancelWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWorkflowRequest proto.InternalMessageInfo

func (m *CancelWorkflowRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CancelWorkflowRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *CancelWorkflowRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

type CancelWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CancelWorkflowResponse) Reset()         { *m = CancelWorkflowResponse{} }
func (m *CancelWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*CancelWorkflowResponse) ProtoMessage()    {}
func (*CancelWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{9}
}

func (m *CancelWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWorkflowResponse.Unmarshal(m, b)
}
func (m *CancelWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *CancelWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWorkflowResponse.Merge(m, src)
}
func (m *CancelWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_CancelWorkflowResponse.Size(m)
}
func (m *CancelWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWorkflowResponse proto.InternalMessageInfo

type DequeueTaskRequest struct {
	// Types that are valid to be assigned to Cmd:
	//	*DequeueTaskRequest_Dequeue_
	//	*DequeueTaskRequest_Succeed_
	//	*DequeueTaskRequest_Fail_
	Cmd                  isDequeueTaskRequest_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskRequest) Reset()         { *m = DequeueTaskRequest{} }
func (m *DequeueTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskRequest) ProtoMessage()    {}
func (*DequeueTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{10}
}

func (m *DequeueTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskRequest.Unmarshal(m, b)
}
func (m *DequeueTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskRequest.Marshal(b, m, deterministic)
}
func (m *DequeueTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskRequest.Merge(m, src)
}
func (m *DequeueTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskRequest.Size(m)
}
func (m *DequeueTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskRequest proto.InternalMessageInfo

type isDequeueTaskRequest_Cmd interface {
	isDequeueTaskRequest_Cmd()
}

type DequeueTaskRequest_Dequeue_ struct {
	Dequeue *DequeueTaskRequest_Dequeue `protobuf:"bytes,1,opt,name=dequeue,proto3,oneof"`
}

type DequeueTaskRequest_Succeed_ struct {
	Succeed *DequeueTaskRequest_Succeed `protobuf:"bytes,2,opt,name=succeed,proto3,oneof"`
}

type DequeueTaskRequest_Fail_ struct {
	Fail *DequeueTaskRequest_Fail `protobuf:"bytes,3,opt,name=fail,proto3,oneof"`
}

func (*DequeueTaskRequest_Dequeue_) isDequeueTaskRequest_Cmd() {}

func (*DequeueTaskRequest_Succeed_) isDequeueTaskRequest_Cmd() {}

func (*DequeueTaskRequest_Fail_) isDequeueTaskRequest_Cmd() {}

func (m *DequeueTaskRequest) GetCmd() isDequeueTaskRequest_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *DequeueTaskRequest) GetDequeue() *DequeueTaskRequest_Dequeue {
	if x, ok := m.GetCmd().(*DequeueTaskRequest_Dequeue_); ok {
		return x.Dequeue
	}
	return nil
}

func (m *DequeueTaskRequest) GetSucceed() *DequeueTaskRequest_Succeed {
	if x, ok := m.GetCmd().(*DequeueTaskRequest_Succeed_); ok {
		return x.Succeed
	}
	return nil
}

func (m *DequeueTaskRequest) GetFail() *DequeueTaskRequest_Fail {
	if x, ok := m.GetCmd().(*DequeueTaskRequest_Fail_); ok {
		return x.Fail
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DequeueTaskRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DequeueTaskRequest_Dequeue_)(nil),
		(*DequeueTaskRequest_Succeed_)(nil),
		(*DequeueTaskRequest_Fail_)(nil),
	}
}

type DequeueTaskRequest_Dequeue struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	TaskName             string   `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty" toml:"task_name,omitempty" mapstructure:"task_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskRequest_Dequeue) Reset()         { *m = DequeueTaskRequest_Dequeue{} }
func (m *DequeueTaskRequest_Dequeue) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskRequest_Dequeue) ProtoMessage()    {}
func (*DequeueTaskRequest_Dequeue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{10, 0}
}

func (m *DequeueTaskRequest_Dequeue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskRequest_Dequeue.Unmarshal(m, b)
}
func (m *DequeueTaskRequest_Dequeue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskRequest_Dequeue.Marshal(b, m, deterministic)
}
func (m *DequeueTaskRequest_Dequeue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskRequest_Dequeue.Merge(m, src)
}
func (m *DequeueTaskRequest_Dequeue) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskRequest_Dequeue.Size(m)
}
func (m *DequeueTaskRequest_Dequeue) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskRequest_Dequeue.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskRequest_Dequeue proto.InternalMessageInfo

func (m *DequeueTaskRequest_Dequeue) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DequeueTaskRequest_Dequeue) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

type DequeueTaskRequest_Fail struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty" toml:"error,omitempty" mapstructure:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskRequest_Fail) Reset()         { *m = DequeueTaskRequest_Fail{} }
func (m *DequeueTaskRequest_Fail) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskRequest_Fail) ProtoMessage()    {}
func (*DequeueTaskRequest_Fail) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{10, 1}
}

func (m *DequeueTaskRequest_Fail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskRequest_Fail.Unmarshal(m, b)
}
func (m *DequeueTaskRequest_Fail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskRequest_Fail.Marshal(b, m, deterministic)
}
func (m *DequeueTaskRequest_Fail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskRequest_Fail.Merge(m, src)
}
func (m *DequeueTaskRequest_Fail) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskRequest_Fail.Size(m)
}
func (m *DequeueTaskRequest_Fail) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskRequest_Fail.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskRequest_Fail proto.InternalMessageInfo

func (m *DequeueTaskRequest_Fail) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DequeueTaskRequest_Succeed struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty" toml:"result,omitempty" mapstructure:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskRequest_Succeed) Reset()         { *m = DequeueTaskRequest_Succeed{} }
func (m *DequeueTaskRequest_Succeed) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskRequest_Succeed) ProtoMessage()    {}
func (*DequeueTaskRequest_Succeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{10, 2}
}

func (m *DequeueTaskRequest_Succeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskRequest_Succeed.Unmarshal(m, b)
}
func (m *DequeueTaskRequest_Succeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskRequest_Succeed.Marshal(b, m, deterministic)
}
func (m *DequeueTaskRequest_Succeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskRequest_Succeed.Merge(m, src)
}
func (m *DequeueTaskRequest_Succeed) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskRequest_Succeed.Size(m)
}
func (m *DequeueTaskRequest_Succeed) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskRequest_Succeed.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskRequest_Succeed proto.InternalMessageInfo

func (m *DequeueTaskRequest_Succeed) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type DequeueTaskResponse struct {
	// Types that are valid to be assigned to Cmd:
	//	*DequeueTaskResponse_Dequeue_
	//	*DequeueTaskResponse_Cancel_
	Cmd                  isDequeueTaskResponse_Cmd `protobuf_oneof:"cmd"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskResponse) Reset()         { *m = DequeueTaskResponse{} }
func (m *DequeueTaskResponse) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskResponse) ProtoMessage()    {}
func (*DequeueTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{11}
}

func (m *DequeueTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskResponse.Unmarshal(m, b)
}
func (m *DequeueTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskResponse.Marshal(b, m, deterministic)
}
func (m *DequeueTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskResponse.Merge(m, src)
}
func (m *DequeueTaskResponse) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskResponse.Size(m)
}
func (m *DequeueTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskResponse proto.InternalMessageInfo

type isDequeueTaskResponse_Cmd interface {
	isDequeueTaskResponse_Cmd()
}

type DequeueTaskResponse_Dequeue_ struct {
	Dequeue *DequeueTaskResponse_Dequeue `protobuf:"bytes,1,opt,name=dequeue,proto3,oneof"`
}

type DequeueTaskResponse_Cancel_ struct {
	Cancel *DequeueTaskResponse_Cancel `protobuf:"bytes,2,opt,name=cancel,proto3,oneof"`
}

func (*DequeueTaskResponse_Dequeue_) isDequeueTaskResponse_Cmd() {}

func (*DequeueTaskResponse_Cancel_) isDequeueTaskResponse_Cmd() {}

func (m *DequeueTaskResponse) GetCmd() isDequeueTaskResponse_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *DequeueTaskResponse) GetDequeue() *DequeueTaskResponse_Dequeue {
	if x, ok := m.GetCmd().(*DequeueTaskResponse_Dequeue_); ok {
		return x.Dequeue
	}
	return nil
}

func (m *DequeueTaskResponse) GetCancel() *DequeueTaskResponse_Cancel {
	if x, ok := m.GetCmd().(*DequeueTaskResponse_Cancel_); ok {
		return x.Cancel
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DequeueTaskResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DequeueTaskResponse_Dequeue_)(nil),
		(*DequeueTaskResponse_Cancel_)(nil),
	}
}

type DequeueTaskResponse_Dequeue struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty" toml:"task,omitempty" mapstructure:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskResponse_Dequeue) Reset()         { *m = DequeueTaskResponse_Dequeue{} }
func (m *DequeueTaskResponse_Dequeue) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskResponse_Dequeue) ProtoMessage()    {}
func (*DequeueTaskResponse_Dequeue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{11, 0}
}

func (m *DequeueTaskResponse_Dequeue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskResponse_Dequeue.Unmarshal(m, b)
}
func (m *DequeueTaskResponse_Dequeue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskResponse_Dequeue.Marshal(b, m, deterministic)
}
func (m *DequeueTaskResponse_Dequeue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskResponse_Dequeue.Merge(m, src)
}
func (m *DequeueTaskResponse_Dequeue) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskResponse_Dequeue.Size(m)
}
func (m *DequeueTaskResponse_Dequeue) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskResponse_Dequeue.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskResponse_Dequeue proto.InternalMessageInfo

func (m *DequeueTaskResponse_Dequeue) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type DequeueTaskResponse_Cancel struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty" toml:"err,omitempty" mapstructure:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DequeueTaskResponse_Cancel) Reset()         { *m = DequeueTaskResponse_Cancel{} }
func (m *DequeueTaskResponse_Cancel) String() string { return proto.CompactTextString(m) }
func (*DequeueTaskResponse_Cancel) ProtoMessage()    {}
func (*DequeueTaskResponse_Cancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{11, 1}
}

func (m *DequeueTaskResponse_Cancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueTaskResponse_Cancel.Unmarshal(m, b)
}
func (m *DequeueTaskResponse_Cancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueTaskResponse_Cancel.Marshal(b, m, deterministic)
}
func (m *DequeueTaskResponse_Cancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueTaskResponse_Cancel.Merge(m, src)
}
func (m *DequeueTaskResponse_Cancel) XXX_Size() int {
	return xxx_messageInfo_DequeueTaskResponse_Cancel.Size(m)
}
func (m *DequeueTaskResponse_Cancel) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueTaskResponse_Cancel.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueTaskResponse_Cancel proto.InternalMessageInfo

func (m *DequeueTaskResponse_Cancel) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type CreateWorkflowScheduleRequest struct {
	Domain               string               `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string               `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string               `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	Parameters           []byte               `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	Enabled              bool                 `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty" toml:"enabled,omitempty" mapstructure:"enabled,omitempty"`
	Recurrence           string               `protobuf:"bytes,6,opt,name=recurrence,proto3" json:"recurrence,omitempty" toml:"recurrence,omitempty" mapstructure:"recurrence,omitempty"`
	Payload              []byte               `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty" toml:"payload,omitempty" mapstructure:"payload,omitempty"`
	NextRunAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=next_run_at,json=nextRunAt,proto3" json:"next_run_at,omitempty" toml:"next_run_at,omitempty" mapstructure:"next_run_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateWorkflowScheduleRequest) Reset()         { *m = CreateWorkflowScheduleRequest{} }
func (m *CreateWorkflowScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowScheduleRequest) ProtoMessage()    {}
func (*CreateWorkflowScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{12}
}

func (m *CreateWorkflowScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowScheduleRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowScheduleRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowScheduleRequest.Merge(m, src)
}
func (m *CreateWorkflowScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowScheduleRequest.Size(m)
}
func (m *CreateWorkflowScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowScheduleRequest proto.InternalMessageInfo

func (m *CreateWorkflowScheduleRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CreateWorkflowScheduleRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *CreateWorkflowScheduleRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

func (m *CreateWorkflowScheduleRequest) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *CreateWorkflowScheduleRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *CreateWorkflowScheduleRequest) GetRecurrence() string {
	if m != nil {
		return m.Recurrence
	}
	return ""
}

func (m *CreateWorkflowScheduleRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CreateWorkflowScheduleRequest) GetNextRunAt() *timestamp.Timestamp {
	if m != nil {
		return m.NextRunAt
	}
	return nil
}

type CreateWorkflowScheduleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateWorkflowScheduleResponse) Reset()         { *m = CreateWorkflowScheduleResponse{} }
func (m *CreateWorkflowScheduleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowScheduleResponse) ProtoMessage()    {}
func (*CreateWorkflowScheduleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{13}
}

func (m *CreateWorkflowScheduleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowScheduleResponse.Unmarshal(m, b)
}
func (m *CreateWorkflowScheduleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowScheduleResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowScheduleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowScheduleResponse.Merge(m, src)
}
func (m *CreateWorkflowScheduleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowScheduleResponse.Size(m)
}
func (m *CreateWorkflowScheduleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowScheduleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowScheduleResponse proto.InternalMessageInfo

type ListWorkflowSchedulesRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListWorkflowSchedulesRequest) Reset()         { *m = ListWorkflowSchedulesRequest{} }
func (m *ListWorkflowSchedulesRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowSchedulesRequest) ProtoMessage()    {}
func (*ListWorkflowSchedulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{14}
}

func (m *ListWorkflowSchedulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowSchedulesRequest.Unmarshal(m, b)
}
func (m *ListWorkflowSchedulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowSchedulesRequest.Marshal(b, m, deterministic)
}
func (m *ListWorkflowSchedulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowSchedulesRequest.Merge(m, src)
}
func (m *ListWorkflowSchedulesRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowSchedulesRequest.Size(m)
}
func (m *ListWorkflowSchedulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowSchedulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowSchedulesRequest proto.InternalMessageInfo

func (m *ListWorkflowSchedulesRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type Schedule struct {
	Domain               string               `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string               `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string               `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	Parameters           []byte               `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	Recurrence           string               `protobuf:"bytes,5,opt,name=recurrence,proto3" json:"recurrence,omitempty" toml:"recurrence,omitempty" mapstructure:"recurrence,omitempty"`
	NextDueAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=next_due_at,json=nextDueAt,proto3" json:"next_due_at,omitempty" toml:"next_due_at,omitempty" mapstructure:"next_due_at,omitempty"`
	LastEnqueuedAt       *timestamp.Timestamp `protobuf:"bytes,7,opt,name=last_enqueued_at,json=lastEnqueuedAt,proto3" json:"last_enqueued_at,omitempty" toml:"last_enqueued_at,omitempty" mapstructure:"last_enqueued_at,omitempty"`
	Enabled              bool                 `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty" toml:"enabled,omitempty" mapstructure:"enabled,omitempty"`
	LastStart            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_start,json=lastStart,proto3" json:"last_start,omitempty" toml:"last_start,omitempty" mapstructure:"last_start,omitempty"`
	LastEnd              *timestamp.Timestamp `protobuf:"bytes,10,opt,name=last_end,json=lastEnd,proto3" json:"last_end,omitempty" toml:"last_end,omitempty" mapstructure:"last_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{15}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Schedule) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *Schedule) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

func (m *Schedule) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Schedule) GetRecurrence() string {
	if m != nil {
		return m.Recurrence
	}
	return ""
}

func (m *Schedule) GetNextDueAt() *timestamp.Timestamp {
	if m != nil {
		return m.NextDueAt
	}
	return nil
}

func (m *Schedule) GetLastEnqueuedAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastEnqueuedAt
	}
	return nil
}

func (m *Schedule) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Schedule) GetLastStart() *timestamp.Timestamp {
	if m != nil {
		return m.LastStart
	}
	return nil
}

func (m *Schedule) GetLastEnd() *timestamp.Timestamp {
	if m != nil {
		return m.LastEnd
	}
	return nil
}

type ListWorkflowSchedulesResponse struct {
	NumSchedules         int32     `protobuf:"varint,1,opt,name=num_schedules,json=numSchedules,proto3" json:"num_schedules,omitempty" toml:"num_schedules,omitempty" mapstructure:"num_schedules,omitempty"`
	Schedule             *Schedule `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty" toml:"schedule,omitempty" mapstructure:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListWorkflowSchedulesResponse) Reset()         { *m = ListWorkflowSchedulesResponse{} }
func (m *ListWorkflowSchedulesResponse) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowSchedulesResponse) ProtoMessage()    {}
func (*ListWorkflowSchedulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{16}
}

func (m *ListWorkflowSchedulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowSchedulesResponse.Unmarshal(m, b)
}
func (m *ListWorkflowSchedulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowSchedulesResponse.Marshal(b, m, deterministic)
}
func (m *ListWorkflowSchedulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowSchedulesResponse.Merge(m, src)
}
func (m *ListWorkflowSchedulesResponse) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowSchedulesResponse.Size(m)
}
func (m *ListWorkflowSchedulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowSchedulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowSchedulesResponse proto.InternalMessageInfo

func (m *ListWorkflowSchedulesResponse) GetNumSchedules() int32 {
	if m != nil {
		return m.NumSchedules
	}
	return 0
}

func (m *ListWorkflowSchedulesResponse) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type GetWorkflowScheduleByNameRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string   `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string   `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetWorkflowScheduleByNameRequest) Reset()         { *m = GetWorkflowScheduleByNameRequest{} }
func (m *GetWorkflowScheduleByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowScheduleByNameRequest) ProtoMessage()    {}
func (*GetWorkflowScheduleByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{17}
}

func (m *GetWorkflowScheduleByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowScheduleByNameRequest.Unmarshal(m, b)
}
func (m *GetWorkflowScheduleByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowScheduleByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowScheduleByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowScheduleByNameRequest.Merge(m, src)
}
func (m *GetWorkflowScheduleByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowScheduleByNameRequest.Size(m)
}
func (m *GetWorkflowScheduleByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowScheduleByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowScheduleByNameRequest proto.InternalMessageInfo

func (m *GetWorkflowScheduleByNameRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *GetWorkflowScheduleByNameRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *GetWorkflowScheduleByNameRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

type GetWorkflowScheduleByNameResponse struct {
	Schedule             *Schedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty" toml:"schedule,omitempty" mapstructure:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetWorkflowScheduleByNameResponse) Reset()         { *m = GetWorkflowScheduleByNameResponse{} }
func (m *GetWorkflowScheduleByNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowScheduleByNameResponse) ProtoMessage()    {}
func (*GetWorkflowScheduleByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{18}
}

func (m *GetWorkflowScheduleByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowScheduleByNameResponse.Unmarshal(m, b)
}
func (m *GetWorkflowScheduleByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowScheduleByNameResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowScheduleByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowScheduleByNameResponse.Merge(m, src)
}
func (m *GetWorkflowScheduleByNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowScheduleByNameResponse.Size(m)
}
func (m *GetWorkflowScheduleByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowScheduleByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowScheduleByNameResponse proto.InternalMessageInfo

func (m *GetWorkflowScheduleByNameResponse) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type UpdateWorkflowScheduleByNameRequest struct {
	Domain               string                `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string                `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string                `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	Enabled              *wrappers.BoolValue   `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty" toml:"enabled,omitempty" mapstructure:"enabled,omitempty"`
	Parameters           *wrappers.BytesValue  `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty" toml:"parameters,omitempty" mapstructure:"parameters,omitempty"`
	Recurrence           *wrappers.StringValue `protobuf:"bytes,6,opt,name=recurrence,proto3" json:"recurrence,omitempty" toml:"recurrence,omitempty" mapstructure:"recurrence,omitempty"`
	NextRunAt            *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=next_run_at,json=nextRunAt,proto3" json:"next_run_at,omitempty" toml:"next_run_at,omitempty" mapstructure:"next_run_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateWorkflowScheduleByNameRequest) Reset()         { *m = UpdateWorkflowScheduleByNameRequest{} }
func (m *UpdateWorkflowScheduleByNameRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowScheduleByNameRequest) ProtoMessage()    {}
func (*UpdateWorkflowScheduleByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{19}
}

func (m *UpdateWorkflowScheduleByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowScheduleByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowScheduleByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowScheduleByNameRequest.Merge(m, src)
}
func (m *UpdateWorkflowScheduleByNameRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameRequest.Size(m)
}
func (m *UpdateWorkflowScheduleByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowScheduleByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowScheduleByNameRequest proto.InternalMessageInfo

func (m *UpdateWorkflowScheduleByNameRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *UpdateWorkflowScheduleByNameRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *UpdateWorkflowScheduleByNameRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

func (m *UpdateWorkflowScheduleByNameRequest) GetEnabled() *wrappers.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *UpdateWorkflowScheduleByNameRequest) GetParameters() *wrappers.BytesValue {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *UpdateWorkflowScheduleByNameRequest) GetRecurrence() *wrappers.StringValue {
	if m != nil {
		return m.Recurrence
	}
	return nil
}

func (m *UpdateWorkflowScheduleByNameRequest) GetNextRunAt() *timestamp.Timestamp {
	if m != nil {
		return m.NextRunAt
	}
	return nil
}

type UpdateWorkflowScheduleByNameResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateWorkflowScheduleByNameResponse) Reset()         { *m = UpdateWorkflowScheduleByNameResponse{} }
func (m *UpdateWorkflowScheduleByNameResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowScheduleByNameResponse) ProtoMessage()    {}
func (*UpdateWorkflowScheduleByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{20}
}

func (m *UpdateWorkflowScheduleByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameResponse.Unmarshal(m, b)
}
func (m *UpdateWorkflowScheduleByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameResponse.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowScheduleByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowScheduleByNameResponse.Merge(m, src)
}
func (m *UpdateWorkflowScheduleByNameResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowScheduleByNameResponse.Size(m)
}
func (m *UpdateWorkflowScheduleByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowScheduleByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowScheduleByNameResponse proto.InternalMessageInfo

type GetWorkflowInstanceByNameRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	InstanceName         string   `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName         string   `protobuf:"bytes,3,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetWorkflowInstanceByNameRequest) Reset()         { *m = GetWorkflowInstanceByNameRequest{} }
func (m *GetWorkflowInstanceByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowInstanceByNameRequest) ProtoMessage()    {}
func (*GetWorkflowInstanceByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{21}
}

func (m *GetWorkflowInstanceByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowInstanceByNameRequest.Unmarshal(m, b)
}
func (m *GetWorkflowInstanceByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowInstanceByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowInstanceByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowInstanceByNameRequest.Merge(m, src)
}
func (m *GetWorkflowInstanceByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowInstanceByNameRequest.Size(m)
}
func (m *GetWorkflowInstanceByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowInstanceByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowInstanceByNameRequest proto.InternalMessageInfo

func (m *GetWorkflowInstanceByNameRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *GetWorkflowInstanceByNameRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *GetWorkflowInstanceByNameRequest) GetWorkflowName() string {
	if m != nil {
		return m.WorkflowName
	}
	return ""
}

type GetWorkflowInstanceByNameResponse struct {
	WorkflowInstance     *WorkflowInstance `protobuf:"bytes,1,opt,name=workflow_instance,json=workflowInstance,proto3" json:"workflow_instance,omitempty" toml:"workflow_instance,omitempty" mapstructure:"workflow_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte            `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32             `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetWorkflowInstanceByNameResponse) Reset()         { *m = GetWorkflowInstanceByNameResponse{} }
func (m *GetWorkflowInstanceByNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowInstanceByNameResponse) ProtoMessage()    {}
func (*GetWorkflowInstanceByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{22}
}

func (m *GetWorkflowInstanceByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowInstanceByNameResponse.Unmarshal(m, b)
}
func (m *GetWorkflowInstanceByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowInstanceByNameResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowInstanceByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowInstanceByNameResponse.Merge(m, src)
}
func (m *GetWorkflowInstanceByNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowInstanceByNameResponse.Size(m)
}
func (m *GetWorkflowInstanceByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowInstanceByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowInstanceByNameResponse proto.InternalMessageInfo

func (m *GetWorkflowInstanceByNameResponse) GetWorkflowInstance() *WorkflowInstance {
	if m != nil {
		return m.WorkflowInstance
	}
	return nil
}

type ListWorkflowInstancesRequest struct {
	Domain               string                `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty" toml:"domain,omitempty" mapstructure:"domain,omitempty"`
	WorkflowName         *wrappers.StringValue `protobuf:"bytes,2,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	InstanceName         *wrappers.StringValue `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	IsRunning            *wrappers.BoolValue   `protobuf:"bytes,4,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty" toml:"is_running,omitempty" mapstructure:"is_running,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListWorkflowInstancesRequest) Reset()         { *m = ListWorkflowInstancesRequest{} }
func (m *ListWorkflowInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowInstancesRequest) ProtoMessage()    {}
func (*ListWorkflowInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{23}
}

func (m *ListWorkflowInstancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowInstancesRequest.Unmarshal(m, b)
}
func (m *ListWorkflowInstancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowInstancesRequest.Marshal(b, m, deterministic)
}
func (m *ListWorkflowInstancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowInstancesRequest.Merge(m, src)
}
func (m *ListWorkflowInstancesRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowInstancesRequest.Size(m)
}
func (m *ListWorkflowInstancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowInstancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowInstancesRequest proto.InternalMessageInfo

func (m *ListWorkflowInstancesRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ListWorkflowInstancesRequest) GetWorkflowName() *wrappers.StringValue {
	if m != nil {
		return m.WorkflowName
	}
	return nil
}

func (m *ListWorkflowInstancesRequest) GetInstanceName() *wrappers.StringValue {
	if m != nil {
		return m.InstanceName
	}
	return nil
}

func (m *ListWorkflowInstancesRequest) GetIsRunning() *wrappers.BoolValue {
	if m != nil {
		return m.IsRunning
	}
	return nil
}

type ListWorkflowInstancesResponse struct {
	WorkflowInstance     *WorkflowInstance `protobuf:"bytes,1,opt,name=workflow_instance,json=workflowInstance,proto3" json:"workflow_instance,omitempty" toml:"workflow_instance,omitempty" mapstructure:"workflow_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte            `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32             `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListWorkflowInstancesResponse) Reset()         { *m = ListWorkflowInstancesResponse{} }
func (m *ListWorkflowInstancesResponse) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowInstancesResponse) ProtoMessage()    {}
func (*ListWorkflowInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4c16478599b1f, []int{24}
}

func (m *ListWorkflowInstancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowInstancesResponse.Unmarshal(m, b)
}
func (m *ListWorkflowInstancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowInstancesResponse.Marshal(b, m, deterministic)
}
func (m *ListWorkflowInstancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowInstancesResponse.Merge(m, src)
}
func (m *ListWorkflowInstancesResponse) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowInstancesResponse.Size(m)
}
func (m *ListWorkflowInstancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowInstancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowInstancesResponse proto.InternalMessageInfo

func (m *ListWorkflowInstancesResponse) GetWorkflowInstance() *WorkflowInstance {
	if m != nil {
		return m.WorkflowInstance
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "chef.automate.infra.cereal.Task")
	proto.RegisterType((*WorkflowInstance)(nil), "chef.automate.infra.cereal.WorkflowInstance")
	proto.RegisterType((*TaskResult)(nil), "chef.automate.infra.cereal.TaskResult")
	proto.RegisterType((*WorkflowEvent)(nil), "chef.automate.infra.cereal.WorkflowEvent")
	proto.RegisterType((*DequeueWorkflowRequest)(nil), "chef.automate.infra.cereal.DequeueWorkflowRequest")
	proto.RegisterType((*DequeueWorkflowRequest_Dequeue)(nil), "chef.automate.infra.cereal.DequeueWorkflowRequest.Dequeue")
	proto.RegisterType((*DequeueWorkflowRequest_Continue)(nil), "chef.automate.infra.cereal.DequeueWorkflowRequest.Continue")
	proto.RegisterType((*DequeueWorkflowRequest_Fail)(nil), "chef.automate.infra.cereal.DequeueWorkflowRequest.Fail")
	proto.RegisterType((*DequeueWorkflowRequest_Done)(nil), "chef.automate.infra.cereal.DequeueWorkflowRequest.Done")
	proto.RegisterType((*DequeueWorkflowResponse)(nil), "chef.automate.infra.cereal.DequeueWorkflowResponse")
	proto.RegisterType((*DequeueWorkflowResponse_Dequeue)(nil), "chef.automate.infra.cereal.DequeueWorkflowResponse.Dequeue")
	proto.RegisterType((*DequeueWorkflowResponse_Status)(nil), "chef.automate.infra.cereal.DequeueWorkflowResponse.Status")
	proto.RegisterType((*EnqueueWorkflowRequest)(nil), "chef.automate.infra.cereal.EnqueueWorkflowRequest")
	proto.RegisterType((*EnqueueWorkflowResponse)(nil), "chef.automate.infra.cereal.EnqueueWorkflowResponse")
	proto.RegisterType((*CancelWorkflowRequest)(nil), "chef.automate.infra.cereal.CancelWorkflowRequest")
	proto.RegisterType((*CancelWorkflowResponse)(nil), "chef.automate.infra.cereal.CancelWorkflowResponse")
	proto.RegisterType((*DequeueTaskRequest)(nil), "chef.automate.infra.cereal.DequeueTaskRequest")
	proto.RegisterType((*DequeueTaskRequest_Dequeue)(nil), "chef.automate.infra.cereal.DequeueTaskRequest.Dequeue")
	proto.RegisterType((*DequeueTaskRequest_Fail)(nil), "chef.automate.infra.cereal.DequeueTaskRequest.Fail")
	proto.RegisterType((*DequeueTaskRequest_Succeed)(nil), "chef.automate.infra.cereal.DequeueTaskRequest.Succeed")
	proto.RegisterType((*DequeueTaskResponse)(nil), "chef.automate.infra.cereal.DequeueTaskResponse")
	proto.RegisterType((*DequeueTaskResponse_Dequeue)(nil), "chef.automate.infra.cereal.DequeueTaskResponse.Dequeue")
	proto.RegisterType((*DequeueTaskResponse_Cancel)(nil), "chef.automate.infra.cereal.DequeueTaskResponse.Cancel")
	proto.RegisterType((*CreateWorkflowScheduleRequest)(nil), "chef.automate.infra.cereal.CreateWorkflowScheduleRequest")
	proto.RegisterType((*CreateWorkflowScheduleResponse)(nil), "chef.automate.infra.cereal.CreateWorkflowScheduleResponse")
	proto.RegisterType((*ListWorkflowSchedulesRequest)(nil), "chef.automate.infra.cereal.ListWorkflowSchedulesRequest")
	proto.RegisterType((*Schedule)(nil), "chef.automate.infra.cereal.Schedule")
	proto.RegisterType((*ListWorkflowSchedulesResponse)(nil), "chef.automate.infra.cereal.ListWorkflowSchedulesResponse")
	proto.RegisterType((*GetWorkflowScheduleByNameRequest)(nil), "chef.automate.infra.cereal.GetWorkflowScheduleByNameRequest")
	proto.RegisterType((*GetWorkflowScheduleByNameResponse)(nil), "chef.automate.infra.cereal.GetWorkflowScheduleByNameResponse")
	proto.RegisterType((*UpdateWorkflowScheduleByNameRequest)(nil), "chef.automate.infra.cereal.UpdateWorkflowScheduleByNameRequest")
	proto.RegisterType((*UpdateWorkflowScheduleByNameResponse)(nil), "chef.automate.infra.cereal.UpdateWorkflowScheduleByNameResponse")
	proto.RegisterType((*GetWorkflowInstanceByNameRequest)(nil), "chef.automate.infra.cereal.GetWorkflowInstanceByNameRequest")
	proto.RegisterType((*GetWorkflowInstanceByNameResponse)(nil), "chef.automate.infra.cereal.GetWorkflowInstanceByNameResponse")
	proto.RegisterType((*ListWorkflowInstancesRequest)(nil), "chef.automate.infra.cereal.ListWorkflowInstancesRequest")
	proto.RegisterType((*ListWorkflowInstancesResponse)(nil), "chef.automate.infra.cereal.ListWorkflowInstancesResponse")
}

func init() {
	proto.RegisterFile("api/interservice/cereal/cereal.proto", fileDescriptor_96e4c16478599b1f)
}

var fileDescriptor_96e4c16478599b1f = []byte{
	// 1549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4d, 0x6f, 0xd4, 0x56,
	0x17, 0xc6, 0xf3, 0x3d, 0x67, 0x08, 0x84, 0x0b, 0x84, 0xc1, 0x84, 0xbc, 0xc1, 0xe1, 0x45, 0xa9,
	0x54, 0xcd, 0xa4, 0x13, 0x0a, 0x0d, 0xd0, 0x42, 0x12, 0x28, 0x41, 0x6a, 0x51, 0xe5, 0xa4, 0x20,
	0xaa, 0x4a, 0xa3, 0x1b, 0xfb, 0x26, 0x58, 0x78, 0xec, 0xa9, 0x7d, 0x4d, 0x08, 0x0b, 0x16, 0x55,
	0xd5, 0x65, 0xd9, 0x74, 0x81, 0xba, 0x6a, 0x7f, 0x42, 0xb7, 0xfd, 0x11, 0x5d, 0xf4, 0x97, 0x74,
	0x51, 0xa9, 0xcb, 0x56, 0xf7, 0xc3, 0x1e, 0xdb, 0x33, 0xe3, 0xf9, 0xa8, 0x88, 0x58, 0x31, 0xf6,
	0x3d, 0xe7, 0xf1, 0x39, 0xe7, 0x3e, 0xe7, 0x39, 0xf7, 0x12, 0xb8, 0x8c, 0xbb, 0x56, 0xd3, 0x72,
	0x28, 0xf1, 0x7c, 0xe2, 0x3d, 0xb7, 0x0c, 0xd2, 0x34, 0x88, 0x47, 0xb0, 0x2d, 0xff, 0x69, 0x74,
	0x3d, 0x97, 0xba, 0x48, 0x35, 0x9e, 0x92, 0xbd, 0x06, 0x0e, 0xa8, 0xdb, 0xc1, 0x94, 0x34, 0x2c,
	0x67, 0xcf, 0xc3, 0x0d, 0x61, 0xa1, 0xfe, 0x6f, 0xdf, 0x75, 0xf7, 0x6d, 0xd2, 0xe4, 0x96, 0xbb,
	0xc1, 0x5e, 0x93, 0x5a, 0x1d, 0xe2, 0x53, 0xdc, 0xe9, 0x0a, 0x67, 0x75, 0x21, 0x6d, 0x70, 0xe0,
	0xe1, 0x6e, 0x97, 0x78, 0xbe, 0x58, 0xd7, 0x0e, 0xa0, 0xb0, 0x83, 0xfd, 0x67, 0x08, 0x41, 0xc1,
	0xc1, 0x1d, 0x52, 0x57, 0x16, 0x95, 0xe5, 0xaa, 0xce, 0x7f, 0xa3, 0x05, 0x80, 0x2e, 0xf6, 0x70,
	0x87, 0xb0, 0x00, 0xeb, 0xb9, 0x45, 0x65, 0xf9, 0xb8, 0x1e, 0x7b, 0x83, 0x6e, 0x42, 0xcd, 0xa7,
	0xd8, 0xa3, 0x6d, 0xbc, 0x47, 0x89, 0x57, 0xcf, 0x2f, 0x2a, 0xcb, 0xb5, 0x96, 0xda, 0x10, 0x5f,
	0x6c, 0x84, 0x5f, 0x6c, 0xec, 0x84, 0x21, 0xe9, 0xc0, 0xcd, 0xd7, 0x99, 0xb5, 0xf6, 0xa7, 0x02,
	0xb3, 0x8f, 0x5d, 0xef, 0xd9, 0x9e, 0xed, 0x1e, 0x3c, 0x70, 0x7c, 0x8a, 0x1d, 0x83, 0xa0, 0x39,
	0x28, 0x99, 0x6e, 0x07, 0x5b, 0x8e, 0x8c, 0x43, 0x3e, 0xa1, 0x25, 0x98, 0xb1, 0xa4, 0x4d, 0x9b,
	0x87, 0x99, 0xe3, 0xcb, 0xc7, 0xc3, 0x97, 0x0f, 0x59, 0xb8, 0x4b, 0x30, 0x73, 0x20, 0x01, 0x85,
	0x51, 0x5e, 0x18, 0x85, 0x2f, 0xb9, 0xd1, 0x1c, 0x94, 0x7c, 0x8a, 0x69, 0xe0, 0xd7, 0x0b, 0xe2,
	0x0b, 0xe2, 0x29, 0x95, 0x6b, 0xb1, 0x2f, 0xd7, 0x3a, 0x94, 0xbb, 0xf8, 0xd0, 0x76, 0xb1, 0x59,
	0x2f, 0xf1, 0xc5, 0xf0, 0x91, 0x21, 0x7a, 0xc4, 0x0f, 0x6c, 0x5a, 0x2f, 0xf3, 0x05, 0xf9, 0x84,
	0x66, 0x21, 0x4f, 0x3c, 0xaf, 0x5e, 0xe1, 0x9f, 0x61, 0x3f, 0xb5, 0x37, 0x0a, 0x00, 0x2b, 0xb6,
	0x2e, 0x0c, 0x2e, 0x40, 0x95, 0x62, 0xff, 0x59, 0x3b, 0x56, 0xf7, 0x0a, 0x7b, 0xf1, 0x70, 0x9c,
	0xda, 0xf7, 0xf2, 0xc8, 0x27, 0xf2, 0xb8, 0x08, 0x40, 0x3c, 0xcf, 0xf5, 0xda, 0x94, 0xbc, 0xa0,
	0x32, 0xc7, 0x2a, 0x7f, 0xb3, 0x43, 0x5e, 0xd0, 0x58, 0xb0, 0xc5, 0x78, 0xb0, 0xda, 0xef, 0x0a,
	0xcc, 0x84, 0xbb, 0x71, 0xef, 0x39, 0x71, 0x28, 0x23, 0x04, 0x3d, 0xec, 0x46, 0x84, 0x60, 0xbf,
	0x51, 0x03, 0x4e, 0x13, 0xe7, 0x9b, 0x80, 0x04, 0xc4, 0x6c, 0xf3, 0xd0, 0x0d, 0x37, 0x70, 0x28,
	0x8f, 0x2e, 0xaf, 0x9f, 0x0a, 0x97, 0x58, 0x8a, 0x9b, 0x6c, 0x01, 0xad, 0xc0, 0x19, 0xc3, 0xed,
	0x74, 0x6d, 0x42, 0x93, 0x0e, 0x79, 0xee, 0x80, 0xa2, 0xb5, 0x9e, 0xc7, 0x7d, 0xa8, 0x71, 0x3b,
	0x19, 0x64, 0x81, 0x53, 0xea, 0x4a, 0x63, 0x78, 0x07, 0x34, 0x7a, 0x05, 0xd5, 0x81, 0x46, 0xbf,
	0xb5, 0x3f, 0x0a, 0x30, 0x77, 0x97, 0xf0, 0x80, 0xc2, 0xbc, 0x74, 0xf6, 0xe8, 0x53, 0xf4, 0x08,
	0xca, 0xa6, 0x58, 0xe1, 0xc9, 0xd5, 0x5a, 0x37, 0xb2, 0xf0, 0x07, 0x83, 0x84, 0xaf, 0xb7, 0x8e,
	0xe9, 0x21, 0x18, 0x7a, 0x02, 0x15, 0xc3, 0x75, 0xa8, 0xe5, 0x04, 0x82, 0x9f, 0xb5, 0xd6, 0xcd,
	0x29, 0x80, 0x37, 0x25, 0xc4, 0xd6, 0x31, 0x3d, 0x82, 0x43, 0x9f, 0x43, 0xc1, 0x74, 0x1d, 0x22,
	0x5b, 0xec, 0xfa, 0x34, 0xf1, 0xba, 0x0e, 0x83, 0xe4, 0x30, 0x0c, 0x6e, 0x0f, 0x5b, 0xb6, 0x2c,
	0xef, 0x34, 0x70, 0x9f, 0x62, 0xcb, 0x66, 0x70, 0x0c, 0x46, 0xdd, 0x82, 0xb2, 0x34, 0x1b, 0xda,
	0xc0, 0xff, 0x87, 0x13, 0x89, 0xde, 0x64, 0x94, 0xce, 0x2f, 0x57, 0xf5, 0x99, 0x78, 0x73, 0xfa,
	0xea, 0xd7, 0x50, 0x09, 0xf3, 0x8f, 0x77, 0x9c, 0x92, 0xec, 0xb8, 0x6b, 0x50, 0x64, 0x3b, 0x2d,
	0x30, 0x6a, 0xad, 0xc5, 0x91, 0xf4, 0x10, 0xe6, 0x6a, 0x1d, 0x0a, 0x2c, 0xee, 0xb0, 0x33, 0x95,
	0xa8, 0x33, 0xd5, 0x05, 0x28, 0xb0, 0x02, 0xc5, 0xda, 0x43, 0x89, 0xb7, 0xc7, 0x46, 0x11, 0xf2,
	0x46, 0xc7, 0xd4, 0xbe, 0xcd, 0xc3, 0xb9, 0xbe, 0x82, 0xf8, 0x5d, 0xd7, 0xf1, 0x09, 0x7a, 0x9c,
	0x66, 0xd5, 0x64, 0x9b, 0x2f, 0x50, 0x06, 0xd1, 0x6a, 0x27, 0xea, 0xf4, 0xdc, 0x14, 0x6c, 0x95,
	0xb8, 0xdb, 0x1c, 0x61, 0xeb, 0x58, 0xa8, 0x13, 0xea, 0x8f, 0x4a, 0x6f, 0xd3, 0xb6, 0xa0, 0x12,
	0x0a, 0xa9, 0x8c, 0xfd, 0xfd, 0xac, 0x6f, 0xa4, 0x55, 0x5b, 0x8f, 0xbc, 0xd1, 0x6d, 0x28, 0x12,
	0xa6, 0x1e, 0x32, 0xd4, 0xf7, 0xc6, 0x81, 0xe1, 0x72, 0xa3, 0x0b, 0x3f, 0x55, 0x85, 0x92, 0x08,
	0xb5, 0x7f, 0x93, 0xc2, 0x4d, 0xf8, 0x49, 0x81, 0xb9, 0x7b, 0xce, 0xc0, 0xce, 0x7e, 0xfb, 0xe3,
	0x23, 0x29, 0xcb, 0x85, 0xb4, 0x2c, 0x6b, 0xe7, 0xe1, 0x5c, 0x5f, 0x6c, 0x62, 0x0b, 0xb4, 0x43,
	0x38, 0xbb, 0xc9, 0x3e, 0x66, 0x1f, 0x79, 0xd4, 0x5a, 0x1d, 0xe6, 0xd2, 0x9f, 0x96, 0x41, 0xbd,
	0xce, 0x03, 0x92, 0x34, 0x10, 0x42, 0x2a, 0x42, 0xd2, 0xd3, 0x64, 0xbe, 0x36, 0x06, 0xe9, 0x62,
	0x00, 0x83, 0x78, 0xac, 0x43, 0xd9, 0x0f, 0x0c, 0x83, 0x10, 0x53, 0xb2, 0x63, 0x52, 0xcc, 0x6d,
	0xe1, 0xcd, 0x30, 0x25, 0x10, 0x7a, 0x20, 0x85, 0x4c, 0xe8, 0xe2, 0xea, 0x84, 0x80, 0x09, 0x11,
	0xfb, 0x64, 0xb4, 0x88, 0x25, 0x06, 0x76, 0x2e, 0x39, 0xb0, 0xd5, 0x79, 0x29, 0x2e, 0x67, 0xa0,
	0xc8, 0xc7, 0xad, 0xf4, 0x15, 0x0f, 0xea, 0x25, 0x28, 0xcb, 0xf0, 0x47, 0x69, 0xcc, 0xcf, 0x39,
	0x38, 0x9d, 0x88, 0x55, 0xea, 0xcb, 0x76, 0x7a, 0x4b, 0xae, 0x8f, 0x9d, 0xed, 0x70, 0x6d, 0xf9,
	0x02, 0x4a, 0x06, 0x27, 0xc6, 0xc4, 0x5b, 0x22, 0x31, 0x05, 0xad, 0x98, 0xae, 0x08, 0x1c, 0xf5,
	0x76, 0xaf, 0x8c, 0x57, 0xa1, 0xc0, 0xaa, 0x23, 0xc3, 0x1d, 0xad, 0xd2, 0xdc, 0x9a, 0x29, 0x80,
	0x00, 0x1d, 0xae, 0x00, 0xbf, 0xe6, 0xe0, 0xe2, 0xa6, 0x47, 0x30, 0x8d, 0x9a, 0x6c, 0xdb, 0x78,
	0x4a, 0xcc, 0xc0, 0x26, 0xef, 0x8c, 0x10, 0xb0, 0xe9, 0x45, 0x1c, 0xbc, 0x6b, 0x13, 0x93, 0x9f,
	0xb4, 0x2a, 0x7a, 0xf8, 0xc8, 0x3c, 0x3d, 0x62, 0x04, 0x9e, 0x47, 0x98, 0xde, 0x96, 0x38, 0x76,
	0xec, 0x4d, 0x7c, 0xee, 0x95, 0x93, 0x73, 0xef, 0x06, 0xd4, 0x1c, 0xf2, 0x82, 0xb6, 0xbd, 0xc0,
	0x69, 0x63, 0xca, 0x4f, 0x96, 0xd9, 0xe7, 0xed, 0x2a, 0x33, 0xd7, 0x03, 0x67, 0x9d, 0x6a, 0x8b,
	0xb0, 0x30, 0xac, 0x64, 0x52, 0x0a, 0xae, 0xc1, 0xfc, 0x67, 0x96, 0x4f, 0xd3, 0xeb, 0xfe, 0x88,
	0x9a, 0x6a, 0xbf, 0xe5, 0xa1, 0x12, 0x1a, 0xbf, 0x03, 0x85, 0x4f, 0x96, 0xb7, 0xd8, 0x57, 0xde,
	0xb0, 0x88, 0x66, 0x40, 0x58, 0x11, 0x4b, 0xe3, 0x15, 0xf1, 0x6e, 0x40, 0xd6, 0x29, 0xba, 0x0b,
	0xb3, 0x36, 0xf6, 0x69, 0x3b, 0x3a, 0x04, 0x63, 0x71, 0xe8, 0xcf, 0x06, 0x38, 0xc1, 0x7c, 0xe4,
	0x54, 0x30, 0xd7, 0x69, 0x9c, 0x1a, 0x95, 0x24, 0x35, 0xd6, 0x00, 0x38, 0x3e, 0xbf, 0x26, 0xd5,
	0xab, 0xa3, 0x43, 0x63, 0xd6, 0xdb, 0xcc, 0x18, 0x7d, 0x08, 0x15, 0x19, 0x9a, 0x59, 0x87, 0x91,
	0x8e, 0x65, 0x11, 0x92, 0xa9, 0x7d, 0xaf, 0xc0, 0xc5, 0x21, 0xbb, 0x2e, 0x75, 0x67, 0x09, 0x66,
	0x9c, 0xa0, 0xd3, 0xf6, 0xc3, 0x05, 0xbe, 0xb1, 0x45, 0xfd, 0xb8, 0x13, 0x74, 0x22, 0x63, 0x74,
	0x07, 0x2a, 0xa1, 0x81, 0x54, 0x92, 0xcb, 0x59, 0xed, 0x1e, 0x71, 0x2f, 0xf2, 0xd2, 0xbe, 0x53,
	0x60, 0xf1, 0x3e, 0xe9, 0x8b, 0x63, 0xe3, 0x90, 0x6d, 0xfa, 0xd1, 0x4d, 0x4a, 0x02, 0x97, 0x32,
	0xa2, 0x90, 0x25, 0x89, 0x67, 0xab, 0x4c, 0x95, 0xed, 0x5f, 0x39, 0x58, 0xfa, 0xb2, 0x6b, 0x0e,
	0x68, 0xc7, 0x23, 0x4e, 0x18, 0x5d, 0xed, 0x91, 0xb1, 0x30, 0x84, 0x36, 0x1b, 0xae, 0x6b, 0x3f,
	0xc2, 0x76, 0x40, 0x7a, 0x44, 0xbd, 0xd9, 0x77, 0x5b, 0xae, 0xb5, 0x2e, 0xf4, 0x3b, 0x1e, 0x52,
	0xe2, 0x0b, 0xcf, 0x78, 0x87, 0xde, 0xea, 0x13, 0xc0, 0x5a, 0x6b, 0xbe, 0xcf, 0x79, 0x9b, 0x7a,
	0x96, 0xb3, 0x2f, 0xbd, 0x07, 0xf4, 0xaf, 0x14, 0xc1, 0xf2, 0x24, 0x22, 0x78, 0x05, 0x2e, 0x67,
	0x57, 0x5d, 0x4a, 0x61, 0x8a, 0x8c, 0xe1, 0x41, 0xf7, 0xa8, 0xc9, 0xf8, 0x2a, 0x41, 0xc6, 0x74,
	0x14, 0x92, 0x8c, 0x4f, 0xe0, 0x54, 0x84, 0xf4, 0x9f, 0x4e, 0xf1, 0xb3, 0x07, 0xa9, 0x37, 0xda,
	0xdf, 0x4a, 0x72, 0x24, 0x84, 0x0b, 0xa3, 0x46, 0x02, 0x5a, 0x4f, 0x67, 0x97, 0x1b, 0x63, 0x93,
	0x93, 0xbc, 0x5c, 0x4f, 0x57, 0x31, 0x3f, 0x0e, 0x44, 0xa2, 0xc6, 0x6b, 0x00, 0x96, 0xcf, 0x78,
	0xe2, 0x58, 0xce, 0xfe, 0x18, 0xec, 0xae, 0x5a, 0xbe, 0x2e, 0x8c, 0xb5, 0x97, 0x49, 0x55, 0x8c,
	0x25, 0xfe, 0xd6, 0xab, 0xde, 0xfa, 0x07, 0xa0, 0xb4, 0xc9, 0xad, 0xd1, 0x4b, 0x38, 0x99, 0xba,
	0x4d, 0xa0, 0x56, 0x16, 0xfa, 0xe0, 0x6b, 0x91, 0xba, 0x3a, 0x91, 0x8f, 0xcc, 0xf0, 0x15, 0x9c,
	0x4c, 0x5d, 0x26, 0xb3, 0xbf, 0x3d, 0xf8, 0x3f, 0x0a, 0xd4, 0xd5, 0x29, 0x6e, 0xab, 0xcb, 0xca,
	0x8a, 0x82, 0x0e, 0xe0, 0x44, 0xf2, 0xce, 0x82, 0x3e, 0xc8, 0x82, 0x1a, 0x78, 0xb5, 0x52, 0x5b,
	0x93, 0xb8, 0xc8, 0xc4, 0x3d, 0xa8, 0xc5, 0x4e, 0xba, 0xa8, 0x31, 0xd9, 0xa5, 0x42, 0x6d, 0x4e,
	0x78, 0x84, 0xe6, 0xc9, 0xbe, 0x56, 0x60, 0x6e, 0xf0, 0xf1, 0x0c, 0xad, 0x65, 0xa6, 0x90, 0x75,
	0x0a, 0x56, 0x6f, 0x4c, 0xe3, 0x2a, 0xab, 0xf0, 0x83, 0x02, 0x67, 0x07, 0x1e, 0x0c, 0xd0, 0x47,
	0x59, 0xa8, 0x59, 0x27, 0x48, 0x75, 0x6d, 0x0a, 0x4f, 0x11, 0xce, 0x8a, 0x82, 0xde, 0x28, 0x70,
	0x7e, 0xe8, 0x68, 0x46, 0xb7, 0xb2, 0xa0, 0x47, 0x9d, 0x2b, 0xd4, 0x8f, 0xa7, 0xf4, 0x96, 0xb5,
	0xfa, 0x45, 0x81, 0xf9, 0xac, 0xb9, 0x82, 0x6e, 0x67, 0xe1, 0x8f, 0x71, 0x0e, 0x50, 0xef, 0x4c,
	0x0f, 0x20, 0x63, 0x4c, 0x95, 0x2f, 0x39, 0x4c, 0xc6, 0x2e, 0xdf, 0xc0, 0x49, 0x38, 0x76, 0xf9,
	0x86, 0x4c, 0xb0, 0x34, 0xd5, 0x22, 0xb5, 0x1d, 0x9f, 0x6a, 0xe9, 0xc9, 0x34, 0x3e, 0xd5, 0xfa,
	0xa4, 0x7d, 0x45, 0xd9, 0x68, 0x7d, 0xb5, 0xb2, 0x6f, 0xd1, 0xa7, 0xc1, 0x6e, 0xc3, 0x70, 0x3b,
	0x4d, 0x06, 0xd4, 0x0c, 0x81, 0x9a, 0x43, 0xfe, 0x62, 0xb3, 0x5b, 0xe2, 0x03, 0x65, 0xf5, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x9e, 0x21, 0x8f, 0xd3, 0x19, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CerealClient is the client API for Cereal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CerealClient interface {
	EnqueueWorkflow(ctx context.Context, in *EnqueueWorkflowRequest, opts ...grpc.CallOption) (*EnqueueWorkflowResponse, error)
	DequeueWorkflow(ctx context.Context, opts ...grpc.CallOption) (Cereal_DequeueWorkflowClient, error)
	CancelWorkflow(ctx context.Context, in *CancelWorkflowRequest, opts ...grpc.CallOption) (*CancelWorkflowResponse, error)
	DequeueTask(ctx context.Context, opts ...grpc.CallOption) (Cereal_DequeueTaskClient, error)
	CreateWorkflowSchedule(ctx context.Context, in *CreateWorkflowScheduleRequest, opts ...grpc.CallOption) (*CreateWorkflowScheduleResponse, error)
	ListWorkflowSchedules(ctx context.Context, in *ListWorkflowSchedulesRequest, opts ...grpc.CallOption) (Cereal_ListWorkflowSchedulesClient, error)
	GetWorkflowScheduleByName(ctx context.Context, in *GetWorkflowScheduleByNameRequest, opts ...grpc.CallOption) (*GetWorkflowScheduleByNameResponse, error)
	UpdateWorkflowScheduleByName(ctx context.Context, in *UpdateWorkflowScheduleByNameRequest, opts ...grpc.CallOption) (*UpdateWorkflowScheduleByNameResponse, error)
	GetWorkflowInstanceByName(ctx context.Context, in *GetWorkflowInstanceByNameRequest, opts ...grpc.CallOption) (*GetWorkflowInstanceByNameResponse, error)
	ListWorkflowInstances(ctx context.Context, in *ListWorkflowInstancesRequest, opts ...grpc.CallOption) (Cereal_ListWorkflowInstancesClient, error)
}

type cerealClient struct {
	cc *grpc.ClientConn
}

func NewCerealClient(cc *grpc.ClientConn) CerealClient {
	return &cerealClient{cc}
}

func (c *cerealClient) EnqueueWorkflow(ctx context.Context, in *EnqueueWorkflowRequest, opts ...grpc.CallOption) (*EnqueueWorkflowResponse, error) {
	out := new(EnqueueWorkflowResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/EnqueueWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) DequeueWorkflow(ctx context.Context, opts ...grpc.CallOption) (Cereal_DequeueWorkflowClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Cereal_serviceDesc.Streams[0], "/chef.automate.infra.cereal.Cereal/DequeueWorkflow", opts...)
	if err != nil {
		return nil, err
	}
	x := &cerealDequeueWorkflowClient{stream}
	return x, nil
}

type Cereal_DequeueWorkflowClient interface {
	Send(*DequeueWorkflowRequest) error
	Recv() (*DequeueWorkflowResponse, error)
	grpc.ClientStream
}

type cerealDequeueWorkflowClient struct {
	grpc.ClientStream
}

func (x *cerealDequeueWorkflowClient) Send(m *DequeueWorkflowRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cerealDequeueWorkflowClient) Recv() (*DequeueWorkflowResponse, error) {
	m := new(DequeueWorkflowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cerealClient) CancelWorkflow(ctx context.Context, in *CancelWorkflowRequest, opts ...grpc.CallOption) (*CancelWorkflowResponse, error) {
	out := new(CancelWorkflowResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/CancelWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) DequeueTask(ctx context.Context, opts ...grpc.CallOption) (Cereal_DequeueTaskClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Cereal_serviceDesc.Streams[1], "/chef.automate.infra.cereal.Cereal/DequeueTask", opts...)
	if err != nil {
		return nil, err
	}
	x := &cerealDequeueTaskClient{stream}
	return x, nil
}

type Cereal_DequeueTaskClient interface {
	Send(*DequeueTaskRequest) error
	Recv() (*DequeueTaskResponse, error)
	grpc.ClientStream
}

type cerealDequeueTaskClient struct {
	grpc.ClientStream
}

func (x *cerealDequeueTaskClient) Send(m *DequeueTaskRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cerealDequeueTaskClient) Recv() (*DequeueTaskResponse, error) {
	m := new(DequeueTaskResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cerealClient) CreateWorkflowSchedule(ctx context.Context, in *CreateWorkflowScheduleRequest, opts ...grpc.CallOption) (*CreateWorkflowScheduleResponse, error) {
	out := new(CreateWorkflowScheduleResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/CreateWorkflowSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) ListWorkflowSchedules(ctx context.Context, in *ListWorkflowSchedulesRequest, opts ...grpc.CallOption) (Cereal_ListWorkflowSchedulesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Cereal_serviceDesc.Streams[2], "/chef.automate.infra.cereal.Cereal/ListWorkflowSchedules", opts...)
	if err != nil {
		return nil, err
	}
	x := &cerealListWorkflowSchedulesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Cereal_ListWorkflowSchedulesClient interface {
	Recv() (*ListWorkflowSchedulesResponse, error)
	grpc.ClientStream
}

type cerealListWorkflowSchedulesClient struct {
	grpc.ClientStream
}

func (x *cerealListWorkflowSchedulesClient) Recv() (*ListWorkflowSchedulesResponse, error) {
	m := new(ListWorkflowSchedulesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cerealClient) GetWorkflowScheduleByName(ctx context.Context, in *GetWorkflowScheduleByNameRequest, opts ...grpc.CallOption) (*GetWorkflowScheduleByNameResponse, error) {
	out := new(GetWorkflowScheduleByNameResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/GetWorkflowScheduleByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) UpdateWorkflowScheduleByName(ctx context.Context, in *UpdateWorkflowScheduleByNameRequest, opts ...grpc.CallOption) (*UpdateWorkflowScheduleByNameResponse, error) {
	out := new(UpdateWorkflowScheduleByNameResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/UpdateWorkflowScheduleByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) GetWorkflowInstanceByName(ctx context.Context, in *GetWorkflowInstanceByNameRequest, opts ...grpc.CallOption) (*GetWorkflowInstanceByNameResponse, error) {
	out := new(GetWorkflowInstanceByNameResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.cereal.Cereal/GetWorkflowInstanceByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cerealClient) ListWorkflowInstances(ctx context.Context, in *ListWorkflowInstancesRequest, opts ...grpc.CallOption) (Cereal_ListWorkflowInstancesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Cereal_serviceDesc.Streams[3], "/chef.automate.infra.cereal.Cereal/ListWorkflowInstances", opts...)
	if err != nil {
		return nil, err
	}
	x := &cerealListWorkflowInstancesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Cereal_ListWorkflowInstancesClient interface {
	Recv() (*ListWorkflowInstancesResponse, error)
	grpc.ClientStream
}

type cerealListWorkflowInstancesClient struct {
	grpc.ClientStream
}

func (x *cerealListWorkflowInstancesClient) Recv() (*ListWorkflowInstancesResponse, error) {
	m := new(ListWorkflowInstancesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CerealServer is the server API for Cereal service.
type CerealServer interface {
	EnqueueWorkflow(context.Context, *EnqueueWorkflowRequest) (*EnqueueWorkflowResponse, error)
	DequeueWorkflow(Cereal_DequeueWorkflowServer) error
	CancelWorkflow(context.Context, *CancelWorkflowRequest) (*CancelWorkflowResponse, error)
	DequeueTask(Cereal_DequeueTaskServer) error
	CreateWorkflowSchedule(context.Context, *CreateWorkflowScheduleRequest) (*CreateWorkflowScheduleResponse, error)
	ListWorkflowSchedules(*ListWorkflowSchedulesRequest, Cereal_ListWorkflowSchedulesServer) error
	GetWorkflowScheduleByName(context.Context, *GetWorkflowScheduleByNameRequest) (*GetWorkflowScheduleByNameResponse, error)
	UpdateWorkflowScheduleByName(context.Context, *UpdateWorkflowScheduleByNameRequest) (*UpdateWorkflowScheduleByNameResponse, error)
	GetWorkflowInstanceByName(context.Context, *GetWorkflowInstanceByNameRequest) (*GetWorkflowInstanceByNameResponse, error)
	ListWorkflowInstances(*ListWorkflowInstancesRequest, Cereal_ListWorkflowInstancesServer) error
}

// UnimplementedCerealServer can be embedded to have forward compatible implementations.
type UnimplementedCerealServer struct {
}

func (*UnimplementedCerealServer) EnqueueWorkflow(ctx context.Context, req *EnqueueWorkflowRequest) (*EnqueueWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnqueueWorkflow not implemented")
}
func (*UnimplementedCerealServer) DequeueWorkflow(srv Cereal_DequeueWorkflowServer) error {
	return status.Errorf(codes.Unimplemented, "method DequeueWorkflow not implemented")
}
func (*UnimplementedCerealServer) CancelWorkflow(ctx context.Context, req *CancelWorkflowRequest) (*CancelWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelWorkflow not implemented")
}
func (*UnimplementedCerealServer) DequeueTask(srv Cereal_DequeueTaskServer) error {
	return status.Errorf(codes.Unimplemented, "method DequeueTask not implemented")
}
func (*UnimplementedCerealServer) CreateWorkflowSchedule(ctx context.Context, req *CreateWorkflowScheduleRequest) (*CreateWorkflowScheduleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowSchedule not implemented")
}
func (*UnimplementedCerealServer) ListWorkflowSchedules(req *ListWorkflowSchedulesRequest, srv Cereal_ListWorkflowSchedulesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListWorkflowSchedules not implemented")
}
func (*UnimplementedCerealServer) GetWorkflowScheduleByName(ctx context.Context, req *GetWorkflowScheduleByNameRequest) (*GetWorkflowScheduleByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowScheduleByName not implemented")
}
func (*UnimplementedCerealServer) UpdateWorkflowScheduleByName(ctx context.Context, req *UpdateWorkflowScheduleByNameRequest) (*UpdateWorkflowScheduleByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowScheduleByName not implemented")
}
func (*UnimplementedCerealServer) GetWorkflowInstanceByName(ctx context.Context, req *GetWorkflowInstanceByNameRequest) (*GetWorkflowInstanceByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowInstanceByName not implemented")
}
func (*UnimplementedCerealServer) ListWorkflowInstances(req *ListWorkflowInstancesRequest, srv Cereal_ListWorkflowInstancesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListWorkflowInstances not implemented")
}

func RegisterCerealServer(s *grpc.Server, srv CerealServer) {
	s.RegisterService(&_Cereal_serviceDesc, srv)
}

func _Cereal_EnqueueWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).EnqueueWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/EnqueueWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).EnqueueWorkflow(ctx, req.(*EnqueueWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_DequeueWorkflow_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CerealServer).DequeueWorkflow(&cerealDequeueWorkflowServer{stream})
}

type Cereal_DequeueWorkflowServer interface {
	Send(*DequeueWorkflowResponse) error
	Recv() (*DequeueWorkflowRequest, error)
	grpc.ServerStream
}

type cerealDequeueWorkflowServer struct {
	grpc.ServerStream
}

func (x *cerealDequeueWorkflowServer) Send(m *DequeueWorkflowResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cerealDequeueWorkflowServer) Recv() (*DequeueWorkflowRequest, error) {
	m := new(DequeueWorkflowRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Cereal_CancelWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).CancelWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/CancelWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).CancelWorkflow(ctx, req.(*CancelWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_DequeueTask_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CerealServer).DequeueTask(&cerealDequeueTaskServer{stream})
}

type Cereal_DequeueTaskServer interface {
	Send(*DequeueTaskResponse) error
	Recv() (*DequeueTaskRequest, error)
	grpc.ServerStream
}

type cerealDequeueTaskServer struct {
	grpc.ServerStream
}

func (x *cerealDequeueTaskServer) Send(m *DequeueTaskResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cerealDequeueTaskServer) Recv() (*DequeueTaskRequest, error) {
	m := new(DequeueTaskRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Cereal_CreateWorkflowSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).CreateWorkflowSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/CreateWorkflowSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).CreateWorkflowSchedule(ctx, req.(*CreateWorkflowScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_ListWorkflowSchedules_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListWorkflowSchedulesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CerealServer).ListWorkflowSchedules(m, &cerealListWorkflowSchedulesServer{stream})
}

type Cereal_ListWorkflowSchedulesServer interface {
	Send(*ListWorkflowSchedulesResponse) error
	grpc.ServerStream
}

type cerealListWorkflowSchedulesServer struct {
	grpc.ServerStream
}

func (x *cerealListWorkflowSchedulesServer) Send(m *ListWorkflowSchedulesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Cereal_GetWorkflowScheduleByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowScheduleByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).GetWorkflowScheduleByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/GetWorkflowScheduleByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).GetWorkflowScheduleByName(ctx, req.(*GetWorkflowScheduleByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_UpdateWorkflowScheduleByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowScheduleByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).UpdateWorkflowScheduleByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/UpdateWorkflowScheduleByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).UpdateWorkflowScheduleByName(ctx, req.(*UpdateWorkflowScheduleByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_GetWorkflowInstanceByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowInstanceByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CerealServer).GetWorkflowInstanceByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.cereal.Cereal/GetWorkflowInstanceByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CerealServer).GetWorkflowInstanceByName(ctx, req.(*GetWorkflowInstanceByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cereal_ListWorkflowInstances_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListWorkflowInstancesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CerealServer).ListWorkflowInstances(m, &cerealListWorkflowInstancesServer{stream})
}

type Cereal_ListWorkflowInstancesServer interface {
	Send(*ListWorkflowInstancesResponse) error
	grpc.ServerStream
}

type cerealListWorkflowInstancesServer struct {
	grpc.ServerStream
}

func (x *cerealListWorkflowInstancesServer) Send(m *ListWorkflowInstancesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Cereal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.infra.cereal.Cereal",
	HandlerType: (*CerealServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnqueueWorkflow",
			Handler:    _Cereal_EnqueueWorkflow_Handler,
		},
		{
			MethodName: "CancelWorkflow",
			Handler:    _Cereal_CancelWorkflow_Handler,
		},
		{
			MethodName: "CreateWorkflowSchedule",
			Handler:    _Cereal_CreateWorkflowSchedule_Handler,
		},
		{
			MethodName: "GetWorkflowScheduleByName",
			Handler:    _Cereal_GetWorkflowScheduleByName_Handler,
		},
		{
			MethodName: "UpdateWorkflowScheduleByName",
			Handler:    _Cereal_UpdateWorkflowScheduleByName_Handler,
		},
		{
			MethodName: "GetWorkflowInstanceByName",
			Handler:    _Cereal_GetWorkflowInstanceByName_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DequeueWorkflow",
			Handler:       _Cereal_DequeueWorkflow_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DequeueTask",
			Handler:       _Cereal_DequeueTask_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ListWorkflowSchedules",
			Handler:       _Cereal_ListWorkflowSchedules_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListWorkflowInstances",
			Handler:       _Cereal_ListWorkflowInstances_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/interservice/cereal/cereal.proto",
}
