syntax = "proto3";

package chef.automate.domain.ingest;
option go_package = "github.com/chef/automate/api/interservice/ingest";

import "google/api/annotations.proto";

// Health message
//
// The ingest-service health is constructed with:
// * Status:
//            => ok:             Everything is alright
//            => initialization: The service is in its initialization process
//            => warning:        Something might be wrong?
//            => critical:       Something is wrong!
//
// @afiune: Here we can add more health information to the response
message Health {
  string status = 1;
}

// Migration message
message MigrationStatus {
  int64 total = 1;
  int64 completed = 2;
  string status = 3;
  bool finished = 4;
}

// Metrics message
message Metrics {
  double uptime = 5;
  PipelineMetrics pipeline = 6;
}

message PipelineMetrics {
  int64 total_run_messages = 5;
  int64 total_action_messages = 6;
}

message HealthRequest {}
message MetricsRequest {}
message MigrationStatusRequest {}

service IngestStatusService {
	rpc GetMetrics (MetricsRequest) returns (Metrics);
	rpc GetHealth (HealthRequest) returns (Health) {
		option (google.api.http).get = "/api/v0/health";
	};
	rpc GetMigrationStatus (MigrationStatusRequest) returns (MigrationStatus) {
		option (google.api.http).get = "/api/v0/migration";
	};
}

