// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/teams/v2/teams.proto

package v2

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Team struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Projects             []string `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{0}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type GetTeamReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamReq) Reset()         { *m = GetTeamReq{} }
func (m *GetTeamReq) String() string { return proto.CompactTextString(m) }
func (*GetTeamReq) ProtoMessage()    {}
func (*GetTeamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{1}
}

func (m *GetTeamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamReq.Unmarshal(m, b)
}
func (m *GetTeamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamReq.Marshal(b, m, deterministic)
}
func (m *GetTeamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamReq.Merge(m, src)
}
func (m *GetTeamReq) XXX_Size() int {
	return xxx_messageInfo_GetTeamReq.Size(m)
}
func (m *GetTeamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamReq proto.InternalMessageInfo

func (m *GetTeamReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTeamResp struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty" toml:"team,omitempty" mapstructure:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamResp) Reset()         { *m = GetTeamResp{} }
func (m *GetTeamResp) String() string { return proto.CompactTextString(m) }
func (*GetTeamResp) ProtoMessage()    {}
func (*GetTeamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{2}
}

func (m *GetTeamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamResp.Unmarshal(m, b)
}
func (m *GetTeamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamResp.Marshal(b, m, deterministic)
}
func (m *GetTeamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamResp.Merge(m, src)
}
func (m *GetTeamResp) XXX_Size() int {
	return xxx_messageInfo_GetTeamResp.Size(m)
}
func (m *GetTeamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamResp proto.InternalMessageInfo

func (m *GetTeamResp) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type ListTeamsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListTeamsReq) Reset()         { *m = ListTeamsReq{} }
func (m *ListTeamsReq) String() string { return proto.CompactTextString(m) }
func (*ListTeamsReq) ProtoMessage()    {}
func (*ListTeamsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{3}
}

func (m *ListTeamsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamsReq.Unmarshal(m, b)
}
func (m *ListTeamsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamsReq.Marshal(b, m, deterministic)
}
func (m *ListTeamsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamsReq.Merge(m, src)
}
func (m *ListTeamsReq) XXX_Size() int {
	return xxx_messageInfo_ListTeamsReq.Size(m)
}
func (m *ListTeamsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamsReq proto.InternalMessageInfo

type ListTeamsResp struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty" toml:"teams,omitempty" mapstructure:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListTeamsResp) Reset()         { *m = ListTeamsResp{} }
func (m *ListTeamsResp) String() string { return proto.CompactTextString(m) }
func (*ListTeamsResp) ProtoMessage()    {}
func (*ListTeamsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{4}
}

func (m *ListTeamsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamsResp.Unmarshal(m, b)
}
func (m *ListTeamsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamsResp.Marshal(b, m, deterministic)
}
func (m *ListTeamsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamsResp.Merge(m, src)
}
func (m *ListTeamsResp) XXX_Size() int {
	return xxx_messageInfo_ListTeamsResp.Size(m)
}
func (m *ListTeamsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamsResp proto.InternalMessageInfo

func (m *ListTeamsResp) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type UpdateTeamReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Projects             []string `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateTeamReq) Reset()         { *m = UpdateTeamReq{} }
func (m *UpdateTeamReq) String() string { return proto.CompactTextString(m) }
func (*UpdateTeamReq) ProtoMessage()    {}
func (*UpdateTeamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{5}
}

func (m *UpdateTeamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTeamReq.Unmarshal(m, b)
}
func (m *UpdateTeamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTeamReq.Marshal(b, m, deterministic)
}
func (m *UpdateTeamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTeamReq.Merge(m, src)
}
func (m *UpdateTeamReq) XXX_Size() int {
	return xxx_messageInfo_UpdateTeamReq.Size(m)
}
func (m *UpdateTeamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTeamReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTeamReq proto.InternalMessageInfo

func (m *UpdateTeamReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTeamReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateTeamReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type UpdateTeamResp struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty" toml:"team,omitempty" mapstructure:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateTeamResp) Reset()         { *m = UpdateTeamResp{} }
func (m *UpdateTeamResp) String() string { return proto.CompactTextString(m) }
func (*UpdateTeamResp) ProtoMessage()    {}
func (*UpdateTeamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{6}
}

func (m *UpdateTeamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTeamResp.Unmarshal(m, b)
}
func (m *UpdateTeamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTeamResp.Marshal(b, m, deterministic)
}
func (m *UpdateTeamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTeamResp.Merge(m, src)
}
func (m *UpdateTeamResp) XXX_Size() int {
	return xxx_messageInfo_UpdateTeamResp.Size(m)
}
func (m *UpdateTeamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTeamResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTeamResp proto.InternalMessageInfo

func (m *UpdateTeamResp) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type DeleteTeamReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeleteTeamReq) Reset()         { *m = DeleteTeamReq{} }
func (m *DeleteTeamReq) String() string { return proto.CompactTextString(m) }
func (*DeleteTeamReq) ProtoMessage()    {}
func (*DeleteTeamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{7}
}

func (m *DeleteTeamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTeamReq.Unmarshal(m, b)
}
func (m *DeleteTeamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTeamReq.Marshal(b, m, deterministic)
}
func (m *DeleteTeamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTeamReq.Merge(m, src)
}
func (m *DeleteTeamReq) XXX_Size() int {
	return xxx_messageInfo_DeleteTeamReq.Size(m)
}
func (m *DeleteTeamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTeamReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTeamReq proto.InternalMessageInfo

func (m *DeleteTeamReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteTeamResp struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty" toml:"team,omitempty" mapstructure:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeleteTeamResp) Reset()         { *m = DeleteTeamResp{} }
func (m *DeleteTeamResp) String() string { return proto.CompactTextString(m) }
func (*DeleteTeamResp) ProtoMessage()    {}
func (*DeleteTeamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{8}
}

func (m *DeleteTeamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTeamResp.Unmarshal(m, b)
}
func (m *DeleteTeamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTeamResp.Marshal(b, m, deterministic)
}
func (m *DeleteTeamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTeamResp.Merge(m, src)
}
func (m *DeleteTeamResp) XXX_Size() int {
	return xxx_messageInfo_DeleteTeamResp.Size(m)
}
func (m *DeleteTeamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTeamResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTeamResp proto.InternalMessageInfo

func (m *DeleteTeamResp) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type CreateTeamReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Projects             []string `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateTeamReq) Reset()         { *m = CreateTeamReq{} }
func (m *CreateTeamReq) String() string { return proto.CompactTextString(m) }
func (*CreateTeamReq) ProtoMessage()    {}
func (*CreateTeamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{9}
}

func (m *CreateTeamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTeamReq.Unmarshal(m, b)
}
func (m *CreateTeamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTeamReq.Marshal(b, m, deterministic)
}
func (m *CreateTeamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTeamReq.Merge(m, src)
}
func (m *CreateTeamReq) XXX_Size() int {
	return xxx_messageInfo_CreateTeamReq.Size(m)
}
func (m *CreateTeamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTeamReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTeamReq proto.InternalMessageInfo

func (m *CreateTeamReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateTeamReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTeamReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type CreateTeamResp struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty" toml:"team,omitempty" mapstructure:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateTeamResp) Reset()         { *m = CreateTeamResp{} }
func (m *CreateTeamResp) String() string { return proto.CompactTextString(m) }
func (*CreateTeamResp) ProtoMessage()    {}
func (*CreateTeamResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{10}
}

func (m *CreateTeamResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTeamResp.Unmarshal(m, b)
}
func (m *CreateTeamResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTeamResp.Marshal(b, m, deterministic)
}
func (m *CreateTeamResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTeamResp.Merge(m, src)
}
func (m *CreateTeamResp) XXX_Size() int {
	return xxx_messageInfo_CreateTeamResp.Size(m)
}
func (m *CreateTeamResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTeamResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTeamResp proto.InternalMessageInfo

func (m *CreateTeamResp) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type AddTeamMembersReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// However, this regex works for V1 and V2 User IDs.
	UserIds              []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" toml:"user_ids,omitempty" mapstructure:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AddTeamMembersReq) Reset()         { *m = AddTeamMembersReq{} }
func (m *AddTeamMembersReq) String() string { return proto.CompactTextString(m) }
func (*AddTeamMembersReq) ProtoMessage()    {}
func (*AddTeamMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{11}
}

func (m *AddTeamMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTeamMembersReq.Unmarshal(m, b)
}
func (m *AddTeamMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTeamMembersReq.Marshal(b, m, deterministic)
}
func (m *AddTeamMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTeamMembersReq.Merge(m, src)
}
func (m *AddTeamMembersReq) XXX_Size() int {
	return xxx_messageInfo_AddTeamMembersReq.Size(m)
}
func (m *AddTeamMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTeamMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddTeamMembersReq proto.InternalMessageInfo

func (m *AddTeamMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddTeamMembersReq) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type AddTeamMembersResp struct {
	UserIds              []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" toml:"user_ids,omitempty" mapstructure:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AddTeamMembersResp) Reset()         { *m = AddTeamMembersResp{} }
func (m *AddTeamMembersResp) String() string { return proto.CompactTextString(m) }
func (*AddTeamMembersResp) ProtoMessage()    {}
func (*AddTeamMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{12}
}

func (m *AddTeamMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTeamMembersResp.Unmarshal(m, b)
}
func (m *AddTeamMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTeamMembersResp.Marshal(b, m, deterministic)
}
func (m *AddTeamMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTeamMembersResp.Merge(m, src)
}
func (m *AddTeamMembersResp) XXX_Size() int {
	return xxx_messageInfo_AddTeamMembersResp.Size(m)
}
func (m *AddTeamMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTeamMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddTeamMembersResp proto.InternalMessageInfo

func (m *AddTeamMembersResp) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type RemoveTeamMembersReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// However, this regex works for V1 and V2 User IDs.
	UserIds              []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" toml:"user_ids,omitempty" mapstructure:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *RemoveTeamMembersReq) Reset()         { *m = RemoveTeamMembersReq{} }
func (m *RemoveTeamMembersReq) String() string { return proto.CompactTextString(m) }
func (*RemoveTeamMembersReq) ProtoMessage()    {}
func (*RemoveTeamMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{13}
}

func (m *RemoveTeamMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTeamMembersReq.Unmarshal(m, b)
}
func (m *RemoveTeamMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTeamMembersReq.Marshal(b, m, deterministic)
}
func (m *RemoveTeamMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTeamMembersReq.Merge(m, src)
}
func (m *RemoveTeamMembersReq) XXX_Size() int {
	return xxx_messageInfo_RemoveTeamMembersReq.Size(m)
}
func (m *RemoveTeamMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTeamMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTeamMembersReq proto.InternalMessageInfo

func (m *RemoveTeamMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoveTeamMembersReq) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type RemoveTeamMembersResp struct {
	UserIds              []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" toml:"user_ids,omitempty" mapstructure:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *RemoveTeamMembersResp) Reset()         { *m = RemoveTeamMembersResp{} }
func (m *RemoveTeamMembersResp) String() string { return proto.CompactTextString(m) }
func (*RemoveTeamMembersResp) ProtoMessage()    {}
func (*RemoveTeamMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{14}
}

func (m *RemoveTeamMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTeamMembersResp.Unmarshal(m, b)
}
func (m *RemoveTeamMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTeamMembersResp.Marshal(b, m, deterministic)
}
func (m *RemoveTeamMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTeamMembersResp.Merge(m, src)
}
func (m *RemoveTeamMembersResp) XXX_Size() int {
	return xxx_messageInfo_RemoveTeamMembersResp.Size(m)
}
func (m *RemoveTeamMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTeamMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTeamMembersResp proto.InternalMessageInfo

func (m *RemoveTeamMembersResp) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type GetTeamsForMemberReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" toml:"user_id,omitempty" mapstructure:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamsForMemberReq) Reset()         { *m = GetTeamsForMemberReq{} }
func (m *GetTeamsForMemberReq) String() string { return proto.CompactTextString(m) }
func (*GetTeamsForMemberReq) ProtoMessage()    {}
func (*GetTeamsForMemberReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{15}
}

func (m *GetTeamsForMemberReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamsForMemberReq.Unmarshal(m, b)
}
func (m *GetTeamsForMemberReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamsForMemberReq.Marshal(b, m, deterministic)
}
func (m *GetTeamsForMemberReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamsForMemberReq.Merge(m, src)
}
func (m *GetTeamsForMemberReq) XXX_Size() int {
	return xxx_messageInfo_GetTeamsForMemberReq.Size(m)
}
func (m *GetTeamsForMemberReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamsForMemberReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamsForMemberReq proto.InternalMessageInfo

func (m *GetTeamsForMemberReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetTeamsForMemberResp struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty" toml:"teams,omitempty" mapstructure:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamsForMemberResp) Reset()         { *m = GetTeamsForMemberResp{} }
func (m *GetTeamsForMemberResp) String() string { return proto.CompactTextString(m) }
func (*GetTeamsForMemberResp) ProtoMessage()    {}
func (*GetTeamsForMemberResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{16}
}

func (m *GetTeamsForMemberResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamsForMemberResp.Unmarshal(m, b)
}
func (m *GetTeamsForMemberResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamsForMemberResp.Marshal(b, m, deterministic)
}
func (m *GetTeamsForMemberResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamsForMemberResp.Merge(m, src)
}
func (m *GetTeamsForMemberResp) XXX_Size() int {
	return xxx_messageInfo_GetTeamsForMemberResp.Size(m)
}
func (m *GetTeamsForMemberResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamsForMemberResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamsForMemberResp proto.InternalMessageInfo

func (m *GetTeamsForMemberResp) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type GetTeamMembershipReq struct {
	// TODO (tc): We can't make this more restrictive until we migrate
	// existing IDs post-GA.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamMembershipReq) Reset()         { *m = GetTeamMembershipReq{} }
func (m *GetTeamMembershipReq) String() string { return proto.CompactTextString(m) }
func (*GetTeamMembershipReq) ProtoMessage()    {}
func (*GetTeamMembershipReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{17}
}

func (m *GetTeamMembershipReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamMembershipReq.Unmarshal(m, b)
}
func (m *GetTeamMembershipReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamMembershipReq.Marshal(b, m, deterministic)
}
func (m *GetTeamMembershipReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamMembershipReq.Merge(m, src)
}
func (m *GetTeamMembershipReq) XXX_Size() int {
	return xxx_messageInfo_GetTeamMembershipReq.Size(m)
}
func (m *GetTeamMembershipReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamMembershipReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamMembershipReq proto.InternalMessageInfo

func (m *GetTeamMembershipReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTeamMembershipResp struct {
	UserIds              []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" toml:"user_ids,omitempty" mapstructure:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetTeamMembershipResp) Reset()         { *m = GetTeamMembershipResp{} }
func (m *GetTeamMembershipResp) String() string { return proto.CompactTextString(m) }
func (*GetTeamMembershipResp) ProtoMessage()    {}
func (*GetTeamMembershipResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{18}
}

func (m *GetTeamMembershipResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamMembershipResp.Unmarshal(m, b)
}
func (m *GetTeamMembershipResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamMembershipResp.Marshal(b, m, deterministic)
}
func (m *GetTeamMembershipResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamMembershipResp.Merge(m, src)
}
func (m *GetTeamMembershipResp) XXX_Size() int {
	return xxx_messageInfo_GetTeamMembershipResp.Size(m)
}
func (m *GetTeamMembershipResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamMembershipResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamMembershipResp proto.InternalMessageInfo

func (m *GetTeamMembershipResp) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type UpgradeToV2Req struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpgradeToV2Req) Reset()         { *m = UpgradeToV2Req{} }
func (m *UpgradeToV2Req) String() string { return proto.CompactTextString(m) }
func (*UpgradeToV2Req) ProtoMessage()    {}
func (*UpgradeToV2Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{19}
}

func (m *UpgradeToV2Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeToV2Req.Unmarshal(m, b)
}
func (m *UpgradeToV2Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeToV2Req.Marshal(b, m, deterministic)
}
func (m *UpgradeToV2Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeToV2Req.Merge(m, src)
}
func (m *UpgradeToV2Req) XXX_Size() int {
	return xxx_messageInfo_UpgradeToV2Req.Size(m)
}
func (m *UpgradeToV2Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeToV2Req.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeToV2Req proto.InternalMessageInfo

type UpgradeToV2Resp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpgradeToV2Resp) Reset()         { *m = UpgradeToV2Resp{} }
func (m *UpgradeToV2Resp) String() string { return proto.CompactTextString(m) }
func (*UpgradeToV2Resp) ProtoMessage()    {}
func (*UpgradeToV2Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{20}
}

func (m *UpgradeToV2Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeToV2Resp.Unmarshal(m, b)
}
func (m *UpgradeToV2Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeToV2Resp.Marshal(b, m, deterministic)
}
func (m *UpgradeToV2Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeToV2Resp.Merge(m, src)
}
func (m *UpgradeToV2Resp) XXX_Size() int {
	return xxx_messageInfo_UpgradeToV2Resp.Size(m)
}
func (m *UpgradeToV2Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeToV2Resp.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeToV2Resp proto.InternalMessageInfo

type ResetToV1Req struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ResetToV1Req) Reset()         { *m = ResetToV1Req{} }
func (m *ResetToV1Req) String() string { return proto.CompactTextString(m) }
func (*ResetToV1Req) ProtoMessage()    {}
func (*ResetToV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{21}
}

func (m *ResetToV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetToV1Req.Unmarshal(m, b)
}
func (m *ResetToV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetToV1Req.Marshal(b, m, deterministic)
}
func (m *ResetToV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetToV1Req.Merge(m, src)
}
func (m *ResetToV1Req) XXX_Size() int {
	return xxx_messageInfo_ResetToV1Req.Size(m)
}
func (m *ResetToV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetToV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_ResetToV1Req proto.InternalMessageInfo

type ResetToV1Resp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ResetToV1Resp) Reset()         { *m = ResetToV1Resp{} }
func (m *ResetToV1Resp) String() string { return proto.CompactTextString(m) }
func (*ResetToV1Resp) ProtoMessage()    {}
func (*ResetToV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87f9ac935e91df24, []int{22}
}

func (m *ResetToV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetToV1Resp.Unmarshal(m, b)
}
func (m *ResetToV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetToV1Resp.Marshal(b, m, deterministic)
}
func (m *ResetToV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetToV1Resp.Merge(m, src)
}
func (m *ResetToV1Resp) XXX_Size() int {
	return xxx_messageInfo_ResetToV1Resp.Size(m)
}
func (m *ResetToV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetToV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_ResetToV1Resp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Team)(nil), "chef.automate.domain.teams.v2.Team")
	proto.RegisterType((*GetTeamReq)(nil), "chef.automate.domain.teams.v2.GetTeamReq")
	proto.RegisterType((*GetTeamResp)(nil), "chef.automate.domain.teams.v2.GetTeamResp")
	proto.RegisterType((*ListTeamsReq)(nil), "chef.automate.domain.teams.v2.ListTeamsReq")
	proto.RegisterType((*ListTeamsResp)(nil), "chef.automate.domain.teams.v2.ListTeamsResp")
	proto.RegisterType((*UpdateTeamReq)(nil), "chef.automate.domain.teams.v2.UpdateTeamReq")
	proto.RegisterType((*UpdateTeamResp)(nil), "chef.automate.domain.teams.v2.UpdateTeamResp")
	proto.RegisterType((*DeleteTeamReq)(nil), "chef.automate.domain.teams.v2.DeleteTeamReq")
	proto.RegisterType((*DeleteTeamResp)(nil), "chef.automate.domain.teams.v2.DeleteTeamResp")
	proto.RegisterType((*CreateTeamReq)(nil), "chef.automate.domain.teams.v2.CreateTeamReq")
	proto.RegisterType((*CreateTeamResp)(nil), "chef.automate.domain.teams.v2.CreateTeamResp")
	proto.RegisterType((*AddTeamMembersReq)(nil), "chef.automate.domain.teams.v2.AddTeamMembersReq")
	proto.RegisterType((*AddTeamMembersResp)(nil), "chef.automate.domain.teams.v2.AddTeamMembersResp")
	proto.RegisterType((*RemoveTeamMembersReq)(nil), "chef.automate.domain.teams.v2.RemoveTeamMembersReq")
	proto.RegisterType((*RemoveTeamMembersResp)(nil), "chef.automate.domain.teams.v2.RemoveTeamMembersResp")
	proto.RegisterType((*GetTeamsForMemberReq)(nil), "chef.automate.domain.teams.v2.GetTeamsForMemberReq")
	proto.RegisterType((*GetTeamsForMemberResp)(nil), "chef.automate.domain.teams.v2.GetTeamsForMemberResp")
	proto.RegisterType((*GetTeamMembershipReq)(nil), "chef.automate.domain.teams.v2.GetTeamMembershipReq")
	proto.RegisterType((*GetTeamMembershipResp)(nil), "chef.automate.domain.teams.v2.GetTeamMembershipResp")
	proto.RegisterType((*UpgradeToV2Req)(nil), "chef.automate.domain.teams.v2.UpgradeToV2Req")
	proto.RegisterType((*UpgradeToV2Resp)(nil), "chef.automate.domain.teams.v2.UpgradeToV2Resp")
	proto.RegisterType((*ResetToV1Req)(nil), "chef.automate.domain.teams.v2.ResetToV1Req")
	proto.RegisterType((*ResetToV1Resp)(nil), "chef.automate.domain.teams.v2.ResetToV1Resp")
}

func init() {
	proto.RegisterFile("api/interservice/teams/v2/teams.proto", fileDescriptor_87f9ac935e91df24)
}

var fileDescriptor_87f9ac935e91df24 = []byte{
	// 794 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0x5f, 0x4f, 0xd3, 0x50,
	0x18, 0xc6, 0xd7, 0x6d, 0x32, 0xf6, 0xce, 0x0d, 0x38, 0x82, 0xcc, 0x0a, 0x71, 0xa9, 0x90, 0x80,
	0xb0, 0x16, 0xca, 0xd4, 0xc0, 0x85, 0x41, 0x34, 0x18, 0x8c, 0xdc, 0x54, 0xe4, 0x42, 0x04, 0xd2,
	0xad, 0xc7, 0xad, 0xba, 0xfe, 0xa1, 0xa7, 0x9b, 0x89, 0xc6, 0xc4, 0x2f, 0xe0, 0x0d, 0x1f, 0xc2,
	0x0f, 0xe1, 0x95, 0x5f, 0xc7, 0xaf, 0xe0, 0x95, 0x39, 0xed, 0xd6, 0x9d, 0xc2, 0xe0, 0x6c, 0x59,
	0xc2, 0xdd, 0x69, 0xf7, 0x3e, 0xef, 0xf3, 0xbc, 0x6f, 0xda, 0xdf, 0x0a, 0x8b, 0xba, 0x6b, 0x2a,
	0xa6, 0xed, 0x63, 0x8f, 0x60, 0xaf, 0x6d, 0xd6, 0xb0, 0xe2, 0x63, 0xdd, 0x22, 0x4a, 0x5b, 0x0d,
	0x0f, 0xb2, 0xeb, 0x39, 0xbe, 0x83, 0xe6, 0x6b, 0x0d, 0xfc, 0x51, 0xd6, 0x5b, 0xbe, 0x63, 0xe9,
	0x3e, 0x96, 0x0d, 0xc7, 0xd2, 0x4d, 0x5b, 0x0e, 0x2b, 0xda, 0xaa, 0x38, 0x57, 0x77, 0x9c, 0x7a,
	0x13, 0x2b, 0xb4, 0x99, 0x6e, 0xdb, 0x8e, 0xaf, 0xfb, 0xa6, 0x63, 0x77, 0xc4, 0xe2, 0x6c, 0x5b,
	0x6f, 0x9a, 0x86, 0xee, 0x63, 0xa5, 0x7b, 0x08, 0x7f, 0x90, 0x76, 0x21, 0x7d, 0x80, 0x75, 0x0b,
	0x15, 0x20, 0x69, 0x1a, 0x45, 0xa1, 0x24, 0x2c, 0x65, 0xb5, 0xa4, 0x69, 0x20, 0x04, 0x69, 0x5b,
	0xb7, 0x70, 0x31, 0x19, 0xdc, 0x09, 0xce, 0x48, 0x84, 0x71, 0xd7, 0x73, 0x3e, 0xe1, 0x9a, 0x4f,
	0x8a, 0xa9, 0x52, 0x6a, 0x29, 0xab, 0x45, 0xd7, 0xd2, 0x32, 0xc0, 0x2b, 0xec, 0xd3, 0x56, 0x1a,
	0x3e, 0x43, 0xf7, 0x7b, 0xdd, 0x76, 0x72, 0xbf, 0xff, 0xfe, 0x49, 0x8d, 0x79, 0x69, 0x35, 0xf9,
	0xe1, 0x2d, 0x6d, 0x2d, 0xed, 0x42, 0x2e, 0x2a, 0x25, 0x2e, 0x7a, 0x0a, 0x69, 0x3a, 0x44, 0x50,
	0x9d, 0x53, 0x1f, 0xca, 0xd7, 0x8e, 0x29, 0x07, 0xb2, 0x40, 0x20, 0x15, 0xe0, 0xf6, 0x1b, 0x93,
	0x04, 0x8d, 0x88, 0x86, 0xcf, 0xa4, 0xd7, 0x90, 0x67, 0xae, 0x89, 0x8b, 0x36, 0xe1, 0x56, 0xa0,
	0x2b, 0x0a, 0xa5, 0xd4, 0xa0, 0xad, 0x43, 0x85, 0xf4, 0x53, 0x80, 0xfc, 0x3b, 0x97, 0xee, 0x69,
	0x90, 0x91, 0xd0, 0x03, 0x76, 0x5b, 0xf1, 0x9f, 0xc3, 0xd5, 0x3d, 0xbb, 0xb8, 0xba, 0x1d, 0x89,
	0x16, 0xcd, 0x9f, 0x0b, 0x62, 0x51, 0x90, 0xee, 0x7a, 0xd3, 0x2a, 0x3a, 0x39, 0xd2, 0xcb, 0x5f,
	0xd7, 0xca, 0x9b, 0xe5, 0xd3, 0xe3, 0x6f, 0xeb, 0xab, 0x4f, 0x2a, 0xdf, 0x17, 0x98, 0xf5, 0xee,
	0x41, 0x81, 0x8d, 0x33, 0xca, 0xda, 0x56, 0x21, 0xff, 0x12, 0x37, 0xf1, 0x60, 0x93, 0x51, 0x63,
	0xb6, 0x7a, 0x14, 0xe3, 0x5f, 0x02, 0xe4, 0x5f, 0x78, 0x98, 0xd9, 0x69, 0x85, 0x71, 0x5e, 0xa0,
	0xce, 0x69, 0x2f, 0x39, 0x29, 0xd0, 0xc3, 0x55, 0x1b, 0xb9, 0xa9, 0x65, 0xb3, 0x39, 0x47, 0x99,
	0xd9, 0x83, 0xa9, 0xe7, 0x86, 0x41, 0x6f, 0xec, 0x63, 0xab, 0x8a, 0x3d, 0xc2, 0x7d, 0x94, 0xb6,
	0x61, 0xbc, 0x45, 0xb0, 0x77, 0x6a, 0x1a, 0xa4, 0x98, 0x0c, 0xc2, 0x2f, 0xd2, 0x92, 0xd2, 0xb9,
	0x30, 0x3f, 0x2e, 0x14, 0x05, 0x69, 0xd6, 0x9b, 0x51, 0xef, 0x9c, 0x1c, 0x1d, 0x6d, 0xe9, 0x4d,
	0xbb, 0x65, 0x6d, 0x1d, 0x9f, 0xca, 0x2b, 0xdb, 0xe5, 0xe3, 0x95, 0x05, 0x2d, 0x43, 0x65, 0x7b,
	0x06, 0x91, 0x14, 0x40, 0x17, 0x3d, 0x89, 0x8b, 0xee, 0x31, 0x7d, 0x85, 0xe0, 0xe5, 0x8d, 0x04,
	0x2d, 0x98, 0xd6, 0xb0, 0xe5, 0xb4, 0xf1, 0xcd, 0xe6, 0x54, 0x61, 0xa6, 0x8f, 0xed, 0xf5, 0x51,
	0xf7, 0x61, 0xba, 0xc3, 0x0e, 0xb2, 0xeb, 0x78, 0xa1, 0x88, 0x46, 0x7d, 0x0c, 0x99, 0x8e, 0xa4,
	0x93, 0x77, 0x8e, 0x86, 0xb9, 0x32, 0xc3, 0x58, 0xd8, 0x4f, 0xd2, 0x60, 0xa6, 0x4f, 0xbb, 0xd1,
	0xd0, 0xb1, 0x11, 0x45, 0xec, 0xcc, 0xd4, 0x30, 0x5d, 0xee, 0x6b, 0xa6, 0x46, 0x41, 0x58, 0xd1,
	0xf5, 0xbb, 0x98, 0xa4, 0x4c, 0xa8, 0x7b, 0xba, 0x81, 0x0f, 0x9c, 0x43, 0x95, 0x12, 0x70, 0x0a,
	0x26, 0x62, 0x77, 0x88, 0x4b, 0x21, 0xa9, 0x61, 0x82, 0xfd, 0x03, 0xe7, 0x70, 0x9d, 0x96, 0x4c,
	0x40, 0x9e, 0xb9, 0x26, 0xae, 0xfa, 0x2f, 0x0b, 0x99, 0x60, 0x01, 0x87, 0x2a, 0xaa, 0x42, 0xa6,
	0x93, 0x02, 0x2d, 0x73, 0x26, 0xee, 0xc1, 0x5e, 0x7c, 0x34, 0x68, 0x29, 0x71, 0xa5, 0x04, 0x6a,
	0x40, 0x36, 0xa2, 0x34, 0x5a, 0xe1, 0x48, 0x59, 0xbe, 0x8b, 0xab, 0x83, 0x17, 0x07, 0x4e, 0x9f,
	0x01, 0x7a, 0xaf, 0x31, 0xe2, 0xa9, 0x63, 0x64, 0x12, 0xcb, 0x43, 0x54, 0x77, 0xcd, 0x7a, 0x80,
	0xe6, 0x9a, 0xc5, 0xfe, 0x5a, 0xb8, 0x66, 0x71, 0xf2, 0x87, 0x66, 0x3d, 0x28, 0x73, 0xcd, 0x62,
	0xb4, 0xe7, 0x9a, 0xc5, 0x69, 0x2f, 0x25, 0xd0, 0x17, 0x28, 0xc4, 0x71, 0x82, 0xd6, 0x38, 0x2d,
	0x2e, 0x11, 0x4f, 0x5c, 0x1f, 0x52, 0x11, 0x18, 0xff, 0x10, 0x60, 0xea, 0x12, 0x20, 0xd0, 0x06,
	0xa7, 0x55, 0x3f, 0x92, 0x89, 0x95, 0xe1, 0x45, 0x51, 0x84, 0x4b, 0x80, 0xe0, 0x46, 0xe8, 0x47,
	0x28, 0x6e, 0x84, 0xbe, 0x1c, 0x8a, 0x47, 0xe8, 0xa1, 0x61, 0xd0, 0x08, 0x31, 0x02, 0x0d, 0x1a,
	0x21, 0x4e, 0x20, 0x29, 0x81, 0x6c, 0xc8, 0x31, 0x58, 0x41, 0xfc, 0xc7, 0x95, 0x85, 0x92, 0x28,
	0x0f, 0x53, 0xde, 0x45, 0x44, 0xc4, 0x28, 0x2e, 0x22, 0x58, 0xba, 0x71, 0x11, 0x11, 0x43, 0x9f,
	0x94, 0xd8, 0xa9, 0xbc, 0x57, 0xeb, 0xa6, 0xdf, 0x68, 0x55, 0xe5, 0x9a, 0x63, 0x29, 0x54, 0xab,
	0x74, 0xb5, 0xca, 0x95, 0x5f, 0xe5, 0xd5, 0xb1, 0xe0, 0xd3, 0x79, 0xe3, 0x7f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x97, 0x33, 0x07, 0xca, 0xb9, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TeamsV2Client is the client API for TeamsV2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TeamsV2Client interface {
	GetTeam(ctx context.Context, in *GetTeamReq, opts ...grpc.CallOption) (*GetTeamResp, error)
	ListTeams(ctx context.Context, in *ListTeamsReq, opts ...grpc.CallOption) (*ListTeamsResp, error)
	CreateTeam(ctx context.Context, in *CreateTeamReq, opts ...grpc.CallOption) (*CreateTeamResp, error)
	UpdateTeam(ctx context.Context, in *UpdateTeamReq, opts ...grpc.CallOption) (*UpdateTeamResp, error)
	DeleteTeam(ctx context.Context, in *DeleteTeamReq, opts ...grpc.CallOption) (*DeleteTeamResp, error)
	AddTeamMembers(ctx context.Context, in *AddTeamMembersReq, opts ...grpc.CallOption) (*AddTeamMembersResp, error)
	RemoveTeamMembers(ctx context.Context, in *RemoveTeamMembersReq, opts ...grpc.CallOption) (*RemoveTeamMembersResp, error)
	GetTeamsForMember(ctx context.Context, in *GetTeamsForMemberReq, opts ...grpc.CallOption) (*GetTeamsForMemberResp, error)
	GetTeamMembership(ctx context.Context, in *GetTeamMembershipReq, opts ...grpc.CallOption) (*GetTeamMembershipResp, error)
	UpgradeToV2(ctx context.Context, in *UpgradeToV2Req, opts ...grpc.CallOption) (*UpgradeToV2Resp, error)
	ResetToV1(ctx context.Context, in *ResetToV1Req, opts ...grpc.CallOption) (*ResetToV1Resp, error)
}

type teamsV2Client struct {
	cc grpc.ClientConnInterface
}

func NewTeamsV2Client(cc grpc.ClientConnInterface) TeamsV2Client {
	return &teamsV2Client{cc}
}

func (c *teamsV2Client) GetTeam(ctx context.Context, in *GetTeamReq, opts ...grpc.CallOption) (*GetTeamResp, error) {
	out := new(GetTeamResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/GetTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) ListTeams(ctx context.Context, in *ListTeamsReq, opts ...grpc.CallOption) (*ListTeamsResp, error) {
	out := new(ListTeamsResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/ListTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) CreateTeam(ctx context.Context, in *CreateTeamReq, opts ...grpc.CallOption) (*CreateTeamResp, error) {
	out := new(CreateTeamResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/CreateTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) UpdateTeam(ctx context.Context, in *UpdateTeamReq, opts ...grpc.CallOption) (*UpdateTeamResp, error) {
	out := new(UpdateTeamResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/UpdateTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) DeleteTeam(ctx context.Context, in *DeleteTeamReq, opts ...grpc.CallOption) (*DeleteTeamResp, error) {
	out := new(DeleteTeamResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/DeleteTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) AddTeamMembers(ctx context.Context, in *AddTeamMembersReq, opts ...grpc.CallOption) (*AddTeamMembersResp, error) {
	out := new(AddTeamMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/AddTeamMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) RemoveTeamMembers(ctx context.Context, in *RemoveTeamMembersReq, opts ...grpc.CallOption) (*RemoveTeamMembersResp, error) {
	out := new(RemoveTeamMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/RemoveTeamMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) GetTeamsForMember(ctx context.Context, in *GetTeamsForMemberReq, opts ...grpc.CallOption) (*GetTeamsForMemberResp, error) {
	out := new(GetTeamsForMemberResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/GetTeamsForMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) GetTeamMembership(ctx context.Context, in *GetTeamMembershipReq, opts ...grpc.CallOption) (*GetTeamMembershipResp, error) {
	out := new(GetTeamMembershipResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/GetTeamMembership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) UpgradeToV2(ctx context.Context, in *UpgradeToV2Req, opts ...grpc.CallOption) (*UpgradeToV2Resp, error) {
	out := new(UpgradeToV2Resp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/UpgradeToV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamsV2Client) ResetToV1(ctx context.Context, in *ResetToV1Req, opts ...grpc.CallOption) (*ResetToV1Resp, error) {
	out := new(ResetToV1Resp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.teams.v2.TeamsV2/ResetToV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TeamsV2Server is the server API for TeamsV2 service.
type TeamsV2Server interface {
	GetTeam(context.Context, *GetTeamReq) (*GetTeamResp, error)
	ListTeams(context.Context, *ListTeamsReq) (*ListTeamsResp, error)
	CreateTeam(context.Context, *CreateTeamReq) (*CreateTeamResp, error)
	UpdateTeam(context.Context, *UpdateTeamReq) (*UpdateTeamResp, error)
	DeleteTeam(context.Context, *DeleteTeamReq) (*DeleteTeamResp, error)
	AddTeamMembers(context.Context, *AddTeamMembersReq) (*AddTeamMembersResp, error)
	RemoveTeamMembers(context.Context, *RemoveTeamMembersReq) (*RemoveTeamMembersResp, error)
	GetTeamsForMember(context.Context, *GetTeamsForMemberReq) (*GetTeamsForMemberResp, error)
	GetTeamMembership(context.Context, *GetTeamMembershipReq) (*GetTeamMembershipResp, error)
	UpgradeToV2(context.Context, *UpgradeToV2Req) (*UpgradeToV2Resp, error)
	ResetToV1(context.Context, *ResetToV1Req) (*ResetToV1Resp, error)
}

// UnimplementedTeamsV2Server can be embedded to have forward compatible implementations.
type UnimplementedTeamsV2Server struct {
}

func (*UnimplementedTeamsV2Server) GetTeam(ctx context.Context, req *GetTeamReq) (*GetTeamResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeam not implemented")
}
func (*UnimplementedTeamsV2Server) ListTeams(ctx context.Context, req *ListTeamsReq) (*ListTeamsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTeams not implemented")
}
func (*UnimplementedTeamsV2Server) CreateTeam(ctx context.Context, req *CreateTeamReq) (*CreateTeamResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTeam not implemented")
}
func (*UnimplementedTeamsV2Server) UpdateTeam(ctx context.Context, req *UpdateTeamReq) (*UpdateTeamResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTeam not implemented")
}
func (*UnimplementedTeamsV2Server) DeleteTeam(ctx context.Context, req *DeleteTeamReq) (*DeleteTeamResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTeam not implemented")
}
func (*UnimplementedTeamsV2Server) AddTeamMembers(ctx context.Context, req *AddTeamMembersReq) (*AddTeamMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTeamMembers not implemented")
}
func (*UnimplementedTeamsV2Server) RemoveTeamMembers(ctx context.Context, req *RemoveTeamMembersReq) (*RemoveTeamMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTeamMembers not implemented")
}
func (*UnimplementedTeamsV2Server) GetTeamsForMember(ctx context.Context, req *GetTeamsForMemberReq) (*GetTeamsForMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamsForMember not implemented")
}
func (*UnimplementedTeamsV2Server) GetTeamMembership(ctx context.Context, req *GetTeamMembershipReq) (*GetTeamMembershipResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamMembership not implemented")
}
func (*UnimplementedTeamsV2Server) UpgradeToV2(ctx context.Context, req *UpgradeToV2Req) (*UpgradeToV2Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeToV2 not implemented")
}
func (*UnimplementedTeamsV2Server) ResetToV1(ctx context.Context, req *ResetToV1Req) (*ResetToV1Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetToV1 not implemented")
}

func RegisterTeamsV2Server(s *grpc.Server, srv TeamsV2Server) {
	s.RegisterService(&_TeamsV2_serviceDesc, srv)
}

func _TeamsV2_GetTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).GetTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/GetTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).GetTeam(ctx, req.(*GetTeamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_ListTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTeamsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).ListTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/ListTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).ListTeams(ctx, req.(*ListTeamsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_CreateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTeamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).CreateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/CreateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).CreateTeam(ctx, req.(*CreateTeamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_UpdateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTeamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).UpdateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/UpdateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).UpdateTeam(ctx, req.(*UpdateTeamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTeamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).DeleteTeam(ctx, req.(*DeleteTeamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_AddTeamMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTeamMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).AddTeamMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/AddTeamMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).AddTeamMembers(ctx, req.(*AddTeamMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_RemoveTeamMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTeamMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).RemoveTeamMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/RemoveTeamMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).RemoveTeamMembers(ctx, req.(*RemoveTeamMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_GetTeamsForMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamsForMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).GetTeamsForMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/GetTeamsForMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).GetTeamsForMember(ctx, req.(*GetTeamsForMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_GetTeamMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamMembershipReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).GetTeamMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/GetTeamMembership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).GetTeamMembership(ctx, req.(*GetTeamMembershipReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_UpgradeToV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeToV2Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).UpgradeToV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/UpgradeToV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).UpgradeToV2(ctx, req.(*UpgradeToV2Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamsV2_ResetToV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetToV1Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamsV2Server).ResetToV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.teams.v2.TeamsV2/ResetToV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamsV2Server).ResetToV1(ctx, req.(*ResetToV1Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _TeamsV2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.teams.v2.TeamsV2",
	HandlerType: (*TeamsV2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTeam",
			Handler:    _TeamsV2_GetTeam_Handler,
		},
		{
			MethodName: "ListTeams",
			Handler:    _TeamsV2_ListTeams_Handler,
		},
		{
			MethodName: "CreateTeam",
			Handler:    _TeamsV2_CreateTeam_Handler,
		},
		{
			MethodName: "UpdateTeam",
			Handler:    _TeamsV2_UpdateTeam_Handler,
		},
		{
			MethodName: "DeleteTeam",
			Handler:    _TeamsV2_DeleteTeam_Handler,
		},
		{
			MethodName: "AddTeamMembers",
			Handler:    _TeamsV2_AddTeamMembers_Handler,
		},
		{
			MethodName: "RemoveTeamMembers",
			Handler:    _TeamsV2_RemoveTeamMembers_Handler,
		},
		{
			MethodName: "GetTeamsForMember",
			Handler:    _TeamsV2_GetTeamsForMember_Handler,
		},
		{
			MethodName: "GetTeamMembership",
			Handler:    _TeamsV2_GetTeamMembership_Handler,
		},
		{
			MethodName: "UpgradeToV2",
			Handler:    _TeamsV2_UpgradeToV2_Handler,
		},
		{
			MethodName: "ResetToV1",
			Handler:    _TeamsV2_ResetToV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/interservice/teams/v2/teams.proto",
}
