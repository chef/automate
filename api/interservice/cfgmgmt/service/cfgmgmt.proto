syntax = "proto3";

package chef.automate.domain.cfgmgmt.service;
option go_package = "github.com/chef/automate/api/interservice/cfgmgmt/service";

import "google/protobuf/struct.proto";

import "interservice/cfgmgmt/response/root.proto";
import "interservice/cfgmgmt/response/stats.proto";
import "interservice/cfgmgmt/response/nodes.proto";
import "interservice/cfgmgmt/response/actions.proto";
import "interservice/cfgmgmt/response/inventory_nodes.proto";
import "external/cfgmgmt/response/errors.proto";
import "external/cfgmgmt/response/rollouts.proto";
import "interservice/cfgmgmt/response/telemetry.proto";

import "interservice/cfgmgmt/request/root.proto";
import "interservice/cfgmgmt/request/stats.proto";
import "interservice/cfgmgmt/request/nodes.proto";
import "interservice/cfgmgmt/request/parameters.proto";
import "interservice/cfgmgmt/request/actions.proto";
import "interservice/cfgmgmt/request/inventory_nodes.proto";
import "interservice/cfgmgmt/request/node_export.proto";
import "external/cfgmgmt/request/errors.proto";
import "external/cfgmgmt/request/rollouts.proto";
import "interservice/cfgmgmt/request/telemetry.proto";

service CfgMgmtService {
	rpc GetVersion (chef.automate.domain.cfgmgmt.request.VersionInfo) returns (chef.automate.domain.cfgmgmt.response.VersionInfo);
	rpc GetHealth (chef.automate.domain.cfgmgmt.request.Health) returns (chef.automate.domain.cfgmgmt.response.Health);
	rpc GetNodesCounts (chef.automate.domain.cfgmgmt.request.NodesCounts) returns (chef.automate.domain.cfgmgmt.response.NodesCounts);
	rpc GetRunsCounts (chef.automate.domain.cfgmgmt.request.RunsCounts) returns (chef.automate.domain.cfgmgmt.response.RunsCounts);
	rpc GetNodeRun (chef.automate.domain.cfgmgmt.request.NodeRun) returns (chef.automate.domain.cfgmgmt.response.Run);
	rpc GetNodes (chef.automate.domain.cfgmgmt.request.Nodes) returns (google.protobuf.ListValue);
	rpc GetRuns (chef.automate.domain.cfgmgmt.request.Runs) returns (google.protobuf.ListValue);
	rpc GetSuggestions (chef.automate.domain.cfgmgmt.request.Suggestion) returns (google.protobuf.ListValue);
	rpc GetOrganizations (chef.automate.domain.cfgmgmt.request.Organizations) returns (google.protobuf.ListValue);
	rpc GetSourceFqdns (chef.automate.domain.cfgmgmt.request.SourceFQDNS) returns (google.protobuf.ListValue);
	rpc GetAttributes (chef.automate.domain.cfgmgmt.request.Node) returns (chef.automate.domain.cfgmgmt.response.NodeAttribute);
	rpc GetPolicyCookbooks(chef.automate.domain.cfgmgmt.request.PolicyRevision) returns (chef.automate.domain.cfgmgmt.response.PolicyCookbooks);
	rpc GetInventoryNodes(chef.automate.domain.cfgmgmt.request.InventoryNodes) returns (chef.automate.domain.cfgmgmt.response.InventoryNodes);
	rpc NodeExport(chef.automate.domain.cfgmgmt.request.NodeExport) returns (stream chef.automate.domain.cfgmgmt.response.ExportData);
	rpc ReportExport(chef.automate.domain.cfgmgmt.request.ReportExport) returns (stream chef.automate.domain.cfgmgmt.response.ReportExportData);
	rpc GetCheckInCountsTimeSeries(chef.automate.domain.cfgmgmt.request.CheckInCountsTimeSeries) returns (chef.automate.domain.cfgmgmt.response.CheckInCountsTimeSeries);
	rpc GetErrors(chef.automate.api.cfgmgmt.request.Errors) returns (chef.automate.api.cfgmgmt.response.Errors);
	rpc GetMissingNodeDurationCounts(chef.automate.domain.cfgmgmt.request.MissingNodeDurationCounts) returns (chef.automate.domain.cfgmgmt.response.MissingNodeDurationCounts);
	rpc GetNodeMetadataCounts(chef.automate.domain.cfgmgmt.request.NodeMetadataCounts) returns (chef.automate.domain.cfgmgmt.response.NodeMetadataCounts);
	rpc GetNodeRunsDailyStatusTimeSeries(chef.automate.domain.cfgmgmt.request.NodeRunsDailyStatusTimeSeries) returns (chef.automate.domain.cfgmgmt.response.NodeRunsDailyStatusTimeSeries);
  rpc CreateRollout(chef.automate.api.cfgmgmt.request.CreateRollout) returns (chef.automate.api.cfgmgmt.response.Rollout);
  rpc GetRollouts(chef.automate.api.cfgmgmt.request.Rollouts) returns (chef.automate.api.cfgmgmt.response.Rollouts);
  rpc GetRolloutById(chef.automate.api.cfgmgmt.request.RolloutById) returns (chef.automate.api.cfgmgmt.response.Rollout);
  rpc ListNodeSegmentsWithRolloutProgress(chef.automate.api.cfgmgmt.request.ListNodeSegmentsWithRolloutProgress) returns (chef.automate.api.cfgmgmt.response.NodeSegmentsWithRolloutProgress);
  rpc CreateRolloutTest(chef.automate.api.cfgmgmt.request.CreateRolloutTest) returns (chef.automate.api.cfgmgmt.response.CreateRolloutTest);
  rpc HandlePolicyUpdateAction(chef.automate.domain.cfgmgmt.request.PolicyUpdateAction) returns (chef.automate.domain.cfgmgmt.response.PolicyUpdateAction);
  rpc UpdateTelemetryReported(chef.automate.domain.cfgmgmt.request.UpdateTelemetryReportedRequest) returns (chef.automate.domain.cfgmgmt.response.UpdateTelemetryReportedResponse);
  rpc GetNodesUsageCount(chef.automate.domain.cfgmgmt.request.GetNodesUsageCountRequest) returns (chef.automate.domain.cfgmgmt.response.GetNodesUsageCountResponse) {};
}
