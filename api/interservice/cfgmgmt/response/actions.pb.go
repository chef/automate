// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/cfgmgmt/response/actions.proto

package response

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PolicyCookbooks struct {
	PolicyName           string          `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty" toml:"policy_name,omitempty" mapstructure:"policy_name,omitempty"`
	CookbookLocks        []*CookbookLock `protobuf:"bytes,2,rep,name=cookbook_locks,json=cookbookLocks,proto3" json:"cookbook_locks,omitempty" toml:"cookbook_locks,omitempty" mapstructure:"cookbook_locks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32           `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *PolicyCookbooks) Reset()         { *m = PolicyCookbooks{} }
func (m *PolicyCookbooks) String() string { return proto.CompactTextString(m) }
func (*PolicyCookbooks) ProtoMessage()    {}
func (*PolicyCookbooks) Descriptor() ([]byte, []int) {
	return fileDescriptor_d720a90b1835e86b, []int{0}
}

func (m *PolicyCookbooks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyCookbooks.Unmarshal(m, b)
}
func (m *PolicyCookbooks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyCookbooks.Marshal(b, m, deterministic)
}
func (m *PolicyCookbooks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyCookbooks.Merge(m, src)
}
func (m *PolicyCookbooks) XXX_Size() int {
	return xxx_messageInfo_PolicyCookbooks.Size(m)
}
func (m *PolicyCookbooks) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyCookbooks.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyCookbooks proto.InternalMessageInfo

func (m *PolicyCookbooks) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *PolicyCookbooks) GetCookbookLocks() []*CookbookLock {
	if m != nil {
		return m.CookbookLocks
	}
	return nil
}

type CookbookLock struct {
	Cookbook             string   `protobuf:"bytes,1,opt,name=cookbook,proto3" json:"cookbook,omitempty" toml:"cookbook,omitempty" mapstructure:"cookbook,omitempty"`
	PolicyIdentifier     string   `protobuf:"bytes,2,opt,name=policy_identifier,json=policyIdentifier,proto3" json:"policy_identifier,omitempty" toml:"policy_identifier,omitempty" mapstructure:"policy_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookLock) Reset()         { *m = CookbookLock{} }
func (m *CookbookLock) String() string { return proto.CompactTextString(m) }
func (*CookbookLock) ProtoMessage()    {}
func (*CookbookLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_d720a90b1835e86b, []int{1}
}

func (m *CookbookLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookLock.Unmarshal(m, b)
}
func (m *CookbookLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookLock.Marshal(b, m, deterministic)
}
func (m *CookbookLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookLock.Merge(m, src)
}
func (m *CookbookLock) XXX_Size() int {
	return xxx_messageInfo_CookbookLock.Size(m)
}
func (m *CookbookLock) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookLock.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookLock proto.InternalMessageInfo

func (m *CookbookLock) GetCookbook() string {
	if m != nil {
		return m.Cookbook
	}
	return ""
}

func (m *CookbookLock) GetPolicyIdentifier() string {
	if m != nil {
		return m.PolicyIdentifier
	}
	return ""
}

type PolicyUpdateAction struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *PolicyUpdateAction) Reset()         { *m = PolicyUpdateAction{} }
func (m *PolicyUpdateAction) String() string { return proto.CompactTextString(m) }
func (*PolicyUpdateAction) ProtoMessage()    {}
func (*PolicyUpdateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_d720a90b1835e86b, []int{2}
}

func (m *PolicyUpdateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyUpdateAction.Unmarshal(m, b)
}
func (m *PolicyUpdateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyUpdateAction.Marshal(b, m, deterministic)
}
func (m *PolicyUpdateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyUpdateAction.Merge(m, src)
}
func (m *PolicyUpdateAction) XXX_Size() int {
	return xxx_messageInfo_PolicyUpdateAction.Size(m)
}
func (m *PolicyUpdateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyUpdateAction.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyUpdateAction proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PolicyCookbooks)(nil), "chef.automate.domain.cfgmgmt.response.PolicyCookbooks")
	proto.RegisterType((*CookbookLock)(nil), "chef.automate.domain.cfgmgmt.response.CookbookLock")
	proto.RegisterType((*PolicyUpdateAction)(nil), "chef.automate.domain.cfgmgmt.response.PolicyUpdateAction")
}

func init() {
	proto.RegisterFile("interservice/cfgmgmt/response/actions.proto", fileDescriptor_d720a90b1835e86b)
}

var fileDescriptor_d720a90b1835e86b = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4d, 0x4b, 0x33, 0x41,
	0x10, 0x84, 0xd9, 0xbc, 0xf0, 0xa2, 0x13, 0x3f, 0x07, 0x0f, 0x8b, 0x17, 0xc3, 0x82, 0x10, 0x08,
	0xcc, 0x80, 0xb9, 0x89, 0x17, 0xf5, 0x24, 0x88, 0x48, 0x40, 0x84, 0x5c, 0xc2, 0x6c, 0x6f, 0xef,
	0xa6, 0xd9, 0xcc, 0xf4, 0x32, 0x33, 0x11, 0xfc, 0x13, 0xfe, 0x66, 0x71, 0x3f, 0x42, 0x4e, 0xe2,
	0xb1, 0xab, 0xab, 0xa9, 0xa7, 0x4b, 0xcc, 0xc8, 0x45, 0xf4, 0x01, 0xfd, 0x07, 0x01, 0x6a, 0x28,
	0x2b, 0x5b, 0xd9, 0xa8, 0x3d, 0x86, 0x86, 0x5d, 0x40, 0x6d, 0x20, 0x12, 0xbb, 0xa0, 0x1a, 0xcf,
	0x91, 0xe5, 0x35, 0xac, 0xb1, 0x54, 0x66, 0x1b, 0xd9, 0x9a, 0x88, 0xaa, 0x60, 0x6b, 0xc8, 0xa9,
	0xfe, 0x48, 0x0d, 0x47, 0xd9, 0x57, 0x22, 0x4e, 0x5f, 0x79, 0x43, 0xf0, 0xf9, 0xc8, 0x5c, 0xe7,
	0xcc, 0x75, 0x90, 0x57, 0x62, 0xdc, 0xb4, 0xd2, 0xca, 0x19, 0x8b, 0x69, 0x32, 0x49, 0xa6, 0x87,
	0x0b, 0xd1, 0x49, 0x2f, 0xc6, 0xa2, 0x5c, 0x8a, 0x13, 0xe8, 0xdd, 0xab, 0x0d, 0x43, 0x1d, 0xd2,
	0xd1, 0xe4, 0xdf, 0x74, 0x7c, 0x33, 0x57, 0x7f, 0x0a, 0x55, 0x43, 0xd4, 0x33, 0x43, 0xbd, 0x38,
	0x86, 0xbd, 0x29, 0x64, 0xef, 0xe2, 0x68, 0x7f, 0x2d, 0x2f, 0xc5, 0xc1, 0x60, 0xe8, 0x49, 0x76,
	0xb3, 0x9c, 0x89, 0xf3, 0x1e, 0x94, 0x0a, 0x74, 0x91, 0x4a, 0x42, 0x9f, 0x8e, 0x5a, 0xd3, 0x59,
	0xb7, 0x78, 0xda, 0xe9, 0xd9, 0x85, 0x90, 0xdd, 0xa3, 0x6f, 0x4d, 0x61, 0x22, 0xde, 0xb7, 0x6d,
	0x3d, 0xdc, 0x2d, 0x6f, 0x2b, 0x8a, 0xeb, 0x6d, 0xae, 0x80, 0xad, 0xfe, 0xc1, 0xd7, 0x03, 0xbe,
	0x36, 0x0d, 0xe9, 0x5f, 0x2b, 0xcf, 0xff, 0xb7, 0x5d, 0xcf, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x81, 0xe8, 0x80, 0x1c, 0x9a, 0x01, 0x00, 0x00,
}
