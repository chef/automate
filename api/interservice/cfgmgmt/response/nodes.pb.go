// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/cfgmgmt/response/nodes.proto

package response

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeAttribute struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" toml:"node_id,omitempty" mapstructure:"node_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	RunList              []string `protobuf:"bytes,3,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty" toml:"run_list,omitempty" mapstructure:"run_list,omitempty"`
	ChefEnvironment      string   `protobuf:"bytes,4,opt,name=chef_environment,json=chefEnvironment,proto3" json:"chef_environment,omitempty" toml:"chef_environment,omitempty" mapstructure:"chef_environment,omitempty"`
	Normal               string   `protobuf:"bytes,5,opt,name=normal,proto3" json:"normal,omitempty" toml:"normal,omitempty" mapstructure:"normal,omitempty"`
	Default              string   `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty" toml:"default,omitempty" mapstructure:"default,omitempty"`
	Override             string   `protobuf:"bytes,7,opt,name=override,proto3" json:"override,omitempty" toml:"override,omitempty" mapstructure:"override,omitempty"`
	NormalValueCount     int32    `protobuf:"varint,8,opt,name=normal_value_count,json=normalValueCount,proto3" json:"normal_value_count,omitempty" toml:"normal_value_count,omitempty" mapstructure:"normal_value_count,omitempty"`
	DefaultValueCount    int32    `protobuf:"varint,9,opt,name=default_value_count,json=defaultValueCount,proto3" json:"default_value_count,omitempty" toml:"default_value_count,omitempty" mapstructure:"default_value_count,omitempty"`
	OverrideValueCount   int32    `protobuf:"varint,10,opt,name=override_value_count,json=overrideValueCount,proto3" json:"override_value_count,omitempty" toml:"override_value_count,omitempty" mapstructure:"override_value_count,omitempty"`
	AllValueCount        int32    `protobuf:"varint,11,opt,name=all_value_count,json=allValueCount,proto3" json:"all_value_count,omitempty" toml:"all_value_count,omitempty" mapstructure:"all_value_count,omitempty"`
	Automatic            string   `protobuf:"bytes,12,opt,name=automatic,proto3" json:"automatic,omitempty" toml:"automatic,omitempty" mapstructure:"automatic,omitempty"`
	AutomaticValueCount  int32    `protobuf:"varint,13,opt,name=automatic_value_count,json=automaticValueCount,proto3" json:"automatic_value_count,omitempty" toml:"automatic_value_count,omitempty" mapstructure:"automatic_value_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *NodeAttribute) Reset()         { *m = NodeAttribute{} }
func (m *NodeAttribute) String() string { return proto.CompactTextString(m) }
func (*NodeAttribute) ProtoMessage()    {}
func (*NodeAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{0}
}

func (m *NodeAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAttribute.Unmarshal(m, b)
}
func (m *NodeAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAttribute.Marshal(b, m, deterministic)
}
func (m *NodeAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAttribute.Merge(m, src)
}
func (m *NodeAttribute) XXX_Size() int {
	return xxx_messageInfo_NodeAttribute.Size(m)
}
func (m *NodeAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAttribute proto.InternalMessageInfo

func (m *NodeAttribute) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeAttribute) GetRunList() []string {
	if m != nil {
		return m.RunList
	}
	return nil
}

func (m *NodeAttribute) GetChefEnvironment() string {
	if m != nil {
		return m.ChefEnvironment
	}
	return ""
}

func (m *NodeAttribute) GetNormal() string {
	if m != nil {
		return m.Normal
	}
	return ""
}

func (m *NodeAttribute) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *NodeAttribute) GetOverride() string {
	if m != nil {
		return m.Override
	}
	return ""
}

func (m *NodeAttribute) GetNormalValueCount() int32 {
	if m != nil {
		return m.NormalValueCount
	}
	return 0
}

func (m *NodeAttribute) GetDefaultValueCount() int32 {
	if m != nil {
		return m.DefaultValueCount
	}
	return 0
}

func (m *NodeAttribute) GetOverrideValueCount() int32 {
	if m != nil {
		return m.OverrideValueCount
	}
	return 0
}

func (m *NodeAttribute) GetAllValueCount() int32 {
	if m != nil {
		return m.AllValueCount
	}
	return 0
}

func (m *NodeAttribute) GetAutomatic() string {
	if m != nil {
		return m.Automatic
	}
	return ""
}

func (m *NodeAttribute) GetAutomaticValueCount() int32 {
	if m != nil {
		return m.AutomaticValueCount
	}
	return 0
}

type AbridgedConverge struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	StartTime            string   `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" toml:"start_time,omitempty" mapstructure:"start_time,omitempty"`
	EndTime              string   `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" toml:"end_time,omitempty" mapstructure:"end_time,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AbridgedConverge) Reset()         { *m = AbridgedConverge{} }
func (m *AbridgedConverge) String() string { return proto.CompactTextString(m) }
func (*AbridgedConverge) ProtoMessage()    {}
func (*AbridgedConverge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{1}
}

func (m *AbridgedConverge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbridgedConverge.Unmarshal(m, b)
}
func (m *AbridgedConverge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbridgedConverge.Marshal(b, m, deterministic)
}
func (m *AbridgedConverge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbridgedConverge.Merge(m, src)
}
func (m *AbridgedConverge) XXX_Size() int {
	return xxx_messageInfo_AbridgedConverge.Size(m)
}
func (m *AbridgedConverge) XXX_DiscardUnknown() {
	xxx_messageInfo_AbridgedConverge.DiscardUnknown(m)
}

var xxx_messageInfo_AbridgedConverge proto.InternalMessageInfo

func (m *AbridgedConverge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AbridgedConverge) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *AbridgedConverge) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *AbridgedConverge) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Run struct {
	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	NodeId       string               `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" toml:"node_id,omitempty" mapstructure:"node_id,omitempty"`
	NodeName     string               `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty" toml:"node_name,omitempty" mapstructure:"node_name,omitempty"`
	Organization string               `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty" toml:"organization,omitempty" mapstructure:"organization,omitempty"`
	StartTime    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" toml:"start_time,omitempty" mapstructure:"start_time,omitempty"`
	EndTime      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" toml:"end_time,omitempty" mapstructure:"end_time,omitempty"`
	// (@afiune) What is this source? Maybe a dup of source_fqdn?
	Source               string               `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty" toml:"source,omitempty" mapstructure:"source,omitempty"`
	Status               string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	TotalResourceCount   int32                `protobuf:"varint,9,opt,name=total_resource_count,json=totalResourceCount,proto3" json:"total_resource_count,omitempty" toml:"total_resource_count,omitempty" mapstructure:"total_resource_count,omitempty"`
	UpdatedResourceCount int32                `protobuf:"varint,10,opt,name=updated_resource_count,json=updatedResourceCount,proto3" json:"updated_resource_count,omitempty" toml:"updated_resource_count,omitempty" mapstructure:"updated_resource_count,omitempty"`
	ChefVersion          string               `protobuf:"bytes,11,opt,name=chef_version,json=chefVersion,proto3" json:"chef_version,omitempty" toml:"chef_version,omitempty" mapstructure:"chef_version,omitempty"`
	UptimeSeconds        int32                `protobuf:"varint,12,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty" toml:"uptime_seconds,omitempty" mapstructure:"uptime_seconds,omitempty"`
	Environment          string               `protobuf:"bytes,13,opt,name=environment,proto3" json:"environment,omitempty" toml:"environment,omitempty" mapstructure:"environment,omitempty"`
	Fqdn                 string               `protobuf:"bytes,14,opt,name=fqdn,proto3" json:"fqdn,omitempty" toml:"fqdn,omitempty" mapstructure:"fqdn,omitempty"`
	SourceFqdn           string               `protobuf:"bytes,15,opt,name=source_fqdn,json=sourceFqdn,proto3" json:"source_fqdn,omitempty" toml:"source_fqdn,omitempty" mapstructure:"source_fqdn,omitempty"`
	Ipaddress            string               `protobuf:"bytes,16,opt,name=ipaddress,proto3" json:"ipaddress,omitempty" toml:"ipaddress,omitempty" mapstructure:"ipaddress,omitempty"`
	Resources            []*Resource          `protobuf:"bytes,17,rep,name=resources,proto3" json:"resources,omitempty" toml:"resources,omitempty" mapstructure:"resources,omitempty"`
	RunList              []string             `protobuf:"bytes,18,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty" toml:"run_list,omitempty" mapstructure:"run_list,omitempty"`
	Deprecations         []*Deprecation       `protobuf:"bytes,19,rep,name=deprecations,proto3" json:"deprecations,omitempty" toml:"deprecations,omitempty" mapstructure:"deprecations,omitempty"`
	Error                *ChefError           `protobuf:"bytes,20,opt,name=error,proto3" json:"error,omitempty" toml:"error,omitempty" mapstructure:"error,omitempty"`
	Tags                 []string             `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty" toml:"tags,omitempty" mapstructure:"tags,omitempty"`
	ResourceNames        []string             `protobuf:"bytes,22,rep,name=resource_names,json=resourceNames,proto3" json:"resource_names,omitempty" toml:"resource_names,omitempty" mapstructure:"resource_names,omitempty"`
	Recipes              []string             `protobuf:"bytes,23,rep,name=recipes,proto3" json:"recipes,omitempty" toml:"recipes,omitempty" mapstructure:"recipes,omitempty"`
	ChefTags             []string             `protobuf:"bytes,24,rep,name=chef_tags,json=chefTags,proto3" json:"chef_tags,omitempty" toml:"chef_tags,omitempty" mapstructure:"chef_tags,omitempty"`
	Cookbooks            []string             `protobuf:"bytes,25,rep,name=cookbooks,proto3" json:"cookbooks,omitempty" toml:"cookbooks,omitempty" mapstructure:"cookbooks,omitempty"`
	Platform             string               `protobuf:"bytes,26,opt,name=platform,proto3" json:"platform,omitempty" toml:"platform,omitempty" mapstructure:"platform,omitempty"`
	PlatformFamily       string               `protobuf:"bytes,27,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty" toml:"platform_family,omitempty" mapstructure:"platform_family,omitempty"`
	PlatformVersion      string               `protobuf:"bytes,28,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty" toml:"platform_version,omitempty" mapstructure:"platform_version,omitempty"`
	Roles                []string             `protobuf:"bytes,29,rep,name=roles,proto3" json:"roles,omitempty" toml:"roles,omitempty" mapstructure:"roles,omitempty"`
	PolicyName           string               `protobuf:"bytes,30,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty" toml:"policy_name,omitempty" mapstructure:"policy_name,omitempty"`
	PolicyGroup          string               `protobuf:"bytes,31,opt,name=policy_group,json=policyGroup,proto3" json:"policy_group,omitempty" toml:"policy_group,omitempty" mapstructure:"policy_group,omitempty"`
	PolicyRevision       string               `protobuf:"bytes,32,opt,name=policy_revision,json=policyRevision,proto3" json:"policy_revision,omitempty" toml:"policy_revision,omitempty" mapstructure:"policy_revision,omitempty"`
	ExpandedRunList      *ExpandedRunList     `protobuf:"bytes,33,opt,name=expanded_run_list,json=expandedRunList,proto3" json:"expanded_run_list,omitempty" toml:"expanded_run_list,omitempty" mapstructure:"expanded_run_list,omitempty"`
	Projects             []string             `protobuf:"bytes,34,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	VersionedCookbooks   []*VersionedCookbook `protobuf:"bytes,35,rep,name=versioned_cookbooks,json=versionedCookbooks,proto3" json:"versioned_cookbooks,omitempty" toml:"versioned_cookbooks,omitempty" mapstructure:"versioned_cookbooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Run) Reset()         { *m = Run{} }
func (m *Run) String() string { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()    {}
func (*Run) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{2}
}

func (m *Run) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Run.Unmarshal(m, b)
}
func (m *Run) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Run.Marshal(b, m, deterministic)
}
func (m *Run) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Run.Merge(m, src)
}
func (m *Run) XXX_Size() int {
	return xxx_messageInfo_Run.Size(m)
}
func (m *Run) XXX_DiscardUnknown() {
	xxx_messageInfo_Run.DiscardUnknown(m)
}

var xxx_messageInfo_Run proto.InternalMessageInfo

func (m *Run) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Run) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Run) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Run) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Run) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Run) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Run) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Run) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Run) GetTotalResourceCount() int32 {
	if m != nil {
		return m.TotalResourceCount
	}
	return 0
}

func (m *Run) GetUpdatedResourceCount() int32 {
	if m != nil {
		return m.UpdatedResourceCount
	}
	return 0
}

func (m *Run) GetChefVersion() string {
	if m != nil {
		return m.ChefVersion
	}
	return ""
}

func (m *Run) GetUptimeSeconds() int32 {
	if m != nil {
		return m.UptimeSeconds
	}
	return 0
}

func (m *Run) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Run) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *Run) GetSourceFqdn() string {
	if m != nil {
		return m.SourceFqdn
	}
	return ""
}

func (m *Run) GetIpaddress() string {
	if m != nil {
		return m.Ipaddress
	}
	return ""
}

func (m *Run) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Run) GetRunList() []string {
	if m != nil {
		return m.RunList
	}
	return nil
}

func (m *Run) GetDeprecations() []*Deprecation {
	if m != nil {
		return m.Deprecations
	}
	return nil
}

func (m *Run) GetError() *ChefError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Run) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Run) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

func (m *Run) GetRecipes() []string {
	if m != nil {
		return m.Recipes
	}
	return nil
}

func (m *Run) GetChefTags() []string {
	if m != nil {
		return m.ChefTags
	}
	return nil
}

func (m *Run) GetCookbooks() []string {
	if m != nil {
		return m.Cookbooks
	}
	return nil
}

func (m *Run) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Run) GetPlatformFamily() string {
	if m != nil {
		return m.PlatformFamily
	}
	return ""
}

func (m *Run) GetPlatformVersion() string {
	if m != nil {
		return m.PlatformVersion
	}
	return ""
}

func (m *Run) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Run) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *Run) GetPolicyGroup() string {
	if m != nil {
		return m.PolicyGroup
	}
	return ""
}

func (m *Run) GetPolicyRevision() string {
	if m != nil {
		return m.PolicyRevision
	}
	return ""
}

func (m *Run) GetExpandedRunList() *ExpandedRunList {
	if m != nil {
		return m.ExpandedRunList
	}
	return nil
}

func (m *Run) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *Run) GetVersionedCookbooks() []*VersionedCookbook {
	if m != nil {
		return m.VersionedCookbooks
	}
	return nil
}

type ExpandedRunList struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	RunList              []*RunList `protobuf:"bytes,2,rep,name=run_list,json=runList,proto3" json:"run_list,omitempty" toml:"run_list,omitempty" mapstructure:"run_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32      `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ExpandedRunList) Reset()         { *m = ExpandedRunList{} }
func (m *ExpandedRunList) String() string { return proto.CompactTextString(m) }
func (*ExpandedRunList) ProtoMessage()    {}
func (*ExpandedRunList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{3}
}

func (m *ExpandedRunList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedRunList.Unmarshal(m, b)
}
func (m *ExpandedRunList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedRunList.Marshal(b, m, deterministic)
}
func (m *ExpandedRunList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedRunList.Merge(m, src)
}
func (m *ExpandedRunList) XXX_Size() int {
	return xxx_messageInfo_ExpandedRunList.Size(m)
}
func (m *ExpandedRunList) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedRunList.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedRunList proto.InternalMessageInfo

func (m *ExpandedRunList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExpandedRunList) GetRunList() []*RunList {
	if m != nil {
		return m.RunList
	}
	return nil
}

type Resource struct {
	Type            string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Id              string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Duration        string `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty" toml:"duration,omitempty" mapstructure:"duration,omitempty"`
	Delta           string `protobuf:"bytes,5,opt,name=delta,proto3" json:"delta,omitempty" toml:"delta,omitempty" mapstructure:"delta,omitempty"`
	CookbookName    string `protobuf:"bytes,6,opt,name=cookbook_name,json=cookbookName,proto3" json:"cookbook_name,omitempty" toml:"cookbook_name,omitempty" mapstructure:"cookbook_name,omitempty"`
	CookbookVersion string `protobuf:"bytes,7,opt,name=cookbook_version,json=cookbookVersion,proto3" json:"cookbook_version,omitempty" toml:"cookbook_version,omitempty" mapstructure:"cookbook_version,omitempty"`
	Status          string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	RecipeName      string `protobuf:"bytes,10,opt,name=recipe_name,json=recipeName,proto3" json:"recipe_name,omitempty" toml:"recipe_name,omitempty" mapstructure:"recipe_name,omitempty"`
	Result          string `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty" toml:"result,omitempty" mapstructure:"result,omitempty"`
	// Fields that might be empty
	Conditional          string   `protobuf:"bytes,16,opt,name=conditional,proto3" json:"conditional,omitempty" toml:"conditional,omitempty" mapstructure:"conditional,omitempty"`
	IgnoreFailure        bool     `protobuf:"varint,17,opt,name=ignore_failure,json=ignoreFailure,proto3" json:"ignore_failure,omitempty" toml:"ignore_failure,omitempty" mapstructure:"ignore_failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{4}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Resource) GetDelta() string {
	if m != nil {
		return m.Delta
	}
	return ""
}

func (m *Resource) GetCookbookName() string {
	if m != nil {
		return m.CookbookName
	}
	return ""
}

func (m *Resource) GetCookbookVersion() string {
	if m != nil {
		return m.CookbookVersion
	}
	return ""
}

func (m *Resource) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Resource) GetRecipeName() string {
	if m != nil {
		return m.RecipeName
	}
	return ""
}

func (m *Resource) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Resource) GetConditional() string {
	if m != nil {
		return m.Conditional
	}
	return ""
}

func (m *Resource) GetIgnoreFailure() bool {
	if m != nil {
		return m.IgnoreFailure
	}
	return false
}

type ChefError struct {
	Class                string       `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty" toml:"class,omitempty" mapstructure:"class,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty" mapstructure:"message,omitempty"`
	Backtrace            []string     `protobuf:"bytes,16,rep,name=backtrace,proto3" json:"backtrace,omitempty" toml:"backtrace,omitempty" mapstructure:"backtrace,omitempty"`
	Description          *Description `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty" mapstructure:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ChefError) Reset()         { *m = ChefError{} }
func (m *ChefError) String() string { return proto.CompactTextString(m) }
func (*ChefError) ProtoMessage()    {}
func (*ChefError) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{5}
}

func (m *ChefError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChefError.Unmarshal(m, b)
}
func (m *ChefError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChefError.Marshal(b, m, deterministic)
}
func (m *ChefError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChefError.Merge(m, src)
}
func (m *ChefError) XXX_Size() int {
	return xxx_messageInfo_ChefError.Size(m)
}
func (m *ChefError) XXX_DiscardUnknown() {
	xxx_messageInfo_ChefError.DiscardUnknown(m)
}

var xxx_messageInfo_ChefError proto.InternalMessageInfo

func (m *ChefError) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *ChefError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChefError) GetBacktrace() []string {
	if m != nil {
		return m.Backtrace
	}
	return nil
}

func (m *ChefError) GetDescription() *Description {
	if m != nil {
		return m.Description
	}
	return nil
}

type RunList struct {
	Type                 string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string     `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Skipped              bool       `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Children             []*RunList `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty" toml:"children,omitempty" mapstructure:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32      `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *RunList) Reset()         { *m = RunList{} }
func (m *RunList) String() string { return proto.CompactTextString(m) }
func (*RunList) ProtoMessage()    {}
func (*RunList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{6}
}

func (m *RunList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunList.Unmarshal(m, b)
}
func (m *RunList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunList.Marshal(b, m, deterministic)
}
func (m *RunList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunList.Merge(m, src)
}
func (m *RunList) XXX_Size() int {
	return xxx_messageInfo_RunList.Size(m)
}
func (m *RunList) XXX_DiscardUnknown() {
	xxx_messageInfo_RunList.DiscardUnknown(m)
}

var xxx_messageInfo_RunList proto.InternalMessageInfo

func (m *RunList) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RunList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RunList) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RunList) GetSkipped() bool {
	if m != nil {
		return m.Skipped
	}
	return false
}

func (m *RunList) GetChildren() []*RunList {
	if m != nil {
		return m.Children
	}
	return nil
}

type Description struct {
	Title                string            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	Sections             []*_struct.Struct `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty" toml:"sections,omitempty" mapstructure:"sections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte            `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32             `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Description) Reset()         { *m = Description{} }
func (m *Description) String() string { return proto.CompactTextString(m) }
func (*Description) ProtoMessage()    {}
func (*Description) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{7}
}

func (m *Description) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Description.Unmarshal(m, b)
}
func (m *Description) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Description.Marshal(b, m, deterministic)
}
func (m *Description) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Description.Merge(m, src)
}
func (m *Description) XXX_Size() int {
	return xxx_messageInfo_Description.Size(m)
}
func (m *Description) XXX_DiscardUnknown() {
	xxx_messageInfo_Description.DiscardUnknown(m)
}

var xxx_messageInfo_Description proto.InternalMessageInfo

func (m *Description) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Description) GetSections() []*_struct.Struct {
	if m != nil {
		return m.Sections
	}
	return nil
}

type Deprecation struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty" mapstructure:"message,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty" mapstructure:"url,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty" toml:"location,omitempty" mapstructure:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Deprecation) Reset()         { *m = Deprecation{} }
func (m *Deprecation) String() string { return proto.CompactTextString(m) }
func (*Deprecation) ProtoMessage()    {}
func (*Deprecation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{8}
}

func (m *Deprecation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deprecation.Unmarshal(m, b)
}
func (m *Deprecation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deprecation.Marshal(b, m, deterministic)
}
func (m *Deprecation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deprecation.Merge(m, src)
}
func (m *Deprecation) XXX_Size() int {
	return xxx_messageInfo_Deprecation.Size(m)
}
func (m *Deprecation) XXX_DiscardUnknown() {
	xxx_messageInfo_Deprecation.DiscardUnknown(m)
}

var xxx_messageInfo_Deprecation proto.InternalMessageInfo

func (m *Deprecation) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Deprecation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Deprecation) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type VersionedCookbook struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *VersionedCookbook) Reset()         { *m = VersionedCookbook{} }
func (m *VersionedCookbook) String() string { return proto.CompactTextString(m) }
func (*VersionedCookbook) ProtoMessage()    {}
func (*VersionedCookbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{9}
}

func (m *VersionedCookbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionedCookbook.Unmarshal(m, b)
}
func (m *VersionedCookbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionedCookbook.Marshal(b, m, deterministic)
}
func (m *VersionedCookbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionedCookbook.Merge(m, src)
}
func (m *VersionedCookbook) XXX_Size() int {
	return xxx_messageInfo_VersionedCookbook.Size(m)
}
func (m *VersionedCookbook) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionedCookbook.DiscardUnknown(m)
}

var xxx_messageInfo_VersionedCookbook proto.InternalMessageInfo

func (m *VersionedCookbook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionedCookbook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type MissingNodeDurationCounts struct {
	CountedDurations     []*CountedDuration `protobuf:"bytes,1,rep,name=counted_durations,json=countedDurations,proto3" json:"counted_durations,omitempty" toml:"counted_durations,omitempty" mapstructure:"counted_durations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32              `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *MissingNodeDurationCounts) Reset()         { *m = MissingNodeDurationCounts{} }
func (m *MissingNodeDurationCounts) String() string { return proto.CompactTextString(m) }
func (*MissingNodeDurationCounts) ProtoMessage()    {}
func (*MissingNodeDurationCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{10}
}

func (m *MissingNodeDurationCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissingNodeDurationCounts.Unmarshal(m, b)
}
func (m *MissingNodeDurationCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissingNodeDurationCounts.Marshal(b, m, deterministic)
}
func (m *MissingNodeDurationCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissingNodeDurationCounts.Merge(m, src)
}
func (m *MissingNodeDurationCounts) XXX_Size() int {
	return xxx_messageInfo_MissingNodeDurationCounts.Size(m)
}
func (m *MissingNodeDurationCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_MissingNodeDurationCounts.DiscardUnknown(m)
}

var xxx_messageInfo_MissingNodeDurationCounts proto.InternalMessageInfo

func (m *MissingNodeDurationCounts) GetCountedDurations() []*CountedDuration {
	if m != nil {
		return m.CountedDurations
	}
	return nil
}

type CountedDuration struct {
	Duration             string   `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty" toml:"duration,omitempty" mapstructure:"duration,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty" toml:"count,omitempty" mapstructure:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CountedDuration) Reset()         { *m = CountedDuration{} }
func (m *CountedDuration) String() string { return proto.CompactTextString(m) }
func (*CountedDuration) ProtoMessage()    {}
func (*CountedDuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{11}
}

func (m *CountedDuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountedDuration.Unmarshal(m, b)
}
func (m *CountedDuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountedDuration.Marshal(b, m, deterministic)
}
func (m *CountedDuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountedDuration.Merge(m, src)
}
func (m *CountedDuration) XXX_Size() int {
	return xxx_messageInfo_CountedDuration.Size(m)
}
func (m *CountedDuration) XXX_DiscardUnknown() {
	xxx_messageInfo_CountedDuration.DiscardUnknown(m)
}

var xxx_messageInfo_CountedDuration proto.InternalMessageInfo

func (m *CountedDuration) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *CountedDuration) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type NodesFieldValueCounts struct {
	Fields               []*FieldCount `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" toml:"fields,omitempty" mapstructure:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *NodesFieldValueCounts) Reset()         { *m = NodesFieldValueCounts{} }
func (m *NodesFieldValueCounts) String() string { return proto.CompactTextString(m) }
func (*NodesFieldValueCounts) ProtoMessage()    {}
func (*NodesFieldValueCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{12}
}

func (m *NodesFieldValueCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesFieldValueCounts.Unmarshal(m, b)
}
func (m *NodesFieldValueCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesFieldValueCounts.Marshal(b, m, deterministic)
}
func (m *NodesFieldValueCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesFieldValueCounts.Merge(m, src)
}
func (m *NodesFieldValueCounts) XXX_Size() int {
	return xxx_messageInfo_NodesFieldValueCounts.Size(m)
}
func (m *NodesFieldValueCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesFieldValueCounts.DiscardUnknown(m)
}

var xxx_messageInfo_NodesFieldValueCounts proto.InternalMessageInfo

func (m *NodesFieldValueCounts) GetFields() []*FieldCount {
	if m != nil {
		return m.Fields
	}
	return nil
}

type FieldCount struct {
	Terms                []*TermCount `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty" toml:"terms,omitempty" mapstructure:"terms,omitempty"`
	Field                string       `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty" toml:"field,omitempty" mapstructure:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FieldCount) Reset()         { *m = FieldCount{} }
func (m *FieldCount) String() string { return proto.CompactTextString(m) }
func (*FieldCount) ProtoMessage()    {}
func (*FieldCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{13}
}

func (m *FieldCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldCount.Unmarshal(m, b)
}
func (m *FieldCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldCount.Marshal(b, m, deterministic)
}
func (m *FieldCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldCount.Merge(m, src)
}
func (m *FieldCount) XXX_Size() int {
	return xxx_messageInfo_FieldCount.Size(m)
}
func (m *FieldCount) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldCount.DiscardUnknown(m)
}

var xxx_messageInfo_FieldCount proto.InternalMessageInfo

func (m *FieldCount) GetTerms() []*TermCount {
	if m != nil {
		return m.Terms
	}
	return nil
}

func (m *FieldCount) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

type TermCount struct {
	Term                 string   `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty" toml:"term,omitempty" mapstructure:"term,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty" toml:"count,omitempty" mapstructure:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *TermCount) Reset()         { *m = TermCount{} }
func (m *TermCount) String() string { return proto.CompactTextString(m) }
func (*TermCount) ProtoMessage()    {}
func (*TermCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e034c630bcbaefd, []int{14}
}

func (m *TermCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TermCount.Unmarshal(m, b)
}
func (m *TermCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TermCount.Marshal(b, m, deterministic)
}
func (m *TermCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TermCount.Merge(m, src)
}
func (m *TermCount) XXX_Size() int {
	return xxx_messageInfo_TermCount.Size(m)
}
func (m *TermCount) XXX_DiscardUnknown() {
	xxx_messageInfo_TermCount.DiscardUnknown(m)
}

var xxx_messageInfo_TermCount proto.InternalMessageInfo

func (m *TermCount) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

func (m *TermCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeAttribute)(nil), "chef.automate.domain.cfgmgmt.response.NodeAttribute")
	proto.RegisterType((*AbridgedConverge)(nil), "chef.automate.domain.cfgmgmt.response.AbridgedConverge")
	proto.RegisterType((*Run)(nil), "chef.automate.domain.cfgmgmt.response.Run")
	proto.RegisterType((*ExpandedRunList)(nil), "chef.automate.domain.cfgmgmt.response.ExpandedRunList")
	proto.RegisterType((*Resource)(nil), "chef.automate.domain.cfgmgmt.response.Resource")
	proto.RegisterType((*ChefError)(nil), "chef.automate.domain.cfgmgmt.response.ChefError")
	proto.RegisterType((*RunList)(nil), "chef.automate.domain.cfgmgmt.response.RunList")
	proto.RegisterType((*Description)(nil), "chef.automate.domain.cfgmgmt.response.Description")
	proto.RegisterType((*Deprecation)(nil), "chef.automate.domain.cfgmgmt.response.Deprecation")
	proto.RegisterType((*VersionedCookbook)(nil), "chef.automate.domain.cfgmgmt.response.VersionedCookbook")
	proto.RegisterType((*MissingNodeDurationCounts)(nil), "chef.automate.domain.cfgmgmt.response.MissingNodeDurationCounts")
	proto.RegisterType((*CountedDuration)(nil), "chef.automate.domain.cfgmgmt.response.CountedDuration")
	proto.RegisterType((*NodesFieldValueCounts)(nil), "chef.automate.domain.cfgmgmt.response.NodesFieldValueCounts")
	proto.RegisterType((*FieldCount)(nil), "chef.automate.domain.cfgmgmt.response.FieldCount")
	proto.RegisterType((*TermCount)(nil), "chef.automate.domain.cfgmgmt.response.TermCount")
}

func init() {
	proto.RegisterFile("api/interservice/cfgmgmt/response/nodes.proto", fileDescriptor_0e034c630bcbaefd)
}

var fileDescriptor_0e034c630bcbaefd = []byte{
	// 1464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x5f, 0x6f, 0x1b, 0x37,
	0x12, 0x87, 0xa4, 0x58, 0x96, 0x46, 0x96, 0xff, 0xd0, 0x8e, 0xb3, 0x71, 0x9c, 0xb3, 0xb3, 0x41,
	0xee, 0x7c, 0xc0, 0x9d, 0x94, 0x73, 0x2e, 0x45, 0x5b, 0xf4, 0x25, 0x75, 0xe2, 0x22, 0x45, 0x93,
	0x87, 0x8d, 0x6b, 0x14, 0x7d, 0x11, 0xa8, 0x5d, 0x4a, 0x61, 0xbc, 0xbb, 0xdc, 0x92, 0x5c, 0xa1,
	0xe9, 0x53, 0xbf, 0x51, 0xdb, 0xaf, 0xd3, 0x87, 0x7e, 0x96, 0x82, 0x43, 0x72, 0xb5, 0x6b, 0x07,
	0x88, 0xda, 0xb7, 0x9d, 0xdf, 0x70, 0x86, 0xc3, 0x99, 0xdf, 0x8c, 0x46, 0xf0, 0x5f, 0x5a, 0xf0,
	0x31, 0xcf, 0x35, 0x93, 0x8a, 0xc9, 0x05, 0x8f, 0xd9, 0x38, 0x9e, 0xcd, 0xb3, 0x79, 0xa6, 0xc7,
	0x92, 0xa9, 0x42, 0xe4, 0x8a, 0x8d, 0x73, 0x91, 0x30, 0x35, 0x2a, 0xa4, 0xd0, 0x82, 0x3c, 0x8a,
	0xdf, 0xb2, 0xd9, 0x88, 0x96, 0x5a, 0x64, 0x54, 0xb3, 0x51, 0x22, 0x32, 0xca, 0xf3, 0x91, 0x33,
	0x19, 0x79, 0x93, 0x83, 0xc3, 0xb9, 0x10, 0xf3, 0x94, 0x8d, 0xd1, 0x68, 0x5a, 0xce, 0xc6, 0x4a,
	0xcb, 0x32, 0xd6, 0xd6, 0xc9, 0xc1, 0xd1, 0x75, 0xad, 0xe6, 0x19, 0x53, 0x9a, 0x66, 0x85, 0x3d,
	0x10, 0xfe, 0xde, 0x81, 0xe1, 0x6b, 0x91, 0xb0, 0x67, 0x5a, 0x4b, 0x3e, 0x2d, 0x35, 0x23, 0x77,
	0x60, 0xdd, 0x84, 0x31, 0xe1, 0x49, 0xd0, 0x3a, 0x6e, 0x9d, 0xf4, 0xa3, 0xae, 0x11, 0x5f, 0x26,
	0x84, 0xc0, 0xad, 0x9c, 0x66, 0x2c, 0x68, 0x23, 0x8a, 0xdf, 0xe4, 0x2e, 0xf4, 0x64, 0x99, 0x4f,
	0x52, 0xae, 0x74, 0xd0, 0x39, 0xee, 0x9c, 0xf4, 0xa3, 0x75, 0x59, 0xe6, 0xdf, 0x70, 0xa5, 0xc9,
	0xbf, 0x61, 0xdb, 0xbc, 0x60, 0xc2, 0xf2, 0x05, 0x97, 0x22, 0xcf, 0x58, 0xae, 0x83, 0x5b, 0x68,
	0xba, 0x65, 0xf0, 0x17, 0x4b, 0x98, 0xec, 0x43, 0x37, 0x17, 0x32, 0xa3, 0x69, 0xb0, 0xe6, 0x6f,
	0x34, 0x12, 0x09, 0x60, 0x3d, 0x61, 0x33, 0x5a, 0xa6, 0x3a, 0xe8, 0xa2, 0xc2, 0x8b, 0xe4, 0x00,
	0x7a, 0x62, 0xc1, 0xa4, 0xe4, 0x09, 0x0b, 0xd6, 0x51, 0x55, 0xc9, 0xe4, 0x3f, 0x40, 0xac, 0xfd,
	0x64, 0x41, 0xd3, 0x92, 0x4d, 0x62, 0x51, 0xe6, 0x3a, 0xe8, 0x1d, 0xb7, 0x4e, 0xd6, 0xa2, 0x6d,
	0xab, 0xb9, 0x34, 0x8a, 0x33, 0x83, 0x93, 0x11, 0xec, 0x3a, 0xa7, 0x8d, 0xe3, 0x7d, 0x3c, 0xbe,
	0xe3, 0x54, 0xb5, 0xf3, 0x8f, 0x61, 0xcf, 0xdf, 0xd4, 0x30, 0x00, 0x34, 0x20, 0x5e, 0x57, 0xb3,
	0xf8, 0x27, 0x6c, 0xd1, 0xb4, 0x19, 0xcc, 0x00, 0x0f, 0x0f, 0x69, 0x5a, 0x8f, 0xe4, 0x10, 0xfa,
	0xae, 0xda, 0x3c, 0x0e, 0x36, 0xf0, 0x51, 0x4b, 0x80, 0x9c, 0xc2, 0xed, 0x4a, 0x68, 0xf8, 0x1a,
	0xa2, 0xaf, 0xdd, 0x4a, 0xb9, 0xf4, 0x18, 0x6a, 0xd8, 0x7e, 0x36, 0x95, 0x3c, 0x99, 0xb3, 0xe4,
	0x4c, 0xe4, 0x0b, 0x26, 0xe7, 0x8c, 0x6c, 0x42, 0xbb, 0xaa, 0x6c, 0x9b, 0x27, 0xe4, 0x3e, 0x80,
	0xd2, 0x54, 0xea, 0x89, 0x61, 0x86, 0xab, 0x6d, 0x1f, 0x91, 0x0b, 0x6e, 0x0b, 0xcc, 0xf2, 0xc4,
	0x2a, 0x3b, 0xb6, 0x06, 0x2c, 0x4f, 0x50, 0xb5, 0x0f, 0x5d, 0xa5, 0xa9, 0x2e, 0x95, 0x2b, 0xab,
	0x93, 0xc2, 0x5f, 0x07, 0xd0, 0x89, 0xca, 0xfc, 0xc6, 0x4d, 0x35, 0x62, 0xb5, 0x1b, 0xc4, 0xba,
	0x07, 0x7d, 0x54, 0x20, 0xbb, 0xec, 0x25, 0x3d, 0x03, 0xbc, 0x36, 0x0c, 0x0b, 0x61, 0x43, 0xc8,
	0x39, 0xcd, 0xf9, 0x4f, 0x54, 0x73, 0x91, 0xbb, 0xbb, 0x1a, 0x18, 0xf9, 0xac, 0xf1, 0x06, 0xc3,
	0xa1, 0xc1, 0xe9, 0xc1, 0xc8, 0x52, 0x7f, 0xe4, 0xa9, 0x3f, 0xba, 0xf0, 0xd4, 0xaf, 0xbf, 0xef,
	0x69, 0xed, 0x7d, 0xdd, 0x8f, 0x1a, 0x36, 0xde, 0x2e, 0x4a, 0x19, 0x7b, 0xf6, 0x39, 0xa9, 0x96,
	0x93, 0x5e, 0x3d, 0x27, 0x86, 0x35, 0x5a, 0x68, 0x9a, 0x4e, 0x24, 0xb3, 0x27, 0x1b, 0x34, 0x23,
	0xa8, 0x8b, 0x9c, 0xca, 0xb2, 0xe1, 0xff, 0xb0, 0x5f, 0x16, 0x09, 0xd5, 0x2c, 0xb9, 0x6e, 0x63,
	0x99, 0xb6, 0xe7, 0xb4, 0x4d, 0xab, 0x07, 0xb0, 0x81, 0x4d, 0xb7, 0x60, 0x52, 0x99, 0x6c, 0x0d,
	0x30, 0x8a, 0x81, 0xc1, 0x2e, 0x2d, 0x44, 0x1e, 0xc1, 0x66, 0x59, 0x98, 0xf7, 0x4e, 0x14, 0x8b,
	0x45, 0x9e, 0x28, 0xe4, 0xda, 0x5a, 0x34, 0xb4, 0xe8, 0x1b, 0x0b, 0x92, 0x63, 0x18, 0xd4, 0x3b,
	0x77, 0x68, 0x1d, 0xd5, 0x20, 0x33, 0x0f, 0x66, 0x3f, 0x24, 0x79, 0xb0, 0x69, 0xe7, 0x81, 0xf9,
	0x26, 0x47, 0x30, 0x70, 0xb1, 0xa2, 0x6a, 0x0b, 0x55, 0x60, 0xa1, 0x73, 0x73, 0xe0, 0x10, 0xfa,
	0xbc, 0xa0, 0x49, 0x22, 0x99, 0x52, 0xc1, 0xb6, 0x65, 0x5b, 0x05, 0x90, 0x57, 0xd0, 0xf7, 0x8f,
	0x55, 0xc1, 0xce, 0x71, 0xe7, 0x64, 0x70, 0x3a, 0x1e, 0xad, 0x34, 0x07, 0x47, 0x3e, 0x0f, 0xd1,
	0xd2, 0x43, 0x63, 0x3a, 0x91, 0xe6, 0x74, 0xba, 0x84, 0x8d, 0x84, 0x15, 0x92, 0xc5, 0xc8, 0x20,
	0x15, 0xec, 0xe2, 0x65, 0xa7, 0x2b, 0x5e, 0xf6, 0x7c, 0x69, 0x1a, 0x35, 0xfc, 0x90, 0x73, 0x58,
	0x63, 0x52, 0x0a, 0x19, 0xec, 0x21, 0x99, 0x1e, 0xaf, 0xe8, 0xf0, 0xcc, 0x4c, 0x44, 0x63, 0x17,
	0x59, 0x73, 0x93, 0x5c, 0x4d, 0xe7, 0x2a, 0xb8, 0x8d, 0x61, 0xe3, 0xb7, 0xa9, 0x5c, 0x45, 0x05,
	0xd3, 0x2b, 0x2a, 0xd8, 0x47, 0xed, 0xd0, 0xa3, 0xa6, 0x61, 0x94, 0x99, 0x9a, 0x92, 0xc5, 0xbc,
	0x60, 0x2a, 0xb8, 0xe3, 0x1e, 0x6d, 0x45, 0xd3, 0x68, 0xc8, 0x0e, 0xf4, 0x1c, 0xa0, 0xae, 0x67,
	0x80, 0x0b, 0xe3, 0xfd, 0x10, 0xfa, 0xb1, 0x10, 0x57, 0x53, 0x21, 0xae, 0x54, 0x70, 0x17, 0x95,
	0x4b, 0xc0, 0x0c, 0xdc, 0x22, 0xa5, 0x7a, 0x26, 0x64, 0x16, 0x1c, 0xd8, 0x16, 0xf5, 0x32, 0xf9,
	0x17, 0x6c, 0xf9, 0xef, 0xc9, 0x8c, 0x66, 0x3c, 0x7d, 0x1f, 0xdc, 0xc3, 0x23, 0x9b, 0x1e, 0x3e,
	0x47, 0xd4, 0xfc, 0x24, 0x54, 0x07, 0x3d, 0x43, 0x0f, 0xed, 0x4f, 0x82, 0xc7, 0x3d, 0x4b, 0xf7,
	0x60, 0x4d, 0x8a, 0x94, 0xa9, 0xe0, 0x3e, 0x46, 0x62, 0x05, 0x43, 0xaf, 0x42, 0xa4, 0x3c, 0x7e,
	0x6f, 0x67, 0xc5, 0x3f, 0x2c, 0xbd, 0x2c, 0x84, 0xd3, 0xe2, 0x01, 0x6c, 0xb8, 0x03, 0x73, 0x29,
	0xca, 0x22, 0x38, 0xb2, 0xb4, 0xb5, 0xd8, 0x57, 0x06, 0xc2, 0x68, 0xed, 0x11, 0xc9, 0x16, 0x1c,
	0x63, 0x38, 0x76, 0xd1, 0x22, 0x1c, 0x39, 0x94, 0x4c, 0x61, 0x87, 0xfd, 0x58, 0xd0, 0x3c, 0x31,
	0x2d, 0xe8, 0x69, 0xf4, 0x00, 0xcb, 0xfa, 0xc9, 0x8a, 0x65, 0x7d, 0xe1, 0xec, 0x23, 0xcb, 0xba,
	0x68, 0x8b, 0x35, 0x01, 0x4c, 0xab, 0x14, 0xef, 0x58, 0xac, 0x55, 0x10, 0xda, 0x82, 0x78, 0x99,
	0x70, 0xd8, 0x75, 0x49, 0x62, 0xc9, 0x64, 0x59, 0x9a, 0x87, 0xc8, 0xd4, 0x4f, 0x57, 0x8c, 0xe0,
	0xd2, 0x7b, 0x38, 0x73, 0x0e, 0x22, 0xb2, 0xb8, 0x0e, 0xa9, 0x30, 0x85, 0xad, 0x6b, 0xa1, 0xde,
	0x98, 0xde, 0x2f, 0x6b, 0xbd, 0xd4, 0xc6, 0x10, 0x46, 0xab, 0x76, 0xa6, 0x7b, 0xbc, 0xef, 0xbd,
	0xf0, 0x8f, 0x36, 0xf4, 0x7c, 0xbb, 0x22, 0xd1, 0xdf, 0x17, 0xcc, 0xdd, 0x84, 0xdf, 0x1f, 0xdc,
	0x34, 0x6c, 0x3c, 0x9d, 0x2a, 0x9e, 0x03, 0xe8, 0x25, 0xa5, 0xac, 0xff, 0x26, 0x54, 0xb2, 0x21,
	0x4f, 0xc2, 0x52, 0x4d, 0xdd, 0x3a, 0x61, 0x05, 0xf2, 0x10, 0x86, 0x3e, 0x8b, 0x96, 0x3e, 0x76,
	0xa7, 0xd8, 0xf0, 0x20, 0x12, 0xc8, 0x6c, 0x2d, 0xfe, 0x90, 0xa7, 0xe8, 0xba, 0xdb, 0x5a, 0x1c,
	0xee, 0x29, 0xba, 0x9c, 0xf5, 0xfd, 0xc6, 0xac, 0x3f, 0x82, 0x81, 0x6d, 0x38, 0x7b, 0x0b, 0x58,
	0x92, 0x5a, 0x08, 0xef, 0xd8, 0x87, 0xae, 0x64, 0xca, 0x6c, 0x35, 0x76, 0x3c, 0x3b, 0xc9, 0x8c,
	0x5c, 0x33, 0x7b, 0xb9, 0x79, 0x03, 0x4d, 0xdd, 0x74, 0xac, 0x43, 0x66, 0x02, 0xf0, 0x79, 0x2e,
	0x24, 0x9b, 0xcc, 0x28, 0x4f, 0x4b, 0xc9, 0x82, 0x9d, 0xe3, 0xd6, 0x49, 0x2f, 0x1a, 0x5a, 0xf4,
	0xdc, 0x82, 0xe1, 0x2f, 0x2d, 0xe8, 0x57, 0x13, 0xc5, 0x64, 0x23, 0x4e, 0xa9, 0x52, 0x2e, 0xc5,
	0x56, 0x30, 0x53, 0x22, 0x63, 0x4a, 0xd1, 0xb9, 0x4f, 0xb3, 0x17, 0xcd, 0x20, 0x98, 0xd2, 0xf8,
	0x4a, 0x4b, 0x1a, 0xb3, 0x60, 0xdb, 0x0e, 0x82, 0x0a, 0x20, 0x17, 0x30, 0x48, 0x98, 0x8a, 0x25,
	0x2f, 0x30, 0xf5, 0x3b, 0xd8, 0x0f, 0xab, 0xcf, 0xcd, 0xca, 0x32, 0xaa, 0xbb, 0x09, 0x7f, 0x6b,
	0xc1, 0xba, 0x67, 0xde, 0xaa, 0x8c, 0x08, 0x60, 0xdd, 0x57, 0xc8, 0x6d, 0x26, 0x4e, 0x34, 0x1a,
	0x75, 0xc5, 0x8b, 0x82, 0x25, 0x48, 0x8d, 0x5e, 0xe4, 0x45, 0xf2, 0x35, 0xf4, 0xe2, 0xb7, 0x3c,
	0x4d, 0x24, 0xcb, 0x83, 0xb5, 0xbf, 0xc5, 0xe2, 0xca, 0x3e, 0xfc, 0x0e, 0x06, 0xb5, 0xf7, 0x98,
	0x34, 0x6b, 0xae, 0x53, 0x1f, 0xb7, 0x15, 0xc8, 0x13, 0xe8, 0x29, 0x16, 0xdb, 0xdf, 0x18, 0xdb,
	0x36, 0x77, 0x6e, 0xec, 0x17, 0x6f, 0x70, 0x63, 0x8f, 0xaa, 0x83, 0xe1, 0xb7, 0xc6, 0x73, 0xf5,
	0xa3, 0x52, 0x2f, 0x55, 0xab, 0x59, 0xaa, 0x6d, 0xe8, 0x94, 0x32, 0x75, 0x59, 0x31, 0x9f, 0xa6,
	0x2d, 0x52, 0x61, 0xed, 0xfc, 0x2a, 0xe5, 0xe5, 0xf0, 0x19, 0xec, 0xdc, 0x18, 0x07, 0x55, 0x66,
	0x5b, 0x1f, 0xce, 0x6c, 0xbb, 0x91, 0xd9, 0xf0, 0xe7, 0x16, 0xdc, 0x7d, 0xc5, 0x95, 0xe2, 0xf9,
	0xdc, 0xfc, 0x6b, 0x78, 0xee, 0x3a, 0x0e, 0x97, 0x0f, 0x45, 0x62, 0xd8, 0xc1, 0x15, 0x85, 0x25,
	0x13, 0xdf, 0x8b, 0x86, 0x75, 0x9d, 0xbf, 0x30, 0x31, 0xcf, 0xac, 0xbd, 0x77, 0x1c, 0x6d, 0xc7,
	0x4d, 0x40, 0x85, 0x67, 0xb0, 0x75, 0xed, 0x50, 0x63, 0x16, 0xb4, 0x6e, 0xce, 0x02, 0xbb, 0x36,
	0xb5, 0x71, 0xcb, 0xb1, 0x42, 0x38, 0x85, 0xdb, 0x26, 0x7e, 0x75, 0xce, 0x59, 0x9a, 0x2c, 0x37,
	0x66, 0x45, 0x5e, 0x42, 0x77, 0x66, 0x30, 0x1f, 0xf7, 0xff, 0x56, 0x8c, 0x1b, 0x1d, 0xa1, 0x8f,
	0xc8, 0x39, 0x08, 0xdf, 0x01, 0x2c, 0x51, 0xb3, 0x18, 0x68, 0x26, 0x33, 0xef, 0x77, 0xd5, 0xc5,
	0xe0, 0x82, 0xc9, 0xcc, 0xba, 0xb5, 0xe6, 0xe6, 0x3d, 0xe8, 0xdf, 0x55, 0xc6, 0x0a, 0xe1, 0x53,
	0xe8, 0x57, 0x27, 0xb1, 0x81, 0x98, 0xcc, 0xaa, 0x06, 0x62, 0x32, 0xfb, 0x70, 0x1a, 0xbe, 0xfc,
	0xe2, 0xfb, 0xcf, 0xe7, 0x5c, 0xbf, 0x2d, 0xa7, 0xa3, 0x58, 0x64, 0x63, 0x13, 0xd1, 0xd8, 0x47,
	0x34, 0xfe, 0xe8, 0xbf, 0xd5, 0x69, 0x17, 0x19, 0xfc, 0xe4, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1b, 0xc8, 0x24, 0x04, 0xd9, 0x0e, 0x00, 0x00,
}
