// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/cfgmgmt/response/event.proto

package response

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Events struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty" toml:"events,omitempty" mapstructure:"events,omitempty"`
	TotalEvents          int64    `protobuf:"varint,2,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty" toml:"total_events,omitempty" mapstructure:"total_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Events) Reset()         { *m = Events{} }
func (m *Events) String() string { return proto.CompactTextString(m) }
func (*Events) ProtoMessage()    {}
func (*Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e516efcc6abcd20, []int{0}
}

func (m *Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Events.Unmarshal(m, b)
}
func (m *Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Events.Marshal(b, m, deterministic)
}
func (m *Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Events.Merge(m, src)
}
func (m *Events) XXX_Size() int {
	return xxx_messageInfo_Events.Size(m)
}
func (m *Events) XXX_DiscardUnknown() {
	xxx_messageInfo_Events.DiscardUnknown(m)
}

var xxx_messageInfo_Events proto.InternalMessageInfo

func (m *Events) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Events) GetTotalEvents() int64 {
	if m != nil {
		return m.TotalEvents
	}
	return 0
}

type Event struct {
	EventType            string               `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty" toml:"event_type,omitempty" mapstructure:"event_type,omitempty"`
	Task                 string               `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty" toml:"task,omitempty" mapstructure:"task,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty" toml:"timestamp,omitempty" mapstructure:"timestamp,omitempty"`
	EntityName           string               `protobuf:"bytes,4,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty" toml:"entity_name,omitempty" mapstructure:"entity_name,omitempty"`
	RequestorType        string               `protobuf:"bytes,5,opt,name=requestor_type,json=requestorType,proto3" json:"requestor_type,omitempty" toml:"requestor_type,omitempty" mapstructure:"requestor_type,omitempty"`
	RequestorName        string               `protobuf:"bytes,6,opt,name=requestor_name,json=requestorName,proto3" json:"requestor_name,omitempty" toml:"requestor_name,omitempty" mapstructure:"requestor_name,omitempty"`
	ServiceHostname      string               `protobuf:"bytes,7,opt,name=service_hostname,json=serviceHostname,proto3" json:"service_hostname,omitempty" toml:"service_hostname,omitempty" mapstructure:"service_hostname,omitempty"`
	Id                   string               `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	ParentName           string               `protobuf:"bytes,16,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty" toml:"parent_name,omitempty" mapstructure:"parent_name,omitempty"`
	ParentType           string               `protobuf:"bytes,17,opt,name=parent_type,json=parentType,proto3" json:"parent_type,omitempty" toml:"parent_type,omitempty" mapstructure:"parent_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e516efcc6abcd20, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *Event) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *Event) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Event) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *Event) GetRequestorType() string {
	if m != nil {
		return m.RequestorType
	}
	return ""
}

func (m *Event) GetRequestorName() string {
	if m != nil {
		return m.RequestorName
	}
	return ""
}

func (m *Event) GetServiceHostname() string {
	if m != nil {
		return m.ServiceHostname
	}
	return ""
}

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetParentName() string {
	if m != nil {
		return m.ParentName
	}
	return ""
}

func (m *Event) GetParentType() string {
	if m != nil {
		return m.ParentType
	}
	return ""
}

type EventCounts struct {
	Total                int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty" toml:"total,omitempty" mapstructure:"total,omitempty"`
	Counts               []*EventCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty" toml:"counts,omitempty" mapstructure:"counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *EventCounts) Reset()         { *m = EventCounts{} }
func (m *EventCounts) String() string { return proto.CompactTextString(m) }
func (*EventCounts) ProtoMessage()    {}
func (*EventCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e516efcc6abcd20, []int{2}
}

func (m *EventCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCounts.Unmarshal(m, b)
}
func (m *EventCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCounts.Marshal(b, m, deterministic)
}
func (m *EventCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCounts.Merge(m, src)
}
func (m *EventCounts) XXX_Size() int {
	return xxx_messageInfo_EventCounts.Size(m)
}
func (m *EventCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCounts.DiscardUnknown(m)
}

var xxx_messageInfo_EventCounts proto.InternalMessageInfo

func (m *EventCounts) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *EventCounts) GetCounts() []*EventCount {
	if m != nil {
		return m.Counts
	}
	return nil
}

type EventCount struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty" toml:"count,omitempty" mapstructure:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *EventCount) Reset()         { *m = EventCount{} }
func (m *EventCount) String() string { return proto.CompactTextString(m) }
func (*EventCount) ProtoMessage()    {}
func (*EventCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e516efcc6abcd20, []int{3}
}

func (m *EventCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventCount.Unmarshal(m, b)
}
func (m *EventCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventCount.Marshal(b, m, deterministic)
}
func (m *EventCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventCount.Merge(m, src)
}
func (m *EventCount) XXX_Size() int {
	return xxx_messageInfo_EventCount.Size(m)
}
func (m *EventCount) XXX_DiscardUnknown() {
	xxx_messageInfo_EventCount.DiscardUnknown(m)
}

var xxx_messageInfo_EventCount proto.InternalMessageInfo

func (m *EventCount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Events)(nil), "chef.automate.domain.cfgmgmt.response.Events")
	proto.RegisterType((*Event)(nil), "chef.automate.domain.cfgmgmt.response.Event")
	proto.RegisterType((*EventCounts)(nil), "chef.automate.domain.cfgmgmt.response.EventCounts")
	proto.RegisterType((*EventCount)(nil), "chef.automate.domain.cfgmgmt.response.EventCount")
}

func init() {
	proto.RegisterFile("interservice/cfgmgmt/response/event.proto", fileDescriptor_2e516efcc6abcd20)
}

var fileDescriptor_2e516efcc6abcd20 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcf, 0x8b, 0xd4, 0x30,
	0x18, 0xa5, 0x9d, 0x9d, 0xea, 0x7c, 0xd5, 0x75, 0x0d, 0x1e, 0xca, 0x82, 0xec, 0x38, 0xb0, 0x30,
	0x0b, 0x92, 0xe0, 0x0a, 0x22, 0xe2, 0xc9, 0x1f, 0xa0, 0x17, 0x0f, 0x65, 0x4f, 0x5e, 0x86, 0x4c,
	0xe7, 0x9b, 0x4e, 0x70, 0xd3, 0x74, 0x9b, 0xaf, 0x0b, 0xf3, 0xdf, 0xfa, 0xa7, 0x48, 0xbf, 0xa4,
	0x3b, 0xea, 0x41, 0xdc, 0x5b, 0xf2, 0xf2, 0xde, 0xfb, 0x5e, 0xf2, 0x5a, 0xb8, 0x30, 0x0d, 0x61,
	0xe7, 0xb1, 0xbb, 0x35, 0x15, 0xaa, 0x6a, 0x5b, 0xdb, 0xda, 0x92, 0xea, 0xd0, 0xb7, 0xae, 0xf1,
	0xa8, 0xf0, 0x16, 0x1b, 0x92, 0x6d, 0xe7, 0xc8, 0x89, 0xf3, 0x6a, 0x87, 0x5b, 0xa9, 0x7b, 0x72,
	0x56, 0x13, 0xca, 0x8d, 0xb3, 0xda, 0x34, 0x32, 0x4a, 0xe4, 0x28, 0x39, 0x3d, 0xab, 0x9d, 0xab,
	0xaf, 0x51, 0xb1, 0x68, 0xdd, 0x6f, 0x15, 0x19, 0x8b, 0x9e, 0xb4, 0x6d, 0x83, 0xcf, 0xe2, 0x06,
	0xb2, 0xcf, 0x83, 0xad, 0x17, 0x9f, 0x20, 0xe3, 0x01, 0xbe, 0x48, 0xe6, 0x93, 0x65, 0x7e, 0xf9,
	0x52, 0xfe, 0xd7, 0x08, 0xc9, 0xf2, 0x32, 0x6a, 0xc5, 0x0b, 0x78, 0x44, 0x8e, 0xf4, 0xf5, 0x2a,
	0x7a, 0xa5, 0xf3, 0x64, 0x39, 0x29, 0x73, 0xc6, 0xc2, 0xa0, 0xc5, 0xcf, 0x14, 0xa6, 0xbc, 0x14,
	0xcf, 0x01, 0x98, 0xb6, 0xa2, 0x7d, 0x8b, 0x45, 0x32, 0x4f, 0x96, 0xb3, 0x72, 0xc6, 0xc8, 0xd5,
	0xbe, 0x45, 0x21, 0xe0, 0x88, 0xb4, 0xff, 0xc1, 0x1e, 0xb3, 0x92, 0xd7, 0xe2, 0x2d, 0xcc, 0xee,
	0xae, 0x50, 0x4c, 0xe6, 0xc9, 0x32, 0xbf, 0x3c, 0x95, 0xe1, 0x92, 0x72, 0xbc, 0xa4, 0xbc, 0x1a,
	0x19, 0xe5, 0x81, 0x2c, 0xce, 0x20, 0xc7, 0x86, 0x0c, 0xed, 0x57, 0x8d, 0xb6, 0x58, 0x1c, 0xb1,
	0x29, 0x04, 0xe8, 0x9b, 0xb6, 0x28, 0xce, 0xe1, 0xb8, 0xc3, 0x9b, 0x1e, 0x3d, 0xb9, 0x2e, 0x24,
	0x9a, 0x32, 0xe7, 0xf1, 0x1d, 0xca, 0xa9, 0xfe, 0xa0, 0xb1, 0x55, 0xf6, 0x17, 0x8d, 0xdd, 0x2e,
	0xe0, 0x24, 0x16, 0xb9, 0xda, 0x39, 0x4f, 0x4c, 0x7c, 0xc0, 0xc4, 0x27, 0x11, 0xff, 0x12, 0x61,
	0x71, 0x0c, 0xa9, 0xd9, 0x14, 0x0f, 0xf9, 0x30, 0x35, 0x9b, 0x21, 0x69, 0xab, 0xbb, 0xe1, 0x5d,
	0x58, 0x75, 0x12, 0x92, 0x06, 0x88, 0xbd, 0x0f, 0x04, 0x8e, 0xf9, 0xf4, 0x77, 0xc2, 0x90, 0x71,
	0xd1, 0x40, 0xce, 0x2f, 0xfc, 0xd1, 0xf5, 0x43, 0x29, 0xcf, 0x60, 0xca, 0x05, 0xf0, 0x13, 0x4f,
	0xca, 0xb0, 0x11, 0x5f, 0x21, 0xab, 0xf8, 0xbc, 0x48, 0xb9, 0xf0, 0x57, 0xf7, 0x29, 0x9c, 0x9d,
	0xcb, 0x68, 0xb0, 0x78, 0x03, 0x70, 0x40, 0x87, 0xde, 0x38, 0x78, 0x28, 0x94, 0xd7, 0x43, 0x04,
	0xe6, 0xc6, 0x0f, 0x22, 0x6c, 0x3e, 0xbc, 0xff, 0xfe, 0xae, 0x36, 0xb4, 0xeb, 0xd7, 0xb2, 0x72,
	0x56, 0x0d, 0xe3, 0xd5, 0x38, 0x5e, 0xe9, 0xd6, 0xa8, 0x7f, 0xfe, 0x0f, 0xeb, 0x8c, 0x0b, 0x7f,
	0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x71, 0xf8, 0xec, 0x37, 0x03, 0x00, 0x00,
}
