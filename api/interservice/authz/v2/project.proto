syntax = "proto3";

import "validate/validate.proto";
import "api/interservice/authz/v2/type.proto";
import "google/protobuf/timestamp.proto";

package chef.automate.domain.authz.v2;
option go_package = "github.com/chef/automate/api/interservice/authz/v2";

message Project {
    string name = 1;
    string id = 2;
    Type type = 3;
    string status = 4;
}

message CreateProjectReq {
    string name = 1 [(validate.rules).string.min_len = 1];
    string id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message CreateProjectResp {
    Project project = 1;
}

message GetProjectReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message GetProjectResp {
    Project project = 1;
}

message ListProjectsReq {}

message ListProjectsResp {
    repeated Project projects = 1;
}

message UpdateProjectReq {
    string name = 1 [(validate.rules).string.min_len = 1];
    string id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message UpdateProjectResp {
    Project project = 1;
}

message DeleteProjectReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message DeleteProjectResp {}

service Projects {
    rpc UpdateProject(UpdateProjectReq) returns (UpdateProjectResp) {};
    rpc CreateProject(CreateProjectReq) returns (CreateProjectResp) {};
    rpc GetProject(GetProjectReq) returns (GetProjectResp) {};
    rpc DeleteProject(DeleteProjectReq) returns (DeleteProjectResp) {};
    rpc ListProjects(ListProjectsReq) returns (ListProjectsResp) {};
    rpc ListProjectsForIntrospection(ListProjectsReq) returns (ListProjectsResp) {};

    rpc ApplyRulesStart(ApplyRulesStartReq ) returns (ApplyRulesStartResp) {};
    rpc ApplyRulesCancel(ApplyRulesCancelReq) returns (ApplyRulesCancelResp);
    rpc ApplyRulesStatus(ApplyRulesStatusReq) returns (ApplyRulesStatusResp);

    // "proper" methods go here (and the ones above will be phased out eventually)
    rpc CreateRule(CreateRuleReq) returns (CreateRuleResp) {};
    rpc UpdateRule(UpdateRuleReq) returns (UpdateRuleResp) {};
    rpc GetRule(GetRuleReq) returns (GetRuleResp) {};
    rpc ListRules(ListRulesReq) returns (ListRulesResp) {};
    rpc ListRulesForProject(ListRulesForProjectReq) returns (ListRulesForProjectResp) {};
    rpc DeleteRule(DeleteRuleReq) returns (DeleteRuleResp) {};
    rpc ListRulesForAllProjects(ListRulesForAllProjectsReq) returns (ListRulesForAllProjectsResp) {};
}


message ApplyRulesStartReq {}

message ApplyRulesStartResp {}

message ApplyRulesCancelReq {}

message ApplyRulesCancelResp {}

message ApplyRulesStatusReq {}

message ApplyRulesStatusResp {
    string state = 1;
    google.protobuf.Timestamp estimated_time_complete = 2;
    float percentage_complete = 3;
    bool failed = 4;
    string failure_message = 5;
    bool cancelled = 6;
}

message ListRulesForAllProjectsReq {}
message ListRulesForAllProjectsResp {
    map<string, ProjectRules> project_rules = 2;
}

message ProjectRules {
    repeated ProjectRule rules = 2;
}

message ProjectRule {
    string id = 1;
    string project_id = 2;
    string name = 3;
    ProjectRuleTypes type = 4;
    repeated Condition conditions = 5;
    bool deleted = 6;
    string status = 7;
}

enum ProjectRuleTypes {
    NODE = 0;
    EVENT = 1;
}

enum ProjectRuleConditionAttributes {
    CHEF_SERVER = 0;
    CHEF_ORGANIZATION = 1;
    ENVIRONMENT = 2;
    CHEF_ROLE = 3;
    CHEF_TAG = 4;
    CHEF_POLICY_GROUP = 5;
    CHEF_POLICY_NAME = 6;
}

enum ProjectRuleConditionOperators {
    MEMBER_OF = 0;
    EQUALS = 1;
}

message Condition {
    ProjectRuleConditionAttributes attribute = 1;
    repeated string values = 2;
    ProjectRuleConditionOperators operator = 3;
}

// CreateRuleReq is ProjectRule, so the input is just one JSON object. Also adds
// basic validation.
message CreateRuleReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string project_id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string name = 3 [(validate.rules).string.min_len = 1];
    ProjectRuleTypes type = 4 [(validate.rules).enum.defined_only = true];
    repeated Condition conditions = 5 [(validate.rules).repeated.min_items = 1];
}

message CreateRuleResp {
    ProjectRule rule = 1;
}

message UpdateRuleReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string project_id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string name = 3 [(validate.rules).string.min_len = 1];
    ProjectRuleTypes type = 4 [(validate.rules).enum.defined_only = true];
    repeated Condition conditions = 5 [(validate.rules).repeated.min_items = 1];
}

message UpdateRuleResp {
    ProjectRule rule = 1;
}

message GetRuleReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string project_id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message GetRuleResp {
    ProjectRule rule = 1;
}

message ListRulesReq {
    bool include_staged = 1;
}

message ListRulesResp {
    repeated ProjectRule rules = 1;
}

message ListRulesForProjectReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message ListRulesForProjectResp {
    repeated ProjectRule rules = 1;
    string status = 2;
}

message DeleteRuleReq {
    string id = 1 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
    string project_id = 2 [(validate.rules).string.pattern = "^[a-z0-9-_]{1,64}$"];
}

message DeleteRuleResp {}
