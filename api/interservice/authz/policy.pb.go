// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/authz/policy.proto

package authz

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Flag int32

const (
	Flag_VERSION_2_0 Flag = 0
	Flag_VERSION_2_1 Flag = 1
)

var Flag_name = map[int32]string{
	0: "VERSION_2_0",
	1: "VERSION_2_1",
}

var Flag_value = map[string]int32{
	"VERSION_2_0": 0,
	"VERSION_2_1": 1,
}

func (x Flag) String() string {
	return proto.EnumName(Flag_name, int32(x))
}

func (Flag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{0}
}

type Statement_Effect int32

const (
	Statement_ALLOW Statement_Effect = 0
	Statement_DENY  Statement_Effect = 1
)

var Statement_Effect_name = map[int32]string{
	0: "ALLOW",
	1: "DENY",
}

var Statement_Effect_value = map[string]int32{
	"ALLOW": 0,
	"DENY":  1,
}

func (x Statement_Effect) String() string {
	return proto.EnumName(Statement_Effect_name, int32(x))
}

func (Statement_Effect) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{5, 0}
}

type Version_VersionNumber int32

const (
	Version_V0 Version_VersionNumber = 0
	Version_V1 Version_VersionNumber = 1
	Version_V2 Version_VersionNumber = 2
)

var Version_VersionNumber_name = map[int32]string{
	0: "V0",
	1: "V1",
	2: "V2",
}

var Version_VersionNumber_value = map[string]int32{
	"V0": 0,
	"V1": 1,
	"V2": 2,
}

func (x Version_VersionNumber) String() string {
	return proto.EnumName(Version_VersionNumber_name, int32(x))
}

func (Version_VersionNumber) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{14, 0}
}

type Policy struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Id                   string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Type                 Type         `protobuf:"varint,3,opt,name=type,proto3,enum=chef.automate.domain.authz.Type" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	Members              []string     `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	Statements           []*Statement `protobuf:"bytes,5,rep,name=statements,proto3" json:"statements,omitempty" toml:"statements,omitempty" mapstructure:"statements,omitempty"`
	Projects             []string     `protobuf:"bytes,6,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{0}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Policy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Policy) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_CHEF_MANAGED
}

func (m *Policy) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Policy) GetStatements() []*Statement {
	if m != nil {
		return m.Statements
	}
	return nil
}

func (m *Policy) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type Role struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Type                 Type     `protobuf:"varint,3,opt,name=type,proto3,enum=chef.automate.domain.authz.Type" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	Actions              []string `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty" toml:"actions,omitempty" mapstructure:"actions,omitempty"`
	Projects             []string `protobuf:"bytes,5,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{1}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Role) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_CHEF_MANAGED
}

func (m *Role) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Role) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type CreatePolicyReq struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Members              []string     `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	Statements           []*Statement `protobuf:"bytes,4,rep,name=statements,proto3" json:"statements,omitempty" toml:"statements,omitempty" mapstructure:"statements,omitempty"`
	Projects             []string     `protobuf:"bytes,5,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreatePolicyReq) Reset()         { *m = CreatePolicyReq{} }
func (m *CreatePolicyReq) String() string { return proto.CompactTextString(m) }
func (*CreatePolicyReq) ProtoMessage()    {}
func (*CreatePolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{2}
}

func (m *CreatePolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePolicyReq.Unmarshal(m, b)
}
func (m *CreatePolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePolicyReq.Marshal(b, m, deterministic)
}
func (m *CreatePolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePolicyReq.Merge(m, src)
}
func (m *CreatePolicyReq) XXX_Size() int {
	return xxx_messageInfo_CreatePolicyReq.Size(m)
}
func (m *CreatePolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePolicyReq proto.InternalMessageInfo

func (m *CreatePolicyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreatePolicyReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreatePolicyReq) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CreatePolicyReq) GetStatements() []*Statement {
	if m != nil {
		return m.Statements
	}
	return nil
}

func (m *CreatePolicyReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type DeletePolicyReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeletePolicyReq) Reset()         { *m = DeletePolicyReq{} }
func (m *DeletePolicyReq) String() string { return proto.CompactTextString(m) }
func (*DeletePolicyReq) ProtoMessage()    {}
func (*DeletePolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{3}
}

func (m *DeletePolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePolicyReq.Unmarshal(m, b)
}
func (m *DeletePolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePolicyReq.Marshal(b, m, deterministic)
}
func (m *DeletePolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePolicyReq.Merge(m, src)
}
func (m *DeletePolicyReq) XXX_Size() int {
	return xxx_messageInfo_DeletePolicyReq.Size(m)
}
func (m *DeletePolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePolicyReq proto.InternalMessageInfo

func (m *DeletePolicyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePolicyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeletePolicyResp) Reset()         { *m = DeletePolicyResp{} }
func (m *DeletePolicyResp) String() string { return proto.CompactTextString(m) }
func (*DeletePolicyResp) ProtoMessage()    {}
func (*DeletePolicyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{4}
}

func (m *DeletePolicyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePolicyResp.Unmarshal(m, b)
}
func (m *DeletePolicyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePolicyResp.Marshal(b, m, deterministic)
}
func (m *DeletePolicyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePolicyResp.Merge(m, src)
}
func (m *DeletePolicyResp) XXX_Size() int {
	return xxx_messageInfo_DeletePolicyResp.Size(m)
}
func (m *DeletePolicyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePolicyResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePolicyResp proto.InternalMessageInfo

type Statement struct {
	Effect Statement_Effect `protobuf:"varint,1,opt,name=effect,proto3,enum=chef.automate.domain.authz.Statement_Effect" json:"effect,omitempty" toml:"effect,omitempty" mapstructure:"effect,omitempty"`
	// inline definitions
	Resources []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty" toml:"resources,omitempty" mapstructure:"resources,omitempty"`
	// this RE means:  * OR *:verb OR svc:type:verb OR svc:* OR svc:*:verb OR svc:type:*
	Actions []string `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty" toml:"actions,omitempty" mapstructure:"actions,omitempty"`
	// references
	Role                 string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty" toml:"role,omitempty" mapstructure:"role,omitempty"`
	Projects             []string `protobuf:"bytes,5,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Statement) Reset()         { *m = Statement{} }
func (m *Statement) String() string { return proto.CompactTextString(m) }
func (*Statement) ProtoMessage()    {}
func (*Statement) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{5}
}

func (m *Statement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statement.Unmarshal(m, b)
}
func (m *Statement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statement.Marshal(b, m, deterministic)
}
func (m *Statement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statement.Merge(m, src)
}
func (m *Statement) XXX_Size() int {
	return xxx_messageInfo_Statement.Size(m)
}
func (m *Statement) XXX_DiscardUnknown() {
	xxx_messageInfo_Statement.DiscardUnknown(m)
}

var xxx_messageInfo_Statement proto.InternalMessageInfo

func (m *Statement) GetEffect() Statement_Effect {
	if m != nil {
		return m.Effect
	}
	return Statement_ALLOW
}

func (m *Statement) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Statement) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Statement) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Statement) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type ListPoliciesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListPoliciesReq) Reset()         { *m = ListPoliciesReq{} }
func (m *ListPoliciesReq) String() string { return proto.CompactTextString(m) }
func (*ListPoliciesReq) ProtoMessage()    {}
func (*ListPoliciesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{6}
}

func (m *ListPoliciesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoliciesReq.Unmarshal(m, b)
}
func (m *ListPoliciesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoliciesReq.Marshal(b, m, deterministic)
}
func (m *ListPoliciesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoliciesReq.Merge(m, src)
}
func (m *ListPoliciesReq) XXX_Size() int {
	return xxx_messageInfo_ListPoliciesReq.Size(m)
}
func (m *ListPoliciesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoliciesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoliciesReq proto.InternalMessageInfo

type ListPoliciesResp struct {
	Policies             []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty" toml:"policies,omitempty" mapstructure:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListPoliciesResp) Reset()         { *m = ListPoliciesResp{} }
func (m *ListPoliciesResp) String() string { return proto.CompactTextString(m) }
func (*ListPoliciesResp) ProtoMessage()    {}
func (*ListPoliciesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{7}
}

func (m *ListPoliciesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoliciesResp.Unmarshal(m, b)
}
func (m *ListPoliciesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoliciesResp.Marshal(b, m, deterministic)
}
func (m *ListPoliciesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoliciesResp.Merge(m, src)
}
func (m *ListPoliciesResp) XXX_Size() int {
	return xxx_messageInfo_ListPoliciesResp.Size(m)
}
func (m *ListPoliciesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoliciesResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoliciesResp proto.InternalMessageInfo

func (m *ListPoliciesResp) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type GetPolicyReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetPolicyReq) Reset()         { *m = GetPolicyReq{} }
func (m *GetPolicyReq) String() string { return proto.CompactTextString(m) }
func (*GetPolicyReq) ProtoMessage()    {}
func (*GetPolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{8}
}

func (m *GetPolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPolicyReq.Unmarshal(m, b)
}
func (m *GetPolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPolicyReq.Marshal(b, m, deterministic)
}
func (m *GetPolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyReq.Merge(m, src)
}
func (m *GetPolicyReq) XXX_Size() int {
	return xxx_messageInfo_GetPolicyReq.Size(m)
}
func (m *GetPolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyReq proto.InternalMessageInfo

func (m *GetPolicyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Note that update does not accept a type since
// users can only create custom type policies.
type UpdatePolicyReq struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Members              []string     `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	Statements           []*Statement `protobuf:"bytes,3,rep,name=statements,proto3" json:"statements,omitempty" toml:"statements,omitempty" mapstructure:"statements,omitempty"`
	Name                 string       `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Projects             []string     `protobuf:"bytes,9,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdatePolicyReq) Reset()         { *m = UpdatePolicyReq{} }
func (m *UpdatePolicyReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePolicyReq) ProtoMessage()    {}
func (*UpdatePolicyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{9}
}

func (m *UpdatePolicyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePolicyReq.Unmarshal(m, b)
}
func (m *UpdatePolicyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePolicyReq.Marshal(b, m, deterministic)
}
func (m *UpdatePolicyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePolicyReq.Merge(m, src)
}
func (m *UpdatePolicyReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePolicyReq.Size(m)
}
func (m *UpdatePolicyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePolicyReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePolicyReq proto.InternalMessageInfo

func (m *UpdatePolicyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePolicyReq) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *UpdatePolicyReq) GetStatements() []*Statement {
	if m != nil {
		return m.Statements
	}
	return nil
}

func (m *UpdatePolicyReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePolicyReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type ReplacePolicyMembersReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ReplacePolicyMembersReq) Reset()         { *m = ReplacePolicyMembersReq{} }
func (m *ReplacePolicyMembersReq) String() string { return proto.CompactTextString(m) }
func (*ReplacePolicyMembersReq) ProtoMessage()    {}
func (*ReplacePolicyMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{10}
}

func (m *ReplacePolicyMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplacePolicyMembersReq.Unmarshal(m, b)
}
func (m *ReplacePolicyMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplacePolicyMembersReq.Marshal(b, m, deterministic)
}
func (m *ReplacePolicyMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplacePolicyMembersReq.Merge(m, src)
}
func (m *ReplacePolicyMembersReq) XXX_Size() int {
	return xxx_messageInfo_ReplacePolicyMembersReq.Size(m)
}
func (m *ReplacePolicyMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplacePolicyMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReplacePolicyMembersReq proto.InternalMessageInfo

func (m *ReplacePolicyMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReplacePolicyMembersReq) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type ReplacePolicyMembersResp struct {
	Members              []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ReplacePolicyMembersResp) Reset()         { *m = ReplacePolicyMembersResp{} }
func (m *ReplacePolicyMembersResp) String() string { return proto.CompactTextString(m) }
func (*ReplacePolicyMembersResp) ProtoMessage()    {}
func (*ReplacePolicyMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{11}
}

func (m *ReplacePolicyMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplacePolicyMembersResp.Unmarshal(m, b)
}
func (m *ReplacePolicyMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplacePolicyMembersResp.Marshal(b, m, deterministic)
}
func (m *ReplacePolicyMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplacePolicyMembersResp.Merge(m, src)
}
func (m *ReplacePolicyMembersResp) XXX_Size() int {
	return xxx_messageInfo_ReplacePolicyMembersResp.Size(m)
}
func (m *ReplacePolicyMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplacePolicyMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReplacePolicyMembersResp proto.InternalMessageInfo

func (m *ReplacePolicyMembersResp) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type AddPolicyMembersReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AddPolicyMembersReq) Reset()         { *m = AddPolicyMembersReq{} }
func (m *AddPolicyMembersReq) String() string { return proto.CompactTextString(m) }
func (*AddPolicyMembersReq) ProtoMessage()    {}
func (*AddPolicyMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{12}
}

func (m *AddPolicyMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPolicyMembersReq.Unmarshal(m, b)
}
func (m *AddPolicyMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPolicyMembersReq.Marshal(b, m, deterministic)
}
func (m *AddPolicyMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPolicyMembersReq.Merge(m, src)
}
func (m *AddPolicyMembersReq) XXX_Size() int {
	return xxx_messageInfo_AddPolicyMembersReq.Size(m)
}
func (m *AddPolicyMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPolicyMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPolicyMembersReq proto.InternalMessageInfo

func (m *AddPolicyMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddPolicyMembersReq) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type AddPolicyMembersResp struct {
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AddPolicyMembersResp) Reset()         { *m = AddPolicyMembersResp{} }
func (m *AddPolicyMembersResp) String() string { return proto.CompactTextString(m) }
func (*AddPolicyMembersResp) ProtoMessage()    {}
func (*AddPolicyMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{13}
}

func (m *AddPolicyMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPolicyMembersResp.Unmarshal(m, b)
}
func (m *AddPolicyMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPolicyMembersResp.Marshal(b, m, deterministic)
}
func (m *AddPolicyMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPolicyMembersResp.Merge(m, src)
}
func (m *AddPolicyMembersResp) XXX_Size() int {
	return xxx_messageInfo_AddPolicyMembersResp.Size(m)
}
func (m *AddPolicyMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPolicyMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddPolicyMembersResp proto.InternalMessageInfo

func (m *AddPolicyMembersResp) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// the only values that may be returned by GetPolicyVersion
type Version struct {
	Major                Version_VersionNumber `protobuf:"varint,1,opt,name=major,proto3,enum=chef.automate.domain.authz.Version_VersionNumber" json:"major,omitempty" toml:"major,omitempty" mapstructure:"major,omitempty"`
	Minor                Version_VersionNumber `protobuf:"varint,2,opt,name=minor,proto3,enum=chef.automate.domain.authz.Version_VersionNumber" json:"minor,omitempty" toml:"minor,omitempty" mapstructure:"minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                 `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{14}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetMajor() Version_VersionNumber {
	if m != nil {
		return m.Major
	}
	return Version_V0
}

func (m *Version) GetMinor() Version_VersionNumber {
	if m != nil {
		return m.Minor
	}
	return Version_V0
}

type GetPolicyVersionReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetPolicyVersionReq) Reset()         { *m = GetPolicyVersionReq{} }
func (m *GetPolicyVersionReq) String() string { return proto.CompactTextString(m) }
func (*GetPolicyVersionReq) ProtoMessage()    {}
func (*GetPolicyVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{15}
}

func (m *GetPolicyVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPolicyVersionReq.Unmarshal(m, b)
}
func (m *GetPolicyVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPolicyVersionReq.Marshal(b, m, deterministic)
}
func (m *GetPolicyVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyVersionReq.Merge(m, src)
}
func (m *GetPolicyVersionReq) XXX_Size() int {
	return xxx_messageInfo_GetPolicyVersionReq.Size(m)
}
func (m *GetPolicyVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyVersionReq proto.InternalMessageInfo

type GetPolicyVersionResp struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetPolicyVersionResp) Reset()         { *m = GetPolicyVersionResp{} }
func (m *GetPolicyVersionResp) String() string { return proto.CompactTextString(m) }
func (*GetPolicyVersionResp) ProtoMessage()    {}
func (*GetPolicyVersionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{16}
}

func (m *GetPolicyVersionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPolicyVersionResp.Unmarshal(m, b)
}
func (m *GetPolicyVersionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPolicyVersionResp.Marshal(b, m, deterministic)
}
func (m *GetPolicyVersionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyVersionResp.Merge(m, src)
}
func (m *GetPolicyVersionResp) XXX_Size() int {
	return xxx_messageInfo_GetPolicyVersionResp.Size(m)
}
func (m *GetPolicyVersionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyVersionResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyVersionResp proto.InternalMessageInfo

func (m *GetPolicyVersionResp) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type ListRolesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListRolesReq) Reset()         { *m = ListRolesReq{} }
func (m *ListRolesReq) String() string { return proto.CompactTextString(m) }
func (*ListRolesReq) ProtoMessage()    {}
func (*ListRolesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{17}
}

func (m *ListRolesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRolesReq.Unmarshal(m, b)
}
func (m *ListRolesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRolesReq.Marshal(b, m, deterministic)
}
func (m *ListRolesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesReq.Merge(m, src)
}
func (m *ListRolesReq) XXX_Size() int {
	return xxx_messageInfo_ListRolesReq.Size(m)
}
func (m *ListRolesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesReq proto.InternalMessageInfo

type ListRolesResp struct {
	Roles                []*Role  `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" toml:"roles,omitempty" mapstructure:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListRolesResp) Reset()         { *m = ListRolesResp{} }
func (m *ListRolesResp) String() string { return proto.CompactTextString(m) }
func (*ListRolesResp) ProtoMessage()    {}
func (*ListRolesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{18}
}

func (m *ListRolesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRolesResp.Unmarshal(m, b)
}
func (m *ListRolesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRolesResp.Marshal(b, m, deterministic)
}
func (m *ListRolesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesResp.Merge(m, src)
}
func (m *ListRolesResp) XXX_Size() int {
	return xxx_messageInfo_ListRolesResp.Size(m)
}
func (m *ListRolesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesResp proto.InternalMessageInfo

func (m *ListRolesResp) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type DeleteRoleReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeleteRoleReq) Reset()         { *m = DeleteRoleReq{} }
func (m *DeleteRoleReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRoleReq) ProtoMessage()    {}
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{19}
}

func (m *DeleteRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRoleReq.Unmarshal(m, b)
}
func (m *DeleteRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRoleReq.Marshal(b, m, deterministic)
}
func (m *DeleteRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRoleReq.Merge(m, src)
}
func (m *DeleteRoleReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRoleReq.Size(m)
}
func (m *DeleteRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRoleReq proto.InternalMessageInfo

func (m *DeleteRoleReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteRoleResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeleteRoleResp) Reset()         { *m = DeleteRoleResp{} }
func (m *DeleteRoleResp) String() string { return proto.CompactTextString(m) }
func (*DeleteRoleResp) ProtoMessage()    {}
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{20}
}

func (m *DeleteRoleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRoleResp.Unmarshal(m, b)
}
func (m *DeleteRoleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRoleResp.Marshal(b, m, deterministic)
}
func (m *DeleteRoleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRoleResp.Merge(m, src)
}
func (m *DeleteRoleResp) XXX_Size() int {
	return xxx_messageInfo_DeleteRoleResp.Size(m)
}
func (m *DeleteRoleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRoleResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRoleResp proto.InternalMessageInfo

type UpdateRoleReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Actions              []string `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty" toml:"actions,omitempty" mapstructure:"actions,omitempty"`
	Projects             []string `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateRoleReq) Reset()         { *m = UpdateRoleReq{} }
func (m *UpdateRoleReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRoleReq) ProtoMessage()    {}
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{21}
}

func (m *UpdateRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRoleReq.Unmarshal(m, b)
}
func (m *UpdateRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRoleReq.Marshal(b, m, deterministic)
}
func (m *UpdateRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRoleReq.Merge(m, src)
}
func (m *UpdateRoleReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRoleReq.Size(m)
}
func (m *UpdateRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRoleReq proto.InternalMessageInfo

func (m *UpdateRoleReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRoleReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRoleReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *UpdateRoleReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type ListPolicyMembersReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListPolicyMembersReq) Reset()         { *m = ListPolicyMembersReq{} }
func (m *ListPolicyMembersReq) String() string { return proto.CompactTextString(m) }
func (*ListPolicyMembersReq) ProtoMessage()    {}
func (*ListPolicyMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{22}
}

func (m *ListPolicyMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPolicyMembersReq.Unmarshal(m, b)
}
func (m *ListPolicyMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPolicyMembersReq.Marshal(b, m, deterministic)
}
func (m *ListPolicyMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPolicyMembersReq.Merge(m, src)
}
func (m *ListPolicyMembersReq) XXX_Size() int {
	return xxx_messageInfo_ListPolicyMembersReq.Size(m)
}
func (m *ListPolicyMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPolicyMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPolicyMembersReq proto.InternalMessageInfo

func (m *ListPolicyMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListPolicyMembersResp struct {
	Members              []string `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListPolicyMembersResp) Reset()         { *m = ListPolicyMembersResp{} }
func (m *ListPolicyMembersResp) String() string { return proto.CompactTextString(m) }
func (*ListPolicyMembersResp) ProtoMessage()    {}
func (*ListPolicyMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{23}
}

func (m *ListPolicyMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPolicyMembersResp.Unmarshal(m, b)
}
func (m *ListPolicyMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPolicyMembersResp.Marshal(b, m, deterministic)
}
func (m *ListPolicyMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPolicyMembersResp.Merge(m, src)
}
func (m *ListPolicyMembersResp) XXX_Size() int {
	return xxx_messageInfo_ListPolicyMembersResp.Size(m)
}
func (m *ListPolicyMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPolicyMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListPolicyMembersResp proto.InternalMessageInfo

func (m *ListPolicyMembersResp) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type RemovePolicyMembersReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *RemovePolicyMembersReq) Reset()         { *m = RemovePolicyMembersReq{} }
func (m *RemovePolicyMembersReq) String() string { return proto.CompactTextString(m) }
func (*RemovePolicyMembersReq) ProtoMessage()    {}
func (*RemovePolicyMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{24}
}

func (m *RemovePolicyMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePolicyMembersReq.Unmarshal(m, b)
}
func (m *RemovePolicyMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePolicyMembersReq.Marshal(b, m, deterministic)
}
func (m *RemovePolicyMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePolicyMembersReq.Merge(m, src)
}
func (m *RemovePolicyMembersReq) XXX_Size() int {
	return xxx_messageInfo_RemovePolicyMembersReq.Size(m)
}
func (m *RemovePolicyMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePolicyMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePolicyMembersReq proto.InternalMessageInfo

func (m *RemovePolicyMembersReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemovePolicyMembersReq) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type RemovePolicyMembersResp struct {
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" toml:"members,omitempty" mapstructure:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *RemovePolicyMembersResp) Reset()         { *m = RemovePolicyMembersResp{} }
func (m *RemovePolicyMembersResp) String() string { return proto.CompactTextString(m) }
func (*RemovePolicyMembersResp) ProtoMessage()    {}
func (*RemovePolicyMembersResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{25}
}

func (m *RemovePolicyMembersResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePolicyMembersResp.Unmarshal(m, b)
}
func (m *RemovePolicyMembersResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePolicyMembersResp.Marshal(b, m, deterministic)
}
func (m *RemovePolicyMembersResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePolicyMembersResp.Merge(m, src)
}
func (m *RemovePolicyMembersResp) XXX_Size() int {
	return xxx_messageInfo_RemovePolicyMembersResp.Size(m)
}
func (m *RemovePolicyMembersResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePolicyMembersResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePolicyMembersResp proto.InternalMessageInfo

func (m *RemovePolicyMembersResp) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type MigrateToV2Req struct {
	Flag                 Flag     `protobuf:"varint,1,opt,name=flag,proto3,enum=chef.automate.domain.authz.Flag" json:"flag,omitempty" toml:"flag,omitempty" mapstructure:"flag,omitempty"`
	SkipV1Policies       bool     `protobuf:"varint,2,opt,name=skip_v1_policies,json=skipV1Policies,proto3" json:"skip_v1_policies,omitempty" toml:"skip_v1_policies,omitempty" mapstructure:"skip_v1_policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *MigrateToV2Req) Reset()         { *m = MigrateToV2Req{} }
func (m *MigrateToV2Req) String() string { return proto.CompactTextString(m) }
func (*MigrateToV2Req) ProtoMessage()    {}
func (*MigrateToV2Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{26}
}

func (m *MigrateToV2Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateToV2Req.Unmarshal(m, b)
}
func (m *MigrateToV2Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateToV2Req.Marshal(b, m, deterministic)
}
func (m *MigrateToV2Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateToV2Req.Merge(m, src)
}
func (m *MigrateToV2Req) XXX_Size() int {
	return xxx_messageInfo_MigrateToV2Req.Size(m)
}
func (m *MigrateToV2Req) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateToV2Req.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateToV2Req proto.InternalMessageInfo

func (m *MigrateToV2Req) GetFlag() Flag {
	if m != nil {
		return m.Flag
	}
	return Flag_VERSION_2_0
}

func (m *MigrateToV2Req) GetSkipV1Policies() bool {
	if m != nil {
		return m.SkipV1Policies
	}
	return false
}

type MigrateToV2Resp struct {
	Reports              []string `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty" toml:"reports,omitempty" mapstructure:"reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *MigrateToV2Resp) Reset()         { *m = MigrateToV2Resp{} }
func (m *MigrateToV2Resp) String() string { return proto.CompactTextString(m) }
func (*MigrateToV2Resp) ProtoMessage()    {}
func (*MigrateToV2Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{27}
}

func (m *MigrateToV2Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateToV2Resp.Unmarshal(m, b)
}
func (m *MigrateToV2Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateToV2Resp.Marshal(b, m, deterministic)
}
func (m *MigrateToV2Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateToV2Resp.Merge(m, src)
}
func (m *MigrateToV2Resp) XXX_Size() int {
	return xxx_messageInfo_MigrateToV2Resp.Size(m)
}
func (m *MigrateToV2Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateToV2Resp.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateToV2Resp proto.InternalMessageInfo

func (m *MigrateToV2Resp) GetReports() []string {
	if m != nil {
		return m.Reports
	}
	return nil
}

type ResetToV1Req struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ResetToV1Req) Reset()         { *m = ResetToV1Req{} }
func (m *ResetToV1Req) String() string { return proto.CompactTextString(m) }
func (*ResetToV1Req) ProtoMessage()    {}
func (*ResetToV1Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{28}
}

func (m *ResetToV1Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetToV1Req.Unmarshal(m, b)
}
func (m *ResetToV1Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetToV1Req.Marshal(b, m, deterministic)
}
func (m *ResetToV1Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetToV1Req.Merge(m, src)
}
func (m *ResetToV1Req) XXX_Size() int {
	return xxx_messageInfo_ResetToV1Req.Size(m)
}
func (m *ResetToV1Req) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetToV1Req.DiscardUnknown(m)
}

var xxx_messageInfo_ResetToV1Req proto.InternalMessageInfo

type ResetToV1Resp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ResetToV1Resp) Reset()         { *m = ResetToV1Resp{} }
func (m *ResetToV1Resp) String() string { return proto.CompactTextString(m) }
func (*ResetToV1Resp) ProtoMessage()    {}
func (*ResetToV1Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{29}
}

func (m *ResetToV1Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetToV1Resp.Unmarshal(m, b)
}
func (m *ResetToV1Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetToV1Resp.Marshal(b, m, deterministic)
}
func (m *ResetToV1Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetToV1Resp.Merge(m, src)
}
func (m *ResetToV1Resp) XXX_Size() int {
	return xxx_messageInfo_ResetToV1Resp.Size(m)
}
func (m *ResetToV1Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetToV1Resp.DiscardUnknown(m)
}

var xxx_messageInfo_ResetToV1Resp proto.InternalMessageInfo

type GetRoleReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetRoleReq) Reset()         { *m = GetRoleReq{} }
func (m *GetRoleReq) String() string { return proto.CompactTextString(m) }
func (*GetRoleReq) ProtoMessage()    {}
func (*GetRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{30}
}

func (m *GetRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoleReq.Unmarshal(m, b)
}
func (m *GetRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoleReq.Marshal(b, m, deterministic)
}
func (m *GetRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoleReq.Merge(m, src)
}
func (m *GetRoleReq) XXX_Size() int {
	return xxx_messageInfo_GetRoleReq.Size(m)
}
func (m *GetRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoleReq proto.InternalMessageInfo

func (m *GetRoleReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateRoleReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Actions              []string `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty" toml:"actions,omitempty" mapstructure:"actions,omitempty"`
	Projects             []string `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty" toml:"projects,omitempty" mapstructure:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateRoleReq) Reset()         { *m = CreateRoleReq{} }
func (m *CreateRoleReq) String() string { return proto.CompactTextString(m) }
func (*CreateRoleReq) ProtoMessage()    {}
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{31}
}

func (m *CreateRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoleReq.Unmarshal(m, b)
}
func (m *CreateRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoleReq.Marshal(b, m, deterministic)
}
func (m *CreateRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoleReq.Merge(m, src)
}
func (m *CreateRoleReq) XXX_Size() int {
	return xxx_messageInfo_CreateRoleReq.Size(m)
}
func (m *CreateRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoleReq proto.InternalMessageInfo

func (m *CreateRoleReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateRoleReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRoleReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *CreateRoleReq) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type PurgeSubjectFromPoliciesReq struct {
	// Q: Right now, this allows purging subject wildcards (like "user:*").
	// -- Do we want to restrict this to only complete subjects?
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty" toml:"subject,omitempty" mapstructure:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *PurgeSubjectFromPoliciesReq) Reset()         { *m = PurgeSubjectFromPoliciesReq{} }
func (m *PurgeSubjectFromPoliciesReq) String() string { return proto.CompactTextString(m) }
func (*PurgeSubjectFromPoliciesReq) ProtoMessage()    {}
func (*PurgeSubjectFromPoliciesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{32}
}

func (m *PurgeSubjectFromPoliciesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeSubjectFromPoliciesReq.Unmarshal(m, b)
}
func (m *PurgeSubjectFromPoliciesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeSubjectFromPoliciesReq.Marshal(b, m, deterministic)
}
func (m *PurgeSubjectFromPoliciesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeSubjectFromPoliciesReq.Merge(m, src)
}
func (m *PurgeSubjectFromPoliciesReq) XXX_Size() int {
	return xxx_messageInfo_PurgeSubjectFromPoliciesReq.Size(m)
}
func (m *PurgeSubjectFromPoliciesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeSubjectFromPoliciesReq.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeSubjectFromPoliciesReq proto.InternalMessageInfo

func (m *PurgeSubjectFromPoliciesReq) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type PurgeSubjectFromPoliciesResp struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty" toml:"ids,omitempty" mapstructure:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *PurgeSubjectFromPoliciesResp) Reset()         { *m = PurgeSubjectFromPoliciesResp{} }
func (m *PurgeSubjectFromPoliciesResp) String() string { return proto.CompactTextString(m) }
func (*PurgeSubjectFromPoliciesResp) ProtoMessage()    {}
func (*PurgeSubjectFromPoliciesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bd13e26b97c636f, []int{33}
}

func (m *PurgeSubjectFromPoliciesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeSubjectFromPoliciesResp.Unmarshal(m, b)
}
func (m *PurgeSubjectFromPoliciesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeSubjectFromPoliciesResp.Marshal(b, m, deterministic)
}
func (m *PurgeSubjectFromPoliciesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeSubjectFromPoliciesResp.Merge(m, src)
}
func (m *PurgeSubjectFromPoliciesResp) XXX_Size() int {
	return xxx_messageInfo_PurgeSubjectFromPoliciesResp.Size(m)
}
func (m *PurgeSubjectFromPoliciesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeSubjectFromPoliciesResp.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeSubjectFromPoliciesResp proto.InternalMessageInfo

func (m *PurgeSubjectFromPoliciesResp) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterEnum("chef.automate.domain.authz.Flag", Flag_name, Flag_value)
	proto.RegisterEnum("chef.automate.domain.authz.Statement_Effect", Statement_Effect_name, Statement_Effect_value)
	proto.RegisterEnum("chef.automate.domain.authz.Version_VersionNumber", Version_VersionNumber_name, Version_VersionNumber_value)
	proto.RegisterType((*Policy)(nil), "chef.automate.domain.authz.Policy")
	proto.RegisterType((*Role)(nil), "chef.automate.domain.authz.Role")
	proto.RegisterType((*CreatePolicyReq)(nil), "chef.automate.domain.authz.CreatePolicyReq")
	proto.RegisterType((*DeletePolicyReq)(nil), "chef.automate.domain.authz.DeletePolicyReq")
	proto.RegisterType((*DeletePolicyResp)(nil), "chef.automate.domain.authz.DeletePolicyResp")
	proto.RegisterType((*Statement)(nil), "chef.automate.domain.authz.Statement")
	proto.RegisterType((*ListPoliciesReq)(nil), "chef.automate.domain.authz.ListPoliciesReq")
	proto.RegisterType((*ListPoliciesResp)(nil), "chef.automate.domain.authz.ListPoliciesResp")
	proto.RegisterType((*GetPolicyReq)(nil), "chef.automate.domain.authz.GetPolicyReq")
	proto.RegisterType((*UpdatePolicyReq)(nil), "chef.automate.domain.authz.UpdatePolicyReq")
	proto.RegisterType((*ReplacePolicyMembersReq)(nil), "chef.automate.domain.authz.ReplacePolicyMembersReq")
	proto.RegisterType((*ReplacePolicyMembersResp)(nil), "chef.automate.domain.authz.ReplacePolicyMembersResp")
	proto.RegisterType((*AddPolicyMembersReq)(nil), "chef.automate.domain.authz.AddPolicyMembersReq")
	proto.RegisterType((*AddPolicyMembersResp)(nil), "chef.automate.domain.authz.AddPolicyMembersResp")
	proto.RegisterType((*Version)(nil), "chef.automate.domain.authz.Version")
	proto.RegisterType((*GetPolicyVersionReq)(nil), "chef.automate.domain.authz.GetPolicyVersionReq")
	proto.RegisterType((*GetPolicyVersionResp)(nil), "chef.automate.domain.authz.GetPolicyVersionResp")
	proto.RegisterType((*ListRolesReq)(nil), "chef.automate.domain.authz.ListRolesReq")
	proto.RegisterType((*ListRolesResp)(nil), "chef.automate.domain.authz.ListRolesResp")
	proto.RegisterType((*DeleteRoleReq)(nil), "chef.automate.domain.authz.DeleteRoleReq")
	proto.RegisterType((*DeleteRoleResp)(nil), "chef.automate.domain.authz.DeleteRoleResp")
	proto.RegisterType((*UpdateRoleReq)(nil), "chef.automate.domain.authz.UpdateRoleReq")
	proto.RegisterType((*ListPolicyMembersReq)(nil), "chef.automate.domain.authz.ListPolicyMembersReq")
	proto.RegisterType((*ListPolicyMembersResp)(nil), "chef.automate.domain.authz.ListPolicyMembersResp")
	proto.RegisterType((*RemovePolicyMembersReq)(nil), "chef.automate.domain.authz.RemovePolicyMembersReq")
	proto.RegisterType((*RemovePolicyMembersResp)(nil), "chef.automate.domain.authz.RemovePolicyMembersResp")
	proto.RegisterType((*MigrateToV2Req)(nil), "chef.automate.domain.authz.MigrateToV2Req")
	proto.RegisterType((*MigrateToV2Resp)(nil), "chef.automate.domain.authz.MigrateToV2Resp")
	proto.RegisterType((*ResetToV1Req)(nil), "chef.automate.domain.authz.ResetToV1Req")
	proto.RegisterType((*ResetToV1Resp)(nil), "chef.automate.domain.authz.ResetToV1Resp")
	proto.RegisterType((*GetRoleReq)(nil), "chef.automate.domain.authz.GetRoleReq")
	proto.RegisterType((*CreateRoleReq)(nil), "chef.automate.domain.authz.CreateRoleReq")
	proto.RegisterType((*PurgeSubjectFromPoliciesReq)(nil), "chef.automate.domain.authz.PurgeSubjectFromPoliciesReq")
	proto.RegisterType((*PurgeSubjectFromPoliciesResp)(nil), "chef.automate.domain.authz.PurgeSubjectFromPoliciesResp")
}

func init() {
	proto.RegisterFile("interservice/authz/policy.proto", fileDescriptor_1bd13e26b97c636f)
}

var fileDescriptor_1bd13e26b97c636f = []byte{
	// 1579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x5b, 0x6f, 0x1b, 0xd5,
	0x13, 0xcf, 0xb1, 0x9d, 0xc4, 0x9e, 0x26, 0x8e, 0x7b, 0x9a, 0xb6, 0xfb, 0x77, 0x6f, 0xf9, 0x2f,
	0xa1, 0xd8, 0x4e, 0xe2, 0xcb, 0x26, 0x2a, 0xc5, 0x12, 0x44, 0x0d, 0x4d, 0x23, 0xa4, 0xde, 0xd8,
	0xb6, 0x46, 0x34, 0xb2, 0xa3, 0x8d, 0x7d, 0x92, 0x6e, 0xb3, 0xf6, 0x6e, 0x77, 0xd7, 0xa9, 0x1a,
	0x8c, 0x84, 0xc4, 0x73, 0x05, 0x04, 0x04, 0x08, 0x01, 0x0f, 0x08, 0x09, 0x09, 0x89, 0x17, 0x84,
	0xa0, 0x42, 0xdc, 0x1e, 0xf8, 0x08, 0x48, 0xc0, 0x13, 0x8f, 0xa8, 0x88, 0x07, 0x3e, 0x01, 0x42,
	0xe7, 0xec, 0xae, 0xbd, 0xeb, 0xcb, 0xc6, 0x69, 0xcb, 0x43, 0x81, 0x27, 0xfb, 0x4c, 0x66, 0xe6,
	0xcc, 0xcc, 0x99, 0xf9, 0xcd, 0x4c, 0x0c, 0xc7, 0xe4, 0x9a, 0x49, 0x74, 0x83, 0xe8, 0x9b, 0x72,
	0x99, 0x64, 0xa4, 0xba, 0x79, 0x6d, 0x2b, 0xa3, 0xa9, 0x8a, 0x5c, 0xbe, 0x95, 0xd6, 0x74, 0xd5,
	0x54, 0x71, 0xbc, 0x7c, 0x8d, 0xac, 0xa5, 0xa5, 0xba, 0xa9, 0x56, 0x25, 0x93, 0xa4, 0x2b, 0x6a,
	0x55, 0x92, 0x6b, 0x69, 0xc6, 0x18, 0x3f, 0xb8, 0x29, 0x29, 0x72, 0x45, 0x32, 0x49, 0xc6, 0xf9,
	0x62, 0x09, 0xc5, 0x8f, 0x74, 0xd1, 0x6a, 0xde, 0xd2, 0xec, 0x3f, 0xf3, 0xbf, 0x20, 0x18, 0xba,
	0xc8, 0x2e, 0xc1, 0x18, 0x42, 0x35, 0xa9, 0x4a, 0x38, 0x34, 0x81, 0x12, 0x11, 0x91, 0x7d, 0xc7,
	0x51, 0x08, 0xc8, 0x15, 0x2e, 0xc0, 0x28, 0x01, 0xb9, 0x82, 0xe7, 0x20, 0x44, 0x85, 0xb9, 0xe0,
	0x04, 0x4a, 0x44, 0x85, 0x89, 0x74, 0x6f, 0x8b, 0xd2, 0x97, 0x6f, 0x69, 0x44, 0x64, 0xdc, 0x98,
	0x83, 0xe1, 0x2a, 0xa9, 0xae, 0x12, 0xdd, 0xe0, 0x42, 0x13, 0xc1, 0x44, 0x44, 0x74, 0x8e, 0x78,
	0x11, 0xc0, 0x30, 0x25, 0x93, 0x54, 0x49, 0xcd, 0x34, 0xb8, 0xc1, 0x89, 0x60, 0x62, 0x8f, 0xf0,
	0xa8, 0x9f, 0xd6, 0x4b, 0x0e, 0xb7, 0xe8, 0x12, 0xc4, 0x71, 0x08, 0x6b, 0xba, 0x7a, 0x9d, 0x94,
	0x4d, 0x83, 0x1b, 0x62, 0x37, 0x34, 0xcf, 0xfc, 0x9b, 0x08, 0x42, 0xa2, 0xaa, 0x90, 0xbf, 0xd7,
	0x3f, 0xa9, 0x6c, 0xca, 0x6a, 0xad, 0xe9, 0x9f, 0x7d, 0xf4, 0x18, 0x36, 0xd8, 0x66, 0xd8, 0xed,
	0x20, 0x8c, 0x3d, 0xad, 0x13, 0xc9, 0x24, 0xd6, 0x03, 0x88, 0xe4, 0x06, 0x9e, 0x62, 0xf6, 0x30,
	0x0b, 0x17, 0x0e, 0x7d, 0x79, 0xf7, 0xbb, 0xe0, 0x01, 0x7d, 0x5c, 0xc0, 0xa5, 0x65, 0x69, 0x66,
	0x2b, 0x3b, 0xf3, 0xc4, 0xcc, 0x4a, 0xf1, 0x85, 0xdc, 0xf4, 0x89, 0xb9, 0x17, 0x27, 0x99, 0xb1,
	0x8e, 0x43, 0x01, 0x97, 0x43, 0x5f, 0xa3, 0x56, 0xac, 0x83, 0xf4, 0xc2, 0x85, 0x0f, 0x10, 0xd5,
	0xf3, 0x2e, 0xda, 0x46, 0x6f, 0x23, 0x0e, 0xf1, 0xaf, 0x23, 0xfd, 0x55, 0x24, 0xdc, 0x46, 0xa5,
	0xc4, 0x7c, 0xde, 0x24, 0x52, 0xb5, 0x51, 0x37, 0x88, 0x9e, 0xcc, 0x27, 0xe6, 0xf3, 0x8a, 0x5a,
	0x96, 0x94, 0x86, 0x52, 0x91, 0xb4, 0x86, 0x21, 0x55, 0x15, 0x46, 0x5b, 0x2e, 0xe5, 0x53, 0xc5,
	0xa9, 0xc6, 0x72, 0xaa, 0x98, 0x9c, 0x6c, 0x50, 0x11, 0xb7, 0x54, 0xc3, 0x54, 0x37, 0x48, 0xad,
	0x61, 0x2a, 0x46, 0x32, 0x9f, 0x9c, 0x5f, 0x4e, 0x15, 0x27, 0x1b, 0x25, 0x46, 0xb2, 0xc5, 0xe8,
	0x51, 0x31, 0xf2, 0x76, 0xee, 0xb5, 0xd4, 0xe5, 0x93, 0xf3, 0x6d, 0xaa, 0x5b, 0x09, 0xf1, 0xac,
	0x27, 0x21, 0x42, 0xbb, 0x48, 0x88, 0x05, 0xa0, 0x7e, 0x0e, 0x6e, 0xa3, 0x40, 0x18, 0x79, 0x92,
	0xe3, 0x78, 0xfb, 0x1b, 0xb4, 0x38, 0x39, 0xe4, 0x7a, 0x8f, 0xff, 0xc3, 0xd8, 0x69, 0xa2, 0x10,
	0xf7, 0x73, 0x44, 0x5b, 0xcf, 0x41, 0x23, 0xce, 0x63, 0x88, 0x79, 0x59, 0x0c, 0x8d, 0xff, 0x33,
	0x08, 0x91, 0xa6, 0x11, 0xf8, 0x34, 0x0c, 0x91, 0xb5, 0x35, 0x52, 0x36, 0x99, 0x54, 0x54, 0x98,
	0xee, 0xcb, 0xf6, 0xf4, 0x22, 0x93, 0x11, 0x6d, 0x59, 0x5c, 0x80, 0x88, 0x4e, 0x0c, 0xb5, 0xae,
	0x97, 0x89, 0xc1, 0x05, 0x98, 0xcd, 0x27, 0xa9, 0xcd, 0xb3, 0xdb, 0x28, 0xcb, 0x21, 0x7e, 0x5a,
	0x4f, 0x09, 0x09, 0x96, 0x14, 0x45, 0x16, 0xc5, 0x54, 0x62, 0x3e, 0x6f, 0xc7, 0x33, 0x69, 0x7d,
	0x4f, 0x15, 0x93, 0xf3, 0x93, 0x8d, 0x12, 0x7d, 0x13, 0xb1, 0xa5, 0x0a, 0xff, 0x88, 0x5a, 0x99,
	0x6a, 0x65, 0xc7, 0x57, 0x2c, 0x3b, 0x3e, 0x47, 0xdb, 0xe8, 0x53, 0x9a, 0x1d, 0x9f, 0x20, 0xfd,
	0x63, 0x24, 0x7c, 0x84, 0x4a, 0xd6, 0x6b, 0x2e, 0xa7, 0x8a, 0x79, 0xeb, 0x9a, 0x19, 0x69, 0x66,
	0xeb, 0xd4, 0xcc, 0xd5, 0x62, 0x8a, 0x52, 0x19, 0xc5, 0x21, 0xe4, 0x7d, 0x8f, 0x5d, 0xd8, 0x2d,
	0xcd, 0x1d, 0xc4, 0x9d, 0x05, 0x3b, 0xf5, 0xb4, 0x0a, 0x4d, 0x80, 0x90, 0xae, 0x2a, 0x84, 0x0b,
	0xb1, 0xd2, 0x39, 0x4a, 0x9d, 0xfa, 0x9f, 0x7e, 0x50, 0xd8, 0x5f, 0xb2, 0xf5, 0x78, 0xab, 0x87,
	0xf1, 0xf6, 0x9d, 0x18, 0x47, 0x60, 0xc8, 0x7a, 0x1f, 0x1c, 0x81, 0xc1, 0x53, 0x67, 0xcf, 0x5e,
	0x78, 0x2e, 0x36, 0x80, 0xc3, 0x10, 0x3a, 0xbd, 0x78, 0xfe, 0xf9, 0x18, 0xe2, 0xf7, 0xc2, 0xd8,
	0x59, 0xd9, 0x30, 0x59, 0x4a, 0xc8, 0xc4, 0x10, 0xc9, 0x0d, 0x5e, 0x84, 0x98, 0x97, 0x64, 0x68,
	0xf8, 0x29, 0x08, 0x6b, 0xf6, 0x99, 0x43, 0x2c, 0xaf, 0x79, 0xbf, 0xdc, 0xb0, 0x33, 0xac, 0x29,
	0xc3, 0x1f, 0x85, 0x91, 0x25, 0x62, 0xf6, 0xce, 0xcd, 0x3f, 0x02, 0x30, 0x76, 0x45, 0xab, 0x48,
	0x3e, 0xf9, 0xeb, 0x41, 0x87, 0xc0, 0x43, 0x8f, 0x0e, 0xc1, 0x07, 0x81, 0x0e, 0x0e, 0x88, 0x86,
	0x5d, 0x20, 0xea, 0x4e, 0x8c, 0x88, 0x4f, 0x62, 0xdc, 0x45, 0x70, 0x50, 0x24, 0x9a, 0x22, 0x95,
	0xed, 0x98, 0x9f, 0xb3, 0xec, 0xfc, 0x07, 0x86, 0x9e, 0x9f, 0x03, 0xae, 0xbb, 0xab, 0x86, 0xe6,
	0xee, 0xef, 0xc8, 0xd3, 0xdf, 0xf9, 0x5f, 0x11, 0xec, 0x3b, 0x55, 0xa9, 0xec, 0x18, 0x9d, 0x6f,
	0x3b, 0xa2, 0xf3, 0x21, 0x8b, 0xce, 0xfb, 0x68, 0x1b, 0xbd, 0x83, 0xc2, 0x0f, 0x41, 0x7c, 0xb2,
	0x30, 0xde, 0xe9, 0xa8, 0x37, 0x36, 0x01, 0x6f, 0x6c, 0xbe, 0x47, 0x30, 0x5c, 0x20, 0xba, 0x21,
	0xab, 0x35, 0xbc, 0x04, 0x83, 0x55, 0xe9, 0xba, 0xaa, 0xdb, 0x5d, 0x23, 0xe7, 0x97, 0xd3, 0xb6,
	0x8c, 0xf3, 0x79, 0xbe, 0x4e, 0xd5, 0x89, 0x96, 0x3c, 0x53, 0x24, 0xd7, 0x54, 0x9d, 0x0d, 0x05,
	0xf7, 0xa8, 0x88, 0xca, 0xf3, 0x8f, 0xc1, 0xa8, 0x87, 0x8e, 0x87, 0x20, 0x50, 0xc8, 0xc6, 0x06,
	0xd8, 0x67, 0x2e, 0x86, 0xd8, 0xa7, 0x10, 0x0b, 0xf0, 0xfb, 0x61, 0x5f, 0x13, 0x97, 0x6c, 0x09,
	0x0a, 0x81, 0x57, 0x60, 0xbc, 0x93, 0x6c, 0x68, 0xf8, 0x49, 0x18, 0xde, 0xb4, 0x8e, 0xcc, 0xd7,
	0x3d, 0xc2, 0x23, 0x7d, 0x98, 0x28, 0x3a, 0x32, 0x7c, 0x14, 0x46, 0x28, 0xb2, 0xd2, 0x81, 0x8e,
	0x21, 0xed, 0x12, 0x8c, 0xba, 0xce, 0x86, 0x86, 0x4f, 0xc0, 0x20, 0x05, 0x77, 0x07, 0x63, 0x7d,
	0x47, 0x38, 0x2a, 0x25, 0x5a, 0xec, 0xfc, 0x31, 0x18, 0xb5, 0x5a, 0x3b, 0x23, 0x76, 0xc1, 0xd7,
	0x18, 0x44, 0xdd, 0x0c, 0x86, 0xc6, 0x7f, 0x11, 0x80, 0x51, 0x0b, 0x71, 0x7b, 0xc8, 0x74, 0x9d,
	0xd0, 0x7e, 0xee, 0xe8, 0xc1, 0xdf, 0xb0, 0x54, 0xbf, 0x83, 0xb6, 0xd1, 0x67, 0x56, 0xaa, 0x3f,
	0xb4, 0x5d, 0xd8, 0x0d, 0x9c, 0x21, 0x1f, 0xe0, 0x3c, 0x0e, 0xe3, 0xcd, 0xfe, 0xe8, 0x03, 0x0b,
	0x7c, 0x0e, 0xf6, 0x77, 0xe1, 0xf3, 0x45, 0x9c, 0xdf, 0x10, 0x1c, 0x10, 0x49, 0x55, 0xdd, 0x24,
	0xff, 0x02, 0xd0, 0x99, 0xa5, 0xfd, 0xa7, 0x8b, 0xaf, 0xbe, 0xb8, 0xa3, 0x41, 0xf4, 0x9c, 0xbc,
	0xae, 0x4b, 0x26, 0xb9, 0xac, 0x16, 0x04, 0x1a, 0x98, 0x39, 0x08, 0xad, 0x29, 0xd2, 0xba, 0x0d,
	0x3e, 0xbe, 0x25, 0x73, 0x46, 0x91, 0xd6, 0x45, 0xc6, 0x8d, 0x13, 0x10, 0x33, 0x36, 0x64, 0x6d,
	0x65, 0x33, 0xb7, 0xd2, 0x1c, 0x6c, 0x68, 0xa2, 0x87, 0xc5, 0x28, 0xa5, 0x17, 0x72, 0xce, 0xf8,
	0xc3, 0x4f, 0xc1, 0x98, 0xe7, 0x46, 0xcb, 0x3c, 0x9d, 0x68, 0xaa, 0x6e, 0x36, 0x1f, 0xd0, 0x3e,
	0xd2, 0x0a, 0x17, 0x89, 0x41, 0xcc, 0xcb, 0x6a, 0x21, 0x47, 0x2b, 0x7c, 0x0c, 0x46, 0x5d, 0x67,
	0x43, 0xe3, 0x0f, 0x03, 0x2c, 0x11, 0xb3, 0x57, 0x99, 0xfe, 0x10, 0x80, 0x51, 0x6b, 0xab, 0x72,
	0x38, 0xee, 0x7b, 0xa7, 0xfa, 0xaf, 0x62, 0x0d, 0xfe, 0x27, 0x04, 0x87, 0x2e, 0xd6, 0xf5, 0x75,
	0x72, 0xa9, 0xbe, 0x4a, 0x29, 0x67, 0x74, 0xb5, 0xea, 0x9a, 0x78, 0xf1, 0x1d, 0x04, 0xc3, 0x86,
	0xf5, 0x27, 0x3b, 0xd4, 0xef, 0xb1, 0x18, 0xbd, 0x85, 0xf4, 0x37, 0x90, 0xf0, 0xda, 0x03, 0x2c,
	0x20, 0xbb, 0x40, 0xee, 0xbf, 0x88, 0x6c, 0x73, 0xf9, 0x2c, 0x1c, 0xee, 0xed, 0x99, 0xa1, 0xe1,
	0x18, 0x04, 0xe5, 0x8a, 0x93, 0xa6, 0xf4, 0x6b, 0x2a, 0x01, 0x21, 0x5a, 0x07, 0x78, 0x0c, 0xf6,
	0x14, 0x16, 0xc5, 0x4b, 0xcf, 0x5c, 0x38, 0xbf, 0x22, 0xac, 0xd0, 0xde, 0xe8, 0x21, 0xe4, 0x62,
	0x48, 0xf8, 0x7d, 0x14, 0xc2, 0x8e, 0x32, 0xfc, 0x32, 0x82, 0xf1, 0x6e, 0x33, 0x14, 0x9e, 0xf5,
	0x6d, 0x52, 0xdd, 0x07, 0xcc, 0xf8, 0xdc, 0xee, 0x85, 0x0c, 0x8d, 0x1f, 0xc0, 0x12, 0x8c, 0xb8,
	0xff, 0xeb, 0x80, 0xa7, 0xfc, 0xf4, 0xb4, 0xfd, 0x7f, 0x22, 0xde, 0xc7, 0xca, 0xc2, 0x0f, 0xe0,
	0x0d, 0x18, 0x71, 0xaf, 0xc9, 0xfe, 0x57, 0xb4, 0xed, 0xdc, 0xf1, 0xe9, 0xfe, 0x99, 0x99, 0x3f,
	0x1b, 0xd6, 0x44, 0xd0, 0x8c, 0xb2, 0xef, 0x65, 0x6d, 0x8b, 0x9a, 0xff, 0x65, 0xed, 0x2b, 0x1c,
	0x3f, 0x80, 0x97, 0x21, 0xd2, 0x9c, 0x6a, 0x70, 0xc2, 0x4f, 0xd8, 0xbd, 0xab, 0xf5, 0x19, 0x36,
	0x09, 0x46, 0xdc, 0x0b, 0x9c, 0xbf, 0x27, 0x6d, 0xab, 0x5e, 0x9f, 0x57, 0xdc, 0x84, 0x58, 0xfb,
	0x54, 0x86, 0x33, 0x7d, 0xb9, 0xd1, 0x1a, 0xed, 0xe2, 0xd9, 0xdd, 0x09, 0xd8, 0x81, 0x83, 0x16,
	0x2a, 0xe3, 0xe4, 0xce, 0x39, 0x67, 0xa3, 0x77, 0x7c, 0xc7, 0x01, 0x8e, 0x1f, 0xc0, 0xab, 0x10,
	0x69, 0x0e, 0x81, 0xfe, 0xaf, 0xe2, 0x9e, 0x1d, 0xe3, 0xc9, 0x3e, 0x39, 0x99, 0x03, 0x57, 0x60,
	0xd8, 0xee, 0x3a, 0xf8, 0xf8, 0x0e, 0xfe, 0xef, 0xc6, 0x74, 0x02, 0xd0, 0x9a, 0x2a, 0xfd, 0xe3,
	0xe2, 0x19, 0x4f, 0xe3, 0xa9, 0x7e, 0x59, 0x9d, 0xf0, 0xb7, 0x26, 0x55, 0xff, 0x6b, 0x3c, 0x13,
	0x6d, 0x5f, 0x3e, 0x6c, 0xc1, 0xde, 0x8e, 0x29, 0x0d, 0x67, 0xfb, 0xaa, 0x2c, 0x37, 0xa0, 0xe5,
	0x76, 0x29, 0xc1, 0x1c, 0x7b, 0x09, 0xc1, 0xbe, 0x2e, 0x23, 0x10, 0x16, 0xfc, 0xd1, 0xb1, 0xdb,
	0x7c, 0x18, 0x9f, 0xdd, 0xb5, 0x0c, 0x33, 0xe1, 0x26, 0xc4, 0xda, 0x37, 0x3f, 0xff, 0x9a, 0xea,
	0xb2, 0x10, 0xfb, 0xd7, 0x54, 0xb7, 0xc5, 0x92, 0x1f, 0xc0, 0xaf, 0x20, 0xe0, 0x7a, 0x75, 0x2e,
	0xfc, 0xb8, 0x2f, 0x1e, 0xf4, 0xee, 0xe4, 0xf1, 0x93, 0xf7, 0x26, 0x48, 0x2d, 0x5a, 0xc8, 0x5d,
	0xcd, 0xac, 0xcb, 0xe6, 0xb5, 0xfa, 0x6a, 0xba, 0xac, 0x56, 0x33, 0x54, 0x4f, 0xc6, 0xd1, 0x93,
	0x91, 0x34, 0x39, 0xd3, 0xf9, 0x5b, 0xc4, 0xea, 0x10, 0xfb, 0x1d, 0x62, 0xf6, 0xaf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x62, 0x16, 0xdc, 0xd0, 0xfe, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PoliciesClient is the client API for Policies service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoliciesClient interface {
	ReplacePolicyMembers(ctx context.Context, in *ReplacePolicyMembersReq, opts ...grpc.CallOption) (*ReplacePolicyMembersResp, error)
	CreatePolicy(ctx context.Context, in *CreatePolicyReq, opts ...grpc.CallOption) (*Policy, error)
	DeletePolicy(ctx context.Context, in *DeletePolicyReq, opts ...grpc.CallOption) (*DeletePolicyResp, error)
	ListPolicies(ctx context.Context, in *ListPoliciesReq, opts ...grpc.CallOption) (*ListPoliciesResp, error)
	GetPolicy(ctx context.Context, in *GetPolicyReq, opts ...grpc.CallOption) (*Policy, error)
	UpdatePolicy(ctx context.Context, in *UpdatePolicyReq, opts ...grpc.CallOption) (*Policy, error)
	GetPolicyVersion(ctx context.Context, in *GetPolicyVersionReq, opts ...grpc.CallOption) (*GetPolicyVersionResp, error)
	CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*Role, error)
	ListRoles(ctx context.Context, in *ListRolesReq, opts ...grpc.CallOption) (*ListRolesResp, error)
	GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*Role, error)
	DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error)
	UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*Role, error)
	ListPolicyMembers(ctx context.Context, in *ListPolicyMembersReq, opts ...grpc.CallOption) (*ListPolicyMembersResp, error)
	RemovePolicyMembers(ctx context.Context, in *RemovePolicyMembersReq, opts ...grpc.CallOption) (*RemovePolicyMembersResp, error)
	AddPolicyMembers(ctx context.Context, in *AddPolicyMembersReq, opts ...grpc.CallOption) (*AddPolicyMembersResp, error)
	PurgeSubjectFromPolicies(ctx context.Context, in *PurgeSubjectFromPoliciesReq, opts ...grpc.CallOption) (*PurgeSubjectFromPoliciesResp, error)
}

type policiesClient struct {
	cc grpc.ClientConnInterface
}

func NewPoliciesClient(cc grpc.ClientConnInterface) PoliciesClient {
	return &policiesClient{cc}
}

func (c *policiesClient) ReplacePolicyMembers(ctx context.Context, in *ReplacePolicyMembersReq, opts ...grpc.CallOption) (*ReplacePolicyMembersResp, error) {
	out := new(ReplacePolicyMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/ReplacePolicyMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) CreatePolicy(ctx context.Context, in *CreatePolicyReq, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/CreatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) DeletePolicy(ctx context.Context, in *DeletePolicyReq, opts ...grpc.CallOption) (*DeletePolicyResp, error) {
	out := new(DeletePolicyResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/DeletePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) ListPolicies(ctx context.Context, in *ListPoliciesReq, opts ...grpc.CallOption) (*ListPoliciesResp, error) {
	out := new(ListPoliciesResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/ListPolicies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) GetPolicy(ctx context.Context, in *GetPolicyReq, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/GetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) UpdatePolicy(ctx context.Context, in *UpdatePolicyReq, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/UpdatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) GetPolicyVersion(ctx context.Context, in *GetPolicyVersionReq, opts ...grpc.CallOption) (*GetPolicyVersionResp, error) {
	out := new(GetPolicyVersionResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/GetPolicyVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) ListRoles(ctx context.Context, in *ListRolesReq, opts ...grpc.CallOption) (*ListRolesResp, error) {
	out := new(ListRolesResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/ListRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error) {
	out := new(DeleteRoleResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) ListPolicyMembers(ctx context.Context, in *ListPolicyMembersReq, opts ...grpc.CallOption) (*ListPolicyMembersResp, error) {
	out := new(ListPolicyMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/ListPolicyMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) RemovePolicyMembers(ctx context.Context, in *RemovePolicyMembersReq, opts ...grpc.CallOption) (*RemovePolicyMembersResp, error) {
	out := new(RemovePolicyMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/RemovePolicyMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) AddPolicyMembers(ctx context.Context, in *AddPolicyMembersReq, opts ...grpc.CallOption) (*AddPolicyMembersResp, error) {
	out := new(AddPolicyMembersResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/AddPolicyMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policiesClient) PurgeSubjectFromPolicies(ctx context.Context, in *PurgeSubjectFromPoliciesReq, opts ...grpc.CallOption) (*PurgeSubjectFromPoliciesResp, error) {
	out := new(PurgeSubjectFromPoliciesResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authz.Policies/PurgeSubjectFromPolicies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoliciesServer is the server API for Policies service.
type PoliciesServer interface {
	ReplacePolicyMembers(context.Context, *ReplacePolicyMembersReq) (*ReplacePolicyMembersResp, error)
	CreatePolicy(context.Context, *CreatePolicyReq) (*Policy, error)
	DeletePolicy(context.Context, *DeletePolicyReq) (*DeletePolicyResp, error)
	ListPolicies(context.Context, *ListPoliciesReq) (*ListPoliciesResp, error)
	GetPolicy(context.Context, *GetPolicyReq) (*Policy, error)
	UpdatePolicy(context.Context, *UpdatePolicyReq) (*Policy, error)
	GetPolicyVersion(context.Context, *GetPolicyVersionReq) (*GetPolicyVersionResp, error)
	CreateRole(context.Context, *CreateRoleReq) (*Role, error)
	ListRoles(context.Context, *ListRolesReq) (*ListRolesResp, error)
	GetRole(context.Context, *GetRoleReq) (*Role, error)
	DeleteRole(context.Context, *DeleteRoleReq) (*DeleteRoleResp, error)
	UpdateRole(context.Context, *UpdateRoleReq) (*Role, error)
	ListPolicyMembers(context.Context, *ListPolicyMembersReq) (*ListPolicyMembersResp, error)
	RemovePolicyMembers(context.Context, *RemovePolicyMembersReq) (*RemovePolicyMembersResp, error)
	AddPolicyMembers(context.Context, *AddPolicyMembersReq) (*AddPolicyMembersResp, error)
	PurgeSubjectFromPolicies(context.Context, *PurgeSubjectFromPoliciesReq) (*PurgeSubjectFromPoliciesResp, error)
}

// UnimplementedPoliciesServer can be embedded to have forward compatible implementations.
type UnimplementedPoliciesServer struct {
}

func (*UnimplementedPoliciesServer) ReplacePolicyMembers(ctx context.Context, req *ReplacePolicyMembersReq) (*ReplacePolicyMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplacePolicyMembers not implemented")
}
func (*UnimplementedPoliciesServer) CreatePolicy(ctx context.Context, req *CreatePolicyReq) (*Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePolicy not implemented")
}
func (*UnimplementedPoliciesServer) DeletePolicy(ctx context.Context, req *DeletePolicyReq) (*DeletePolicyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePolicy not implemented")
}
func (*UnimplementedPoliciesServer) ListPolicies(ctx context.Context, req *ListPoliciesReq) (*ListPoliciesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPolicies not implemented")
}
func (*UnimplementedPoliciesServer) GetPolicy(ctx context.Context, req *GetPolicyReq) (*Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicy not implemented")
}
func (*UnimplementedPoliciesServer) UpdatePolicy(ctx context.Context, req *UpdatePolicyReq) (*Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePolicy not implemented")
}
func (*UnimplementedPoliciesServer) GetPolicyVersion(ctx context.Context, req *GetPolicyVersionReq) (*GetPolicyVersionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicyVersion not implemented")
}
func (*UnimplementedPoliciesServer) CreateRole(ctx context.Context, req *CreateRoleReq) (*Role, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedPoliciesServer) ListRoles(ctx context.Context, req *ListRolesReq) (*ListRolesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoles not implemented")
}
func (*UnimplementedPoliciesServer) GetRole(ctx context.Context, req *GetRoleReq) (*Role, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedPoliciesServer) DeleteRole(ctx context.Context, req *DeleteRoleReq) (*DeleteRoleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedPoliciesServer) UpdateRole(ctx context.Context, req *UpdateRoleReq) (*Role, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (*UnimplementedPoliciesServer) ListPolicyMembers(ctx context.Context, req *ListPolicyMembersReq) (*ListPolicyMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPolicyMembers not implemented")
}
func (*UnimplementedPoliciesServer) RemovePolicyMembers(ctx context.Context, req *RemovePolicyMembersReq) (*RemovePolicyMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePolicyMembers not implemented")
}
func (*UnimplementedPoliciesServer) AddPolicyMembers(ctx context.Context, req *AddPolicyMembersReq) (*AddPolicyMembersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPolicyMembers not implemented")
}
func (*UnimplementedPoliciesServer) PurgeSubjectFromPolicies(ctx context.Context, req *PurgeSubjectFromPoliciesReq) (*PurgeSubjectFromPoliciesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurgeSubjectFromPolicies not implemented")
}

func RegisterPoliciesServer(s *grpc.Server, srv PoliciesServer) {
	s.RegisterService(&_Policies_serviceDesc, srv)
}

func _Policies_ReplacePolicyMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplacePolicyMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).ReplacePolicyMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/ReplacePolicyMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).ReplacePolicyMembers(ctx, req.(*ReplacePolicyMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_CreatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).CreatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/CreatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).CreatePolicy(ctx, req.(*CreatePolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_DeletePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).DeletePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/DeletePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).DeletePolicy(ctx, req.(*DeletePolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_ListPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPoliciesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).ListPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/ListPolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).ListPolicies(ctx, req.(*ListPoliciesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_GetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).GetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/GetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).GetPolicy(ctx, req.(*GetPolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_UpdatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).UpdatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/UpdatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).UpdatePolicy(ctx, req.(*UpdatePolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_GetPolicyVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPolicyVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).GetPolicyVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/GetPolicyVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).GetPolicyVersion(ctx, req.(*GetPolicyVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).CreateRole(ctx, req.(*CreateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRolesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).ListRoles(ctx, req.(*ListRolesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).GetRole(ctx, req.(*GetRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).DeleteRole(ctx, req.(*DeleteRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).UpdateRole(ctx, req.(*UpdateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_ListPolicyMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPolicyMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).ListPolicyMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/ListPolicyMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).ListPolicyMembers(ctx, req.(*ListPolicyMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_RemovePolicyMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePolicyMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).RemovePolicyMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/RemovePolicyMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).RemovePolicyMembers(ctx, req.(*RemovePolicyMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_AddPolicyMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPolicyMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).AddPolicyMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/AddPolicyMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).AddPolicyMembers(ctx, req.(*AddPolicyMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Policies_PurgeSubjectFromPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgeSubjectFromPoliciesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoliciesServer).PurgeSubjectFromPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authz.Policies/PurgeSubjectFromPolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoliciesServer).PurgeSubjectFromPolicies(ctx, req.(*PurgeSubjectFromPoliciesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Policies_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.authz.Policies",
	HandlerType: (*PoliciesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplacePolicyMembers",
			Handler:    _Policies_ReplacePolicyMembers_Handler,
		},
		{
			MethodName: "CreatePolicy",
			Handler:    _Policies_CreatePolicy_Handler,
		},
		{
			MethodName: "DeletePolicy",
			Handler:    _Policies_DeletePolicy_Handler,
		},
		{
			MethodName: "ListPolicies",
			Handler:    _Policies_ListPolicies_Handler,
		},
		{
			MethodName: "GetPolicy",
			Handler:    _Policies_GetPolicy_Handler,
		},
		{
			MethodName: "UpdatePolicy",
			Handler:    _Policies_UpdatePolicy_Handler,
		},
		{
			MethodName: "GetPolicyVersion",
			Handler:    _Policies_GetPolicyVersion_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _Policies_CreateRole_Handler,
		},
		{
			MethodName: "ListRoles",
			Handler:    _Policies_ListRoles_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _Policies_GetRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _Policies_DeleteRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _Policies_UpdateRole_Handler,
		},
		{
			MethodName: "ListPolicyMembers",
			Handler:    _Policies_ListPolicyMembers_Handler,
		},
		{
			MethodName: "RemovePolicyMembers",
			Handler:    _Policies_RemovePolicyMembers_Handler,
		},
		{
			MethodName: "AddPolicyMembers",
			Handler:    _Policies_AddPolicyMembers_Handler,
		},
		{
			MethodName: "PurgeSubjectFromPolicies",
			Handler:    _Policies_PurgeSubjectFromPolicies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/authz/policy.proto",
}
