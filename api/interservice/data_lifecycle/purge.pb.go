// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: interservice/data_lifecycle/purge.proto

package data_lifecycle

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{0}
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{1}
}

type ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled      bool          `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty" toml:"enabled,omitempty" mapstructure:"enabled,omitempty"`
	Recurrence   string        `protobuf:"bytes,2,opt,name=recurrence,proto3" json:"recurrence,omitempty" toml:"recurrence,omitempty" mapstructure:"recurrence,omitempty"`
	PolicyUpdate *PolicyUpdate `protobuf:"bytes,3,opt,name=policy_update,json=policyUpdate,proto3" json:"policy_update,omitempty" toml:"policy_update,omitempty" mapstructure:"policy_update,omitempty"`
}

func (x *ConfigureRequest) Reset() {
	*x = ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRequest) ProtoMessage() {}

func (x *ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigureRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConfigureRequest) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *ConfigureRequest) GetPolicyUpdate() *PolicyUpdate {
	if x != nil {
		return x.PolicyUpdate
	}
	return nil
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{3}
}

type ShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowRequest) Reset() {
	*x = ShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequest) ProtoMessage() {}

func (x *ShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequest.ProtoReflect.Descriptor instead.
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{4}
}

type ShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceName   string               `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty" toml:"instance_name,omitempty" mapstructure:"instance_name,omitempty"`
	WorkflowName   string               `protobuf:"bytes,2,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty" toml:"workflow_name,omitempty" mapstructure:"workflow_name,omitempty"`
	EsPolicies     []*EsPolicy          `protobuf:"bytes,3,rep,name=es_policies,json=esPolicies,proto3" json:"es_policies,omitempty" toml:"es_policies,omitempty" mapstructure:"es_policies,omitempty"`
	PgPolicies     []*PgPolicy          `protobuf:"bytes,4,rep,name=pg_policies,json=pgPolicies,proto3" json:"pg_policies,omitempty" toml:"pg_policies,omitempty" mapstructure:"pg_policies,omitempty"`
	Recurrence     string               `protobuf:"bytes,5,opt,name=recurrence,proto3" json:"recurrence,omitempty" toml:"recurrence,omitempty" mapstructure:"recurrence,omitempty"`
	NextDueAt      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=next_due_at,json=nextDueAt,proto3" json:"next_due_at,omitempty" toml:"next_due_at,omitempty" mapstructure:"next_due_at,omitempty"`
	LastEnqueuedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=last_enqueued_at,json=lastEnqueuedAt,proto3" json:"last_enqueued_at,omitempty" toml:"last_enqueued_at,omitempty" mapstructure:"last_enqueued_at,omitempty"`
	Enabled        bool                 `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty" toml:"enabled,omitempty" mapstructure:"enabled,omitempty"`
	LastStart      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_start,json=lastStart,proto3" json:"last_start,omitempty" toml:"last_start,omitempty" mapstructure:"last_start,omitempty"`
	LastEnd        *timestamp.Timestamp `protobuf:"bytes,10,opt,name=last_end,json=lastEnd,proto3" json:"last_end,omitempty" toml:"last_end,omitempty" mapstructure:"last_end,omitempty"`
}

func (x *ShowResponse) Reset() {
	*x = ShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowResponse) ProtoMessage() {}

func (x *ShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowResponse.ProtoReflect.Descriptor instead.
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{5}
}

func (x *ShowResponse) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ShowResponse) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ShowResponse) GetEsPolicies() []*EsPolicy {
	if x != nil {
		return x.EsPolicies
	}
	return nil
}

func (x *ShowResponse) GetPgPolicies() []*PgPolicy {
	if x != nil {
		return x.PgPolicies
	}
	return nil
}

func (x *ShowResponse) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *ShowResponse) GetNextDueAt() *timestamp.Timestamp {
	if x != nil {
		return x.NextDueAt
	}
	return nil
}

func (x *ShowResponse) GetLastEnqueuedAt() *timestamp.Timestamp {
	if x != nil {
		return x.LastEnqueuedAt
	}
	return nil
}

func (x *ShowResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ShowResponse) GetLastStart() *timestamp.Timestamp {
	if x != nil {
		return x.LastStart
	}
	return nil
}

func (x *ShowResponse) GetLastEnd() *timestamp.Timestamp {
	if x != nil {
		return x.LastEnd
	}
	return nil
}

type PolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Es []*EsPolicyUpdate `protobuf:"bytes,1,rep,name=es,proto3" json:"es,omitempty" toml:"es,omitempty" mapstructure:"es,omitempty"`
	Pg []*PgPolicyUpdate `protobuf:"bytes,2,rep,name=pg,proto3" json:"pg,omitempty" toml:"pg,omitempty" mapstructure:"pg,omitempty"`
}

func (x *PolicyUpdate) Reset() {
	*x = PolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyUpdate) ProtoMessage() {}

func (x *PolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyUpdate.ProtoReflect.Descriptor instead.
func (*PolicyUpdate) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{6}
}

func (x *PolicyUpdate) GetEs() []*EsPolicyUpdate {
	if x != nil {
		return x.Es
	}
	return nil
}

func (x *PolicyUpdate) GetPg() []*PgPolicyUpdate {
	if x != nil {
		return x.Pg
	}
	return nil
}

type EsPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Index            string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty" toml:"index,omitempty" mapstructure:"index,omitempty"`
	OlderThanDays    int32  `protobuf:"varint,3,opt,name=older_than_days,json=olderThanDays,proto3" json:"older_than_days,omitempty" toml:"older_than_days,omitempty" mapstructure:"older_than_days,omitempty"`
	CustomPurgeField string `protobuf:"bytes,4,opt,name=custom_purge_field,json=customPurgeField,proto3" json:"custom_purge_field,omitempty" toml:"custom_purge_field,omitempty" mapstructure:"custom_purge_field,omitempty"`
	Disabled         bool   `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty" toml:"disabled,omitempty" mapstructure:"disabled,omitempty"`
}

func (x *EsPolicy) Reset() {
	*x = EsPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsPolicy) ProtoMessage() {}

func (x *EsPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsPolicy.ProtoReflect.Descriptor instead.
func (*EsPolicy) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{7}
}

func (x *EsPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EsPolicy) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *EsPolicy) GetOlderThanDays() int32 {
	if x != nil {
		return x.OlderThanDays
	}
	return 0
}

func (x *EsPolicy) GetCustomPurgeField() string {
	if x != nil {
		return x.CustomPurgeField
	}
	return ""
}

func (x *EsPolicy) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type EsPolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName    string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty" toml:"policy_name,omitempty" mapstructure:"policy_name,omitempty"`
	Disabled      bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty" toml:"disabled,omitempty" mapstructure:"disabled,omitempty"`
	OlderThanDays int32  `protobuf:"varint,3,opt,name=older_than_days,json=olderThanDays,proto3" json:"older_than_days,omitempty" toml:"older_than_days,omitempty" mapstructure:"older_than_days,omitempty"`
}

func (x *EsPolicyUpdate) Reset() {
	*x = EsPolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EsPolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EsPolicyUpdate) ProtoMessage() {}

func (x *EsPolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EsPolicyUpdate.ProtoReflect.Descriptor instead.
func (*EsPolicyUpdate) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{8}
}

func (x *EsPolicyUpdate) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *EsPolicyUpdate) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *EsPolicyUpdate) GetOlderThanDays() int32 {
	if x != nil {
		return x.OlderThanDays
	}
	return 0
}

type PgPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Disabled bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty" toml:"disabled,omitempty" mapstructure:"disabled,omitempty"`
}

func (x *PgPolicy) Reset() {
	*x = PgPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgPolicy) ProtoMessage() {}

func (x *PgPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgPolicy.ProtoReflect.Descriptor instead.
func (*PgPolicy) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{9}
}

func (x *PgPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PgPolicy) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type PgPolicyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty" toml:"policy_name,omitempty" mapstructure:"policy_name,omitempty"`
	Disabled   bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty" toml:"disabled,omitempty" mapstructure:"disabled,omitempty"`
}

func (x *PgPolicyUpdate) Reset() {
	*x = PgPolicyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgPolicyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgPolicyUpdate) ProtoMessage() {}

func (x *PgPolicyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_data_lifecycle_purge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgPolicyUpdate.ProtoReflect.Descriptor instead.
func (*PgPolicyUpdate) Descriptor() ([]byte, []int) {
	return file_interservice_data_lifecycle_purge_proto_rawDescGZIP(), []int{10}
}

func (x *PgPolicyUpdate) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *PgPolicyUpdate) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

var File_interservice_data_lifecycle_purge_proto protoreflect.FileDescriptor

var file_interservice_data_lifecycle_purge_proto_rawDesc = []byte{
	0x0a, 0x27, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x75,
	0x72, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa7, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x59,
	0x0a, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xac, 0x04,
	0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x65, 0x73, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x0a, 0x65, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x70,
	0x67, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x0a, 0x70, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x75, 0x65, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x22, 0x9e, 0x01, 0x0a,
	0x0c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x02, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x02, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x02, 0x70, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x02, 0x70, 0x67, 0x22, 0xa6, 0x01,
	0x0a, 0x08, 0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x75, 0x0a, 0x0e, 0x45, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x68, 0x61, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x0a,
	0x08, 0x50, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x0e, 0x50, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x32, 0xf4, 0x02, 0x0a, 0x0c, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x03, 0x52, 0x75, 0x6e,
	0x12, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x38, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x04,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68,
	0x65, 0x66, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_interservice_data_lifecycle_purge_proto_rawDescOnce sync.Once
	file_interservice_data_lifecycle_purge_proto_rawDescData = file_interservice_data_lifecycle_purge_proto_rawDesc
)

func file_interservice_data_lifecycle_purge_proto_rawDescGZIP() []byte {
	file_interservice_data_lifecycle_purge_proto_rawDescOnce.Do(func() {
		file_interservice_data_lifecycle_purge_proto_rawDescData = protoimpl.X.CompressGZIP(file_interservice_data_lifecycle_purge_proto_rawDescData)
	})
	return file_interservice_data_lifecycle_purge_proto_rawDescData
}

var file_interservice_data_lifecycle_purge_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_interservice_data_lifecycle_purge_proto_goTypes = []interface{}{
	(*RunRequest)(nil),          // 0: chef.automate.infra.data_lifecycle.api.RunRequest
	(*RunResponse)(nil),         // 1: chef.automate.infra.data_lifecycle.api.RunResponse
	(*ConfigureRequest)(nil),    // 2: chef.automate.infra.data_lifecycle.api.ConfigureRequest
	(*ConfigureResponse)(nil),   // 3: chef.automate.infra.data_lifecycle.api.ConfigureResponse
	(*ShowRequest)(nil),         // 4: chef.automate.infra.data_lifecycle.api.ShowRequest
	(*ShowResponse)(nil),        // 5: chef.automate.infra.data_lifecycle.api.ShowResponse
	(*PolicyUpdate)(nil),        // 6: chef.automate.infra.data_lifecycle.api.PolicyUpdate
	(*EsPolicy)(nil),            // 7: chef.automate.infra.data_lifecycle.api.EsPolicy
	(*EsPolicyUpdate)(nil),      // 8: chef.automate.infra.data_lifecycle.api.EsPolicyUpdate
	(*PgPolicy)(nil),            // 9: chef.automate.infra.data_lifecycle.api.PgPolicy
	(*PgPolicyUpdate)(nil),      // 10: chef.automate.infra.data_lifecycle.api.PgPolicyUpdate
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_interservice_data_lifecycle_purge_proto_depIdxs = []int32{
	6,  // 0: chef.automate.infra.data_lifecycle.api.ConfigureRequest.policy_update:type_name -> chef.automate.infra.data_lifecycle.api.PolicyUpdate
	7,  // 1: chef.automate.infra.data_lifecycle.api.ShowResponse.es_policies:type_name -> chef.automate.infra.data_lifecycle.api.EsPolicy
	9,  // 2: chef.automate.infra.data_lifecycle.api.ShowResponse.pg_policies:type_name -> chef.automate.infra.data_lifecycle.api.PgPolicy
	11, // 3: chef.automate.infra.data_lifecycle.api.ShowResponse.next_due_at:type_name -> google.protobuf.Timestamp
	11, // 4: chef.automate.infra.data_lifecycle.api.ShowResponse.last_enqueued_at:type_name -> google.protobuf.Timestamp
	11, // 5: chef.automate.infra.data_lifecycle.api.ShowResponse.last_start:type_name -> google.protobuf.Timestamp
	11, // 6: chef.automate.infra.data_lifecycle.api.ShowResponse.last_end:type_name -> google.protobuf.Timestamp
	8,  // 7: chef.automate.infra.data_lifecycle.api.PolicyUpdate.es:type_name -> chef.automate.infra.data_lifecycle.api.EsPolicyUpdate
	10, // 8: chef.automate.infra.data_lifecycle.api.PolicyUpdate.pg:type_name -> chef.automate.infra.data_lifecycle.api.PgPolicyUpdate
	0,  // 9: chef.automate.infra.data_lifecycle.api.PurgeService.Run:input_type -> chef.automate.infra.data_lifecycle.api.RunRequest
	2,  // 10: chef.automate.infra.data_lifecycle.api.PurgeService.Configure:input_type -> chef.automate.infra.data_lifecycle.api.ConfigureRequest
	4,  // 11: chef.automate.infra.data_lifecycle.api.PurgeService.Show:input_type -> chef.automate.infra.data_lifecycle.api.ShowRequest
	1,  // 12: chef.automate.infra.data_lifecycle.api.PurgeService.Run:output_type -> chef.automate.infra.data_lifecycle.api.RunResponse
	3,  // 13: chef.automate.infra.data_lifecycle.api.PurgeService.Configure:output_type -> chef.automate.infra.data_lifecycle.api.ConfigureResponse
	5,  // 14: chef.automate.infra.data_lifecycle.api.PurgeService.Show:output_type -> chef.automate.infra.data_lifecycle.api.ShowResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_interservice_data_lifecycle_purge_proto_init() }
func file_interservice_data_lifecycle_purge_proto_init() {
	if File_interservice_data_lifecycle_purge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_interservice_data_lifecycle_purge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EsPolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_data_lifecycle_purge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgPolicyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_interservice_data_lifecycle_purge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_interservice_data_lifecycle_purge_proto_goTypes,
		DependencyIndexes: file_interservice_data_lifecycle_purge_proto_depIdxs,
		MessageInfos:      file_interservice_data_lifecycle_purge_proto_msgTypes,
	}.Build()
	File_interservice_data_lifecycle_purge_proto = out.File
	file_interservice_data_lifecycle_purge_proto_rawDesc = nil
	file_interservice_data_lifecycle_purge_proto_goTypes = nil
	file_interservice_data_lifecycle_purge_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PurgeServiceClient is the client API for PurgeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PurgeServiceClient interface {
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error)
}

type purgeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPurgeServiceClient(cc grpc.ClientConnInterface) PurgeServiceClient {
	return &purgeServiceClient{cc}
}

func (c *purgeServiceClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.data_lifecycle.api.PurgeService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purgeServiceClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
	out := new(ConfigureResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.data_lifecycle.api.PurgeService/Configure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *purgeServiceClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error) {
	out := new(ShowResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.data_lifecycle.api.PurgeService/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PurgeServiceServer is the server API for PurgeService service.
type PurgeServiceServer interface {
	Run(context.Context, *RunRequest) (*RunResponse, error)
	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
	Show(context.Context, *ShowRequest) (*ShowResponse, error)
}

// UnimplementedPurgeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPurgeServiceServer struct {
}

func (*UnimplementedPurgeServiceServer) Run(context.Context, *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedPurgeServiceServer) Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Configure not implemented")
}
func (*UnimplementedPurgeServiceServer) Show(context.Context, *ShowRequest) (*ShowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}

func RegisterPurgeServiceServer(s *grpc.Server, srv PurgeServiceServer) {
	s.RegisterService(&_PurgeService_serviceDesc, srv)
}

func _PurgeService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurgeServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.data_lifecycle.api.PurgeService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurgeServiceServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PurgeService_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurgeServiceServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.data_lifecycle.api.PurgeService/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurgeServiceServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PurgeService_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PurgeServiceServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.data_lifecycle.api.PurgeService/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PurgeServiceServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PurgeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.infra.data_lifecycle.api.PurgeService",
	HandlerType: (*PurgeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _PurgeService_Run_Handler,
		},
		{
			MethodName: "Configure",
			Handler:    _PurgeService_Configure_Handler,
		},
		{
			MethodName: "Show",
			Handler:    _PurgeService_Show_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/data_lifecycle/purge.proto",
}
