// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/data_lifecycle/server.proto

package data_lifecycle

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2c0018a68cd8782, []int{0}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2c0018a68cd8782, []int{1}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type TriggerPurgeRequest struct {
	// Id is a uuid to reference this request. A request with
	// an existing id may reuse the result of the already triggered
	// purge request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// Optional service_name. If provided, the purge will be restricted to this service
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty" toml:"service_name,omitempty" mapstructure:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *TriggerPurgeRequest) Reset()         { *m = TriggerPurgeRequest{} }
func (m *TriggerPurgeRequest) String() string { return proto.CompactTextString(m) }
func (*TriggerPurgeRequest) ProtoMessage()    {}
func (*TriggerPurgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2c0018a68cd8782, []int{2}
}

func (m *TriggerPurgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerPurgeRequest.Unmarshal(m, b)
}
func (m *TriggerPurgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerPurgeRequest.Marshal(b, m, deterministic)
}
func (m *TriggerPurgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerPurgeRequest.Merge(m, src)
}
func (m *TriggerPurgeRequest) XXX_Size() int {
	return xxx_messageInfo_TriggerPurgeRequest.Size(m)
}
func (m *TriggerPurgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerPurgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerPurgeRequest proto.InternalMessageInfo

func (m *TriggerPurgeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TriggerPurgeRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type TriggerPurgeResponse struct {
	// The response returned by each service
	Responses            map[string]*PurgeResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:"responses,omitempty" mapstructure:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte                    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *TriggerPurgeResponse) Reset()         { *m = TriggerPurgeResponse{} }
func (m *TriggerPurgeResponse) String() string { return proto.CompactTextString(m) }
func (*TriggerPurgeResponse) ProtoMessage()    {}
func (*TriggerPurgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2c0018a68cd8782, []int{3}
}

func (m *TriggerPurgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerPurgeResponse.Unmarshal(m, b)
}
func (m *TriggerPurgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerPurgeResponse.Marshal(b, m, deterministic)
}
func (m *TriggerPurgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerPurgeResponse.Merge(m, src)
}
func (m *TriggerPurgeResponse) XXX_Size() int {
	return xxx_messageInfo_TriggerPurgeResponse.Size(m)
}
func (m *TriggerPurgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerPurgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerPurgeResponse proto.InternalMessageInfo

func (m *TriggerPurgeResponse) GetResponses() map[string]*PurgeResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

func init() {
	proto.RegisterType((*VersionRequest)(nil), "chef.automate.domain.data_lifecycle.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "chef.automate.domain.data_lifecycle.VersionResponse")
	proto.RegisterType((*TriggerPurgeRequest)(nil), "chef.automate.domain.data_lifecycle.TriggerPurgeRequest")
	proto.RegisterType((*TriggerPurgeResponse)(nil), "chef.automate.domain.data_lifecycle.TriggerPurgeResponse")
	proto.RegisterMapType((map[string]*PurgeResponse)(nil), "chef.automate.domain.data_lifecycle.TriggerPurgeResponse.ResponsesEntry")
}

func init() {
	proto.RegisterFile("api/interservice/data_lifecycle/server.proto", fileDescriptor_b2c0018a68cd8782)
}

var fileDescriptor_b2c0018a68cd8782 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0x49, 0xca, 0x7b, 0xa5, 0xb7, 0x7d, 0x7d, 0x65, 0xde, 0x5b, 0x84, 0xae, 0x6a, 0xdc,
	0x14, 0x94, 0x89, 0xa4, 0x2e, 0x6a, 0x97, 0xa2, 0xd0, 0x85, 0x88, 0x04, 0x71, 0xe1, 0xa6, 0xdc,
	0x26, 0xb7, 0xe9, 0x60, 0xfe, 0x39, 0x99, 0x14, 0xba, 0x76, 0xe9, 0x97, 0xf5, 0x23, 0x48, 0x9b,
	0x89, 0x1a, 0x10, 0x5a, 0xbb, 0xbb, 0x39, 0x33, 0xf3, 0xcb, 0xb9, 0xe7, 0x5e, 0x38, 0xc5, 0x4c,
	0x38, 0x22, 0x51, 0x24, 0x73, 0x92, 0x2b, 0xe1, 0x93, 0x13, 0xa0, 0xc2, 0x59, 0x24, 0x16, 0xe4,
	0xaf, 0xfd, 0x88, 0x9c, 0x8d, 0x4c, 0x92, 0x67, 0x32, 0x55, 0x29, 0x3b, 0xf6, 0x97, 0xb4, 0xe0,
	0x58, 0xa8, 0x34, 0x46, 0x45, 0x3c, 0x48, 0x63, 0x14, 0x09, 0xaf, 0xbf, 0xe8, 0x9f, 0xed, 0x42,
	0xc6, 0x98, 0x60, 0x48, 0x38, 0x8f, 0xa8, 0xc4, 0xda, 0x3d, 0xe8, 0x3e, 0x90, 0xcc, 0x45, 0x9a,
	0x78, 0xf4, 0x5c, 0x50, 0xae, 0xec, 0x13, 0xf8, 0xfb, 0xa1, 0xe4, 0x59, 0x9a, 0xe4, 0xc4, 0x2c,
	0x68, 0xae, 0x4a, 0xc9, 0x32, 0x06, 0xc6, 0xb0, 0xe5, 0x55, 0x9f, 0xf6, 0x14, 0xfe, 0xdd, 0x4b,
	0x11, 0x86, 0x24, 0xef, 0x0a, 0x19, 0x92, 0x66, 0xb0, 0x2e, 0x98, 0x22, 0xd0, 0x77, 0x4d, 0x11,
	0xb0, 0x23, 0xe8, 0x68, 0x43, 0xb3, 0x04, 0x63, 0xb2, 0xcc, 0xed, 0x49, 0x5b, 0x6b, 0xb7, 0x18,
	0x93, 0xfd, 0x66, 0xc0, 0xff, 0x3a, 0x4a, 0xff, 0x7c, 0x01, 0x2d, 0xa9, 0xeb, 0xdc, 0x32, 0x06,
	0x8d, 0x61, 0xdb, 0x9d, 0xf2, 0x3d, 0xc2, 0xe0, 0xdf, 0xd1, 0x78, 0x55, 0xe4, 0xd7, 0x89, 0x92,
	0x6b, 0xef, 0x13, 0xdd, 0xcf, 0xa0, 0x5b, 0x3f, 0x64, 0x3d, 0x68, 0x3c, 0xd1, 0x5a, 0xb7, 0xb1,
	0x29, 0xd9, 0x14, 0x7e, 0xad, 0x30, 0x2a, 0xca, 0x06, 0xda, 0xae, 0xbb, 0x97, 0x8f, 0x9a, 0x01,
	0xaf, 0x04, 0x4c, 0xcc, 0xb1, 0xe1, 0xbe, 0x9a, 0xf0, 0xe7, 0x0a, 0x15, 0xde, 0x54, 0x57, 0x99,
	0x82, 0xa6, 0xce, 0x9e, 0x8d, 0xf6, 0x62, 0xd7, 0x67, 0xd7, 0x3f, 0xff, 0xd9, 0x23, 0x9d, 0xf0,
	0x8b, 0x01, 0x9d, 0xaf, 0x61, 0xb1, 0xf1, 0x01, 0xf9, 0x96, 0x06, 0x2e, 0x0e, 0x9e, 0xcc, 0xe5,
	0xe4, 0x71, 0x1c, 0x0a, 0xb5, 0x2c, 0xe6, 0xdc, 0x4f, 0x63, 0x67, 0x83, 0x71, 0x2a, 0x8c, 0xb3,
	0x63, 0xad, 0xe7, 0xbf, 0xb7, 0xcb, 0x3c, 0x7a, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xd2, 0xb1,
	0xeb, 0x53, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataLifecycleClient is the client API for DataLifecycle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataLifecycleClient interface {
	// Health checks and metadata
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
	TriggerPurge(ctx context.Context, in *TriggerPurgeRequest, opts ...grpc.CallOption) (*TriggerPurgeResponse, error)
}

type dataLifecycleClient struct {
	cc *grpc.ClientConn
}

func NewDataLifecycleClient(cc *grpc.ClientConn) DataLifecycleClient {
	return &dataLifecycleClient{cc}
}

func (c *dataLifecycleClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.data_lifecycle.DataLifecycle/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLifecycleClient) TriggerPurge(ctx context.Context, in *TriggerPurgeRequest, opts ...grpc.CallOption) (*TriggerPurgeResponse, error) {
	out := new(TriggerPurgeResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.data_lifecycle.DataLifecycle/TriggerPurge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataLifecycleServer is the server API for DataLifecycle service.
type DataLifecycleServer interface {
	// Health checks and metadata
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
	TriggerPurge(context.Context, *TriggerPurgeRequest) (*TriggerPurgeResponse, error)
}

func RegisterDataLifecycleServer(s *grpc.Server, srv DataLifecycleServer) {
	s.RegisterService(&_DataLifecycle_serviceDesc, srv)
}

func _DataLifecycle_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.data_lifecycle.DataLifecycle/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLifecycle_TriggerPurge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerPurgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLifecycleServer).TriggerPurge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.data_lifecycle.DataLifecycle/TriggerPurge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLifecycleServer).TriggerPurge(ctx, req.(*TriggerPurgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataLifecycle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.data_lifecycle.DataLifecycle",
	HandlerType: (*DataLifecycleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _DataLifecycle_Version_Handler,
		},
		{
			MethodName: "TriggerPurge",
			Handler:    _DataLifecycle_TriggerPurge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/interservice/data_lifecycle/server.proto",
}
