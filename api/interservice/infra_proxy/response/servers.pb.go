// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: interservice/infra_proxy/response/servers.proto

package response

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Infra Server.
	Server        *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty" toml:"server,omitempty" mapstructure:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServer) Reset() {
	*x = CreateServer{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServer) ProtoMessage() {}

func (x *CreateServer) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServer.ProtoReflect.Descriptor instead.
func (*CreateServer) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{0}
}

func (x *CreateServer) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type DeleteServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Infra Server.
	Server        *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty" toml:"server,omitempty" mapstructure:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServer) Reset() {
	*x = DeleteServer{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServer) ProtoMessage() {}

func (x *DeleteServer) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServer.ProtoReflect.Descriptor instead.
func (*DeleteServer) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteServer) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type UpdateServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Infra Server.
	Server        *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty" toml:"server,omitempty" mapstructure:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServer) Reset() {
	*x = UpdateServer{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServer) ProtoMessage() {}

func (x *UpdateServer) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServer.ProtoReflect.Descriptor instead.
func (*UpdateServer) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateServer) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type GetServers struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Chef Infra Servers.
	Servers       []*Server `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" toml:"servers,omitempty" mapstructure:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServers) Reset() {
	*x = GetServers{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServers) ProtoMessage() {}

func (x *GetServers) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServers.ProtoReflect.Descriptor instead.
func (*GetServers) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{3}
}

func (x *GetServers) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type GetServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Infra Server.
	Server        *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty" toml:"server,omitempty" mapstructure:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServer) Reset() {
	*x = GetServer{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServer) ProtoMessage() {}

func (x *GetServer) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServer.ProtoReflect.Descriptor instead.
func (*GetServer) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{4}
}

func (x *GetServer) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

type Server struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Infra Server ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// Chef Infra Server name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Chef Infra Server FQDN.
	Fqdn string `protobuf:"bytes,4,opt,name=fqdn,proto3" json:"fqdn,omitempty" toml:"fqdn,omitempty" mapstructure:"fqdn,omitempty"`
	// Chef Infra Server IP address.
	IpAddress string `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty" toml:"ip_address,omitempty" mapstructure:"ip_address,omitempty"`
	// Chef organizations count associated with Chef Infra Server.
	OrgsCount     int32 `protobuf:"varint,6,opt,name=orgs_count,json=orgsCount,proto3" json:"orgs_count,omitempty" toml:"orgs_count,omitempty" mapstructure:"orgs_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{5}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Server) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Server) GetOrgsCount() int32 {
	if x != nil {
		return x.OrgsCount
	}
	return 0
}

type GetServerStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chef Server Status
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	// Chef Server Upstream
	Upstreams map[string]string `protobuf:"bytes,2,rep,name=upstreams,proto3" json:"upstreams,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" toml:"upstreams,omitempty" mapstructure:"upstreams,omitempty"`
	// Chef Server Keygem
	Keygen        map[string]int32 `protobuf:"bytes,3,rep,name=keygen,proto3" json:"keygen,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value" toml:"keygen,omitempty" mapstructure:"keygen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerStatus) Reset() {
	*x = GetServerStatus{}
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerStatus) ProtoMessage() {}

func (x *GetServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_infra_proxy_response_servers_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerStatus.ProtoReflect.Descriptor instead.
func (*GetServerStatus) Descriptor() ([]byte, []int) {
	return file_interservice_infra_proxy_response_servers_proto_rawDescGZIP(), []int{6}
}

func (x *GetServerStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetServerStatus) GetUpstreams() map[string]string {
	if x != nil {
		return x.Upstreams
	}
	return nil
}

func (x *GetServerStatus) GetKeygen() map[string]int32 {
	if x != nil {
		return x.Keygen
	}
	return nil
}

var File_interservice_infra_proxy_response_servers_proto protoreflect.FileDescriptor

const file_interservice_infra_proxy_response_servers_proto_rawDesc = "" +
	"\n" +
	"/interservice/infra_proxy/response/servers.proto\x12)chef.automate.domain.infra_proxy.response\"Y\n" +
	"\fCreateServer\x12I\n" +
	"\x06server\x18\x01 \x01(\v21.chef.automate.domain.infra_proxy.response.ServerR\x06server\"Y\n" +
	"\fDeleteServer\x12I\n" +
	"\x06server\x18\x01 \x01(\v21.chef.automate.domain.infra_proxy.response.ServerR\x06server\"Y\n" +
	"\fUpdateServer\x12I\n" +
	"\x06server\x18\x01 \x01(\v21.chef.automate.domain.infra_proxy.response.ServerR\x06server\"Y\n" +
	"\n" +
	"GetServers\x12K\n" +
	"\aservers\x18\x01 \x03(\v21.chef.automate.domain.infra_proxy.response.ServerR\aservers\"V\n" +
	"\tGetServer\x12I\n" +
	"\x06server\x18\x01 \x01(\v21.chef.automate.domain.infra_proxy.response.ServerR\x06server\"~\n" +
	"\x06Server\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04fqdn\x18\x04 \x01(\tR\x04fqdn\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x05 \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"orgs_count\x18\x06 \x01(\x05R\torgsCount\"\xeb\x02\n" +
	"\x0fGetServerStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12g\n" +
	"\tupstreams\x18\x02 \x03(\v2I.chef.automate.domain.infra_proxy.response.GetServerStatus.UpstreamsEntryR\tupstreams\x12^\n" +
	"\x06keygen\x18\x03 \x03(\v2F.chef.automate.domain.infra_proxy.response.GetServerStatus.KeygenEntryR\x06keygen\x1a<\n" +
	"\x0eUpstreamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vKeygenEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01B@Z>github.com/chef/automate/api/interservice/infra_proxy/responseb\x06proto3"

var (
	file_interservice_infra_proxy_response_servers_proto_rawDescOnce sync.Once
	file_interservice_infra_proxy_response_servers_proto_rawDescData []byte
)

func file_interservice_infra_proxy_response_servers_proto_rawDescGZIP() []byte {
	file_interservice_infra_proxy_response_servers_proto_rawDescOnce.Do(func() {
		file_interservice_infra_proxy_response_servers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_interservice_infra_proxy_response_servers_proto_rawDesc), len(file_interservice_infra_proxy_response_servers_proto_rawDesc)))
	})
	return file_interservice_infra_proxy_response_servers_proto_rawDescData
}

var file_interservice_infra_proxy_response_servers_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_interservice_infra_proxy_response_servers_proto_goTypes = []any{
	(*CreateServer)(nil),    // 0: chef.automate.domain.infra_proxy.response.CreateServer
	(*DeleteServer)(nil),    // 1: chef.automate.domain.infra_proxy.response.DeleteServer
	(*UpdateServer)(nil),    // 2: chef.automate.domain.infra_proxy.response.UpdateServer
	(*GetServers)(nil),      // 3: chef.automate.domain.infra_proxy.response.GetServers
	(*GetServer)(nil),       // 4: chef.automate.domain.infra_proxy.response.GetServer
	(*Server)(nil),          // 5: chef.automate.domain.infra_proxy.response.Server
	(*GetServerStatus)(nil), // 6: chef.automate.domain.infra_proxy.response.GetServerStatus
	nil,                     // 7: chef.automate.domain.infra_proxy.response.GetServerStatus.UpstreamsEntry
	nil,                     // 8: chef.automate.domain.infra_proxy.response.GetServerStatus.KeygenEntry
}
var file_interservice_infra_proxy_response_servers_proto_depIdxs = []int32{
	5, // 0: chef.automate.domain.infra_proxy.response.CreateServer.server:type_name -> chef.automate.domain.infra_proxy.response.Server
	5, // 1: chef.automate.domain.infra_proxy.response.DeleteServer.server:type_name -> chef.automate.domain.infra_proxy.response.Server
	5, // 2: chef.automate.domain.infra_proxy.response.UpdateServer.server:type_name -> chef.automate.domain.infra_proxy.response.Server
	5, // 3: chef.automate.domain.infra_proxy.response.GetServers.servers:type_name -> chef.automate.domain.infra_proxy.response.Server
	5, // 4: chef.automate.domain.infra_proxy.response.GetServer.server:type_name -> chef.automate.domain.infra_proxy.response.Server
	7, // 5: chef.automate.domain.infra_proxy.response.GetServerStatus.upstreams:type_name -> chef.automate.domain.infra_proxy.response.GetServerStatus.UpstreamsEntry
	8, // 6: chef.automate.domain.infra_proxy.response.GetServerStatus.keygen:type_name -> chef.automate.domain.infra_proxy.response.GetServerStatus.KeygenEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_interservice_infra_proxy_response_servers_proto_init() }
func file_interservice_infra_proxy_response_servers_proto_init() {
	if File_interservice_infra_proxy_response_servers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_interservice_infra_proxy_response_servers_proto_rawDesc), len(file_interservice_infra_proxy_response_servers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_interservice_infra_proxy_response_servers_proto_goTypes,
		DependencyIndexes: file_interservice_infra_proxy_response_servers_proto_depIdxs,
		MessageInfos:      file_interservice_infra_proxy_response_servers_proto_msgTypes,
	}.Build()
	File_interservice_infra_proxy_response_servers_proto = out.File
	file_interservice_infra_proxy_response_servers_proto_goTypes = nil
	file_interservice_infra_proxy_response_servers_proto_depIdxs = nil
}
