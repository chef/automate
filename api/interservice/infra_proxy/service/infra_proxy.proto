syntax = "proto3";

package chef.automate.domain.infra_proxy.service;
option go_package = "github.com/chef/automate/api/interservice/infra_proxy/service";

import "external/common/version/version.proto";
import "interservice/infra_proxy/request/servers.proto";
import "interservice/infra_proxy/request/orgs.proto";
import "interservice/infra_proxy/request/cookbooks.proto";
import "interservice/infra_proxy/request/roles.proto";
import "interservice/infra_proxy/request/clients.proto";
import "interservice/infra_proxy/request/databags.proto";
import "interservice/infra_proxy/request/environments.proto";
import "interservice/infra_proxy/request/nodes.proto";
import "interservice/infra_proxy/request/policyfiles.proto";

import "interservice/infra_proxy/response/servers.proto";
import "interservice/infra_proxy/response/orgs.proto";
import "interservice/infra_proxy/response/cookbooks.proto";
import "interservice/infra_proxy/response/roles.proto";
import "interservice/infra_proxy/response/clients.proto";
import "interservice/infra_proxy/response/databags.proto";
import "interservice/infra_proxy/response/environments.proto";
import "interservice/infra_proxy/response/nodes.proto";
import "interservice/infra_proxy/response/policyfiles.proto";

service InfraProxyService {
    rpc GetVersion      (chef.automate.api.common.version.VersionInfoRequest) returns (chef.automate.api.common.version.VersionInfo) {};

    rpc CreateServer    (chef.automate.domain.infra_proxy.request.CreateServer) returns (chef.automate.domain.infra_proxy.response.CreateServer) {};
    rpc DeleteServer    (chef.automate.domain.infra_proxy.request.DeleteServer) returns (chef.automate.domain.infra_proxy.response.DeleteServer) {};
    rpc UpdateServer    (chef.automate.domain.infra_proxy.request.UpdateServer) returns (chef.automate.domain.infra_proxy.response.UpdateServer) {};
    rpc GetServers      (chef.automate.domain.infra_proxy.request.GetServers) returns (chef.automate.domain.infra_proxy.response.GetServers) {};
    rpc GetServer       (chef.automate.domain.infra_proxy.request.GetServer) returns (chef.automate.domain.infra_proxy.response.GetServer) {};

    rpc CreateOrg    (chef.automate.domain.infra_proxy.request.CreateOrg) returns (chef.automate.domain.infra_proxy.response.CreateOrg) {};
    rpc DeleteOrg    (chef.automate.domain.infra_proxy.request.DeleteOrg) returns (chef.automate.domain.infra_proxy.response.DeleteOrg) {};
    rpc UpdateOrg    (chef.automate.domain.infra_proxy.request.UpdateOrg) returns (chef.automate.domain.infra_proxy.response.UpdateOrg) {};
    rpc GetOrgs      (chef.automate.domain.infra_proxy.request.GetOrgs) returns (chef.automate.domain.infra_proxy.response.GetOrgs) {};
    rpc GetOrg       (chef.automate.domain.infra_proxy.request.GetOrg) returns (chef.automate.domain.infra_proxy.response.GetOrg) {};
    rpc ResetOrgAdminKey (chef.automate.domain.infra_proxy.request.ResetOrgAdminKey) returns (chef.automate.domain.infra_proxy.response.ResetOrgAdminKey) {};

    rpc GetCookbooks (chef.automate.domain.infra_proxy.request.Cookbooks) returns (chef.automate.domain.infra_proxy.response.Cookbooks) {};
    rpc GetCookbookVersions (chef.automate.domain.infra_proxy.request.CookbookVersions) returns (chef.automate.domain.infra_proxy.response.CookbookVersions) {};
    rpc GetCookbook  (chef.automate.domain.infra_proxy.request.Cookbook) returns (chef.automate.domain.infra_proxy.response.Cookbook) {};
    rpc GetCookbookFileContent (chef.automate.domain.infra_proxy.request.CookbookFileContent) returns (chef.automate.domain.infra_proxy.response.CookbookFileContent) {};

    rpc GetRoles (chef.automate.domain.infra_proxy.request.Roles) returns (chef.automate.domain.infra_proxy.response.Roles) {};
    rpc GetRole (chef.automate.domain.infra_proxy.request.Role) returns (chef.automate.domain.infra_proxy.response.Role) {};
    rpc CreateRole (chef.automate.domain.infra_proxy.request.CreateRole) returns (chef.automate.domain.infra_proxy.response.Role) {};
    rpc DeleteRole (chef.automate.domain.infra_proxy.request.Role) returns (chef.automate.domain.infra_proxy.response.Role) {};
    rpc UpdateRole (chef.automate.domain.infra_proxy.request.UpdateRole) returns (chef.automate.domain.infra_proxy.response.Role) {};

    rpc GetClients (chef.automate.domain.infra_proxy.request.Clients) returns (chef.automate.domain.infra_proxy.response.Clients) {};
    rpc GetClient (chef.automate.domain.infra_proxy.request.Client) returns (chef.automate.domain.infra_proxy.response.Client) {};

    rpc GetDataBags (chef.automate.domain.infra_proxy.request.DataBags) returns (chef.automate.domain.infra_proxy.response.DataBags) {};
    rpc GetDataBagItem (chef.automate.domain.infra_proxy.request.DataBag) returns (chef.automate.domain.infra_proxy.response.DataBag) {};
    rpc CreateDataBag (chef.automate.domain.infra_proxy.request.CreateDataBag) returns (chef.automate.domain.infra_proxy.response.CreateDataBag) {};
    rpc CreateDataBagItem (chef.automate.domain.infra_proxy.request.CreateDataBagItem) returns (chef.automate.domain.infra_proxy.response.CreateDataBagItem) {};
    rpc DeleteDataBag (chef.automate.domain.infra_proxy.request.DataBag) returns (chef.automate.domain.infra_proxy.response.DataBag) {};
    rpc UpdateDataBagItem (chef.automate.domain.infra_proxy.request.UpdateDataBagItem) returns (chef.automate.domain.infra_proxy.response.UpdateDataBagItem) {};

    rpc GetEnvironments (chef.automate.domain.infra_proxy.request.Environments) returns (chef.automate.domain.infra_proxy.response.Environments) {};
    rpc GetEnvironment (chef.automate.domain.infra_proxy.request.Environment) returns (chef.automate.domain.infra_proxy.response.Environment) {};
    rpc CreateEnvironment (chef.automate.domain.infra_proxy.request.CreateEnvironment) returns (chef.automate.domain.infra_proxy.response.Environment) {};
    rpc UpdateEnvironment (chef.automate.domain.infra_proxy.request.UpdateEnvironment) returns (chef.automate.domain.infra_proxy.response.Environment) {};
    rpc DeleteEnvironment (chef.automate.domain.infra_proxy.request.Environment) returns (chef.automate.domain.infra_proxy.response.Environment) {};

    rpc GetAffectedNodes (chef.automate.domain.infra_proxy.request.AffectedNodes) returns (chef.automate.domain.infra_proxy.response.AffectedNodes) {};
    rpc DeleteNode (chef.automate.domain.infra_proxy.request.DeleteNode) returns (chef.automate.domain.infra_proxy.response.DeleteNode) {};
    rpc UpdateNode (chef.automate.domain.infra_proxy.request.UpdateNode) returns (chef.automate.domain.infra_proxy.response.UpdateNode) {};


    rpc GetPolicyfiles (chef.automate.domain.infra_proxy.request.Policyfiles) returns (chef.automate.domain.infra_proxy.response.Policyfiles) {};
    rpc GetPolicyfile (chef.automate.domain.infra_proxy.request.Policyfile) returns (chef.automate.domain.infra_proxy.response.Policyfile) {};
}
