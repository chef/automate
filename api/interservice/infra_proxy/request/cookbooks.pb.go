// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/infra_proxy/request/cookbooks.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cookbooks struct {
	// ID of the Org.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// ID of the Server
	ServerId             string   `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbooks) Reset()         { *m = Cookbooks{} }
func (m *Cookbooks) String() string { return proto.CompactTextString(m) }
func (*Cookbooks) ProtoMessage()    {}
func (*Cookbooks) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e7086f841bd658, []int{0}
}

func (m *Cookbooks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbooks.Unmarshal(m, b)
}
func (m *Cookbooks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbooks.Marshal(b, m, deterministic)
}
func (m *Cookbooks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbooks.Merge(m, src)
}
func (m *Cookbooks) XXX_Size() int {
	return xxx_messageInfo_Cookbooks.Size(m)
}
func (m *Cookbooks) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbooks.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbooks proto.InternalMessageInfo

func (m *Cookbooks) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Cookbooks) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type CookbookVersions struct {
	// ID of the Org.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// ID of the Server.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Name of the cookbook.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookVersions) Reset()         { *m = CookbookVersions{} }
func (m *CookbookVersions) String() string { return proto.CompactTextString(m) }
func (*CookbookVersions) ProtoMessage()    {}
func (*CookbookVersions) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e7086f841bd658, []int{1}
}

func (m *CookbookVersions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookVersions.Unmarshal(m, b)
}
func (m *CookbookVersions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookVersions.Marshal(b, m, deterministic)
}
func (m *CookbookVersions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookVersions.Merge(m, src)
}
func (m *CookbookVersions) XXX_Size() int {
	return xxx_messageInfo_CookbookVersions.Size(m)
}
func (m *CookbookVersions) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookVersions.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookVersions proto.InternalMessageInfo

func (m *CookbookVersions) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CookbookVersions) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CookbookVersions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Cookbook struct {
	// ID of the Org.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// ID of the Server.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Name of the cookbook.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Version of the cookbook.
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Cookbook) Reset()         { *m = Cookbook{} }
func (m *Cookbook) String() string { return proto.CompactTextString(m) }
func (*Cookbook) ProtoMessage()    {}
func (*Cookbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e7086f841bd658, []int{2}
}

func (m *Cookbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookbook.Unmarshal(m, b)
}
func (m *Cookbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookbook.Marshal(b, m, deterministic)
}
func (m *Cookbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookbook.Merge(m, src)
}
func (m *Cookbook) XXX_Size() int {
	return xxx_messageInfo_Cookbook.Size(m)
}
func (m *Cookbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookbook.DiscardUnknown(m)
}

var xxx_messageInfo_Cookbook proto.InternalMessageInfo

func (m *Cookbook) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Cookbook) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *Cookbook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cookbook) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CookbookFileContent struct {
	// ID of the org.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// ID of the server.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Name of the cookbook.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Version of the cookbook.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	// Cookbook data file URL.
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty" mapstructure:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CookbookFileContent) Reset()         { *m = CookbookFileContent{} }
func (m *CookbookFileContent) String() string { return proto.CompactTextString(m) }
func (*CookbookFileContent) ProtoMessage()    {}
func (*CookbookFileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e7086f841bd658, []int{3}
}

func (m *CookbookFileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookbookFileContent.Unmarshal(m, b)
}
func (m *CookbookFileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookbookFileContent.Marshal(b, m, deterministic)
}
func (m *CookbookFileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookbookFileContent.Merge(m, src)
}
func (m *CookbookFileContent) XXX_Size() int {
	return xxx_messageInfo_CookbookFileContent.Size(m)
}
func (m *CookbookFileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_CookbookFileContent.DiscardUnknown(m)
}

var xxx_messageInfo_CookbookFileContent proto.InternalMessageInfo

func (m *CookbookFileContent) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CookbookFileContent) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CookbookFileContent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CookbookFileContent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CookbookFileContent) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*Cookbooks)(nil), "chef.automate.domain.infra_proxy.request.Cookbooks")
	proto.RegisterType((*CookbookVersions)(nil), "chef.automate.domain.infra_proxy.request.CookbookVersions")
	proto.RegisterType((*Cookbook)(nil), "chef.automate.domain.infra_proxy.request.Cookbook")
	proto.RegisterType((*CookbookFileContent)(nil), "chef.automate.domain.infra_proxy.request.CookbookFileContent")
}

func init() {
	proto.RegisterFile("interservice/infra_proxy/request/cookbooks.proto", fileDescriptor_b4e7086f841bd658)
}

var fileDescriptor_b4e7086f841bd658 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0xfd, 0x63, 0x33, 0xa7, 0xb2, 0x22, 0x2c, 0x78, 0x91, 0x9c, 0x7a, 0xda, 0x15,
	0x3c, 0x4b, 0xc1, 0x82, 0xd0, 0xab, 0x07, 0x0f, 0xbd, 0x94, 0x4d, 0x32, 0x4d, 0x97, 0x26, 0x3b,
	0x71, 0xb2, 0x29, 0xfa, 0x11, 0xfc, 0xd6, 0x92, 0x8d, 0x0b, 0xde, 0x04, 0xd1, 0xdb, 0xec, 0x1b,
	0xde, 0xef, 0x2d, 0xcc, 0x83, 0x3b, 0xeb, 0x3c, 0x72, 0x87, 0x7c, 0xb6, 0x05, 0x6a, 0xeb, 0x0e,
	0x6c, 0xf6, 0x2d, 0xd3, 0xdb, 0xbb, 0x66, 0x7c, 0xed, 0xb1, 0xf3, 0xba, 0x20, 0x3a, 0xe5, 0x44,
	0xa7, 0x4e, 0xb5, 0x4c, 0x9e, 0xc4, 0xaa, 0x38, 0xe2, 0x41, 0x99, 0xde, 0x53, 0x63, 0x3c, 0xaa,
	0x92, 0x1a, 0x63, 0x9d, 0xfa, 0xe6, 0x54, 0x5f, 0xce, 0x6c, 0x0d, 0xe9, 0x26, 0x9a, 0xc5, 0x35,
	0xcc, 0x89, 0xab, 0xbd, 0x2d, 0x65, 0x72, 0x9b, 0xac, 0xd2, 0xe7, 0x19, 0x71, 0xb5, 0x2d, 0xc5,
	0x0d, 0xa4, 0x43, 0x38, 0xf2, 0xb0, 0xb9, 0x08, 0x9b, 0xc5, 0x28, 0x6c, 0xcb, 0x6c, 0x07, 0xcb,
	0x08, 0x78, 0x41, 0xee, 0x2c, 0xb9, 0x5f, 0x71, 0x84, 0x80, 0xa9, 0x33, 0x0d, 0xca, 0x49, 0xd0,
	0xc3, 0x9c, 0xd5, 0xb0, 0x88, 0xec, 0xbf, 0x62, 0x0a, 0x09, 0x97, 0xe7, 0xf1, 0x9f, 0x72, 0x1a,
	0xe4, 0xf8, 0xcc, 0x3e, 0x12, 0xb8, 0x8a, 0x71, 0x4f, 0xb6, 0xc6, 0x0d, 0x39, 0x8f, 0xce, 0xff,
	0x7f, 0xb2, 0x58, 0xc2, 0xa4, 0xe7, 0x5a, 0xce, 0x82, 0x3a, 0x8c, 0x8f, 0xeb, 0xdd, 0x43, 0x65,
	0xfd, 0xb1, 0xcf, 0x55, 0x41, 0x8d, 0x1e, 0xae, 0xa9, 0xe3, 0x35, 0xb5, 0x69, 0xad, 0xfe, 0xa9,
	0x11, 0xf9, 0x3c, 0x14, 0xe1, 0xfe, 0x33, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xa0, 0x9a, 0xe8, 0x3c,
	0x02, 0x00, 0x00,
}
