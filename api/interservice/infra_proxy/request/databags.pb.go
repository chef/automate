// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/infra_proxy/request/databags.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataBags struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Data bag name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DataBags) Reset()         { *m = DataBags{} }
func (m *DataBags) String() string { return proto.CompactTextString(m) }
func (*DataBags) ProtoMessage()    {}
func (*DataBags) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a68b987aeeb8e42, []int{0}
}

func (m *DataBags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataBags.Unmarshal(m, b)
}
func (m *DataBags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataBags.Marshal(b, m, deterministic)
}
func (m *DataBags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataBags.Merge(m, src)
}
func (m *DataBags) XXX_Size() int {
	return xxx_messageInfo_DataBags.Size(m)
}
func (m *DataBags) XXX_DiscardUnknown() {
	xxx_messageInfo_DataBags.DiscardUnknown(m)
}

var xxx_messageInfo_DataBags proto.InternalMessageInfo

func (m *DataBags) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DataBags) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *DataBags) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DataBag struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Data bag name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Data bag item name.
	Item                 string   `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty" toml:"item,omitempty" mapstructure:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DataBag) Reset()         { *m = DataBag{} }
func (m *DataBag) String() string { return proto.CompactTextString(m) }
func (*DataBag) ProtoMessage()    {}
func (*DataBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a68b987aeeb8e42, []int{1}
}

func (m *DataBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataBag.Unmarshal(m, b)
}
func (m *DataBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataBag.Marshal(b, m, deterministic)
}
func (m *DataBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataBag.Merge(m, src)
}
func (m *DataBag) XXX_Size() int {
	return xxx_messageInfo_DataBag.Size(m)
}
func (m *DataBag) XXX_DiscardUnknown() {
	xxx_messageInfo_DataBag.DiscardUnknown(m)
}

var xxx_messageInfo_DataBag proto.InternalMessageInfo

func (m *DataBag) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DataBag) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *DataBag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataBag) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

type CreateDataBag struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Data bag name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateDataBag) Reset()         { *m = CreateDataBag{} }
func (m *CreateDataBag) String() string { return proto.CompactTextString(m) }
func (*CreateDataBag) ProtoMessage()    {}
func (*CreateDataBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a68b987aeeb8e42, []int{2}
}

func (m *CreateDataBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDataBag.Unmarshal(m, b)
}
func (m *CreateDataBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDataBag.Marshal(b, m, deterministic)
}
func (m *CreateDataBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDataBag.Merge(m, src)
}
func (m *CreateDataBag) XXX_Size() int {
	return xxx_messageInfo_CreateDataBag.Size(m)
}
func (m *CreateDataBag) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDataBag.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDataBag proto.InternalMessageInfo

func (m *CreateDataBag) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateDataBag) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CreateDataBag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDataBagItem struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Data bag name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Data bag item stringify data.
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty" mapstructure:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateDataBagItem) Reset()         { *m = CreateDataBagItem{} }
func (m *CreateDataBagItem) String() string { return proto.CompactTextString(m) }
func (*CreateDataBagItem) ProtoMessage()    {}
func (*CreateDataBagItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a68b987aeeb8e42, []int{3}
}

func (m *CreateDataBagItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDataBagItem.Unmarshal(m, b)
}
func (m *CreateDataBagItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDataBagItem.Marshal(b, m, deterministic)
}
func (m *CreateDataBagItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDataBagItem.Merge(m, src)
}
func (m *CreateDataBagItem) XXX_Size() int {
	return xxx_messageInfo_CreateDataBagItem.Size(m)
}
func (m *CreateDataBagItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDataBagItem.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDataBagItem proto.InternalMessageInfo

func (m *CreateDataBagItem) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateDataBagItem) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CreateDataBagItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateDataBagItem) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type UpdateDataBagItem struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Data bag name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Data bag item ID.
	ItemId string `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty" toml:"item_id,omitempty" mapstructure:"item_id,omitempty"`
	// Data bag item stringify data.
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty" mapstructure:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateDataBagItem) Reset()         { *m = UpdateDataBagItem{} }
func (m *UpdateDataBagItem) String() string { return proto.CompactTextString(m) }
func (*UpdateDataBagItem) ProtoMessage()    {}
func (*UpdateDataBagItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a68b987aeeb8e42, []int{4}
}

func (m *UpdateDataBagItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDataBagItem.Unmarshal(m, b)
}
func (m *UpdateDataBagItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDataBagItem.Marshal(b, m, deterministic)
}
func (m *UpdateDataBagItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDataBagItem.Merge(m, src)
}
func (m *UpdateDataBagItem) XXX_Size() int {
	return xxx_messageInfo_UpdateDataBagItem.Size(m)
}
func (m *UpdateDataBagItem) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDataBagItem.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDataBagItem proto.InternalMessageInfo

func (m *UpdateDataBagItem) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateDataBagItem) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *UpdateDataBagItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateDataBagItem) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *UpdateDataBagItem) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*DataBags)(nil), "chef.automate.domain.infra_proxy.request.DataBags")
	proto.RegisterType((*DataBag)(nil), "chef.automate.domain.infra_proxy.request.DataBag")
	proto.RegisterType((*CreateDataBag)(nil), "chef.automate.domain.infra_proxy.request.CreateDataBag")
	proto.RegisterType((*CreateDataBagItem)(nil), "chef.automate.domain.infra_proxy.request.CreateDataBagItem")
	proto.RegisterType((*UpdateDataBagItem)(nil), "chef.automate.domain.infra_proxy.request.UpdateDataBagItem")
}

func init() {
	proto.RegisterFile("api/interservice/infra_proxy/request/databags.proto", fileDescriptor_8a68b987aeeb8e42)
}

var fileDescriptor_8a68b987aeeb8e42 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xb1, 0x4e, 0xc3, 0x40,
	0x0c, 0x55, 0xa0, 0x4d, 0xdb, 0x93, 0x18, 0x1a, 0x09, 0x11, 0x89, 0x05, 0x65, 0xea, 0x74, 0x37,
	0x74, 0x46, 0x48, 0x85, 0x25, 0x6b, 0x25, 0x84, 0xc4, 0x52, 0x39, 0x39, 0x37, 0xbd, 0xe1, 0x72,
	0xc1, 0x71, 0x10, 0xfc, 0x01, 0x9f, 0x8d, 0x9c, 0xb4, 0x02, 0x36, 0x86, 0x74, 0x7b, 0x79, 0xb6,
	0xdf, 0xb3, 0x73, 0x4f, 0xad, 0xa1, 0x71, 0xc6, 0xd5, 0x8c, 0xd4, 0x22, 0xbd, 0xbb, 0x12, 0x8d,
	0xab, 0xf7, 0x04, 0xbb, 0x86, 0xc2, 0xc7, 0xa7, 0x21, 0x7c, 0xeb, 0xb0, 0x65, 0x63, 0x81, 0xa1,
	0x80, 0xaa, 0xd5, 0x0d, 0x05, 0x0e, 0xc9, 0xaa, 0x3c, 0xe0, 0x5e, 0x43, 0xc7, 0xc1, 0x03, 0xa3,
	0xb6, 0xc1, 0x83, 0xab, 0xf5, 0xaf, 0x41, 0x7d, 0x1c, 0xcc, 0xb6, 0x6a, 0xfe, 0x04, 0x0c, 0x1b,
	0xa8, 0xda, 0xe4, 0x5a, 0xc5, 0x81, 0xaa, 0x9d, 0xb3, 0x69, 0x74, 0x17, 0xad, 0x16, 0xdb, 0x69,
	0xa0, 0x2a, 0xb7, 0xc9, 0xad, 0x5a, 0x88, 0x35, 0x92, 0x54, 0x2e, 0xfa, 0xca, 0x7c, 0x20, 0x72,
	0x9b, 0x24, 0x6a, 0x52, 0x83, 0xc7, 0xf4, 0xb2, 0xe7, 0x7b, 0x9c, 0xa1, 0x9a, 0x1d, 0x35, 0xc7,
	0x92, 0x14, 0xce, 0x31, 0xfa, 0x74, 0x32, 0x70, 0x82, 0xb3, 0x17, 0x75, 0xf5, 0x48, 0x08, 0x8c,
	0x23, 0x9b, 0x65, 0x41, 0x2d, 0xff, 0x08, 0xe7, 0x8c, 0x7e, 0xcc, 0x4b, 0xe4, 0xb1, 0x4e, 0x97,
	0x08, 0xce, 0xbe, 0x22, 0xb5, 0x7c, 0x6e, 0xec, 0x99, 0x1c, 0x6f, 0xd4, 0x4c, 0xfe, 0x97, 0xb4,
	0x0f, 0xa6, 0xb1, 0x7c, 0x0e, 0xcd, 0xfd, 0x2a, 0xd3, 0x9f, 0x55, 0x36, 0x0f, 0xaf, 0xf7, 0x95,
	0xe3, 0x43, 0x57, 0xe8, 0x32, 0x78, 0x23, 0x31, 0x32, 0xa7, 0x18, 0x99, 0xff, 0x24, 0xb1, 0x88,
	0xfb, 0x04, 0xae, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xad, 0x99, 0x53, 0x5a, 0xb8, 0x02, 0x00,
	0x00,
}
