// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/infra_proxy/request/environments.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Environments struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId             string   `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Environments) Reset()         { *m = Environments{} }
func (m *Environments) String() string { return proto.CompactTextString(m) }
func (*Environments) ProtoMessage()    {}
func (*Environments) Descriptor() ([]byte, []int) {
	return fileDescriptor_e190c707558fe428, []int{0}
}

func (m *Environments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environments.Unmarshal(m, b)
}
func (m *Environments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environments.Marshal(b, m, deterministic)
}
func (m *Environments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environments.Merge(m, src)
}
func (m *Environments) XXX_Size() int {
	return xxx_messageInfo_Environments.Size(m)
}
func (m *Environments) XXX_DiscardUnknown() {
	xxx_messageInfo_Environments.DiscardUnknown(m)
}

var xxx_messageInfo_Environments proto.InternalMessageInfo

func (m *Environments) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Environments) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type Environment struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Environment name.
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e190c707558fe428, []int{1}
}

func (m *Environment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environment.Unmarshal(m, b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
}
func (m *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(m, src)
}
func (m *Environment) XXX_Size() int {
	return xxx_messageInfo_Environment.Size(m)
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Environment) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *Environment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateEnvironment struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Environment name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Environment description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty" mapstructure:"description,omitempty"`
	// Class name.
	JsonClass string `protobuf:"bytes,5,opt,name=json_class,json=jsonClass,proto3" json:"json_class,omitempty" toml:"json_class,omitempty" mapstructure:"json_class,omitempty"`
	// Environment versioned cookbooks constraints.
	CookbookVersions map[string]string `protobuf:"bytes,6,rep,name=cookbook_versions,json=cookbookVersions,proto3" json:"cookbook_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:"cookbook_versions,omitempty" mapstructure:"cookbook_versions,omitempty"`
	// Stringified json of the default attributes.
	DefaultAttributes string `protobuf:"bytes,7,opt,name=default_attributes,json=defaultAttributes,proto3" json:"default_attributes,omitempty" toml:"default_attributes,omitempty" mapstructure:"default_attributes,omitempty"`
	// Stringified json of the override attributes.
	OverrideAttributes   string   `protobuf:"bytes,8,opt,name=override_attributes,json=overrideAttributes,proto3" json:"override_attributes,omitempty" toml:"override_attributes,omitempty" mapstructure:"override_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateEnvironment) Reset()         { *m = CreateEnvironment{} }
func (m *CreateEnvironment) String() string { return proto.CompactTextString(m) }
func (*CreateEnvironment) ProtoMessage()    {}
func (*CreateEnvironment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e190c707558fe428, []int{2}
}

func (m *CreateEnvironment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEnvironment.Unmarshal(m, b)
}
func (m *CreateEnvironment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEnvironment.Marshal(b, m, deterministic)
}
func (m *CreateEnvironment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEnvironment.Merge(m, src)
}
func (m *CreateEnvironment) XXX_Size() int {
	return xxx_messageInfo_CreateEnvironment.Size(m)
}
func (m *CreateEnvironment) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEnvironment.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEnvironment proto.InternalMessageInfo

func (m *CreateEnvironment) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateEnvironment) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CreateEnvironment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateEnvironment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateEnvironment) GetJsonClass() string {
	if m != nil {
		return m.JsonClass
	}
	return ""
}

func (m *CreateEnvironment) GetCookbookVersions() map[string]string {
	if m != nil {
		return m.CookbookVersions
	}
	return nil
}

func (m *CreateEnvironment) GetDefaultAttributes() string {
	if m != nil {
		return m.DefaultAttributes
	}
	return ""
}

func (m *CreateEnvironment) GetOverrideAttributes() string {
	if m != nil {
		return m.OverrideAttributes
	}
	return ""
}

type UpdateEnvironment struct {
	// Chef organization ID.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty" toml:"org_id,omitempty" mapstructure:"org_id,omitempty"`
	// Chef Infra Server ID.
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty" toml:"server_id,omitempty" mapstructure:"server_id,omitempty"`
	// Environment name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Environment description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty" mapstructure:"description,omitempty"`
	// Class name.
	JsonClass string `protobuf:"bytes,5,opt,name=json_class,json=jsonClass,proto3" json:"json_class,omitempty" toml:"json_class,omitempty" mapstructure:"json_class,omitempty"`
	// Environment versioned cookbooks constraints.
	CookbookVersions map[string]string `protobuf:"bytes,6,rep,name=cookbook_versions,json=cookbookVersions,proto3" json:"cookbook_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:"cookbook_versions,omitempty" mapstructure:"cookbook_versions,omitempty"`
	// Stringified json of the default attributes.
	DefaultAttributes string `protobuf:"bytes,7,opt,name=default_attributes,json=defaultAttributes,proto3" json:"default_attributes,omitempty" toml:"default_attributes,omitempty" mapstructure:"default_attributes,omitempty"`
	// Stringified json of the override attributes.
	OverrideAttributes   string   `protobuf:"bytes,8,opt,name=override_attributes,json=overrideAttributes,proto3" json:"override_attributes,omitempty" toml:"override_attributes,omitempty" mapstructure:"override_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateEnvironment) Reset()         { *m = UpdateEnvironment{} }
func (m *UpdateEnvironment) String() string { return proto.CompactTextString(m) }
func (*UpdateEnvironment) ProtoMessage()    {}
func (*UpdateEnvironment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e190c707558fe428, []int{3}
}

func (m *UpdateEnvironment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEnvironment.Unmarshal(m, b)
}
func (m *UpdateEnvironment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEnvironment.Marshal(b, m, deterministic)
}
func (m *UpdateEnvironment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEnvironment.Merge(m, src)
}
func (m *UpdateEnvironment) XXX_Size() int {
	return xxx_messageInfo_UpdateEnvironment.Size(m)
}
func (m *UpdateEnvironment) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEnvironment.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEnvironment proto.InternalMessageInfo

func (m *UpdateEnvironment) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateEnvironment) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *UpdateEnvironment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateEnvironment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateEnvironment) GetJsonClass() string {
	if m != nil {
		return m.JsonClass
	}
	return ""
}

func (m *UpdateEnvironment) GetCookbookVersions() map[string]string {
	if m != nil {
		return m.CookbookVersions
	}
	return nil
}

func (m *UpdateEnvironment) GetDefaultAttributes() string {
	if m != nil {
		return m.DefaultAttributes
	}
	return ""
}

func (m *UpdateEnvironment) GetOverrideAttributes() string {
	if m != nil {
		return m.OverrideAttributes
	}
	return ""
}

func init() {
	proto.RegisterType((*Environments)(nil), "chef.automate.domain.infra_proxy.request.Environments")
	proto.RegisterType((*Environment)(nil), "chef.automate.domain.infra_proxy.request.Environment")
	proto.RegisterType((*CreateEnvironment)(nil), "chef.automate.domain.infra_proxy.request.CreateEnvironment")
	proto.RegisterMapType((map[string]string)(nil), "chef.automate.domain.infra_proxy.request.CreateEnvironment.CookbookVersionsEntry")
	proto.RegisterType((*UpdateEnvironment)(nil), "chef.automate.domain.infra_proxy.request.UpdateEnvironment")
	proto.RegisterMapType((map[string]string)(nil), "chef.automate.domain.infra_proxy.request.UpdateEnvironment.CookbookVersionsEntry")
}

func init() {
	proto.RegisterFile("api/interservice/infra_proxy/request/environments.proto", fileDescriptor_e190c707558fe428)
}

var fileDescriptor_e190c707558fe428 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x54, 0xc1, 0x6a, 0x14, 0x41,
	0x10, 0x65, 0x33, 0xd9, 0x35, 0x5b, 0xeb, 0x21, 0xdb, 0x1a, 0x18, 0x14, 0x61, 0xd9, 0xd3, 0x5e,
	0xec, 0x06, 0x3d, 0x28, 0x82, 0x88, 0x19, 0x72, 0xc8, 0xd1, 0x40, 0x3c, 0x78, 0x19, 0x7a, 0xa6,
	0x6b, 0x37, 0xed, 0xee, 0x74, 0x8d, 0xd5, 0x3d, 0x83, 0x7b, 0xf1, 0xdf, 0xfc, 0x33, 0x99, 0xce,
	0x44, 0x07, 0xe3, 0x21, 0x08, 0xb9, 0xe4, 0xd6, 0xfd, 0x5e, 0xbd, 0x47, 0xd5, 0x2b, 0x28, 0x78,
	0xa3, 0x6b, 0xab, 0xac, 0x0b, 0xc8, 0x1e, 0xb9, 0xb5, 0x25, 0x2a, 0xeb, 0xd6, 0xac, 0xf3, 0x9a,
	0xe9, 0xfb, 0x5e, 0x31, 0x7e, 0x6b, 0xd0, 0x07, 0x85, 0xae, 0xb5, 0x4c, 0xae, 0x42, 0x17, 0xbc,
	0xac, 0x99, 0x02, 0x89, 0x55, 0x79, 0x85, 0x6b, 0xa9, 0x9b, 0x40, 0x95, 0x0e, 0x28, 0x0d, 0x55,
	0xda, 0x3a, 0x39, 0x10, 0xcb, 0x5e, 0xbc, 0x3c, 0x85, 0xc7, 0x67, 0x03, 0xbd, 0x38, 0x81, 0x09,
	0xf1, 0x26, 0xb7, 0x26, 0x1d, 0x2d, 0x46, 0xab, 0xe9, 0xc5, 0x98, 0x78, 0x73, 0x6e, 0xc4, 0x73,
	0x98, 0x76, 0x2d, 0x20, 0x77, 0xcc, 0x41, 0x64, 0x8e, 0xae, 0x81, 0x73, 0xb3, 0xbc, 0x84, 0xd9,
	0xc0, 0xe3, 0x7f, 0x2c, 0x84, 0x80, 0x43, 0xa7, 0x2b, 0x4c, 0x93, 0x88, 0xc7, 0xf7, 0xf2, 0x67,
	0x02, 0xf3, 0x8c, 0x51, 0x07, 0xbc, 0x07, 0x77, 0xb1, 0x80, 0x99, 0x41, 0x5f, 0xb2, 0xad, 0x83,
	0x25, 0x97, 0x1e, 0x46, 0x6a, 0x08, 0x89, 0x17, 0x00, 0x5f, 0x3d, 0xb9, 0xbc, 0xdc, 0x69, 0xef,
	0xd3, 0x71, 0x2c, 0x98, 0x76, 0x48, 0xd6, 0x01, 0xe2, 0x07, 0xcc, 0x4b, 0xa2, 0x6d, 0x41, 0xb4,
	0xcd, 0x5b, 0x64, 0x6f, 0xc9, 0xf9, 0x74, 0xb2, 0x48, 0x56, 0xb3, 0x57, 0x9f, 0xe4, 0x5d, 0xf3,
	0x97, 0xb7, 0x06, 0x94, 0x59, 0x6f, 0xfa, 0xb9, 0xf7, 0x3c, 0x73, 0x81, 0xf7, 0x17, 0xc7, 0xe5,
	0x5f, 0xb0, 0x78, 0x09, 0xc2, 0xe0, 0x5a, 0x37, 0xbb, 0x90, 0xeb, 0x10, 0xd8, 0x16, 0x4d, 0x40,
	0x9f, 0x3e, 0x8a, 0x6d, 0xce, 0x7b, 0xe6, 0xe3, 0x6f, 0x42, 0x28, 0x78, 0x42, 0x2d, 0x32, 0x5b,
	0x83, 0xc3, 0xfa, 0xa3, 0x58, 0x2f, 0x6e, 0xa8, 0x3f, 0x82, 0x67, 0x19, 0x9c, 0xfc, 0xb3, 0x15,
	0x71, 0x0c, 0xc9, 0x16, 0xf7, 0x7d, 0xfc, 0xdd, 0x53, 0x3c, 0x85, 0x71, 0xab, 0x77, 0x0d, 0xf6,
	0xc1, 0x5f, 0x7f, 0xde, 0x1d, 0xbc, 0x1d, 0xc5, 0x1d, 0x5e, 0xd6, 0xe6, 0x61, 0xef, 0xf0, 0xd6,
	0x80, 0x0f, 0x6a, 0x87, 0xa7, 0x1f, 0xbe, 0xbc, 0xdf, 0xd8, 0x70, 0xd5, 0x14, 0xb2, 0xa4, 0x4a,
	0x75, 0xa9, 0xa8, 0x9b, 0x54, 0xd4, 0x5d, 0x0e, 0x54, 0x31, 0x89, 0x47, 0xe9, 0xf5, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd0, 0xfe, 0x4e, 0xee, 0xcf, 0x04, 0x00, 0x00,
}
