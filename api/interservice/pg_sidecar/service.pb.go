// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: interservice/pg_sidecar/service.proto

package pg_sidecar

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ErrorDetails_Codes int32

const (
	ErrorDetails_SRC_DB_MISSING ErrorDetails_Codes = 0
)

// Enum value maps for ErrorDetails_Codes.
var (
	ErrorDetails_Codes_name = map[int32]string{
		0: "SRC_DB_MISSING",
	}
	ErrorDetails_Codes_value = map[string]int32{
		"SRC_DB_MISSING": 0,
	}
)

func (x ErrorDetails_Codes) Enum() *ErrorDetails_Codes {
	p := new(ErrorDetails_Codes)
	*p = x
	return p
}

func (x ErrorDetails_Codes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorDetails_Codes) Descriptor() protoreflect.EnumDescriptor {
	return file_interservice_pg_sidecar_service_proto_enumTypes[0].Descriptor()
}

func (ErrorDetails_Codes) Type() protoreflect.EnumType {
	return &file_interservice_pg_sidecar_service_proto_enumTypes[0]
}

func (x ErrorDetails_Codes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorDetails_Codes.Descriptor instead.
func (ErrorDetails_Codes) EnumDescriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{0, 0}
}

type ErrorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrorDetails_Codes `protobuf:"varint,20,opt,name=code,proto3,enum=chef.automate.infra.pg_sidecar.ErrorDetails_Codes" json:"code,omitempty" toml:"code,omitempty" mapstructure:"code,omitempty"`
}

func (x *ErrorDetails) Reset() {
	*x = ErrorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetails) ProtoMessage() {}

func (x *ErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetails.ProtoReflect.Descriptor instead.
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorDetails) GetCode() ErrorDetails_Codes {
	if x != nil {
		return x.Code
	}
	return ErrorDetails_SRC_DB_MISSING
}

type MigrateTablesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDb             string   `protobuf:"bytes,20,opt,name=from_db,json=fromDb,proto3" json:"from_db,omitempty" toml:"from_db,omitempty" mapstructure:"from_db,omitempty"`
	ToDb               string   `protobuf:"bytes,21,opt,name=to_db,json=toDb,proto3" json:"to_db,omitempty" toml:"to_db,omitempty" mapstructure:"to_db,omitempty"`
	Table              []string `protobuf:"bytes,22,rep,name=table,proto3" json:"table,omitempty" toml:"table,omitempty" mapstructure:"table,omitempty"`
	ImportUser         string   `protobuf:"bytes,23,opt,name=import_user,json=importUser,proto3" json:"import_user,omitempty" toml:"import_user,omitempty" mapstructure:"import_user,omitempty"`
	FailIfSrcDbMissing bool     `protobuf:"varint,24,opt,name=fail_if_src_db_missing,json=failIfSrcDbMissing,proto3" json:"fail_if_src_db_missing,omitempty" toml:"fail_if_src_db_missing,omitempty" mapstructure:"fail_if_src_db_missing,omitempty"`
	SkipDbCreate       bool     `protobuf:"varint,25,opt,name=skip_db_create,json=skipDbCreate,proto3" json:"skip_db_create,omitempty" toml:"skip_db_create,omitempty" mapstructure:"skip_db_create,omitempty"`
}

func (x *MigrateTablesReq) Reset() {
	*x = MigrateTablesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateTablesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateTablesReq) ProtoMessage() {}

func (x *MigrateTablesReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateTablesReq.ProtoReflect.Descriptor instead.
func (*MigrateTablesReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{1}
}

func (x *MigrateTablesReq) GetFromDb() string {
	if x != nil {
		return x.FromDb
	}
	return ""
}

func (x *MigrateTablesReq) GetToDb() string {
	if x != nil {
		return x.ToDb
	}
	return ""
}

func (x *MigrateTablesReq) GetTable() []string {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *MigrateTablesReq) GetImportUser() string {
	if x != nil {
		return x.ImportUser
	}
	return ""
}

func (x *MigrateTablesReq) GetFailIfSrcDbMissing() bool {
	if x != nil {
		return x.FailIfSrcDbMissing
	}
	return false
}

func (x *MigrateTablesReq) GetSkipDbCreate() bool {
	if x != nil {
		return x.SkipDbCreate
	}
	return false
}

type MigrateTablesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MigrateTablesRes) Reset() {
	*x = MigrateTablesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateTablesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateTablesRes) ProtoMessage() {}

func (x *MigrateTablesRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateTablesRes.ProtoReflect.Descriptor instead.
func (*MigrateTablesRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{2}
}

type RenameDBReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDb string `protobuf:"bytes,20,opt,name=from_db,json=fromDb,proto3" json:"from_db,omitempty" toml:"from_db,omitempty" mapstructure:"from_db,omitempty"`
	ToDb   string `protobuf:"bytes,21,opt,name=to_db,json=toDb,proto3" json:"to_db,omitempty" toml:"to_db,omitempty" mapstructure:"to_db,omitempty"`
}

func (x *RenameDBReq) Reset() {
	*x = RenameDBReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameDBReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameDBReq) ProtoMessage() {}

func (x *RenameDBReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameDBReq.ProtoReflect.Descriptor instead.
func (*RenameDBReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{3}
}

func (x *RenameDBReq) GetFromDb() string {
	if x != nil {
		return x.FromDb
	}
	return ""
}

func (x *RenameDBReq) GetToDb() string {
	if x != nil {
		return x.ToDb
	}
	return ""
}

type RenameDBRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenameDBRes) Reset() {
	*x = RenameDBRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameDBRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameDBRes) ProtoMessage() {}

func (x *RenameDBRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameDBRes.ProtoReflect.Descriptor instead.
func (*RenameDBRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{4}
}

type CreateDBReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db   string `protobuf:"bytes,20,opt,name=db,proto3" json:"db,omitempty" toml:"db,omitempty" mapstructure:"db,omitempty"`
	User string `protobuf:"bytes,21,opt,name=user,proto3" json:"user,omitempty" toml:"user,omitempty" mapstructure:"user,omitempty"`
}

func (x *CreateDBReq) Reset() {
	*x = CreateDBReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBReq) ProtoMessage() {}

func (x *CreateDBReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBReq.ProtoReflect.Descriptor instead.
func (*CreateDBReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDBReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *CreateDBReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CreateDBRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDBRes) Reset() {
	*x = CreateDBRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBRes) ProtoMessage() {}

func (x *CreateDBRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBRes.ProtoReflect.Descriptor instead.
func (*CreateDBRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{6}
}

type CreateExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db  string `protobuf:"bytes,20,opt,name=db,proto3" json:"db,omitempty" toml:"db,omitempty" mapstructure:"db,omitempty"`
	Ext string `protobuf:"bytes,21,opt,name=ext,proto3" json:"ext,omitempty" toml:"ext,omitempty" mapstructure:"ext,omitempty"`
}

func (x *CreateExtensionReq) Reset() {
	*x = CreateExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtensionReq) ProtoMessage() {}

func (x *CreateExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtensionReq.ProtoReflect.Descriptor instead.
func (*CreateExtensionReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateExtensionReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *CreateExtensionReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type CreateExtensionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateExtensionRes) Reset() {
	*x = CreateExtensionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExtensionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtensionRes) ProtoMessage() {}

func (x *CreateExtensionRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtensionRes.ProtoReflect.Descriptor instead.
func (*CreateExtensionRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{8}
}

type DeploySqitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db   string `protobuf:"bytes,20,opt,name=db,proto3" json:"db,omitempty" toml:"db,omitempty" mapstructure:"db,omitempty"`
	Dir  string `protobuf:"bytes,21,opt,name=dir,proto3" json:"dir,omitempty" toml:"dir,omitempty" mapstructure:"dir,omitempty"`
	User string `protobuf:"bytes,22,opt,name=user,proto3" json:"user,omitempty" toml:"user,omitempty" mapstructure:"user,omitempty"`
}

func (x *DeploySqitchReq) Reset() {
	*x = DeploySqitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploySqitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploySqitchReq) ProtoMessage() {}

func (x *DeploySqitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploySqitchReq.ProtoReflect.Descriptor instead.
func (*DeploySqitchReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeploySqitchReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *DeploySqitchReq) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *DeploySqitchReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type DeploySqitchRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeploySqitchRes) Reset() {
	*x = DeploySqitchRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploySqitchRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploySqitchRes) ProtoMessage() {}

func (x *DeploySqitchRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploySqitchRes.ProtoReflect.Descriptor instead.
func (*DeploySqitchRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{10}
}

type SetPublicSchemaRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role string `protobuf:"bytes,20,opt,name=role,proto3" json:"role,omitempty" toml:"role,omitempty" mapstructure:"role,omitempty"`
	Db   string `protobuf:"bytes,21,opt,name=db,proto3" json:"db,omitempty" toml:"db,omitempty" mapstructure:"db,omitempty"`
}

func (x *SetPublicSchemaRoleReq) Reset() {
	*x = SetPublicSchemaRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPublicSchemaRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPublicSchemaRoleReq) ProtoMessage() {}

func (x *SetPublicSchemaRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPublicSchemaRoleReq.ProtoReflect.Descriptor instead.
func (*SetPublicSchemaRoleReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{11}
}

func (x *SetPublicSchemaRoleReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SetPublicSchemaRoleReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

type SetPublicSchemaRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPublicSchemaRoleRes) Reset() {
	*x = SetPublicSchemaRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPublicSchemaRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPublicSchemaRoleRes) ProtoMessage() {}

func (x *SetPublicSchemaRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPublicSchemaRoleRes.ProtoReflect.Descriptor instead.
func (*SetPublicSchemaRoleRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{12}
}

type AlterRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role string                `protobuf:"bytes,20,opt,name=role,proto3" json:"role,omitempty" toml:"role,omitempty" mapstructure:"role,omitempty"`
	With *AlterRoleReq_Options `protobuf:"bytes,21,opt,name=with,proto3" json:"with,omitempty" toml:"with,omitempty" mapstructure:"with,omitempty"`
}

func (x *AlterRoleReq) Reset() {
	*x = AlterRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleReq) ProtoMessage() {}

func (x *AlterRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleReq.ProtoReflect.Descriptor instead.
func (*AlterRoleReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{13}
}

func (x *AlterRoleReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AlterRoleReq) GetWith() *AlterRoleReq_Options {
	if x != nil {
		return x.With
	}
	return nil
}

type AlterRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AlterRoleRes) Reset() {
	*x = AlterRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleRes) ProtoMessage() {}

func (x *AlterRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleRes.ProtoReflect.Descriptor instead.
func (*AlterRoleRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{14}
}

type DropTablesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db      string   `protobuf:"bytes,20,opt,name=db,proto3" json:"db,omitempty" toml:"db,omitempty" mapstructure:"db,omitempty"`
	Tables  []string `protobuf:"bytes,21,rep,name=tables,proto3" json:"tables,omitempty" toml:"tables,omitempty" mapstructure:"tables,omitempty"`
	Cascade bool     `protobuf:"varint,22,opt,name=cascade,proto3" json:"cascade,omitempty" toml:"cascade,omitempty" mapstructure:"cascade,omitempty"`
}

func (x *DropTablesReq) Reset() {
	*x = DropTablesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTablesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTablesReq) ProtoMessage() {}

func (x *DropTablesReq) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTablesReq.ProtoReflect.Descriptor instead.
func (*DropTablesReq) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{15}
}

func (x *DropTablesReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *DropTablesReq) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *DropTablesReq) GetCascade() bool {
	if x != nil {
		return x.Cascade
	}
	return false
}

type DropTablesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropTablesRes) Reset() {
	*x = DropTablesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTablesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTablesRes) ProtoMessage() {}

func (x *DropTablesRes) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTablesRes.ProtoReflect.Descriptor instead.
func (*DropTablesRes) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{16}
}

type AlterRoleReq_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Superuser       bool                   `protobuf:"varint,20,opt,name=superuser,proto3" json:"superuser,omitempty" toml:"superuser,omitempty" mapstructure:"superuser,omitempty"`
	Nosuperuser     bool                   `protobuf:"varint,21,opt,name=nosuperuser,proto3" json:"nosuperuser,omitempty" toml:"nosuperuser,omitempty" mapstructure:"nosuperuser,omitempty"`
	Createdb        bool                   `protobuf:"varint,22,opt,name=createdb,proto3" json:"createdb,omitempty" toml:"createdb,omitempty" mapstructure:"createdb,omitempty"`
	Nocreatedb      bool                   `protobuf:"varint,23,opt,name=nocreatedb,proto3" json:"nocreatedb,omitempty" toml:"nocreatedb,omitempty" mapstructure:"nocreatedb,omitempty"`
	Createrole      bool                   `protobuf:"varint,24,opt,name=createrole,proto3" json:"createrole,omitempty" toml:"createrole,omitempty" mapstructure:"createrole,omitempty"`
	Nocreaterole    bool                   `protobuf:"varint,25,opt,name=nocreaterole,proto3" json:"nocreaterole,omitempty" toml:"nocreaterole,omitempty" mapstructure:"nocreaterole,omitempty"`
	Createuser      bool                   `protobuf:"varint,26,opt,name=createuser,proto3" json:"createuser,omitempty" toml:"createuser,omitempty" mapstructure:"createuser,omitempty"`
	Nocreateuser    bool                   `protobuf:"varint,27,opt,name=nocreateuser,proto3" json:"nocreateuser,omitempty" toml:"nocreateuser,omitempty" mapstructure:"nocreateuser,omitempty"`
	Inherit         bool                   `protobuf:"varint,28,opt,name=inherit,proto3" json:"inherit,omitempty" toml:"inherit,omitempty" mapstructure:"inherit,omitempty"`
	Noinherit       bool                   `protobuf:"varint,29,opt,name=noinherit,proto3" json:"noinherit,omitempty" toml:"noinherit,omitempty" mapstructure:"noinherit,omitempty"`
	Replication     bool                   `protobuf:"varint,30,opt,name=replication,proto3" json:"replication,omitempty" toml:"replication,omitempty" mapstructure:"replication,omitempty"`
	Noreplication   bool                   `protobuf:"varint,31,opt,name=noreplication,proto3" json:"noreplication,omitempty" toml:"noreplication,omitempty" mapstructure:"noreplication,omitempty"`
	ConnectionLimit int64                  `protobuf:"varint,32,opt,name=connection_limit,json=connectionLimit,proto3" json:"connection_limit,omitempty" toml:"connection_limit,omitempty" mapstructure:"connection_limit,omitempty"`
	Password        *AlterRoleReq_Password `protobuf:"bytes,33,opt,name=password,proto3" json:"password,omitempty" toml:"password,omitempty" mapstructure:"password,omitempty"` // TODO: Add VALID UNTIL with a timestamp
}

func (x *AlterRoleReq_Options) Reset() {
	*x = AlterRoleReq_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterRoleReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleReq_Options) ProtoMessage() {}

func (x *AlterRoleReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleReq_Options.ProtoReflect.Descriptor instead.
func (*AlterRoleReq_Options) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AlterRoleReq_Options) GetSuperuser() bool {
	if x != nil {
		return x.Superuser
	}
	return false
}

func (x *AlterRoleReq_Options) GetNosuperuser() bool {
	if x != nil {
		return x.Nosuperuser
	}
	return false
}

func (x *AlterRoleReq_Options) GetCreatedb() bool {
	if x != nil {
		return x.Createdb
	}
	return false
}

func (x *AlterRoleReq_Options) GetNocreatedb() bool {
	if x != nil {
		return x.Nocreatedb
	}
	return false
}

func (x *AlterRoleReq_Options) GetCreaterole() bool {
	if x != nil {
		return x.Createrole
	}
	return false
}

func (x *AlterRoleReq_Options) GetNocreaterole() bool {
	if x != nil {
		return x.Nocreaterole
	}
	return false
}

func (x *AlterRoleReq_Options) GetCreateuser() bool {
	if x != nil {
		return x.Createuser
	}
	return false
}

func (x *AlterRoleReq_Options) GetNocreateuser() bool {
	if x != nil {
		return x.Nocreateuser
	}
	return false
}

func (x *AlterRoleReq_Options) GetInherit() bool {
	if x != nil {
		return x.Inherit
	}
	return false
}

func (x *AlterRoleReq_Options) GetNoinherit() bool {
	if x != nil {
		return x.Noinherit
	}
	return false
}

func (x *AlterRoleReq_Options) GetReplication() bool {
	if x != nil {
		return x.Replication
	}
	return false
}

func (x *AlterRoleReq_Options) GetNoreplication() bool {
	if x != nil {
		return x.Noreplication
	}
	return false
}

func (x *AlterRoleReq_Options) GetConnectionLimit() int64 {
	if x != nil {
		return x.ConnectionLimit
	}
	return 0
}

func (x *AlterRoleReq_Options) GetPassword() *AlterRoleReq_Password {
	if x != nil {
		return x.Password
	}
	return nil
}

type AlterRoleReq_Password struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string `protobuf:"bytes,20,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty" mapstructure:"value,omitempty"`
	Unencrypted bool   `protobuf:"varint,21,opt,name=unencrypted,proto3" json:"unencrypted,omitempty" toml:"unencrypted,omitempty" mapstructure:"unencrypted,omitempty"` // default to encrypted
}

func (x *AlterRoleReq_Password) Reset() {
	*x = AlterRoleReq_Password{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interservice_pg_sidecar_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterRoleReq_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleReq_Password) ProtoMessage() {}

func (x *AlterRoleReq_Password) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_pg_sidecar_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleReq_Password.ProtoReflect.Descriptor instead.
func (*AlterRoleReq_Password) Descriptor() ([]byte, []int) {
	return file_interservice_pg_sidecar_service_proto_rawDescGZIP(), []int{13, 1}
}

func (x *AlterRoleReq_Password) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AlterRoleReq_Password) GetUnencrypted() bool {
	if x != nil {
		return x.Unencrypted
	}
	return false
}

var File_interservice_pg_sidecar_service_proto protoreflect.FileDescriptor

var file_interservice_pg_sidecar_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x22, 0x73, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x1b, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x52, 0x43, 0x5f,
	0x44, 0x42, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x22, 0xd1, 0x01, 0x0a,
	0x10, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x62, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f,
	0x5f, 0x64, 0x62, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x44, 0x62, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x16, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69,
	0x66, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x64, 0x62, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x61, 0x69, 0x6c, 0x49, 0x66, 0x53, 0x72,
	0x63, 0x44, 0x62, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x64, 0x62, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x44, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x22, 0x12, 0x0a, 0x10, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x42,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x62, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x62, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x6f, 0x5f, 0x64, 0x62, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x44,
	0x62, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x42, 0x52, 0x65, 0x73,
	0x22, 0x31, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x52,
	0x65, 0x73, 0x22, 0x36, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x22, 0x47, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x71, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x64, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x53, 0x71, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x16,
	0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x22, 0xbe, 0x05, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x77, 0x69, 0x74,
	0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x77,
	0x69, 0x74, 0x68, 0x1a, 0x8b, 0x04, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x6f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x62, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x6e, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x75, 0x73, 0x65, 0x72, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x6f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6e, 0x6f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x51,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0x42, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x32, 0xad, 0x07, 0x0a, 0x10, 0x50, 0x47,
	0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75,
	0x0a, 0x0d, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x08, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44,
	0x42, 0x12, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x42, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x12, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70,
	0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x72, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x71, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x71, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x71, 0x69, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x36,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x09, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0a, 0x44,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70,
	0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x66, 0x2f, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_interservice_pg_sidecar_service_proto_rawDescOnce sync.Once
	file_interservice_pg_sidecar_service_proto_rawDescData = file_interservice_pg_sidecar_service_proto_rawDesc
)

func file_interservice_pg_sidecar_service_proto_rawDescGZIP() []byte {
	file_interservice_pg_sidecar_service_proto_rawDescOnce.Do(func() {
		file_interservice_pg_sidecar_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_interservice_pg_sidecar_service_proto_rawDescData)
	})
	return file_interservice_pg_sidecar_service_proto_rawDescData
}

var file_interservice_pg_sidecar_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_interservice_pg_sidecar_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_interservice_pg_sidecar_service_proto_goTypes = []interface{}{
	(ErrorDetails_Codes)(0),        // 0: chef.automate.infra.pg_sidecar.ErrorDetails.Codes
	(*ErrorDetails)(nil),           // 1: chef.automate.infra.pg_sidecar.ErrorDetails
	(*MigrateTablesReq)(nil),       // 2: chef.automate.infra.pg_sidecar.MigrateTablesReq
	(*MigrateTablesRes)(nil),       // 3: chef.automate.infra.pg_sidecar.MigrateTablesRes
	(*RenameDBReq)(nil),            // 4: chef.automate.infra.pg_sidecar.RenameDBReq
	(*RenameDBRes)(nil),            // 5: chef.automate.infra.pg_sidecar.RenameDBRes
	(*CreateDBReq)(nil),            // 6: chef.automate.infra.pg_sidecar.CreateDBReq
	(*CreateDBRes)(nil),            // 7: chef.automate.infra.pg_sidecar.CreateDBRes
	(*CreateExtensionReq)(nil),     // 8: chef.automate.infra.pg_sidecar.CreateExtensionReq
	(*CreateExtensionRes)(nil),     // 9: chef.automate.infra.pg_sidecar.CreateExtensionRes
	(*DeploySqitchReq)(nil),        // 10: chef.automate.infra.pg_sidecar.DeploySqitchReq
	(*DeploySqitchRes)(nil),        // 11: chef.automate.infra.pg_sidecar.DeploySqitchRes
	(*SetPublicSchemaRoleReq)(nil), // 12: chef.automate.infra.pg_sidecar.SetPublicSchemaRoleReq
	(*SetPublicSchemaRoleRes)(nil), // 13: chef.automate.infra.pg_sidecar.SetPublicSchemaRoleRes
	(*AlterRoleReq)(nil),           // 14: chef.automate.infra.pg_sidecar.AlterRoleReq
	(*AlterRoleRes)(nil),           // 15: chef.automate.infra.pg_sidecar.AlterRoleRes
	(*DropTablesReq)(nil),          // 16: chef.automate.infra.pg_sidecar.DropTablesReq
	(*DropTablesRes)(nil),          // 17: chef.automate.infra.pg_sidecar.DropTablesRes
	(*AlterRoleReq_Options)(nil),   // 18: chef.automate.infra.pg_sidecar.AlterRoleReq.Options
	(*AlterRoleReq_Password)(nil),  // 19: chef.automate.infra.pg_sidecar.AlterRoleReq.Password
}
var file_interservice_pg_sidecar_service_proto_depIdxs = []int32{
	0,  // 0: chef.automate.infra.pg_sidecar.ErrorDetails.code:type_name -> chef.automate.infra.pg_sidecar.ErrorDetails.Codes
	18, // 1: chef.automate.infra.pg_sidecar.AlterRoleReq.with:type_name -> chef.automate.infra.pg_sidecar.AlterRoleReq.Options
	19, // 2: chef.automate.infra.pg_sidecar.AlterRoleReq.Options.password:type_name -> chef.automate.infra.pg_sidecar.AlterRoleReq.Password
	2,  // 3: chef.automate.infra.pg_sidecar.PGSidecarService.MigrateTables:input_type -> chef.automate.infra.pg_sidecar.MigrateTablesReq
	4,  // 4: chef.automate.infra.pg_sidecar.PGSidecarService.RenameDB:input_type -> chef.automate.infra.pg_sidecar.RenameDBReq
	6,  // 5: chef.automate.infra.pg_sidecar.PGSidecarService.CreateDB:input_type -> chef.automate.infra.pg_sidecar.CreateDBReq
	8,  // 6: chef.automate.infra.pg_sidecar.PGSidecarService.CreateExtension:input_type -> chef.automate.infra.pg_sidecar.CreateExtensionReq
	10, // 7: chef.automate.infra.pg_sidecar.PGSidecarService.DeploySqitch:input_type -> chef.automate.infra.pg_sidecar.DeploySqitchReq
	12, // 8: chef.automate.infra.pg_sidecar.PGSidecarService.SetPublicSchemaRole:input_type -> chef.automate.infra.pg_sidecar.SetPublicSchemaRoleReq
	14, // 9: chef.automate.infra.pg_sidecar.PGSidecarService.AlterRole:input_type -> chef.automate.infra.pg_sidecar.AlterRoleReq
	16, // 10: chef.automate.infra.pg_sidecar.PGSidecarService.DropTables:input_type -> chef.automate.infra.pg_sidecar.DropTablesReq
	3,  // 11: chef.automate.infra.pg_sidecar.PGSidecarService.MigrateTables:output_type -> chef.automate.infra.pg_sidecar.MigrateTablesRes
	5,  // 12: chef.automate.infra.pg_sidecar.PGSidecarService.RenameDB:output_type -> chef.automate.infra.pg_sidecar.RenameDBRes
	7,  // 13: chef.automate.infra.pg_sidecar.PGSidecarService.CreateDB:output_type -> chef.automate.infra.pg_sidecar.CreateDBRes
	9,  // 14: chef.automate.infra.pg_sidecar.PGSidecarService.CreateExtension:output_type -> chef.automate.infra.pg_sidecar.CreateExtensionRes
	11, // 15: chef.automate.infra.pg_sidecar.PGSidecarService.DeploySqitch:output_type -> chef.automate.infra.pg_sidecar.DeploySqitchRes
	13, // 16: chef.automate.infra.pg_sidecar.PGSidecarService.SetPublicSchemaRole:output_type -> chef.automate.infra.pg_sidecar.SetPublicSchemaRoleRes
	15, // 17: chef.automate.infra.pg_sidecar.PGSidecarService.AlterRole:output_type -> chef.automate.infra.pg_sidecar.AlterRoleRes
	17, // 18: chef.automate.infra.pg_sidecar.PGSidecarService.DropTables:output_type -> chef.automate.infra.pg_sidecar.DropTablesRes
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_interservice_pg_sidecar_service_proto_init() }
func file_interservice_pg_sidecar_service_proto_init() {
	if File_interservice_pg_sidecar_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_interservice_pg_sidecar_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateTablesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateTablesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameDBReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameDBRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExtensionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploySqitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploySqitchRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPublicSchemaRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPublicSchemaRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTablesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTablesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterRoleReq_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interservice_pg_sidecar_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterRoleReq_Password); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_interservice_pg_sidecar_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_interservice_pg_sidecar_service_proto_goTypes,
		DependencyIndexes: file_interservice_pg_sidecar_service_proto_depIdxs,
		EnumInfos:         file_interservice_pg_sidecar_service_proto_enumTypes,
		MessageInfos:      file_interservice_pg_sidecar_service_proto_msgTypes,
	}.Build()
	File_interservice_pg_sidecar_service_proto = out.File
	file_interservice_pg_sidecar_service_proto_rawDesc = nil
	file_interservice_pg_sidecar_service_proto_goTypes = nil
	file_interservice_pg_sidecar_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PGSidecarServiceClient is the client API for PGSidecarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PGSidecarServiceClient interface {
	MigrateTables(ctx context.Context, in *MigrateTablesReq, opts ...grpc.CallOption) (*MigrateTablesRes, error)
	RenameDB(ctx context.Context, in *RenameDBReq, opts ...grpc.CallOption) (*RenameDBRes, error)
	CreateDB(ctx context.Context, in *CreateDBReq, opts ...grpc.CallOption) (*CreateDBRes, error)
	CreateExtension(ctx context.Context, in *CreateExtensionReq, opts ...grpc.CallOption) (*CreateExtensionRes, error)
	DeploySqitch(ctx context.Context, in *DeploySqitchReq, opts ...grpc.CallOption) (*DeploySqitchRes, error)
	SetPublicSchemaRole(ctx context.Context, in *SetPublicSchemaRoleReq, opts ...grpc.CallOption) (*SetPublicSchemaRoleRes, error)
	AlterRole(ctx context.Context, in *AlterRoleReq, opts ...grpc.CallOption) (*AlterRoleRes, error)
	DropTables(ctx context.Context, in *DropTablesReq, opts ...grpc.CallOption) (*DropTablesRes, error)
}

type pGSidecarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPGSidecarServiceClient(cc grpc.ClientConnInterface) PGSidecarServiceClient {
	return &pGSidecarServiceClient{cc}
}

func (c *pGSidecarServiceClient) MigrateTables(ctx context.Context, in *MigrateTablesReq, opts ...grpc.CallOption) (*MigrateTablesRes, error) {
	out := new(MigrateTablesRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/MigrateTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) RenameDB(ctx context.Context, in *RenameDBReq, opts ...grpc.CallOption) (*RenameDBRes, error) {
	out := new(RenameDBRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/RenameDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) CreateDB(ctx context.Context, in *CreateDBReq, opts ...grpc.CallOption) (*CreateDBRes, error) {
	out := new(CreateDBRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/CreateDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) CreateExtension(ctx context.Context, in *CreateExtensionReq, opts ...grpc.CallOption) (*CreateExtensionRes, error) {
	out := new(CreateExtensionRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/CreateExtension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) DeploySqitch(ctx context.Context, in *DeploySqitchReq, opts ...grpc.CallOption) (*DeploySqitchRes, error) {
	out := new(DeploySqitchRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/DeploySqitch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) SetPublicSchemaRole(ctx context.Context, in *SetPublicSchemaRoleReq, opts ...grpc.CallOption) (*SetPublicSchemaRoleRes, error) {
	out := new(SetPublicSchemaRoleRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/SetPublicSchemaRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) AlterRole(ctx context.Context, in *AlterRoleReq, opts ...grpc.CallOption) (*AlterRoleRes, error) {
	out := new(AlterRoleRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/AlterRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pGSidecarServiceClient) DropTables(ctx context.Context, in *DropTablesReq, opts ...grpc.CallOption) (*DropTablesRes, error) {
	out := new(DropTablesRes)
	err := c.cc.Invoke(ctx, "/chef.automate.infra.pg_sidecar.PGSidecarService/DropTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PGSidecarServiceServer is the server API for PGSidecarService service.
type PGSidecarServiceServer interface {
	MigrateTables(context.Context, *MigrateTablesReq) (*MigrateTablesRes, error)
	RenameDB(context.Context, *RenameDBReq) (*RenameDBRes, error)
	CreateDB(context.Context, *CreateDBReq) (*CreateDBRes, error)
	CreateExtension(context.Context, *CreateExtensionReq) (*CreateExtensionRes, error)
	DeploySqitch(context.Context, *DeploySqitchReq) (*DeploySqitchRes, error)
	SetPublicSchemaRole(context.Context, *SetPublicSchemaRoleReq) (*SetPublicSchemaRoleRes, error)
	AlterRole(context.Context, *AlterRoleReq) (*AlterRoleRes, error)
	DropTables(context.Context, *DropTablesReq) (*DropTablesRes, error)
}

// UnimplementedPGSidecarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPGSidecarServiceServer struct {
}

func (*UnimplementedPGSidecarServiceServer) MigrateTables(context.Context, *MigrateTablesReq) (*MigrateTablesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateTables not implemented")
}
func (*UnimplementedPGSidecarServiceServer) RenameDB(context.Context, *RenameDBReq) (*RenameDBRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameDB not implemented")
}
func (*UnimplementedPGSidecarServiceServer) CreateDB(context.Context, *CreateDBReq) (*CreateDBRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDB not implemented")
}
func (*UnimplementedPGSidecarServiceServer) CreateExtension(context.Context, *CreateExtensionReq) (*CreateExtensionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExtension not implemented")
}
func (*UnimplementedPGSidecarServiceServer) DeploySqitch(context.Context, *DeploySqitchReq) (*DeploySqitchRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeploySqitch not implemented")
}
func (*UnimplementedPGSidecarServiceServer) SetPublicSchemaRole(context.Context, *SetPublicSchemaRoleReq) (*SetPublicSchemaRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPublicSchemaRole not implemented")
}
func (*UnimplementedPGSidecarServiceServer) AlterRole(context.Context, *AlterRoleReq) (*AlterRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlterRole not implemented")
}
func (*UnimplementedPGSidecarServiceServer) DropTables(context.Context, *DropTablesReq) (*DropTablesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropTables not implemented")
}

func RegisterPGSidecarServiceServer(s *grpc.Server, srv PGSidecarServiceServer) {
	s.RegisterService(&_PGSidecarService_serviceDesc, srv)
}

func _PGSidecarService_MigrateTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateTablesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).MigrateTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/MigrateTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).MigrateTables(ctx, req.(*MigrateTablesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_RenameDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameDBReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).RenameDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/RenameDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).RenameDB(ctx, req.(*RenameDBReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_CreateDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDBReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).CreateDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/CreateDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).CreateDB(ctx, req.(*CreateDBReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_CreateExtension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExtensionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).CreateExtension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/CreateExtension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).CreateExtension(ctx, req.(*CreateExtensionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_DeploySqitch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeploySqitchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).DeploySqitch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/DeploySqitch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).DeploySqitch(ctx, req.(*DeploySqitchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_SetPublicSchemaRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPublicSchemaRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).SetPublicSchemaRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/SetPublicSchemaRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).SetPublicSchemaRole(ctx, req.(*SetPublicSchemaRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_AlterRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlterRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).AlterRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/AlterRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).AlterRole(ctx, req.(*AlterRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PGSidecarService_DropTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropTablesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PGSidecarServiceServer).DropTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.infra.pg_sidecar.PGSidecarService/DropTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PGSidecarServiceServer).DropTables(ctx, req.(*DropTablesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PGSidecarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.infra.pg_sidecar.PGSidecarService",
	HandlerType: (*PGSidecarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MigrateTables",
			Handler:    _PGSidecarService_MigrateTables_Handler,
		},
		{
			MethodName: "RenameDB",
			Handler:    _PGSidecarService_RenameDB_Handler,
		},
		{
			MethodName: "CreateDB",
			Handler:    _PGSidecarService_CreateDB_Handler,
		},
		{
			MethodName: "CreateExtension",
			Handler:    _PGSidecarService_CreateExtension_Handler,
		},
		{
			MethodName: "DeploySqitch",
			Handler:    _PGSidecarService_DeploySqitch_Handler,
		},
		{
			MethodName: "SetPublicSchemaRole",
			Handler:    _PGSidecarService_SetPublicSchemaRole_Handler,
		},
		{
			MethodName: "AlterRole",
			Handler:    _PGSidecarService_AlterRole_Handler,
		},
		{
			MethodName: "DropTables",
			Handler:    _PGSidecarService_DropTables_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/pg_sidecar/service.proto",
}
