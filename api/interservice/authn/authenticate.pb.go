// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/authn/authenticate.proto

package authn

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthenticateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AuthenticateRequest) Reset()         { *m = AuthenticateRequest{} }
func (m *AuthenticateRequest) String() string { return proto.CompactTextString(m) }
func (*AuthenticateRequest) ProtoMessage()    {}
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57390d1a555f5d05, []int{0}
}

func (m *AuthenticateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateRequest.Unmarshal(m, b)
}
func (m *AuthenticateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateRequest.Marshal(b, m, deterministic)
}
func (m *AuthenticateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateRequest.Merge(m, src)
}
func (m *AuthenticateRequest) XXX_Size() int {
	return xxx_messageInfo_AuthenticateRequest.Size(m)
}
func (m *AuthenticateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateRequest proto.InternalMessageInfo

type AuthenticateResponse struct {
	// This could be either "user:{local,ldap,saml}:<some-id>",
	// "tls:service:<some-id> or "token:<some-id>",
	// depending on the authentication method that was successful.
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty" toml:"subject,omitempty" mapstructure:"subject,omitempty"`
	// Only human users have teams. The teams are provided either by the external
	// IdP (in which case they're extracted from the id_token; TODO), or, for local
	// users, by teams-service (TODO).
	Teams                []string `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty" toml:"teams,omitempty" mapstructure:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *AuthenticateResponse) Reset()         { *m = AuthenticateResponse{} }
func (m *AuthenticateResponse) String() string { return proto.CompactTextString(m) }
func (*AuthenticateResponse) ProtoMessage()    {}
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57390d1a555f5d05, []int{1}
}

func (m *AuthenticateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateResponse.Unmarshal(m, b)
}
func (m *AuthenticateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateResponse.Marshal(b, m, deterministic)
}
func (m *AuthenticateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateResponse.Merge(m, src)
}
func (m *AuthenticateResponse) XXX_Size() int {
	return xxx_messageInfo_AuthenticateResponse.Size(m)
}
func (m *AuthenticateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateResponse proto.InternalMessageInfo

func (m *AuthenticateResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *AuthenticateResponse) GetTeams() []string {
	if m != nil {
		return m.Teams
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthenticateRequest)(nil), "chef.automate.domain.authn.AuthenticateRequest")
	proto.RegisterType((*AuthenticateResponse)(nil), "chef.automate.domain.authn.AuthenticateResponse")
}

func init() {
	proto.RegisterFile("api/interservice/authn/authenticate.proto", fileDescriptor_57390d1a555f5d05)
}

var fileDescriptor_57390d1a555f5d05 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4a, 0xc4, 0x40,
	0x10, 0x45, 0xc9, 0x88, 0xca, 0x34, 0xe2, 0xa2, 0x1d, 0x21, 0x04, 0x17, 0x21, 0xab, 0x71, 0xd3,
	0x3d, 0xea, 0x09, 0x74, 0xe1, 0x01, 0xb2, 0x74, 0xd7, 0x69, 0xcb, 0xa4, 0xc4, 0x54, 0xc5, 0x74,
	0xf5, 0x1c, 0xc0, 0x2b, 0xcc, 0x1d, 0xbc, 0x90, 0x57, 0xf0, 0x20, 0x92, 0x84, 0x81, 0x08, 0x23,
	0xb8, 0x69, 0xa8, 0xcf, 0xff, 0x8f, 0xcf, 0x6f, 0x75, 0xed, 0x3a, 0xb4, 0x48, 0x02, 0x7d, 0x80,
	0x7e, 0x8b, 0x1e, 0xac, 0x8b, 0xd2, 0xd0, 0xf8, 0x02, 0x09, 0x7a, 0x27, 0x60, 0xba, 0x9e, 0x85,
	0x75, 0xe6, 0x1b, 0x78, 0x31, 0x2e, 0x0a, 0xb7, 0x83, 0xf8, 0xcc, 0xad, 0x43, 0x32, 0xa3, 0x3d,
	0xbb, 0xaa, 0x99, 0xeb, 0x37, 0xb0, 0x03, 0xcd, 0x11, 0xb1, 0x38, 0x41, 0xa6, 0x30, 0x25, 0x8b,
	0x4b, 0x75, 0x71, 0x3f, 0xe3, 0x95, 0xf0, 0x1e, 0x21, 0x48, 0xf1, 0xa8, 0x56, 0xbf, 0xe5, 0xd0,
	0x31, 0x05, 0xd0, 0xa9, 0x3a, 0x0d, 0xb1, 0x7a, 0x05, 0x2f, 0x69, 0x92, 0x27, 0xeb, 0x65, 0xb9,
	0x3f, 0xf5, 0x4a, 0x1d, 0x0b, 0xb8, 0x36, 0xa4, 0x8b, 0xfc, 0x68, 0xbd, 0x2c, 0xa7, 0xe3, 0xf6,
	0x33, 0x51, 0xe7, 0x33, 0x10, 0x32, 0xe9, 0x5d, 0xa2, 0xce, 0xe6, 0x6c, 0x6d, 0xcd, 0xdf, 0xed,
	0xcd, 0x81, 0x72, 0xd9, 0xe6, 0xff, 0x81, 0xa9, 0x76, 0x91, 0x7f, 0x7c, 0x7d, 0xef, 0x16, 0x99,
	0x4e, 0xc7, 0x15, 0xb6, 0x9b, 0x69, 0x8c, 0x99, 0xf3, 0xe1, 0xe6, 0xc9, 0xd6, 0x28, 0x4d, 0xac,
	0x8c, 0xe7, 0xd6, 0x0e, 0x7c, 0xbb, 0xe7, 0xdb, 0xc3, 0xff, 0x50, 0x9d, 0x8c, 0x0b, 0xde, 0xfd,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x45, 0x36, 0x8b, 0x5a, 0xa8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthenticationClient is the client API for Authentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationClient interface {
	// Authenticate inspects the request's metadata -- for this, an empty argument
	// is just enough. Getting a response means it was authenticated successfully.
	// If the metadata does not contain what is needed to authenticate the
	// request, or the tokens are wrong, the AuthenticationService will return the
	// corresponding error code, with details in the message.
	Authenticate(ctx context.Context, in *AuthenticateRequest, opts ...grpc.CallOption) (*AuthenticateResponse, error)
}

type authenticationClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticationClient(cc grpc.ClientConnInterface) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Authenticate(ctx context.Context, in *AuthenticateRequest, opts ...grpc.CallOption) (*AuthenticateResponse, error) {
	out := new(AuthenticateResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.authn.Authentication/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServer is the server API for Authentication service.
type AuthenticationServer interface {
	// Authenticate inspects the request's metadata -- for this, an empty argument
	// is just enough. Getting a response means it was authenticated successfully.
	// If the metadata does not contain what is needed to authenticate the
	// request, or the tokens are wrong, the AuthenticationService will return the
	// corresponding error code, with details in the message.
	Authenticate(context.Context, *AuthenticateRequest) (*AuthenticateResponse, error)
}

// UnimplementedAuthenticationServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServer struct {
}

func (*UnimplementedAuthenticationServer) Authenticate(ctx context.Context, req *AuthenticateRequest) (*AuthenticateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.authn.Authentication/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Authenticate(ctx, req.(*AuthenticateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.authn.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _Authentication_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/interservice/authn/authenticate.proto",
}
