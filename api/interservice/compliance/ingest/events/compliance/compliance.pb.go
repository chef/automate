// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: interservice/compliance/ingest/events/compliance/compliance.proto

package compliance

import (
	common "github.com/chef/automate/api/interservice/compliance/common"
	inspec "github.com/chef/automate/api/interservice/compliance/ingest/events/inspec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Report struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// inspec full json report fields
	Version     string             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Platform    *inspec.Platform   `protobuf:"bytes,16,opt,name=platform,proto3" json:"platform,omitempty" toml:"platform,omitempty" mapstructure:"platform,omitempty"`
	Statistics  *inspec.Statistics `protobuf:"bytes,17,opt,name=statistics,proto3" json:"statistics,omitempty" toml:"statistics,omitempty" mapstructure:"statistics,omitempty"`
	Profiles    []*inspec.Profile  `protobuf:"bytes,18,rep,name=profiles,proto3" json:"profiles,omitempty" toml:"profiles,omitempty" mapstructure:"profiles,omitempty"`
	OtherChecks []string           `protobuf:"bytes,19,rep,name=other_checks,json=otherChecks,proto3" json:"other_checks,omitempty" toml:"other_checks,omitempty" mapstructure:"other_checks,omitempty"`
	// extra report fields added by the audit cookbook
	ReportUuid          string       `protobuf:"bytes,20,opt,name=report_uuid,json=reportUuid,proto3" json:"report_uuid,omitempty" toml:"report_uuid,omitempty" mapstructure:"report_uuid,omitempty"`
	NodeUuid            string       `protobuf:"bytes,21,opt,name=node_uuid,json=nodeUuid,proto3" json:"node_uuid,omitempty" toml:"node_uuid,omitempty" mapstructure:"node_uuid,omitempty"`
	JobUuid             string       `protobuf:"bytes,22,opt,name=job_uuid,json=jobUuid,proto3" json:"job_uuid,omitempty" toml:"job_uuid,omitempty" mapstructure:"job_uuid,omitempty"`
	NodeName            string       `protobuf:"bytes,23,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty" toml:"node_name,omitempty" mapstructure:"node_name,omitempty"`
	Environment         string       `protobuf:"bytes,24,opt,name=environment,proto3" json:"environment,omitempty" toml:"environment,omitempty" mapstructure:"environment,omitempty"`
	Roles               []string     `protobuf:"bytes,25,rep,name=roles,proto3" json:"roles,omitempty" toml:"roles,omitempty" mapstructure:"roles,omitempty"`
	Recipes             []string     `protobuf:"bytes,26,rep,name=recipes,proto3" json:"recipes,omitempty" toml:"recipes,omitempty" mapstructure:"recipes,omitempty"`
	EndTime             string       `protobuf:"bytes,27,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" toml:"end_time,omitempty" mapstructure:"end_time,omitempty"`
	Type                string       `protobuf:"bytes,28,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	SourceId            string       `protobuf:"bytes,29,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty" toml:"source_id,omitempty" mapstructure:"source_id,omitempty"`
	SourceRegion        string       `protobuf:"bytes,30,opt,name=source_region,json=sourceRegion,proto3" json:"source_region,omitempty" toml:"source_region,omitempty" mapstructure:"source_region,omitempty"`
	SourceAccountId     string       `protobuf:"bytes,31,opt,name=source_account_id,json=sourceAccountId,proto3" json:"source_account_id,omitempty" toml:"source_account_id,omitempty" mapstructure:"source_account_id,omitempty"`
	PolicyName          string       `protobuf:"bytes,32,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty" toml:"policy_name,omitempty" mapstructure:"policy_name,omitempty"`
	PolicyGroup         string       `protobuf:"bytes,33,opt,name=policy_group,json=policyGroup,proto3" json:"policy_group,omitempty" toml:"policy_group,omitempty" mapstructure:"policy_group,omitempty"`
	OrganizationName    string       `protobuf:"bytes,34,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty" toml:"organization_name,omitempty" mapstructure:"organization_name,omitempty"`
	SourceFqdn          string       `protobuf:"bytes,35,opt,name=source_fqdn,json=sourceFqdn,proto3" json:"source_fqdn,omitempty" toml:"source_fqdn,omitempty" mapstructure:"source_fqdn,omitempty"`
	ChefTags            []string     `protobuf:"bytes,36,rep,name=chef_tags,json=chefTags,proto3" json:"chef_tags,omitempty" toml:"chef_tags,omitempty" mapstructure:"chef_tags,omitempty"`
	Ipaddress           string       `protobuf:"bytes,37,opt,name=ipaddress,proto3" json:"ipaddress,omitempty" toml:"ipaddress,omitempty" mapstructure:"ipaddress,omitempty"`
	Fqdn                string       `protobuf:"bytes,38,opt,name=fqdn,proto3" json:"fqdn,omitempty" toml:"fqdn,omitempty" mapstructure:"fqdn,omitempty"`
	Tags                []*common.Kv `protobuf:"bytes,39,rep,name=tags,proto3" json:"tags,omitempty" toml:"tags,omitempty" mapstructure:"tags,omitempty"`
	AutomateManagerId   string       `protobuf:"bytes,40,opt,name=automate_manager_id,json=automateManagerId,proto3" json:"automate_manager_id,omitempty" toml:"automate_manager_id,omitempty" mapstructure:"automate_manager_id,omitempty"`
	RunTimeLimit        float32      `protobuf:"fixed32,41,opt,name=run_time_limit,json=runTimeLimit,proto3" json:"run_time_limit,omitempty" toml:"run_time_limit,omitempty" mapstructure:"run_time_limit,omitempty"`
	AutomateManagerType string       `protobuf:"bytes,42,opt,name=automate_manager_type,json=automateManagerType,proto3" json:"automate_manager_type,omitempty" toml:"automate_manager_type,omitempty" mapstructure:"automate_manager_type,omitempty"`
	Status              string       `protobuf:"bytes,43,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	StatusMessage       string       `protobuf:"bytes,44,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty" toml:"status_message,omitempty" mapstructure:"status_message,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Report) Reset() {
	*x = Report{}
	mi := &file_interservice_compliance_ingest_events_compliance_compliance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_ingest_events_compliance_compliance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescGZIP(), []int{0}
}

func (x *Report) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Report) GetPlatform() *inspec.Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *Report) GetStatistics() *inspec.Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Report) GetProfiles() []*inspec.Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *Report) GetOtherChecks() []string {
	if x != nil {
		return x.OtherChecks
	}
	return nil
}

func (x *Report) GetReportUuid() string {
	if x != nil {
		return x.ReportUuid
	}
	return ""
}

func (x *Report) GetNodeUuid() string {
	if x != nil {
		return x.NodeUuid
	}
	return ""
}

func (x *Report) GetJobUuid() string {
	if x != nil {
		return x.JobUuid
	}
	return ""
}

func (x *Report) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Report) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Report) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Report) GetRecipes() []string {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *Report) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Report) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Report) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Report) GetSourceRegion() string {
	if x != nil {
		return x.SourceRegion
	}
	return ""
}

func (x *Report) GetSourceAccountId() string {
	if x != nil {
		return x.SourceAccountId
	}
	return ""
}

func (x *Report) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Report) GetPolicyGroup() string {
	if x != nil {
		return x.PolicyGroup
	}
	return ""
}

func (x *Report) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *Report) GetSourceFqdn() string {
	if x != nil {
		return x.SourceFqdn
	}
	return ""
}

func (x *Report) GetChefTags() []string {
	if x != nil {
		return x.ChefTags
	}
	return nil
}

func (x *Report) GetIpaddress() string {
	if x != nil {
		return x.Ipaddress
	}
	return ""
}

func (x *Report) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Report) GetTags() []*common.Kv {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Report) GetAutomateManagerId() string {
	if x != nil {
		return x.AutomateManagerId
	}
	return ""
}

func (x *Report) GetRunTimeLimit() float32 {
	if x != nil {
		return x.RunTimeLimit
	}
	return 0
}

func (x *Report) GetAutomateManagerType() string {
	if x != nil {
		return x.AutomateManagerType
	}
	return ""
}

func (x *Report) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Report) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

var File_interservice_compliance_ingest_events_compliance_compliance_proto protoreflect.FileDescriptor

const file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDesc = "" +
	"\n" +
	"Ainterservice/compliance/ingest/events/compliance/compliance.proto\x128chef.automate.domain.compliance.ingest.events.compliance\x1a9interservice/compliance/ingest/events/inspec/inspec.proto\x1a+interservice/compliance/common/common.proto\"\xad\t\n" +
	"\x06Report\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12Z\n" +
	"\bplatform\x18\x10 \x01(\v2>.chef.automate.domain.compliance.ingest.events.inspec.PlatformR\bplatform\x12`\n" +
	"\n" +
	"statistics\x18\x11 \x01(\v2@.chef.automate.domain.compliance.ingest.events.inspec.StatisticsR\n" +
	"statistics\x12Y\n" +
	"\bprofiles\x18\x12 \x03(\v2=.chef.automate.domain.compliance.ingest.events.inspec.ProfileR\bprofiles\x12!\n" +
	"\fother_checks\x18\x13 \x03(\tR\votherChecks\x12\x1f\n" +
	"\vreport_uuid\x18\x14 \x01(\tR\n" +
	"reportUuid\x12\x1b\n" +
	"\tnode_uuid\x18\x15 \x01(\tR\bnodeUuid\x12\x19\n" +
	"\bjob_uuid\x18\x16 \x01(\tR\ajobUuid\x12\x1b\n" +
	"\tnode_name\x18\x17 \x01(\tR\bnodeName\x12 \n" +
	"\venvironment\x18\x18 \x01(\tR\venvironment\x12\x14\n" +
	"\x05roles\x18\x19 \x03(\tR\x05roles\x12\x18\n" +
	"\arecipes\x18\x1a \x03(\tR\arecipes\x12\x19\n" +
	"\bend_time\x18\x1b \x01(\tR\aendTime\x12\x12\n" +
	"\x04type\x18\x1c \x01(\tR\x04type\x12\x1b\n" +
	"\tsource_id\x18\x1d \x01(\tR\bsourceId\x12#\n" +
	"\rsource_region\x18\x1e \x01(\tR\fsourceRegion\x12*\n" +
	"\x11source_account_id\x18\x1f \x01(\tR\x0fsourceAccountId\x12\x1f\n" +
	"\vpolicy_name\x18  \x01(\tR\n" +
	"policyName\x12!\n" +
	"\fpolicy_group\x18! \x01(\tR\vpolicyGroup\x12+\n" +
	"\x11organization_name\x18\" \x01(\tR\x10organizationName\x12\x1f\n" +
	"\vsource_fqdn\x18# \x01(\tR\n" +
	"sourceFqdn\x12\x1b\n" +
	"\tchef_tags\x18$ \x03(\tR\bchefTags\x12\x1c\n" +
	"\tipaddress\x18% \x01(\tR\tipaddress\x12\x12\n" +
	"\x04fqdn\x18& \x01(\tR\x04fqdn\x12>\n" +
	"\x04tags\x18' \x03(\v2*.chef.automate.domain.compliance.common.KvR\x04tags\x12.\n" +
	"\x13automate_manager_id\x18( \x01(\tR\x11automateManagerId\x12$\n" +
	"\x0erun_time_limit\x18) \x01(\x02R\frunTimeLimit\x122\n" +
	"\x15automate_manager_type\x18* \x01(\tR\x13automateManagerType\x12\x16\n" +
	"\x06status\x18+ \x01(\tR\x06status\x12%\n" +
	"\x0estatus_message\x18, \x01(\tR\rstatusMessageBOZMgithub.com/chef/automate/api/interservice/compliance/ingest/events/complianceb\x06proto3"

var (
	file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescOnce sync.Once
	file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescData []byte
)

func file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescGZIP() []byte {
	file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescOnce.Do(func() {
		file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDesc), len(file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDesc)))
	})
	return file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDescData
}

var file_interservice_compliance_ingest_events_compliance_compliance_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_interservice_compliance_ingest_events_compliance_compliance_proto_goTypes = []any{
	(*Report)(nil),            // 0: chef.automate.domain.compliance.ingest.events.compliance.Report
	(*inspec.Platform)(nil),   // 1: chef.automate.domain.compliance.ingest.events.inspec.Platform
	(*inspec.Statistics)(nil), // 2: chef.automate.domain.compliance.ingest.events.inspec.Statistics
	(*inspec.Profile)(nil),    // 3: chef.automate.domain.compliance.ingest.events.inspec.Profile
	(*common.Kv)(nil),         // 4: chef.automate.domain.compliance.common.Kv
}
var file_interservice_compliance_ingest_events_compliance_compliance_proto_depIdxs = []int32{
	1, // 0: chef.automate.domain.compliance.ingest.events.compliance.Report.platform:type_name -> chef.automate.domain.compliance.ingest.events.inspec.Platform
	2, // 1: chef.automate.domain.compliance.ingest.events.compliance.Report.statistics:type_name -> chef.automate.domain.compliance.ingest.events.inspec.Statistics
	3, // 2: chef.automate.domain.compliance.ingest.events.compliance.Report.profiles:type_name -> chef.automate.domain.compliance.ingest.events.inspec.Profile
	4, // 3: chef.automate.domain.compliance.ingest.events.compliance.Report.tags:type_name -> chef.automate.domain.compliance.common.Kv
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_interservice_compliance_ingest_events_compliance_compliance_proto_init() }
func file_interservice_compliance_ingest_events_compliance_compliance_proto_init() {
	if File_interservice_compliance_ingest_events_compliance_compliance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDesc), len(file_interservice_compliance_ingest_events_compliance_compliance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_interservice_compliance_ingest_events_compliance_compliance_proto_goTypes,
		DependencyIndexes: file_interservice_compliance_ingest_events_compliance_compliance_proto_depIdxs,
		MessageInfos:      file_interservice_compliance_ingest_events_compliance_compliance_proto_msgTypes,
	}.Build()
	File_interservice_compliance_ingest_events_compliance_compliance_proto = out.File
	file_interservice_compliance_ingest_events_compliance_compliance_proto_goTypes = nil
	file_interservice_compliance_ingest_events_compliance_compliance_proto_depIdxs = nil
}
