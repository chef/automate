syntax = "proto3";

package chef.automate.domain.compliance.ingest.ingest;
option go_package = "github.com/chef/automate/api/interservice/compliance/ingest/ingest";

import "google/api/annotations.proto";
import "interservice/compliance/ingest/events/compliance/compliance.proto";
import "google/protobuf/empty.proto";
import "interservice/event/event.proto";
import "google/protobuf/timestamp.proto";

service ComplianceIngesterService {
	rpc HandleEvent(chef.automate.domain.event.api.EventMsg) returns (chef.automate.domain.event.api.EventResponse);
  	rpc ProjectUpdateStatus(ProjectUpdateStatusReq) returns (ProjectUpdateStatusResp);
	rpc ProcessComplianceReport(stream ReportData) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/api/v0/events/compliance/report"
			body: "*"
		};
	};
}

message ProjectUpdateStatusReq { }

message ProjectUpdateStatusResp { 
    string state = 1;
    google.protobuf.Timestamp estimated_time_complete = 2;
    float percentage_complete = 3;
}

message ReportData {
	bytes content = 1;
}