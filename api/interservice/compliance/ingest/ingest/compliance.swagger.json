{
  "swagger": "2.0",
  "info": {
    "title": "interservice/compliance/ingest/ingest/compliance.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v0/events/compliance/report": {
      "post": {
        "operationId": "ComplianceIngesterService_ProcessComplianceReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.compliance.Report"
            }
          }
        ],
        "tags": [
          "ComplianceIngesterService"
        ]
      }
    }
  },
  "definitions": {
    "chef.automate.domain.compliance.common.Kv": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Tag key."
        },
        "value": {
          "type": "string",
          "description": "Tag value."
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.compliance.Report": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "inspec full json report fields"
        },
        "platform": {
          "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Platform"
        },
        "statistics": {
          "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Statistics"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Profile"
          }
        },
        "other_checks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "report_uuid": {
          "type": "string",
          "title": "extra report fields added by the audit cookbook"
        },
        "node_uuid": {
          "type": "string"
        },
        "job_uuid": {
          "type": "string"
        },
        "node_name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end_time": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "source_id": {
          "type": "string"
        },
        "source_region": {
          "type": "string"
        },
        "source_account_id": {
          "type": "string"
        },
        "policy_name": {
          "type": "string"
        },
        "policy_group": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "source_fqdn": {
          "type": "string"
        },
        "chef_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipaddress": {
          "type": "string"
        },
        "fqdn": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.common.Kv"
          }
        },
        "automate_manager_id": {
          "type": "string"
        },
        "run_time_limit": {
          "type": "number",
          "format": "float"
        },
        "automate_manager_type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_message": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Attribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "options": {
          "type": "object"
        }
      },
      "title": "We can't have options as another message because the default field inside can take any json value(int, string, bool, hash, array)\nWe get options as a struct and handle the unmarshalling and marshaling in the code"
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Control": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "impact": {
          "type": "number",
          "format": "float"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "source_location": {
          "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.SourceLocation"
        },
        "refs": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "TODO handle raw refs and tags"
        },
        "tags": {
          "type": "object"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Result"
          }
        },
        "waiver_data": {
          "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.WaiverData"
        },
        "removed_results_counts": {
          "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.RemovedResultsCounts"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Dependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "git": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "supermarket": {
          "type": "string"
        },
        "compliance": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "skip_message": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "controls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Platform": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "release": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Profile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "maintainer": {
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "copyright_email": {
          "type": "string"
        },
        "sha256": {
          "type": "string"
        },
        "controls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Control"
          }
        },
        "supports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Support"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Attribute"
          }
        },
        "depends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Dependency"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/chef.automate.domain.compliance.ingest.events.inspec.Group"
          }
        },
        "parent_profile": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "skip_message": {
          "type": "string"
        },
        "status_message": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.RemovedResultsCounts": {
      "type": "object",
      "properties": {
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "skipped": {
          "type": "integer",
          "format": "int32"
        },
        "passed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Result": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "code_desc": {
          "type": "string"
        },
        "run_time": {
          "type": "number",
          "format": "float"
        },
        "start_time": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "skip_message": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.SourceLocation": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string"
        },
        "line": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Statistics": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.Support": {
      "type": "object",
      "properties": {
        "inspec": {
          "type": "string"
        },
        "os_name": {
          "type": "string"
        },
        "os_family": {
          "type": "string"
        },
        "release": {
          "type": "string"
        },
        "platform_name": {
          "type": "string"
        },
        "platform_family": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.events.inspec.WaiverData": {
      "type": "object",
      "properties": {
        "expiration_date": {
          "type": "string"
        },
        "justification": {
          "type": "string"
        },
        "run": {
          "type": "boolean",
          "format": "boolean"
        },
        "skipped_due_to_waiver": {
          "type": "boolean",
          "format": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.compliance.ingest.ingest.ProjectUpdateStatusResp": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "estimated_time_complete": {
          "type": "string",
          "format": "date-time"
        },
        "percentage_complete": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "chef.automate.domain.event.api.Actor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object_type": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.event.api.EventResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "chef.automate.domain.event.api.EventType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.event.api.Object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object_type": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "chef.automate.domain.event.api.Producer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "producer_name": {
          "type": "string"
        },
        "producer_type": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "chef.automate.domain.event.api.Target": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object_type": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "google.protobuf.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
