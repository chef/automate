// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/interservice/compliance/profiles/profiles.proto

package profiles

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Query_OrderType int32

const (
	Query_ASC  Query_OrderType = 0
	Query_DESC Query_OrderType = 1
)

var Query_OrderType_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Query_OrderType_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Query_OrderType) String() string {
	return proto.EnumName(Query_OrderType_name, int32(x))
}

func (Query_OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{22, 0}
}

type Sha256 struct {
	Sha256               []string `protobuf:"bytes,1,rep,name=sha256,proto3" json:"sha256,omitempty" toml:"sha256,omitempty" mapstructure:"sha256,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Sha256) Reset()         { *m = Sha256{} }
func (m *Sha256) String() string { return proto.CompactTextString(m) }
func (*Sha256) ProtoMessage()    {}
func (*Sha256) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{0}
}

func (m *Sha256) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sha256.Unmarshal(m, b)
}
func (m *Sha256) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sha256.Marshal(b, m, deterministic)
}
func (m *Sha256) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sha256.Merge(m, src)
}
func (m *Sha256) XXX_Size() int {
	return xxx_messageInfo_Sha256.Size(m)
}
func (m *Sha256) XXX_DiscardUnknown() {
	xxx_messageInfo_Sha256.DiscardUnknown(m)
}

var xxx_messageInfo_Sha256 proto.InternalMessageInfo

func (m *Sha256) GetSha256() []string {
	if m != nil {
		return m.Sha256
	}
	return nil
}

type Missing struct {
	MissingSha256        []string `protobuf:"bytes,1,rep,name=missing_sha256,json=missingSha256,proto3" json:"missing_sha256,omitempty" toml:"missing_sha256,omitempty" mapstructure:"missing_sha256,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Missing) Reset()         { *m = Missing{} }
func (m *Missing) String() string { return proto.CompactTextString(m) }
func (*Missing) ProtoMessage()    {}
func (*Missing) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{1}
}

func (m *Missing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Missing.Unmarshal(m, b)
}
func (m *Missing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Missing.Marshal(b, m, deterministic)
}
func (m *Missing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Missing.Merge(m, src)
}
func (m *Missing) XXX_Size() int {
	return xxx_messageInfo_Missing.Size(m)
}
func (m *Missing) XXX_DiscardUnknown() {
	xxx_messageInfo_Missing.DiscardUnknown(m)
}

var xxx_messageInfo_Missing proto.InternalMessageInfo

func (m *Missing) GetMissingSha256() []string {
	if m != nil {
		return m.MissingSha256
	}
	return nil
}

type ProfilePostRequest struct {
	Owner                string    `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty" toml:"owner,omitempty" mapstructure:"owner,omitempty"`
	Chunk                *Chunk    `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty" toml:"chunk,omitempty" mapstructure:"chunk,omitempty"`
	Meta                 *Metadata `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty" mapstructure:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32     `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ProfilePostRequest) Reset()         { *m = ProfilePostRequest{} }
func (m *ProfilePostRequest) String() string { return proto.CompactTextString(m) }
func (*ProfilePostRequest) ProtoMessage()    {}
func (*ProfilePostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{2}
}

func (m *ProfilePostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfilePostRequest.Unmarshal(m, b)
}
func (m *ProfilePostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfilePostRequest.Marshal(b, m, deterministic)
}
func (m *ProfilePostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfilePostRequest.Merge(m, src)
}
func (m *ProfilePostRequest) XXX_Size() int {
	return xxx_messageInfo_ProfilePostRequest.Size(m)
}
func (m *ProfilePostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfilePostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfilePostRequest proto.InternalMessageInfo

func (m *ProfilePostRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfilePostRequest) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func (m *ProfilePostRequest) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Metadata struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	ContentType          string   `protobuf:"bytes,4,opt,name=contentType,proto3" json:"contentType,omitempty" toml:"contentType,omitempty" mapstructure:"contentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{3}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Metadata) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

type Chunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty" mapstructure:"data,omitempty"`
	Position             int64    `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty" toml:"position,omitempty" mapstructure:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{4}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Chunk) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type ProfileData struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty" toml:"owner,omitempty" mapstructure:"owner,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty" mapstructure:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ProfileData) Reset()         { *m = ProfileData{} }
func (m *ProfileData) String() string { return proto.CompactTextString(m) }
func (*ProfileData) ProtoMessage()    {}
func (*ProfileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{5}
}

func (m *ProfileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileData.Unmarshal(m, b)
}
func (m *ProfileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileData.Marshal(b, m, deterministic)
}
func (m *ProfileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileData.Merge(m, src)
}
func (m *ProfileData) XXX_Size() int {
	return xxx_messageInfo_ProfileData.Size(m)
}
func (m *ProfileData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileData.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileData proto.InternalMessageInfo

func (m *ProfileData) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfileData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProfileData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Profiles struct {
	Profiles             []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty" toml:"profiles,omitempty" mapstructure:"profiles,omitempty"`
	Total                int32      `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty" toml:"total,omitempty" mapstructure:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32      `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Profiles) Reset()         { *m = Profiles{} }
func (m *Profiles) String() string { return proto.CompactTextString(m) }
func (*Profiles) ProtoMessage()    {}
func (*Profiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{6}
}

func (m *Profiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profiles.Unmarshal(m, b)
}
func (m *Profiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profiles.Marshal(b, m, deterministic)
}
func (m *Profiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profiles.Merge(m, src)
}
func (m *Profiles) XXX_Size() int {
	return xxx_messageInfo_Profiles.Size(m)
}
func (m *Profiles) XXX_DiscardUnknown() {
	xxx_messageInfo_Profiles.DiscardUnknown(m)
}

var xxx_messageInfo_Profiles proto.InternalMessageInfo

func (m *Profiles) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *Profiles) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Profile struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Title                string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	Maintainer           string        `protobuf:"bytes,3,opt,name=maintainer,proto3" json:"maintainer,omitempty" toml:"maintainer,omitempty" mapstructure:"maintainer,omitempty"`
	Copyright            string        `protobuf:"bytes,4,opt,name=copyright,proto3" json:"copyright,omitempty" toml:"copyright,omitempty" mapstructure:"copyright,omitempty"`
	CopyrightEmail       string        `protobuf:"bytes,5,opt,name=copyright_email,json=copyrightEmail,proto3" json:"copyright_email,omitempty" toml:"copyright_email,omitempty" mapstructure:"copyright_email,omitempty"`
	License              string        `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty" toml:"license,omitempty" mapstructure:"license,omitempty"`
	Summary              string        `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty" toml:"summary,omitempty" mapstructure:"summary,omitempty"`
	Version              string        `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Owner                string        `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty" toml:"owner,omitempty" mapstructure:"owner,omitempty"`
	Supports             []*Support    `protobuf:"bytes,16,rep,name=supports,proto3" json:"supports,omitempty" toml:"supports,omitempty" mapstructure:"supports,omitempty"`
	Depends              []*Dependency `protobuf:"bytes,17,rep,name=depends,proto3" json:"depends,omitempty" toml:"depends,omitempty" mapstructure:"depends,omitempty"`
	Sha256               string        `protobuf:"bytes,18,opt,name=sha256,proto3" json:"sha256,omitempty" toml:"sha256,omitempty" mapstructure:"sha256,omitempty"`
	Groups               []*Group      `protobuf:"bytes,19,rep,name=groups,proto3" json:"groups,omitempty" toml:"groups,omitempty" mapstructure:"groups,omitempty"`
	Controls             []*Control    `protobuf:"bytes,20,rep,name=controls,proto3" json:"controls,omitempty" toml:"controls,omitempty" mapstructure:"controls,omitempty"`
	Attributes           []*Attribute  `protobuf:"bytes,21,rep,name=attributes,proto3" json:"attributes,omitempty" toml:"attributes,omitempty" mapstructure:"attributes,omitempty"`
	LatestVersion        string        `protobuf:"bytes,22,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty" toml:"latest_version,omitempty" mapstructure:"latest_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{7}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Profile) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *Profile) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *Profile) GetCopyrightEmail() string {
	if m != nil {
		return m.CopyrightEmail
	}
	return ""
}

func (m *Profile) GetLicense() string {
	if m != nil {
		return m.License
	}
	return ""
}

func (m *Profile) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Profile) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Profile) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Profile) GetSupports() []*Support {
	if m != nil {
		return m.Supports
	}
	return nil
}

func (m *Profile) GetDepends() []*Dependency {
	if m != nil {
		return m.Depends
	}
	return nil
}

func (m *Profile) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *Profile) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Profile) GetControls() []*Control {
	if m != nil {
		return m.Controls
	}
	return nil
}

func (m *Profile) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Profile) GetLatestVersion() string {
	if m != nil {
		return m.LatestVersion
	}
	return ""
}

type Group struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	Controls             []string `protobuf:"bytes,3,rep,name=controls,proto3" json:"controls,omitempty" toml:"controls,omitempty" mapstructure:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{8}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Group) GetControls() []string {
	if m != nil {
		return m.Controls
	}
	return nil
}

type Control struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Code                 string            `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty" toml:"code,omitempty" mapstructure:"code,omitempty"`
	Desc                 string            `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty" mapstructure:"desc,omitempty"`
	Impact               float32           `protobuf:"fixed32,4,opt,name=impact,proto3" json:"impact,omitempty" toml:"impact,omitempty" mapstructure:"impact,omitempty"`
	Title                string            `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	SourceLocation       *SourceLocation   `protobuf:"bytes,6,opt,name=source_location,json=sourceLocation,proto3" json:"source_location,omitempty" toml:"source_location,omitempty" mapstructure:"source_location,omitempty"`
	Results              []*Result         `protobuf:"bytes,7,rep,name=results,proto3" json:"results,omitempty" toml:"results,omitempty" mapstructure:"results,omitempty"`
	Refs                 []*Ref            `protobuf:"bytes,8,rep,name=refs,proto3" json:"refs,omitempty" toml:"refs,omitempty" mapstructure:"refs,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:"tags,omitempty" mapstructure:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte            `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32             `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Control) Reset()         { *m = Control{} }
func (m *Control) String() string { return proto.CompactTextString(m) }
func (*Control) ProtoMessage()    {}
func (*Control) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{9}
}

func (m *Control) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Control.Unmarshal(m, b)
}
func (m *Control) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Control.Marshal(b, m, deterministic)
}
func (m *Control) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Control.Merge(m, src)
}
func (m *Control) XXX_Size() int {
	return xxx_messageInfo_Control.Size(m)
}
func (m *Control) XXX_DiscardUnknown() {
	xxx_messageInfo_Control.DiscardUnknown(m)
}

var xxx_messageInfo_Control proto.InternalMessageInfo

func (m *Control) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Control) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Control) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Control) GetImpact() float32 {
	if m != nil {
		return m.Impact
	}
	return 0
}

func (m *Control) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Control) GetSourceLocation() *SourceLocation {
	if m != nil {
		return m.SourceLocation
	}
	return nil
}

func (m *Control) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Control) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

func (m *Control) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Ref struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty" mapstructure:"url,omitempty"`
	Ref                  string   `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty" toml:"ref,omitempty" mapstructure:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{10}
}

func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (m *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(m, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

func (m *Ref) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Ref) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type Result struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	CodeDesc             string   `protobuf:"bytes,2,opt,name=code_desc,json=codeDesc,proto3" json:"code_desc,omitempty" toml:"code_desc,omitempty" mapstructure:"code_desc,omitempty"`
	RunTime              float32  `protobuf:"fixed32,3,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty" toml:"run_time,omitempty" mapstructure:"run_time,omitempty"`
	StartTime            string   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" toml:"start_time,omitempty" mapstructure:"start_time,omitempty"`
	Message              string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty" mapstructure:"message,omitempty"`
	SkipMessage          string   `protobuf:"bytes,6,opt,name=skip_message,json=skipMessage,proto3" json:"skip_message,omitempty" toml:"skip_message,omitempty" mapstructure:"skip_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{11}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Result) GetCodeDesc() string {
	if m != nil {
		return m.CodeDesc
	}
	return ""
}

func (m *Result) GetRunTime() float32 {
	if m != nil {
		return m.RunTime
	}
	return 0
}

func (m *Result) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Result) GetSkipMessage() string {
	if m != nil {
		return m.SkipMessage
	}
	return ""
}

type SourceLocation struct {
	Ref                  string   `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty" toml:"ref,omitempty" mapstructure:"ref,omitempty"`
	Line                 int32    `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty" toml:"line,omitempty" mapstructure:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *SourceLocation) Reset()         { *m = SourceLocation{} }
func (m *SourceLocation) String() string { return proto.CompactTextString(m) }
func (*SourceLocation) ProtoMessage()    {}
func (*SourceLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{12}
}

func (m *SourceLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceLocation.Unmarshal(m, b)
}
func (m *SourceLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceLocation.Marshal(b, m, deterministic)
}
func (m *SourceLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceLocation.Merge(m, src)
}
func (m *SourceLocation) XXX_Size() int {
	return xxx_messageInfo_SourceLocation.Size(m)
}
func (m *SourceLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceLocation.DiscardUnknown(m)
}

var xxx_messageInfo_SourceLocation proto.InternalMessageInfo

func (m *SourceLocation) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *SourceLocation) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

type Attribute struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Options              *Option  `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty" toml:"options,omitempty" mapstructure:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Attribute) Reset()         { *m = Attribute{} }
func (m *Attribute) String() string { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()    {}
func (*Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{13}
}

func (m *Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attribute.Unmarshal(m, b)
}
func (m *Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attribute.Marshal(b, m, deterministic)
}
func (m *Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attribute.Merge(m, src)
}
func (m *Attribute) XXX_Size() int {
	return xxx_messageInfo_Attribute.Size(m)
}
func (m *Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Attribute proto.InternalMessageInfo

func (m *Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attribute) GetOptions() *Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Option struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty" toml:"description,omitempty" mapstructure:"description,omitempty"`
	Default              string   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty" toml:"default,omitempty" mapstructure:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{14}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Option) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type Support struct {
	OsName               string   `protobuf:"bytes,1,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty" toml:"os_name,omitempty" mapstructure:"os_name,omitempty"`
	OsFamily             string   `protobuf:"bytes,2,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty" toml:"os_family,omitempty" mapstructure:"os_family,omitempty"`
	Release              string   `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty" toml:"release,omitempty" mapstructure:"release,omitempty"`
	InspecVersion        string   `protobuf:"bytes,4,opt,name=inspec_version,json=inspecVersion,proto3" json:"inspec_version,omitempty" toml:"inspec_version,omitempty" mapstructure:"inspec_version,omitempty"`
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty" toml:"platform,omitempty" mapstructure:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Support) Reset()         { *m = Support{} }
func (m *Support) String() string { return proto.CompactTextString(m) }
func (*Support) ProtoMessage()    {}
func (*Support) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{15}
}

func (m *Support) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Support.Unmarshal(m, b)
}
func (m *Support) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Support.Marshal(b, m, deterministic)
}
func (m *Support) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Support.Merge(m, src)
}
func (m *Support) XXX_Size() int {
	return xxx_messageInfo_Support.Size(m)
}
func (m *Support) XXX_DiscardUnknown() {
	xxx_messageInfo_Support.DiscardUnknown(m)
}

var xxx_messageInfo_Support proto.InternalMessageInfo

func (m *Support) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *Support) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Support) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *Support) GetInspecVersion() string {
	if m != nil {
		return m.InspecVersion
	}
	return ""
}

func (m *Support) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type Dependency struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty" toml:"url,omitempty" mapstructure:"url,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty" toml:"path,omitempty" mapstructure:"path,omitempty"`
	Git                  string   `protobuf:"bytes,4,opt,name=git,proto3" json:"git,omitempty" toml:"git,omitempty" mapstructure:"git,omitempty"`
	Branch               string   `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty" toml:"branch,omitempty" mapstructure:"branch,omitempty"`
	Tag                  string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty" toml:"tag,omitempty" mapstructure:"tag,omitempty"`
	Commit               string   `protobuf:"bytes,7,opt,name=commit,proto3" json:"commit,omitempty" toml:"commit,omitempty" mapstructure:"commit,omitempty"`
	Version              string   `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	Supermarket          string   `protobuf:"bytes,9,opt,name=supermarket,proto3" json:"supermarket,omitempty" toml:"supermarket,omitempty" mapstructure:"supermarket,omitempty"`
	Github               string   `protobuf:"bytes,10,opt,name=github,proto3" json:"github,omitempty" toml:"github,omitempty" mapstructure:"github,omitempty"`
	Compliance           string   `protobuf:"bytes,11,opt,name=compliance,proto3" json:"compliance,omitempty" toml:"compliance,omitempty" mapstructure:"compliance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{16}
}

func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (m *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(m, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dependency) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Dependency) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Dependency) GetGit() string {
	if m != nil {
		return m.Git
	}
	return ""
}

func (m *Dependency) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Dependency) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Dependency) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Dependency) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Dependency) GetSupermarket() string {
	if m != nil {
		return m.Supermarket
	}
	return ""
}

func (m *Dependency) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Dependency) GetCompliance() string {
	if m != nil {
		return m.Compliance
	}
	return ""
}

type ProfileDetails struct {
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty" toml:"owner,omitempty" mapstructure:"owner,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ProfileDetails) Reset()         { *m = ProfileDetails{} }
func (m *ProfileDetails) String() string { return proto.CompactTextString(m) }
func (*ProfileDetails) ProtoMessage()    {}
func (*ProfileDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{17}
}

func (m *ProfileDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileDetails.Unmarshal(m, b)
}
func (m *ProfileDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileDetails.Marshal(b, m, deterministic)
}
func (m *ProfileDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileDetails.Merge(m, src)
}
func (m *ProfileDetails) XXX_Size() int {
	return xxx_messageInfo_ProfileDetails.Size(m)
}
func (m *ProfileDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileDetails proto.InternalMessageInfo

func (m *ProfileDetails) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ProfileDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileDetails) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CheckResult struct {
	Summary              *ResultSummary  `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty" toml:"summary,omitempty" mapstructure:"summary,omitempty"`
	Errors               []*CheckMessage `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" toml:"errors,omitempty" mapstructure:"errors,omitempty"`
	Warnings             []*CheckMessage `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty" toml:"warnings,omitempty" mapstructure:"warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32           `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CheckResult) Reset()         { *m = CheckResult{} }
func (m *CheckResult) String() string { return proto.CompactTextString(m) }
func (*CheckResult) ProtoMessage()    {}
func (*CheckResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{18}
}

func (m *CheckResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResult.Unmarshal(m, b)
}
func (m *CheckResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResult.Marshal(b, m, deterministic)
}
func (m *CheckResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResult.Merge(m, src)
}
func (m *CheckResult) XXX_Size() int {
	return xxx_messageInfo_CheckResult.Size(m)
}
func (m *CheckResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResult.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResult proto.InternalMessageInfo

func (m *CheckResult) GetSummary() *ResultSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (m *CheckResult) GetErrors() []*CheckMessage {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *CheckResult) GetWarnings() []*CheckMessage {
	if m != nil {
		return m.Warnings
	}
	return nil
}

type ResultSummary struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty" toml:"valid,omitempty" mapstructure:"valid,omitempty"`
	Timestamp            string   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty" toml:"timestamp,omitempty" mapstructure:"timestamp,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty" toml:"location,omitempty" mapstructure:"location,omitempty"`
	Controls             int32    `protobuf:"varint,4,opt,name=controls,proto3" json:"controls,omitempty" toml:"controls,omitempty" mapstructure:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ResultSummary) Reset()         { *m = ResultSummary{} }
func (m *ResultSummary) String() string { return proto.CompactTextString(m) }
func (*ResultSummary) ProtoMessage()    {}
func (*ResultSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{19}
}

func (m *ResultSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultSummary.Unmarshal(m, b)
}
func (m *ResultSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultSummary.Marshal(b, m, deterministic)
}
func (m *ResultSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultSummary.Merge(m, src)
}
func (m *ResultSummary) XXX_Size() int {
	return xxx_messageInfo_ResultSummary.Size(m)
}
func (m *ResultSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ResultSummary proto.InternalMessageInfo

func (m *ResultSummary) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ResultSummary) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ResultSummary) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ResultSummary) GetControls() int32 {
	if m != nil {
		return m.Controls
	}
	return 0
}

type CheckMessage struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty" toml:"file,omitempty" mapstructure:"file,omitempty"`
	Line                 int32    `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty" toml:"line,omitempty" mapstructure:"line,omitempty"`
	Column               int32    `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty" toml:"column,omitempty" mapstructure:"column,omitempty"`
	ControlId            string   `protobuf:"bytes,4,opt,name=control_id,json=controlId,proto3" json:"control_id,omitempty" toml:"control_id,omitempty" mapstructure:"control_id,omitempty"`
	Msg                  string   `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty" toml:"msg,omitempty" mapstructure:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CheckMessage) Reset()         { *m = CheckMessage{} }
func (m *CheckMessage) String() string { return proto.CompactTextString(m) }
func (*CheckMessage) ProtoMessage()    {}
func (*CheckMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{20}
}

func (m *CheckMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMessage.Unmarshal(m, b)
}
func (m *CheckMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMessage.Marshal(b, m, deterministic)
}
func (m *CheckMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMessage.Merge(m, src)
}
func (m *CheckMessage) XXX_Size() int {
	return xxx_messageInfo_CheckMessage.Size(m)
}
func (m *CheckMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMessage proto.InternalMessageInfo

func (m *CheckMessage) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *CheckMessage) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *CheckMessage) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

func (m *CheckMessage) GetControlId() string {
	if m != nil {
		return m.ControlId
	}
	return ""
}

func (m *CheckMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ListFilter struct {
	Values               []string `protobuf:"bytes,20,rep,name=values,proto3" json:"values,omitempty" toml:"values,omitempty" mapstructure:"values,omitempty"`
	Type                 string   `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ListFilter) Reset()         { *m = ListFilter{} }
func (m *ListFilter) String() string { return proto.CompactTextString(m) }
func (*ListFilter) ProtoMessage()    {}
func (*ListFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{21}
}

func (m *ListFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilter.Unmarshal(m, b)
}
func (m *ListFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilter.Marshal(b, m, deterministic)
}
func (m *ListFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilter.Merge(m, src)
}
func (m *ListFilter) XXX_Size() int {
	return xxx_messageInfo_ListFilter.Size(m)
}
func (m *ListFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilter proto.InternalMessageInfo

func (m *ListFilter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ListFilter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Query struct {
	Filters              []*ListFilter   `protobuf:"bytes,20,rep,name=filters,proto3" json:"filters,omitempty" toml:"filters,omitempty" mapstructure:"filters,omitempty"`
	Order                Query_OrderType `protobuf:"varint,21,opt,name=order,proto3,enum=chef.automate.domain.compliance.profiles.Query_OrderType" json:"order,omitempty" toml:"order,omitempty" mapstructure:"order,omitempty"`
	Sort                 string          `protobuf:"bytes,22,opt,name=sort,proto3" json:"sort,omitempty" toml:"sort,omitempty" mapstructure:"sort,omitempty"`
	Page                 int32           `protobuf:"varint,23,opt,name=page,proto3" json:"page,omitempty" toml:"page,omitempty" mapstructure:"page,omitempty"`
	PerPage              int32           `protobuf:"varint,24,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty" toml:"per_page,omitempty" mapstructure:"per_page,omitempty"`
	Owner                string          `protobuf:"bytes,25,opt,name=owner,proto3" json:"owner,omitempty" toml:"owner,omitempty" mapstructure:"owner,omitempty"`
	Name                 string          `protobuf:"bytes,26,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Version              string          `protobuf:"bytes,27,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte          `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32           `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ecd75a128c0cc6b, []int{22}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetFilters() []*ListFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Query) GetOrder() Query_OrderType {
	if m != nil {
		return m.Order
	}
	return Query_ASC
}

func (m *Query) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *Query) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Query) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *Query) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Query) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Query) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterEnum("chef.automate.domain.compliance.profiles.Query_OrderType", Query_OrderType_name, Query_OrderType_value)
	proto.RegisterType((*Sha256)(nil), "chef.automate.domain.compliance.profiles.Sha256")
	proto.RegisterType((*Missing)(nil), "chef.automate.domain.compliance.profiles.Missing")
	proto.RegisterType((*ProfilePostRequest)(nil), "chef.automate.domain.compliance.profiles.ProfilePostRequest")
	proto.RegisterType((*Metadata)(nil), "chef.automate.domain.compliance.profiles.Metadata")
	proto.RegisterType((*Chunk)(nil), "chef.automate.domain.compliance.profiles.Chunk")
	proto.RegisterType((*ProfileData)(nil), "chef.automate.domain.compliance.profiles.ProfileData")
	proto.RegisterType((*Profiles)(nil), "chef.automate.domain.compliance.profiles.Profiles")
	proto.RegisterType((*Profile)(nil), "chef.automate.domain.compliance.profiles.Profile")
	proto.RegisterType((*Group)(nil), "chef.automate.domain.compliance.profiles.Group")
	proto.RegisterType((*Control)(nil), "chef.automate.domain.compliance.profiles.Control")
	proto.RegisterMapType((map[string]string)(nil), "chef.automate.domain.compliance.profiles.Control.TagsEntry")
	proto.RegisterType((*Ref)(nil), "chef.automate.domain.compliance.profiles.Ref")
	proto.RegisterType((*Result)(nil), "chef.automate.domain.compliance.profiles.Result")
	proto.RegisterType((*SourceLocation)(nil), "chef.automate.domain.compliance.profiles.SourceLocation")
	proto.RegisterType((*Attribute)(nil), "chef.automate.domain.compliance.profiles.Attribute")
	proto.RegisterType((*Option)(nil), "chef.automate.domain.compliance.profiles.Option")
	proto.RegisterType((*Support)(nil), "chef.automate.domain.compliance.profiles.Support")
	proto.RegisterType((*Dependency)(nil), "chef.automate.domain.compliance.profiles.Dependency")
	proto.RegisterType((*ProfileDetails)(nil), "chef.automate.domain.compliance.profiles.ProfileDetails")
	proto.RegisterType((*CheckResult)(nil), "chef.automate.domain.compliance.profiles.CheckResult")
	proto.RegisterType((*ResultSummary)(nil), "chef.automate.domain.compliance.profiles.ResultSummary")
	proto.RegisterType((*CheckMessage)(nil), "chef.automate.domain.compliance.profiles.CheckMessage")
	proto.RegisterType((*ListFilter)(nil), "chef.automate.domain.compliance.profiles.ListFilter")
	proto.RegisterType((*Query)(nil), "chef.automate.domain.compliance.profiles.Query")
}

func init() {
	proto.RegisterFile("api/interservice/compliance/profiles/profiles.proto", fileDescriptor_9ecd75a128c0cc6b)
}

var fileDescriptor_9ecd75a128c0cc6b = []byte{
	// 1696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x8e, 0x1b, 0x49,
	0x15, 0x9e, 0xf6, 0xd8, 0x6e, 0xfb, 0x38, 0x99, 0x84, 0x4a, 0x36, 0xdb, 0xeb, 0x2c, 0xab, 0xa1,
	0x25, 0xc4, 0x70, 0x81, 0x1d, 0x1c, 0xf2, 0xc3, 0x9f, 0x50, 0x98, 0x99, 0x44, 0xbb, 0xda, 0x49,
	0xb2, 0xe5, 0x11, 0x17, 0x2b, 0x24, 0xab, 0xa6, 0x5d, 0xb6, 0x4b, 0xee, 0xee, 0x6a, 0xaa, 0xaa,
	0xb3, 0xb2, 0x90, 0x40, 0x48, 0x5c, 0xf3, 0x04, 0x3c, 0x00, 0x0f, 0xc0, 0x0d, 0x8f, 0xc0, 0x0d,
	0x3c, 0x08, 0x2f, 0x81, 0x4e, 0x55, 0x75, 0xdb, 0x03, 0xb3, 0x2b, 0x37, 0xe1, 0xee, 0x9c, 0x53,
	0x7d, 0xbe, 0x3a, 0x75, 0xfe, 0xea, 0x54, 0xc3, 0x63, 0x56, 0x88, 0xb1, 0xc8, 0x0d, 0x57, 0x9a,
	0xab, 0x77, 0x22, 0xe1, 0xe3, 0x44, 0x66, 0x45, 0x2a, 0x58, 0x9e, 0xf0, 0x71, 0xa1, 0xe4, 0x42,
	0xa4, 0x5c, 0xd7, 0xc4, 0xa8, 0x50, 0xd2, 0x48, 0x72, 0x92, 0xac, 0xf8, 0x62, 0xc4, 0x4a, 0x23,
	0x33, 0x66, 0xf8, 0x68, 0x2e, 0x33, 0x26, 0xf2, 0xd1, 0x56, 0x71, 0x54, 0x7d, 0x3f, 0xfc, 0x78,
	0x29, 0xe5, 0x32, 0xe5, 0x63, 0xdc, 0x85, 0xe5, 0xb9, 0x34, 0xcc, 0x08, 0x99, 0x7b, 0x9c, 0xe1,
	0x43, 0xbf, 0x6a, 0xb9, 0xab, 0x72, 0x31, 0xe6, 0x59, 0x61, 0x36, 0x6e, 0x31, 0x3e, 0x86, 0xee,
	0x74, 0xc5, 0x26, 0x4f, 0x9e, 0x92, 0x07, 0xd0, 0xd5, 0x96, 0x8a, 0x82, 0xe3, 0xc3, 0x93, 0x3e,
	0xf5, 0x5c, 0xfc, 0x08, 0xc2, 0x0b, 0xa1, 0xb5, 0xc8, 0x97, 0xe4, 0xbb, 0x70, 0x94, 0x39, 0x72,
	0x76, 0xed, 0xd3, 0xdb, 0x5e, 0xea, 0x90, 0xe2, 0xbf, 0x05, 0x40, 0xde, 0x3a, 0xdb, 0xde, 0x4a,
	0x6d, 0x28, 0xff, 0x4d, 0xc9, 0xb5, 0x21, 0xf7, 0xa1, 0x23, 0xbf, 0xca, 0xb9, 0x8a, 0x3a, 0xc7,
	0xc1, 0x49, 0x9f, 0x3a, 0x86, 0x9c, 0x43, 0x27, 0x59, 0x95, 0xf9, 0x3a, 0x6a, 0x1d, 0x07, 0x27,
	0x83, 0xc9, 0x78, 0xb4, 0xef, 0xa9, 0x47, 0xa7, 0xa8, 0x46, 0x9d, 0x36, 0x79, 0x09, 0xed, 0x8c,
	0x1b, 0x16, 0x1d, 0x5a, 0x94, 0xc9, 0xfe, 0x28, 0x17, 0xdc, 0xb0, 0x39, 0x33, 0x8c, 0x5a, 0xfd,
	0xf8, 0x4b, 0xe8, 0x55, 0x12, 0x42, 0xa0, 0x9d, 0xb3, 0x8c, 0x5b, 0xcb, 0xfa, 0xd4, 0xd2, 0x24,
	0x82, 0xf0, 0x1d, 0x57, 0x5a, 0xc8, 0xdc, 0x6e, 0xd5, 0xa7, 0x15, 0x4b, 0x8e, 0x61, 0x90, 0xc8,
	0xdc, 0xf0, 0xdc, 0x5c, 0x6e, 0x0a, 0x1e, 0xb5, 0xed, 0xea, 0xae, 0x28, 0x7e, 0x06, 0x1d, 0x6b,
	0x33, 0x02, 0xe3, 0x06, 0x51, 0x70, 0x1c, 0x9c, 0xdc, 0xa2, 0x96, 0x26, 0x43, 0xe8, 0x15, 0x52,
	0x0b, 0x0c, 0x9c, 0xdd, 0xf0, 0x90, 0xd6, 0x7c, 0xcc, 0x61, 0xe0, 0xfd, 0x79, 0x86, 0x9f, 0xd6,
	0x8e, 0x0c, 0x76, 0x1d, 0xd9, 0xcc, 0xda, 0xca, 0x84, 0xf6, 0xd6, 0x84, 0x58, 0x42, 0xcf, 0x6f,
	0xa3, 0xc9, 0x05, 0xf4, 0x2a, 0x17, 0xd9, 0x20, 0x0f, 0x26, 0x3f, 0xdc, 0xdf, 0xa7, 0x1e, 0x85,
	0xd6, 0x10, 0x68, 0xb2, 0x91, 0x86, 0xa5, 0xd1, 0xfd, 0xe3, 0xe0, 0xa4, 0x43, 0x1d, 0x13, 0xff,
	0xbd, 0x03, 0xa1, 0xff, 0xb6, 0x36, 0x3f, 0xd8, 0x31, 0x1f, 0xb5, 0x84, 0x49, 0xab, 0x33, 0x39,
	0x86, 0x7c, 0x02, 0x80, 0x3b, 0x1b, 0x26, 0xd0, 0x07, 0xee, 0x5c, 0x3b, 0x12, 0xf2, 0x31, 0xf4,
	0x13, 0x59, 0x6c, 0x94, 0x58, 0xae, 0x8c, 0x0f, 0xc3, 0x56, 0x40, 0xbe, 0x07, 0x77, 0x6a, 0x66,
	0xc6, 0x33, 0x26, 0x52, 0x9f, 0x8f, 0x47, 0xb5, 0xf8, 0x1c, 0xa5, 0xe8, 0xbb, 0x54, 0x24, 0x3c,
	0xd7, 0x3c, 0xea, 0x3a, 0xdf, 0x79, 0x16, 0x57, 0x74, 0x99, 0x65, 0x4c, 0x6d, 0xa2, 0xd0, 0xad,
	0x78, 0x76, 0xd7, 0xdf, 0xbd, 0xeb, 0xfe, 0xae, 0x63, 0xd6, 0xdf, 0x8d, 0xd9, 0x05, 0xf4, 0x74,
	0x59, 0x14, 0x52, 0x19, 0x1d, 0xdd, 0x6d, 0xea, 0xe5, 0xa9, 0xd3, 0xa4, 0x35, 0x04, 0x79, 0x0d,
	0xe1, 0x9c, 0x17, 0x3c, 0x9f, 0xeb, 0xe8, 0x5b, 0x16, 0xed, 0x47, 0xfb, 0xa3, 0x9d, 0x59, 0x45,
	0x9e, 0x27, 0x1b, 0x5a, 0x81, 0xec, 0xb4, 0x04, 0x62, 0xad, 0xf6, 0x1c, 0x79, 0x05, 0xdd, 0xa5,
	0x92, 0x65, 0xa1, 0xa3, 0x7b, 0x76, 0x9b, 0x06, 0x45, 0xfb, 0x0a, 0xf5, 0xa8, 0x57, 0xc7, 0xf3,
	0x63, 0x81, 0x28, 0x99, 0xea, 0xe8, 0x7e, 0xd3, 0xf3, 0x9f, 0x3a, 0x4d, 0x5a, 0x43, 0x90, 0x29,
	0x00, 0x33, 0x46, 0x89, 0xab, 0xd2, 0x70, 0x1d, 0x7d, 0x60, 0x01, 0x1f, 0xef, 0x0f, 0xf8, 0xa2,
	0xd2, 0xa5, 0x3b, 0x30, 0xd8, 0xf4, 0x52, 0x66, 0xb8, 0x36, 0xb3, 0x2a, 0xb4, 0x0f, 0xac, 0x33,
	0x6e, 0x3b, 0xe9, 0xaf, 0x9c, 0x30, 0xfe, 0x14, 0x3a, 0xf6, 0x6c, 0xe4, 0x08, 0x5a, 0x62, 0xee,
	0xd3, 0xb8, 0x25, 0xe6, 0x5f, 0x93, 0xc4, 0xc3, 0x9d, 0x93, 0x1f, 0xda, 0x26, 0x5a, 0xf3, 0xf1,
	0xbf, 0x0e, 0x21, 0xf4, 0x87, 0xfb, 0x2f, 0x34, 0x02, 0xed, 0x44, 0xce, 0xeb, 0x2a, 0x47, 0xda,
	0xd6, 0x32, 0xd7, 0x89, 0x2f, 0x05, 0x4b, 0x63, 0xe8, 0x44, 0x56, 0xb0, 0xc4, 0x55, 0x40, 0x8b,
	0x7a, 0x6e, 0x6b, 0x4d, 0x67, 0xd7, 0x1a, 0x06, 0x77, 0xb4, 0x2c, 0x55, 0xc2, 0x67, 0xa9, 0x4c,
	0xec, 0xe5, 0x61, 0x73, 0x7e, 0x30, 0x79, 0xde, 0x20, 0x1d, 0x2d, 0xc0, 0xe7, 0x5e, 0x9f, 0x1e,
	0xe9, 0x6b, 0x3c, 0xf9, 0x0c, 0x42, 0xc5, 0x75, 0x99, 0x1a, 0x1d, 0x85, 0x36, 0x30, 0x8f, 0xf6,
	0x87, 0xa6, 0x56, 0x91, 0x56, 0x00, 0xe4, 0x05, 0xb4, 0x15, 0x5f, 0xe8, 0xa8, 0x67, 0x81, 0x7e,
	0xd0, 0x04, 0x68, 0x41, 0xad, 0x2a, 0x79, 0x03, 0x6d, 0xc3, 0x96, 0x3a, 0xea, 0x5b, 0x88, 0x9f,
	0x36, 0xce, 0xba, 0xd1, 0x25, 0x5b, 0xea, 0xf3, 0xdc, 0xa8, 0x0d, 0xb5, 0x40, 0xc3, 0x67, 0xd0,
	0xaf, 0x45, 0xe4, 0x2e, 0x1c, 0xae, 0xf9, 0xc6, 0x87, 0x0d, 0x49, 0xf4, 0xfb, 0x3b, 0x96, 0x96,
	0x75, 0x16, 0x58, 0xe6, 0x27, 0xad, 0xe7, 0x41, 0xfc, 0x7d, 0x38, 0xa4, 0x7c, 0x81, 0x2a, 0xa5,
	0x4a, 0x2b, 0x95, 0x52, 0xa5, 0x28, 0x51, 0x7c, 0xe1, 0x15, 0x90, 0x8c, 0xff, 0x1a, 0x40, 0xd7,
	0xf9, 0xc2, 0x96, 0xa6, 0x61, 0xa6, 0xd4, 0x5e, 0xc3, 0x73, 0xe4, 0x21, 0x36, 0xbf, 0x39, 0x9f,
	0xd9, 0x84, 0x70, 0xaa, 0x3d, 0x14, 0x9c, 0x61, 0x52, 0x7c, 0x04, 0x3d, 0x55, 0xe6, 0x33, 0x23,
	0x32, 0x6e, 0x93, 0xa5, 0x45, 0x43, 0x55, 0xe6, 0x97, 0x22, 0xe3, 0xe4, 0xdb, 0x00, 0xda, 0x30,
	0x65, 0xdc, 0xa2, 0xef, 0x9a, 0x56, 0x62, 0x97, 0x23, 0x08, 0x33, 0xae, 0x35, 0x5b, 0x56, 0x89,
	0x53, 0xb1, 0xe4, 0x3b, 0x70, 0x4b, 0xaf, 0x45, 0x31, 0xab, 0x96, 0x5d, 0xaf, 0x1c, 0xa0, 0xec,
	0xc2, 0x89, 0xe2, 0xa7, 0x70, 0x74, 0x3d, 0x39, 0xaa, 0xa3, 0x05, 0xf5, 0xd1, 0x30, 0x87, 0x53,
	0x91, 0x3b, 0xf7, 0x74, 0xa8, 0xa5, 0xe3, 0x35, 0xf4, 0xeb, 0x92, 0xbc, 0xf1, 0x7e, 0xf8, 0x0c,
	0x42, 0x59, 0xd8, 0x51, 0xc7, 0x4f, 0x0f, 0x0d, 0x72, 0xea, 0x8d, 0x55, 0xa4, 0x15, 0x40, 0x7c,
	0x06, 0x5d, 0x27, 0xc2, 0x8b, 0x1c, 0xbd, 0xa7, 0x84, 0x65, 0xfd, 0x86, 0xbb, 0x22, 0xf4, 0xc6,
	0x9c, 0x2f, 0x58, 0x99, 0x1a, 0xef, 0xe2, 0x8a, 0x8d, 0xff, 0x1c, 0x40, 0xe8, 0xfb, 0x32, 0xf9,
	0x10, 0x42, 0xa9, 0x67, 0x3b, 0x46, 0x77, 0xa5, 0x7e, 0x8d, 0x66, 0x3f, 0x84, 0xbe, 0xd4, 0xb3,
	0x05, 0xcb, 0x44, 0xba, 0xa9, 0x62, 0x24, 0xf5, 0x4b, 0xcb, 0x23, 0xb6, 0xe2, 0x29, 0x67, 0x9a,
	0x57, 0x57, 0xb6, 0x67, 0xb1, 0x11, 0x89, 0x5c, 0x17, 0x3c, 0xa9, 0x1b, 0x91, 0x0b, 0xd3, 0x6d,
	0x27, 0xf5, 0x8d, 0xc8, 0x0e, 0x12, 0x29, 0x33, 0x0b, 0xa9, 0x32, 0x1f, 0xab, 0x9a, 0x8f, 0xff,
	0xd4, 0x02, 0xd8, 0x36, 0xfa, 0x1b, 0x7d, 0xea, 0xf3, 0xb0, 0xb5, 0xcd, 0x43, 0x02, 0xed, 0x82,
	0x99, 0x55, 0xd5, 0x5e, 0x90, 0xc6, 0xaf, 0x96, 0xa2, 0xba, 0x5d, 0x91, 0xc4, 0x84, 0xbc, 0x52,
	0x2c, 0x4f, 0x56, 0x7e, 0x53, 0xcf, 0xe1, 0x97, 0x86, 0x2d, 0x7d, 0x5a, 0x20, 0x89, 0x5f, 0x26,
	0x32, 0xcb, 0x84, 0xf1, 0xb7, 0xa7, 0xe7, 0xbe, 0xe1, 0xf2, 0x3c, 0x86, 0x81, 0x2e, 0x0b, 0xae,
	0x32, 0xa6, 0xd6, 0xdc, 0xf8, 0x2b, 0x74, 0x57, 0x84, 0x98, 0x4b, 0x61, 0x56, 0xe5, 0x55, 0x04,
	0x0e, 0xd3, 0x71, 0x38, 0x2b, 0x6c, 0x83, 0x1f, 0x0d, 0xdc, 0xac, 0xb0, 0x95, 0xc4, 0x97, 0x70,
	0x54, 0x4d, 0x56, 0xdc, 0x30, 0x91, 0xea, 0xff, 0xc7, 0x70, 0x15, 0xff, 0xb1, 0x05, 0x83, 0xd3,
	0x15, 0x4f, 0xd6, 0xbe, 0x58, 0xbf, 0xd8, 0x0e, 0x0c, 0x81, 0xcd, 0xd3, 0x67, 0x4d, 0x7b, 0xdf,
	0xd4, 0xa9, 0x6f, 0x27, 0x8d, 0xd7, 0xd0, 0xe5, 0x4a, 0x49, 0x85, 0x99, 0x8f, 0x1d, 0xec, 0x69,
	0x93, 0xb9, 0x99, 0x27, 0x6b, 0x5f, 0x9b, 0xd4, 0xa3, 0x10, 0x0a, 0xbd, 0xaf, 0x98, 0xca, 0x45,
	0xbe, 0x74, 0xf7, 0xd1, 0xff, 0x8e, 0x58, 0xe3, 0xc4, 0xbf, 0x85, 0xdb, 0xd7, 0xac, 0xf7, 0x4d,
	0xd0, 0xdf, 0x67, 0x3d, 0xea, 0x18, 0x9c, 0xd7, 0xb0, 0xe9, 0x68, 0xc3, 0xb2, 0xc2, 0x3b, 0x78,
	0x2b, 0xc0, 0x74, 0xae, 0xef, 0x24, 0xe7, 0xe6, 0x9a, 0xbf, 0x76, 0x89, 0xb6, 0x6d, 0xe3, 0xd8,
	0x5e, 0xa2, 0xbf, 0x87, 0x5b, 0xbb, 0x66, 0x61, 0x04, 0xd1, 0xd8, 0x2a, 0xd7, 0xab, 0x99, 0xf3,
	0x3f, 0x9b, 0x8e, 0xcb, 0xce, 0xb4, 0xcc, 0xdc, 0x6e, 0x1d, 0xea, 0x39, 0x6c, 0x90, 0x1e, 0x7b,
	0x26, 0xe6, 0xdb, 0xb1, 0xd2, 0x4a, 0x3e, 0x9d, 0x63, 0x9a, 0x67, 0x7a, 0xe9, 0x73, 0x1f, 0xc9,
	0xf8, 0x39, 0xc0, 0xe7, 0x42, 0x9b, 0x97, 0x22, 0x35, 0x5c, 0x21, 0xac, 0x6d, 0xf9, 0x6e, 0xce,
	0xe9, 0x53, 0xcf, 0xa1, 0x09, 0x06, 0x9f, 0x0b, 0x1f, 0x38, 0xb3, 0x90, 0x8e, 0xff, 0xd9, 0x82,
	0xce, 0x17, 0x25, 0xb7, 0x51, 0x0e, 0x17, 0x56, 0xbf, 0x1a, 0x8f, 0x1a, 0x0c, 0x74, 0xdb, 0xcd,
	0x69, 0x05, 0x42, 0xde, 0x40, 0x47, 0xaa, 0x39, 0x57, 0x76, 0xbb, 0xa3, 0xc9, 0x8f, 0xf7, 0x47,
	0xb3, 0xf6, 0x8c, 0xde, 0xa0, 0x32, 0xbe, 0x65, 0xa8, 0xc3, 0x41, 0xf3, 0xb5, 0x54, 0xc6, 0x8f,
	0x44, 0x96, 0x76, 0xfd, 0x62, 0xc9, 0xa3, 0x0f, 0x9d, 0x57, 0x91, 0xc6, 0x9b, 0xa7, 0xe0, 0x6a,
	0x66, 0xe5, 0x91, 0x95, 0x87, 0x05, 0x57, 0x6f, 0x71, 0xa9, 0x2e, 0xb8, 0x8f, 0x6e, 0x2a, 0xb8,
	0xe1, 0xcd, 0x05, 0xf7, 0xf0, 0x7a, 0xc1, 0x7d, 0x02, 0xfd, 0xda, 0x34, 0x12, 0xc2, 0xe1, 0x8b,
	0xe9, 0xe9, 0xdd, 0x03, 0xd2, 0x83, 0xf6, 0xd9, 0xf9, 0xf4, 0xf4, 0x6e, 0x30, 0xf9, 0x47, 0x07,
	0xee, 0x54, 0x4f, 0x9b, 0xa9, 0x7b, 0x81, 0x93, 0x3f, 0x04, 0xd0, 0x3d, 0x55, 0x9c, 0x19, 0x4e,
	0x7e, 0xd6, 0xf8, 0x69, 0xb3, 0xf3, 0xae, 0x1d, 0x3e, 0x69, 0x58, 0x28, 0xae, 0x26, 0xe2, 0x83,
	0x93, 0x80, 0x94, 0xd0, 0xa6, 0x9c, 0xcd, 0xc9, 0xf3, 0xc6, 0x06, 0xf8, 0x76, 0x35, 0x6c, 0xfe,
	0x2a, 0x8b, 0x0f, 0xc8, 0xef, 0x20, 0xc4, 0x6d, 0x2f, 0x99, 0x7a, 0x8f, 0x9d, 0x9f, 0x34, 0xd7,
	0xc4, 0x47, 0xe6, 0xc1, 0xa3, 0x80, 0xfc, 0x1a, 0xba, 0x67, 0x3c, 0xe5, 0x86, 0xbf, 0xc7, 0xf6,
	0x0f, 0x46, 0xee, 0xb7, 0xc6, 0xa8, 0xfa, 0xad, 0x31, 0x3a, 0xcf, 0x0a, 0xb3, 0x89, 0x0f, 0x48,
	0x06, 0x6d, 0xcc, 0x7d, 0x32, 0x6e, 0x98, 0xdd, 0xc3, 0x49, 0x63, 0x63, 0x74, 0x7c, 0x40, 0x34,
	0xc0, 0x05, 0x37, 0x6c, 0xca, 0x99, 0x4a, 0x56, 0xa4, 0xc1, 0x04, 0xe2, 0xfe, 0x96, 0x34, 0x89,
	0xa0, 0xff, 0x0f, 0x13, 0x1f, 0x4c, 0xfe, 0x12, 0xc0, 0xfd, 0xca, 0x86, 0x17, 0xf3, 0x4c, 0xe4,
	0x55, 0x56, 0xbf, 0x82, 0x7b, 0x94, 0x5f, 0x95, 0x22, 0x9d, 0x9f, 0xa7, 0x4c, 0x1b, 0x91, 0x9c,
	0xb2, 0x64, 0xc5, 0xc9, 0xd7, 0x78, 0xeb, 0x1b, 0xbc, 0xf8, 0x0a, 0xee, 0x5d, 0x88, 0xa5, 0x62,
	0x86, 0x9f, 0x09, 0xbd, 0xae, 0xff, 0x0b, 0x34, 0x06, 0xfa, 0xe5, 0x2f, 0xbe, 0xfc, 0xb9, 0xbb,
	0x8c, 0xf1, 0x48, 0x63, 0x3c, 0xeb, 0xb8, 0x3a, 0xeb, 0x78, 0x9f, 0xdf, 0x62, 0x57, 0x5d, 0x0b,
	0xf9, 0xf8, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x09, 0xd9, 0x39, 0x99, 0x45, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProfilesServiceClient is the client API for ProfilesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfilesServiceClient interface {
	// grpc gateway is not able to handle multi-part upload; https://github.com/grpc-ecosystem/grpc-gateway/issues/410
	// so we do not auto-generate the route for profile upload
	Create(ctx context.Context, opts ...grpc.CallOption) (ProfilesService_CreateClient, error)
	Read(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error)
	ReadTar(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (ProfilesService_ReadTarClient, error)
	Delete(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*empty.Empty, error)
	List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profiles, error)
	MetaSearch(ctx context.Context, in *Sha256, opts ...grpc.CallOption) (*Missing, error)
}

type profilesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfilesServiceClient(cc grpc.ClientConnInterface) ProfilesServiceClient {
	return &profilesServiceClient{cc}
}

func (c *profilesServiceClient) Create(ctx context.Context, opts ...grpc.CallOption) (ProfilesService_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProfilesService_serviceDesc.Streams[0], "/chef.automate.domain.compliance.profiles.ProfilesService/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &profilesServiceCreateClient{stream}
	return x, nil
}

type ProfilesService_CreateClient interface {
	Send(*ProfilePostRequest) error
	CloseAndRecv() (*CheckResult, error)
	grpc.ClientStream
}

type profilesServiceCreateClient struct {
	grpc.ClientStream
}

func (x *profilesServiceCreateClient) Send(m *ProfilePostRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *profilesServiceCreateClient) CloseAndRecv() (*CheckResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CheckResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *profilesServiceClient) Read(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) ReadTar(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (ProfilesService_ReadTarClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProfilesService_serviceDesc.Streams[1], "/chef.automate.domain.compliance.profiles.ProfilesService/ReadTar", opts...)
	if err != nil {
		return nil, err
	}
	x := &profilesServiceReadTarClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProfilesService_ReadTarClient interface {
	Recv() (*ProfileData, error)
	grpc.ClientStream
}

type profilesServiceReadTarClient struct {
	grpc.ClientStream
}

func (x *profilesServiceReadTarClient) Recv() (*ProfileData, error) {
	m := new(ProfileData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *profilesServiceClient) Delete(ctx context.Context, in *ProfileDetails, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) List(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profiles, error) {
	out := new(Profiles)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) MetaSearch(ctx context.Context, in *Sha256, opts ...grpc.CallOption) (*Missing, error) {
	out := new(Missing)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesService/MetaSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfilesServiceServer is the server API for ProfilesService service.
type ProfilesServiceServer interface {
	// grpc gateway is not able to handle multi-part upload; https://github.com/grpc-ecosystem/grpc-gateway/issues/410
	// so we do not auto-generate the route for profile upload
	Create(ProfilesService_CreateServer) error
	Read(context.Context, *ProfileDetails) (*Profile, error)
	ReadTar(*ProfileDetails, ProfilesService_ReadTarServer) error
	Delete(context.Context, *ProfileDetails) (*empty.Empty, error)
	List(context.Context, *Query) (*Profiles, error)
	MetaSearch(context.Context, *Sha256) (*Missing, error)
}

// UnimplementedProfilesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProfilesServiceServer struct {
}

func (*UnimplementedProfilesServiceServer) Create(srv ProfilesService_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProfilesServiceServer) Read(ctx context.Context, req *ProfileDetails) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedProfilesServiceServer) ReadTar(req *ProfileDetails, srv ProfilesService_ReadTarServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTar not implemented")
}
func (*UnimplementedProfilesServiceServer) Delete(ctx context.Context, req *ProfileDetails) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedProfilesServiceServer) List(ctx context.Context, req *Query) (*Profiles, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedProfilesServiceServer) MetaSearch(ctx context.Context, req *Sha256) (*Missing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaSearch not implemented")
}

func RegisterProfilesServiceServer(s *grpc.Server, srv ProfilesServiceServer) {
	s.RegisterService(&_ProfilesService_serviceDesc, srv)
}

func _ProfilesService_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProfilesServiceServer).Create(&profilesServiceCreateServer{stream})
}

type ProfilesService_CreateServer interface {
	SendAndClose(*CheckResult) error
	Recv() (*ProfilePostRequest, error)
	grpc.ServerStream
}

type profilesServiceCreateServer struct {
	grpc.ServerStream
}

func (x *profilesServiceCreateServer) SendAndClose(m *CheckResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *profilesServiceCreateServer) Recv() (*ProfilePostRequest, error) {
	m := new(ProfilePostRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProfilesService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).Read(ctx, req.(*ProfileDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_ReadTar_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProfileDetails)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProfilesServiceServer).ReadTar(m, &profilesServiceReadTarServer{stream})
}

type ProfilesService_ReadTarServer interface {
	Send(*ProfileData) error
	grpc.ServerStream
}

type profilesServiceReadTarServer struct {
	grpc.ServerStream
}

func (x *profilesServiceReadTarServer) Send(m *ProfileData) error {
	return x.ServerStream.SendMsg(m)
}

func _ProfilesService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).Delete(ctx, req.(*ProfileDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).List(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_MetaSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Sha256)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).MetaSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesService/MetaSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).MetaSearch(ctx, req.(*Sha256))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfilesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.compliance.profiles.ProfilesService",
	HandlerType: (*ProfilesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _ProfilesService_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ProfilesService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ProfilesService_List_Handler,
		},
		{
			MethodName: "MetaSearch",
			Handler:    _ProfilesService_MetaSearch_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _ProfilesService_Create_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReadTar",
			Handler:       _ProfilesService_ReadTar_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/interservice/compliance/profiles/profiles.proto",
}

// ProfilesAdminServiceClient is the client API for ProfilesAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfilesAdminServiceClient interface {
	RebuildElasticCache(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	MigrateDiskProfiles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type profilesAdminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfilesAdminServiceClient(cc grpc.ClientConnInterface) ProfilesAdminServiceClient {
	return &profilesAdminServiceClient{cc}
}

func (c *profilesAdminServiceClient) RebuildElasticCache(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesAdminService/RebuildElasticCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesAdminServiceClient) MigrateDiskProfiles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.profiles.ProfilesAdminService/MigrateDiskProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfilesAdminServiceServer is the server API for ProfilesAdminService service.
type ProfilesAdminServiceServer interface {
	RebuildElasticCache(context.Context, *empty.Empty) (*empty.Empty, error)
	MigrateDiskProfiles(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedProfilesAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProfilesAdminServiceServer struct {
}

func (*UnimplementedProfilesAdminServiceServer) RebuildElasticCache(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RebuildElasticCache not implemented")
}
func (*UnimplementedProfilesAdminServiceServer) MigrateDiskProfiles(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateDiskProfiles not implemented")
}

func RegisterProfilesAdminServiceServer(s *grpc.Server, srv ProfilesAdminServiceServer) {
	s.RegisterService(&_ProfilesAdminService_serviceDesc, srv)
}

func _ProfilesAdminService_RebuildElasticCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesAdminServiceServer).RebuildElasticCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesAdminService/RebuildElasticCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesAdminServiceServer).RebuildElasticCache(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesAdminService_MigrateDiskProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesAdminServiceServer).MigrateDiskProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.profiles.ProfilesAdminService/MigrateDiskProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesAdminServiceServer).MigrateDiskProfiles(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfilesAdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.compliance.profiles.ProfilesAdminService",
	HandlerType: (*ProfilesAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RebuildElasticCache",
			Handler:    _ProfilesAdminService_RebuildElasticCache_Handler,
		},
		{
			MethodName: "MigrateDiskProfiles",
			Handler:    _ProfilesAdminService_MigrateDiskProfiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/interservice/compliance/profiles/profiles.proto",
}
