syntax = "proto3";

package chef.automate.domain.compliance.profiles;
option go_package = "github.com/chef/automate/api/interservice/compliance/profiles";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service ProfilesService {
    // grpc gateway is not able to handle multi-part upload; https://github.com/grpc-ecosystem/grpc-gateway/issues/410
    // so we do not auto-generate the route for profile upload
    rpc Create (stream ProfilePostRequest) returns (CheckResult) {};
    rpc Read (ProfileDetails) returns (Profile) {};
    rpc ReadTar(ProfileDetails) returns (stream ProfileData) {};
    rpc Delete (ProfileDetails) returns (google.protobuf.Empty) {};
    rpc List (Query) returns (Profiles) {};
    rpc MetaSearch(Sha256) returns (Missing) {};
}

// no public api, just for administration
service ProfilesAdminService {
    rpc RebuildElasticCache(google.protobuf.Empty) returns (google.protobuf.Empty) {};
    rpc MigrateDiskProfiles(google.protobuf.Empty) returns (google.protobuf.Empty) {};
}

message Sha256 {
	repeated string sha256 = 1;
}

message Missing {
	repeated string missing_sha256 = 1;
}

message ProfilePostRequest {
    string owner = 5;
    Chunk chunk = 2;
    Metadata meta =3;
}

message Metadata {
    string name = 2;
    string version = 3;
    // The field must be `contentType` in the JSON representation
    // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
    string contentType =4;
}
message Chunk {
    bytes data = 1;
    int64 position = 2;
}

message ProfileData {
    string owner = 1;
    string name = 2;
    string version = 3;
    bytes data = 4;
}
message Profiles {
    repeated Profile profiles = 1;
    int32 total = 20;
}
message Profile {
    string name = 1;
    string title = 2;
    string maintainer = 3;
    string copyright = 4;
    string copyright_email = 5;
    string license = 6;
    string summary = 7;
    string version = 8;
    string owner = 9;
    repeated Support supports = 16;
    repeated Dependency depends = 17;
    string sha256 = 18;
    repeated Group groups = 19;
    repeated Control controls = 20;
    repeated Attribute attributes = 21;
    string latest_version = 22;
}
message Group {
    string id = 1;
    string title = 2;
    repeated string controls = 3;
}
message Control {
    string id = 1;
    string code = 2;
    string desc = 3;
    float impact = 4;
    string title = 5;
    SourceLocation source_location = 6;
    repeated Result results = 7;
    repeated Ref refs = 8;
    map<string, string> tags = 9;
}

message Ref {
    string url = 1;
    string ref = 2;
}
message Result {
    string status = 1;
    string code_desc = 2;
    float run_time = 3;
    string start_time = 4;
    string message = 5;
    string skip_message = 6;
}
message SourceLocation {
    string ref = 1;
    int32 line = 2;
}
message Attribute {
    string name = 1;
    Option options = 2;
}
message Option {
    string description = 1;
    string default = 2;
}
message Support {
    string os_name = 1;
    string os_family = 2;
    string release = 3;
    string inspec_version = 4;
    string platform = 5;
}

message Dependency {
    string name = 1;
    string url = 2;
    string path = 3;
    string git = 4;
    string branch = 5;
    string tag = 6;
    string commit = 7;
    string version = 8;
    string supermarket = 9;
    string github = 10;
    string compliance = 11;
}
message ProfileDetails {
    string owner = 1;
    string name = 2;
    string version = 3;
}

message CheckResult {
    ResultSummary summary = 1;
    repeated CheckMessage errors = 2;
    repeated CheckMessage warnings = 3;
}
message ResultSummary {
    bool valid = 1;
    string timestamp = 2;
    string location = 3;
    int32 controls = 4;
}
message CheckMessage {
    string file = 1;
    int32 line = 2;
    int32 column = 3;
    string control_id = 4;
    string msg = 5;
}
message ListFilter {
    repeated string values = 20;
    string type = 21;
}
message Query {
    repeated ListFilter filters = 20;
    enum OrderType {
        ASC = 0;
        DESC = 1;
    }
    OrderType order = 21;
    string sort = 22;
    int32 page = 23;
    int32 per_page = 24;
    string owner = 25;
    string name = 26;
    string version = 27;
}
