// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.0
// source: interservice/compliance/stats/stats.proto

package stats

import (
	context "context"
	reporting "github.com/chef/automate/api/interservice/compliance/reporting"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Query_OrderType int32

const (
	Query_ASC  Query_OrderType = 0
	Query_DESC Query_OrderType = 1
)

// Enum value maps for Query_OrderType.
var (
	Query_OrderType_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	Query_OrderType_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x Query_OrderType) Enum() *Query_OrderType {
	p := new(Query_OrderType)
	*p = x
	return p
}

func (x Query_OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_interservice_compliance_stats_stats_proto_enumTypes[0].Descriptor()
}

func (Query_OrderType) Type() protoreflect.EnumType {
	return &file_interservice_compliance_stats_stats_proto_enumTypes[0]
}

func (x Query_OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_OrderType.Descriptor instead.
func (Query_OrderType) EnumDescriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{1, 0}
}

type ListFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,20,rep,name=values,proto3" json:"values,omitempty" toml:"values,omitempty" mapstructure:"values,omitempty"`
	Type          string                 `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilter) Reset() {
	*x = ListFilter{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilter) ProtoMessage() {}

func (x *ListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilter.ProtoReflect.Descriptor instead.
func (*ListFilter) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{0}
}

func (x *ListFilter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListFilter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,17,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Type          string                 `protobuf:"bytes,19,opt,name=type,proto3" json:"type,omitempty" toml:"type,omitempty" mapstructure:"type,omitempty"`
	Size          int32                  `protobuf:"varint,18,opt,name=size,proto3" json:"size,omitempty" toml:"size,omitempty" mapstructure:"size,omitempty"`
	Interval      int32                  `protobuf:"varint,25,opt,name=interval,proto3" json:"interval,omitempty" toml:"interval,omitempty" mapstructure:"interval,omitempty"`
	Filters       []*ListFilter          `protobuf:"bytes,20,rep,name=filters,proto3" json:"filters,omitempty" toml:"filters,omitempty" mapstructure:"filters,omitempty"`
	Order         Query_OrderType        `protobuf:"varint,21,opt,name=order,proto3,enum=chef.automate.domain.compliance.stats.Query_OrderType" json:"order,omitempty" toml:"order,omitempty" mapstructure:"order,omitempty"`
	Sort          string                 `protobuf:"bytes,22,opt,name=sort,proto3" json:"sort,omitempty" toml:"sort,omitempty" mapstructure:"sort,omitempty"`
	Page          int32                  `protobuf:"varint,23,opt,name=page,proto3" json:"page,omitempty" toml:"page,omitempty" mapstructure:"page,omitempty"`
	PerPage       int32                  `protobuf:"varint,24,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty" toml:"per_page,omitempty" mapstructure:"per_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Query) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Query) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Query) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Query) GetFilters() []*ListFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Query) GetOrder() Query_OrderType {
	if x != nil {
		return x.Order
	}
	return Query_ASC
}

func (x *Query) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *Query) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Query) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type Summary struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ControlsSummary *ControlsSummary       `protobuf:"bytes,1,opt,name=controls_summary,json=controlsSummary,proto3" json:"controls_summary,omitempty" toml:"controls_summary,omitempty" mapstructure:"controls_summary,omitempty"`
	NodeSummary     *NodeSummary           `protobuf:"bytes,2,opt,name=node_summary,json=nodeSummary,proto3" json:"node_summary,omitempty" toml:"node_summary,omitempty" mapstructure:"node_summary,omitempty"`
	ReportSummary   *ReportSummary         `protobuf:"bytes,3,opt,name=report_summary,json=reportSummary,proto3" json:"report_summary,omitempty" toml:"report_summary,omitempty" mapstructure:"report_summary,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Summary) Reset() {
	*x = Summary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{2}
}

func (x *Summary) GetControlsSummary() *ControlsSummary {
	if x != nil {
		return x.ControlsSummary
	}
	return nil
}

func (x *Summary) GetNodeSummary() *NodeSummary {
	if x != nil {
		return x.NodeSummary
	}
	return nil
}

func (x *Summary) GetReportSummary() *ReportSummary {
	if x != nil {
		return x.ReportSummary
	}
	return nil
}

type ControlsSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Failures      int32                  `protobuf:"varint,1,opt,name=failures,proto3" json:"failures,omitempty" toml:"failures,omitempty" mapstructure:"failures,omitempty"`
	Majors        int32                  `protobuf:"varint,2,opt,name=majors,proto3" json:"majors,omitempty" toml:"majors,omitempty" mapstructure:"majors,omitempty"`
	Minors        int32                  `protobuf:"varint,3,opt,name=minors,proto3" json:"minors,omitempty" toml:"minors,omitempty" mapstructure:"minors,omitempty"`
	Criticals     int32                  `protobuf:"varint,4,opt,name=criticals,proto3" json:"criticals,omitempty" toml:"criticals,omitempty" mapstructure:"criticals,omitempty"`
	Passed        int32                  `protobuf:"varint,5,opt,name=passed,proto3" json:"passed,omitempty" toml:"passed,omitempty" mapstructure:"passed,omitempty"`
	Skipped       int32                  `protobuf:"varint,6,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Waived        int32                  `protobuf:"varint,7,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlsSummary) Reset() {
	*x = ControlsSummary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlsSummary) ProtoMessage() {}

func (x *ControlsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlsSummary.ProtoReflect.Descriptor instead.
func (*ControlsSummary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{3}
}

func (x *ControlsSummary) GetFailures() int32 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *ControlsSummary) GetMajors() int32 {
	if x != nil {
		return x.Majors
	}
	return 0
}

func (x *ControlsSummary) GetMinors() int32 {
	if x != nil {
		return x.Minors
	}
	return 0
}

func (x *ControlsSummary) GetCriticals() int32 {
	if x != nil {
		return x.Criticals
	}
	return 0
}

func (x *ControlsSummary) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *ControlsSummary) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ControlsSummary) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type NodeSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Compliant     int32                  `protobuf:"varint,1,opt,name=compliant,proto3" json:"compliant,omitempty" toml:"compliant,omitempty" mapstructure:"compliant,omitempty"`
	Skipped       int32                  `protobuf:"varint,2,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Noncompliant  int32                  `protobuf:"varint,3,opt,name=noncompliant,proto3" json:"noncompliant,omitempty" toml:"noncompliant,omitempty" mapstructure:"noncompliant,omitempty"`
	HighRisk      int32                  `protobuf:"varint,4,opt,name=high_risk,json=highRisk,proto3" json:"high_risk,omitempty" toml:"high_risk,omitempty" mapstructure:"high_risk,omitempty"`
	MediumRisk    int32                  `protobuf:"varint,5,opt,name=medium_risk,json=mediumRisk,proto3" json:"medium_risk,omitempty" toml:"medium_risk,omitempty" mapstructure:"medium_risk,omitempty"`
	LowRisk       int32                  `protobuf:"varint,6,opt,name=low_risk,json=lowRisk,proto3" json:"low_risk,omitempty" toml:"low_risk,omitempty" mapstructure:"low_risk,omitempty"`
	Waived        int32                  `protobuf:"varint,7,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeSummary) Reset() {
	*x = NodeSummary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummary) ProtoMessage() {}

func (x *NodeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummary.ProtoReflect.Descriptor instead.
func (*NodeSummary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{4}
}

func (x *NodeSummary) GetCompliant() int32 {
	if x != nil {
		return x.Compliant
	}
	return 0
}

func (x *NodeSummary) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *NodeSummary) GetNoncompliant() int32 {
	if x != nil {
		return x.Noncompliant
	}
	return 0
}

func (x *NodeSummary) GetHighRisk() int32 {
	if x != nil {
		return x.HighRisk
	}
	return 0
}

func (x *NodeSummary) GetMediumRisk() int32 {
	if x != nil {
		return x.MediumRisk
	}
	return 0
}

func (x *NodeSummary) GetLowRisk() int32 {
	if x != nil {
		return x.LowRisk
	}
	return 0
}

func (x *NodeSummary) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type Stats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// int64 types render into string types when serialized to satisfy all browsers
	// we don't really need for nodes counts to be int64 as int32 limits us to 2billion nodes which is plenty for now
	// we are therefore deprecating nodes and favor nodesCnt
	//
	// Deprecated: Marked as deprecated in interservice/compliance/stats/stats.proto.
	Nodes         int64 `protobuf:"varint,1,opt,name=nodes,proto3" json:"nodes,omitempty" toml:"nodes,omitempty" mapstructure:"nodes,omitempty"`
	Platforms     int32 `protobuf:"varint,2,opt,name=platforms,proto3" json:"platforms,omitempty" toml:"platforms,omitempty" mapstructure:"platforms,omitempty"`
	Environments  int32 `protobuf:"varint,3,opt,name=environments,proto3" json:"environments,omitempty" toml:"environments,omitempty" mapstructure:"environments,omitempty"`
	Profiles      int32 `protobuf:"varint,4,opt,name=profiles,proto3" json:"profiles,omitempty" toml:"profiles,omitempty" mapstructure:"profiles,omitempty"`
	NodesCnt      int32 `protobuf:"varint,5,opt,name=nodes_cnt,json=nodesCnt,proto3" json:"nodes_cnt,omitempty" toml:"nodes_cnt,omitempty" mapstructure:"nodes_cnt,omitempty"`
	Controls      int32 `protobuf:"varint,6,opt,name=controls,proto3" json:"controls,omitempty" toml:"controls,omitempty" mapstructure:"controls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{5}
}

// Deprecated: Marked as deprecated in interservice/compliance/stats/stats.proto.
func (x *Stats) GetNodes() int64 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

func (x *Stats) GetPlatforms() int32 {
	if x != nil {
		return x.Platforms
	}
	return 0
}

func (x *Stats) GetEnvironments() int32 {
	if x != nil {
		return x.Environments
	}
	return 0
}

func (x *Stats) GetProfiles() int32 {
	if x != nil {
		return x.Profiles
	}
	return 0
}

func (x *Stats) GetNodesCnt() int32 {
	if x != nil {
		return x.NodesCnt
	}
	return 0
}

func (x *Stats) GetControls() int32 {
	if x != nil {
		return x.Controls
	}
	return 0
}

type ReportSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty" mapstructure:"status,omitempty"`
	Duration      float64                `protobuf:"fixed64,2,opt,name=duration,proto3" json:"duration,omitempty" toml:"duration,omitempty" mapstructure:"duration,omitempty"`
	StartDate     string                 `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" toml:"start_date,omitempty" mapstructure:"start_date,omitempty"`
	Stats         *Stats                 `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty" toml:"stats,omitempty" mapstructure:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSummary) Reset() {
	*x = ReportSummary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSummary) ProtoMessage() {}

func (x *ReportSummary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSummary.ProtoReflect.Descriptor instead.
func (*ReportSummary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{6}
}

func (x *ReportSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReportSummary) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ReportSummary) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ReportSummary) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Trend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportTime    string                 `protobuf:"bytes,1,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty" toml:"report_time,omitempty" mapstructure:"report_time,omitempty"`
	Passed        int32                  `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty" toml:"passed,omitempty" mapstructure:"passed,omitempty"`
	Failed        int32                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty" toml:"failed,omitempty" mapstructure:"failed,omitempty"`
	Skipped       int32                  `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Waived        int32                  `protobuf:"varint,5,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trend) Reset() {
	*x = Trend{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trend) ProtoMessage() {}

func (x *Trend) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trend.ProtoReflect.Descriptor instead.
func (*Trend) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{7}
}

func (x *Trend) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

func (x *Trend) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *Trend) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *Trend) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *Trend) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type Trends struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trends        []*Trend               `protobuf:"bytes,1,rep,name=trends,proto3" json:"trends,omitempty" toml:"trends,omitempty" mapstructure:"trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trends) Reset() {
	*x = Trends{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trends) ProtoMessage() {}

func (x *Trends) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trends.ProtoReflect.Descriptor instead.
func (*Trends) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{8}
}

func (x *Trends) GetTrends() []*Trend {
	if x != nil {
		return x.Trends
	}
	return nil
}

type Profile struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProfileList    []*ProfileList         `protobuf:"bytes,1,rep,name=profile_list,json=profileList,proto3" json:"profile_list,omitempty" toml:"profile_list,omitempty" mapstructure:"profile_list,omitempty"`
	ProfileSummary *ProfileSummary        `protobuf:"bytes,2,opt,name=profile_summary,json=profileSummary,proto3" json:"profile_summary,omitempty" toml:"profile_summary,omitempty" mapstructure:"profile_summary,omitempty"`
	ControlStats   []*ControlStats        `protobuf:"bytes,3,rep,name=control_stats,json=controlStats,proto3" json:"control_stats,omitempty" toml:"control_stats,omitempty" mapstructure:"control_stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{9}
}

func (x *Profile) GetProfileList() []*ProfileList {
	if x != nil {
		return x.ProfileList
	}
	return nil
}

func (x *Profile) GetProfileSummary() *ProfileSummary {
	if x != nil {
		return x.ProfileSummary
	}
	return nil
}

func (x *Profile) GetControlStats() []*ControlStats {
	if x != nil {
		return x.ControlStats
	}
	return nil
}

type ProfileList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Failures      int32                  `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty" toml:"failures,omitempty" mapstructure:"failures,omitempty"`
	Majors        int32                  `protobuf:"varint,4,opt,name=majors,proto3" json:"majors,omitempty" toml:"majors,omitempty" mapstructure:"majors,omitempty"`
	Minors        int32                  `protobuf:"varint,5,opt,name=minors,proto3" json:"minors,omitempty" toml:"minors,omitempty" mapstructure:"minors,omitempty"`
	Criticals     int32                  `protobuf:"varint,6,opt,name=criticals,proto3" json:"criticals,omitempty" toml:"criticals,omitempty" mapstructure:"criticals,omitempty"`
	Passed        int32                  `protobuf:"varint,7,opt,name=passed,proto3" json:"passed,omitempty" toml:"passed,omitempty" mapstructure:"passed,omitempty"`
	Skipped       int32                  `protobuf:"varint,8,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Waived        int32                  `protobuf:"varint,9,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileList) Reset() {
	*x = ProfileList{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileList) ProtoMessage() {}

func (x *ProfileList) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileList.ProtoReflect.Descriptor instead.
func (*ProfileList) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{10}
}

func (x *ProfileList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProfileList) GetFailures() int32 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *ProfileList) GetMajors() int32 {
	if x != nil {
		return x.Majors
	}
	return 0
}

func (x *ProfileList) GetMinors() int32 {
	if x != nil {
		return x.Minors
	}
	return 0
}

func (x *ProfileList) GetCriticals() int32 {
	if x != nil {
		return x.Criticals
	}
	return 0
}

func (x *ProfileList) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *ProfileList) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ProfileList) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type ProfileSummary struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Name           string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Title          string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	Version        string                  `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty" mapstructure:"version,omitempty"`
	License        string                  `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty" toml:"license,omitempty" mapstructure:"license,omitempty"`
	Maintainer     string                  `protobuf:"bytes,5,opt,name=maintainer,proto3" json:"maintainer,omitempty" toml:"maintainer,omitempty" mapstructure:"maintainer,omitempty"`
	Copyright      string                  `protobuf:"bytes,6,opt,name=copyright,proto3" json:"copyright,omitempty" toml:"copyright,omitempty" mapstructure:"copyright,omitempty"`
	CopyrightEmail string                  `protobuf:"bytes,7,opt,name=copyright_email,json=copyrightEmail,proto3" json:"copyright_email,omitempty" toml:"copyright_email,omitempty" mapstructure:"copyright_email,omitempty"`
	Summary        string                  `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty" toml:"summary,omitempty" mapstructure:"summary,omitempty"`
	Supports       []*Support              `protobuf:"bytes,9,rep,name=supports,proto3" json:"supports,omitempty" toml:"supports,omitempty" mapstructure:"supports,omitempty"`
	Stats          *ProfileSummaryStats    `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty" toml:"stats,omitempty" mapstructure:"stats,omitempty"`
	Depends        []*reporting.Dependency `protobuf:"bytes,11,rep,name=depends,proto3" json:"depends,omitempty" toml:"depends,omitempty" mapstructure:"depends,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProfileSummary) Reset() {
	*x = ProfileSummary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSummary) ProtoMessage() {}

func (x *ProfileSummary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSummary.ProtoReflect.Descriptor instead.
func (*ProfileSummary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{11}
}

func (x *ProfileSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProfileSummary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProfileSummary) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ProfileSummary) GetMaintainer() string {
	if x != nil {
		return x.Maintainer
	}
	return ""
}

func (x *ProfileSummary) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *ProfileSummary) GetCopyrightEmail() string {
	if x != nil {
		return x.CopyrightEmail
	}
	return ""
}

func (x *ProfileSummary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ProfileSummary) GetSupports() []*Support {
	if x != nil {
		return x.Supports
	}
	return nil
}

func (x *ProfileSummary) GetStats() *ProfileSummaryStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ProfileSummary) GetDepends() []*reporting.Dependency {
	if x != nil {
		return x.Depends
	}
	return nil
}

type ProfileSummaryStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Failed        int32                  `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty" toml:"failed,omitempty" mapstructure:"failed,omitempty"`
	Passed        int32                  `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty" toml:"passed,omitempty" mapstructure:"passed,omitempty"`
	Skipped       int32                  `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	FailedNodes   int32                  `protobuf:"varint,4,opt,name=failed_nodes,json=failedNodes,proto3" json:"failed_nodes,omitempty" toml:"failed_nodes,omitempty" mapstructure:"failed_nodes,omitempty"`
	TotalNodes    int32                  `protobuf:"varint,5,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty" toml:"total_nodes,omitempty" mapstructure:"total_nodes,omitempty"`
	Waived        int32                  `protobuf:"varint,6,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileSummaryStats) Reset() {
	*x = ProfileSummaryStats{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileSummaryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSummaryStats) ProtoMessage() {}

func (x *ProfileSummaryStats) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSummaryStats.ProtoReflect.Descriptor instead.
func (*ProfileSummaryStats) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{12}
}

func (x *ProfileSummaryStats) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *ProfileSummaryStats) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *ProfileSummaryStats) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ProfileSummaryStats) GetFailedNodes() int32 {
	if x != nil {
		return x.FailedNodes
	}
	return 0
}

func (x *ProfileSummaryStats) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *ProfileSummaryStats) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type ControlStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Control       string                 `protobuf:"bytes,1,opt,name=control,proto3" json:"control,omitempty" toml:"control,omitempty" mapstructure:"control,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" toml:"title,omitempty" mapstructure:"title,omitempty"`
	Passed        int32                  `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty" toml:"passed,omitempty" mapstructure:"passed,omitempty"`
	Failed        int32                  `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty" toml:"failed,omitempty" mapstructure:"failed,omitempty"`
	Skipped       int32                  `protobuf:"varint,5,opt,name=skipped,proto3" json:"skipped,omitempty" toml:"skipped,omitempty" mapstructure:"skipped,omitempty"`
	Impact        float32                `protobuf:"fixed32,6,opt,name=impact,proto3" json:"impact,omitempty" toml:"impact,omitempty" mapstructure:"impact,omitempty"`
	Waived        int32                  `protobuf:"varint,7,opt,name=waived,proto3" json:"waived,omitempty" toml:"waived,omitempty" mapstructure:"waived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlStats) Reset() {
	*x = ControlStats{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlStats) ProtoMessage() {}

func (x *ControlStats) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlStats.ProtoReflect.Descriptor instead.
func (*ControlStats) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{13}
}

func (x *ControlStats) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *ControlStats) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ControlStats) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *ControlStats) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *ControlStats) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *ControlStats) GetImpact() float32 {
	if x != nil {
		return x.Impact
	}
	return 0
}

func (x *ControlStats) GetWaived() int32 {
	if x != nil {
		return x.Waived
	}
	return 0
}

type Support struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OsName         string                 `protobuf:"bytes,1,opt,name=os_name,json=os-name,proto3" json:"os_name,omitempty" toml:"os_name,omitempty" mapstructure:"os_name,omitempty"`
	OsFamily       string                 `protobuf:"bytes,2,opt,name=os_family,json=os-family,proto3" json:"os_family,omitempty" toml:"os_family,omitempty" mapstructure:"os_family,omitempty"`
	Release        string                 `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty" toml:"release,omitempty" mapstructure:"release,omitempty"`
	InspecVersion  string                 `protobuf:"bytes,4,opt,name=inspec_version,json=inspecVersion,proto3" json:"inspec_version,omitempty" toml:"inspec_version,omitempty" mapstructure:"inspec_version,omitempty"`
	PlatformName   string                 `protobuf:"bytes,5,opt,name=platform_name,json=platform-name,proto3" json:"platform_name,omitempty" toml:"platform_name,omitempty" mapstructure:"platform_name,omitempty"`
	PlatformFamily string                 `protobuf:"bytes,6,opt,name=platform_family,json=platform-family,proto3" json:"platform_family,omitempty" toml:"platform_family,omitempty" mapstructure:"platform_family,omitempty"`
	Platform       string                 `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty" toml:"platform,omitempty" mapstructure:"platform,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Support) Reset() {
	*x = Support{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Support) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Support) ProtoMessage() {}

func (x *Support) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Support.ProtoReflect.Descriptor instead.
func (*Support) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{14}
}

func (x *Support) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *Support) GetOsFamily() string {
	if x != nil {
		return x.OsFamily
	}
	return ""
}

func (x *Support) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Support) GetInspecVersion() string {
	if x != nil {
		return x.InspecVersion
	}
	return ""
}

func (x *Support) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *Support) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *Support) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type Failures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Profiles      []*FailureSummary      `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty" toml:"profiles,omitempty" mapstructure:"profiles,omitempty"`
	Platforms     []*FailureSummary      `protobuf:"bytes,2,rep,name=platforms,proto3" json:"platforms,omitempty" toml:"platforms,omitempty" mapstructure:"platforms,omitempty"`
	Controls      []*FailureSummary      `protobuf:"bytes,3,rep,name=controls,proto3" json:"controls,omitempty" toml:"controls,omitempty" mapstructure:"controls,omitempty"`
	Environments  []*FailureSummary      `protobuf:"bytes,4,rep,name=environments,proto3" json:"environments,omitempty" toml:"environments,omitempty" mapstructure:"environments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Failures) Reset() {
	*x = Failures{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Failures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Failures) ProtoMessage() {}

func (x *Failures) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Failures.ProtoReflect.Descriptor instead.
func (*Failures) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{15}
}

func (x *Failures) GetProfiles() []*FailureSummary {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *Failures) GetPlatforms() []*FailureSummary {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *Failures) GetControls() []*FailureSummary {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *Failures) GetEnvironments() []*FailureSummary {
	if x != nil {
		return x.Environments
	}
	return nil
}

type FailureSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Failures      int32                  `protobuf:"varint,2,opt,name=failures,proto3" json:"failures,omitempty" toml:"failures,omitempty" mapstructure:"failures,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Profile       string                 `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty" toml:"profile,omitempty" mapstructure:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureSummary) Reset() {
	*x = FailureSummary{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureSummary) ProtoMessage() {}

func (x *FailureSummary) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureSummary.ProtoReflect.Descriptor instead.
func (*FailureSummary) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{16}
}

func (x *FailureSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FailureSummary) GetFailures() int32 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *FailureSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FailureSummary) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type UpdateTelemetryReportedRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	LastTelemetryReportedAt string                 `protobuf:"bytes,1,opt,name=last_telemetry_reported_at,json=lastTelemetryReportedAt,proto3" json:"last_telemetry_reported_at,omitempty" toml:"last_telemetry_reported_at,omitempty" mapstructure:"last_telemetry_reported_at,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateTelemetryReportedRequest) Reset() {
	*x = UpdateTelemetryReportedRequest{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTelemetryReportedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelemetryReportedRequest) ProtoMessage() {}

func (x *UpdateTelemetryReportedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelemetryReportedRequest.ProtoReflect.Descriptor instead.
func (*UpdateTelemetryReportedRequest) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTelemetryReportedRequest) GetLastTelemetryReportedAt() string {
	if x != nil {
		return x.LastTelemetryReportedAt
	}
	return ""
}

type UpdateTelemetryReportedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTelemetryReportedResponse) Reset() {
	*x = UpdateTelemetryReportedResponse{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTelemetryReportedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelemetryReportedResponse) ProtoMessage() {}

func (x *UpdateTelemetryReportedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelemetryReportedResponse.ProtoReflect.Descriptor instead.
func (*UpdateTelemetryReportedResponse) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{18}
}

type GetNodesUsageCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesUsageCountRequest) Reset() {
	*x = GetNodesUsageCountRequest{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesUsageCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesUsageCountRequest) ProtoMessage() {}

func (x *GetNodesUsageCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesUsageCountRequest.ProtoReflect.Descriptor instead.
func (*GetNodesUsageCountRequest) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{19}
}

type GetNodesUsageCountResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DaysSinceLastPost int64                  `protobuf:"varint,1,opt,name=days_since_last_post,json=daysSinceLastPost,proto3" json:"days_since_last_post,omitempty" toml:"days_since_last_post,omitempty" mapstructure:"days_since_last_post,omitempty"`
	NodeCnt           int64                  `protobuf:"varint,2,opt,name=node_cnt,json=nodeCnt,proto3" json:"node_cnt,omitempty" toml:"node_cnt,omitempty" mapstructure:"node_cnt,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNodesUsageCountResponse) Reset() {
	*x = GetNodesUsageCountResponse{}
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesUsageCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesUsageCountResponse) ProtoMessage() {}

func (x *GetNodesUsageCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_interservice_compliance_stats_stats_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesUsageCountResponse.ProtoReflect.Descriptor instead.
func (*GetNodesUsageCountResponse) Descriptor() ([]byte, []int) {
	return file_interservice_compliance_stats_stats_proto_rawDescGZIP(), []int{20}
}

func (x *GetNodesUsageCountResponse) GetDaysSinceLastPost() int64 {
	if x != nil {
		return x.DaysSinceLastPost
	}
	return 0
}

func (x *GetNodesUsageCountResponse) GetNodeCnt() int64 {
	if x != nil {
		return x.NodeCnt
	}
	return 0
}

var File_interservice_compliance_stats_stats_proto protoreflect.FileDescriptor

const file_interservice_compliance_stats_stats_proto_rawDesc = "" +
	"\n" +
	")interservice/compliance/stats/stats.proto\x12%chef.automate.domain.compliance.stats\x1a\x1cgoogle/api/annotations.proto\x1a1interservice/compliance/reporting/reporting.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"8\n" +
	"\n" +
	"ListFilter\x12\x16\n" +
	"\x06values\x18\x14 \x03(\tR\x06values\x12\x12\n" +
	"\x04type\x18\x15 \x01(\tR\x04type\"\xd9\x02\n" +
	"\x05Query\x12\x0e\n" +
	"\x02id\x18\x11 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x13 \x01(\tR\x04type\x12\x12\n" +
	"\x04size\x18\x12 \x01(\x05R\x04size\x12\x1a\n" +
	"\binterval\x18\x19 \x01(\x05R\binterval\x12K\n" +
	"\afilters\x18\x14 \x03(\v21.chef.automate.domain.compliance.stats.ListFilterR\afilters\x12L\n" +
	"\x05order\x18\x15 \x01(\x0e26.chef.automate.domain.compliance.stats.Query.OrderTypeR\x05order\x12\x12\n" +
	"\x04sort\x18\x16 \x01(\tR\x04sort\x12\x12\n" +
	"\x04page\x18\x17 \x01(\x05R\x04page\x12\x19\n" +
	"\bper_page\x18\x18 \x01(\x05R\aperPage\"\x1e\n" +
	"\tOrderType\x12\a\n" +
	"\x03ASC\x10\x00\x12\b\n" +
	"\x04DESC\x10\x01\"\xa0\x02\n" +
	"\aSummary\x12a\n" +
	"\x10controls_summary\x18\x01 \x01(\v26.chef.automate.domain.compliance.stats.ControlsSummaryR\x0fcontrolsSummary\x12U\n" +
	"\fnode_summary\x18\x02 \x01(\v22.chef.automate.domain.compliance.stats.NodeSummaryR\vnodeSummary\x12[\n" +
	"\x0ereport_summary\x18\x03 \x01(\v24.chef.automate.domain.compliance.stats.ReportSummaryR\rreportSummary\"\xc5\x01\n" +
	"\x0fControlsSummary\x12\x1a\n" +
	"\bfailures\x18\x01 \x01(\x05R\bfailures\x12\x16\n" +
	"\x06majors\x18\x02 \x01(\x05R\x06majors\x12\x16\n" +
	"\x06minors\x18\x03 \x01(\x05R\x06minors\x12\x1c\n" +
	"\tcriticals\x18\x04 \x01(\x05R\tcriticals\x12\x16\n" +
	"\x06passed\x18\x05 \x01(\x05R\x06passed\x12\x18\n" +
	"\askipped\x18\x06 \x01(\x05R\askipped\x12\x16\n" +
	"\x06waived\x18\a \x01(\x05R\x06waived\"\xda\x01\n" +
	"\vNodeSummary\x12\x1c\n" +
	"\tcompliant\x18\x01 \x01(\x05R\tcompliant\x12\x18\n" +
	"\askipped\x18\x02 \x01(\x05R\askipped\x12\"\n" +
	"\fnoncompliant\x18\x03 \x01(\x05R\fnoncompliant\x12\x1b\n" +
	"\thigh_risk\x18\x04 \x01(\x05R\bhighRisk\x12\x1f\n" +
	"\vmedium_risk\x18\x05 \x01(\x05R\n" +
	"mediumRisk\x12\x19\n" +
	"\blow_risk\x18\x06 \x01(\x05R\alowRisk\x12\x16\n" +
	"\x06waived\x18\a \x01(\x05R\x06waived\"\xb8\x01\n" +
	"\x05Stats\x12\x18\n" +
	"\x05nodes\x18\x01 \x01(\x03B\x02\x18\x01R\x05nodes\x12\x1c\n" +
	"\tplatforms\x18\x02 \x01(\x05R\tplatforms\x12\"\n" +
	"\fenvironments\x18\x03 \x01(\x05R\fenvironments\x12\x1a\n" +
	"\bprofiles\x18\x04 \x01(\x05R\bprofiles\x12\x1b\n" +
	"\tnodes_cnt\x18\x05 \x01(\x05R\bnodesCnt\x12\x1a\n" +
	"\bcontrols\x18\x06 \x01(\x05R\bcontrols\"\xa6\x01\n" +
	"\rReportSummary\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1a\n" +
	"\bduration\x18\x02 \x01(\x01R\bduration\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12B\n" +
	"\x05stats\x18\x04 \x01(\v2,.chef.automate.domain.compliance.stats.StatsR\x05stats\"\x8a\x01\n" +
	"\x05Trend\x12\x1f\n" +
	"\vreport_time\x18\x01 \x01(\tR\n" +
	"reportTime\x12\x16\n" +
	"\x06passed\x18\x02 \x01(\x05R\x06passed\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x05R\x06failed\x12\x18\n" +
	"\askipped\x18\x04 \x01(\x05R\askipped\x12\x16\n" +
	"\x06waived\x18\x05 \x01(\x05R\x06waived\"N\n" +
	"\x06Trends\x12D\n" +
	"\x06trends\x18\x01 \x03(\v2,.chef.automate.domain.compliance.stats.TrendR\x06trends\"\x9a\x02\n" +
	"\aProfile\x12U\n" +
	"\fprofile_list\x18\x01 \x03(\v22.chef.automate.domain.compliance.stats.ProfileListR\vprofileList\x12^\n" +
	"\x0fprofile_summary\x18\x02 \x01(\v25.chef.automate.domain.compliance.stats.ProfileSummaryR\x0eprofileSummary\x12X\n" +
	"\rcontrol_stats\x18\x03 \x03(\v23.chef.automate.domain.compliance.stats.ControlStatsR\fcontrolStats\"\xe5\x01\n" +
	"\vProfileList\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1a\n" +
	"\bfailures\x18\x03 \x01(\x05R\bfailures\x12\x16\n" +
	"\x06majors\x18\x04 \x01(\x05R\x06majors\x12\x16\n" +
	"\x06minors\x18\x05 \x01(\x05R\x06minors\x12\x1c\n" +
	"\tcriticals\x18\x06 \x01(\x05R\tcriticals\x12\x16\n" +
	"\x06passed\x18\a \x01(\x05R\x06passed\x12\x18\n" +
	"\askipped\x18\b \x01(\x05R\askipped\x12\x16\n" +
	"\x06waived\x18\t \x01(\x05R\x06waived\"\xde\x03\n" +
	"\x0eProfileSummary\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x18\n" +
	"\alicense\x18\x04 \x01(\tR\alicense\x12\x1e\n" +
	"\n" +
	"maintainer\x18\x05 \x01(\tR\n" +
	"maintainer\x12\x1c\n" +
	"\tcopyright\x18\x06 \x01(\tR\tcopyright\x12'\n" +
	"\x0fcopyright_email\x18\a \x01(\tR\x0ecopyrightEmail\x12\x18\n" +
	"\asummary\x18\b \x01(\tR\asummary\x12J\n" +
	"\bsupports\x18\t \x03(\v2..chef.automate.domain.compliance.stats.SupportR\bsupports\x12P\n" +
	"\x05stats\x18\n" +
	" \x01(\v2:.chef.automate.domain.compliance.stats.ProfileSummaryStatsR\x05stats\x12O\n" +
	"\adepends\x18\v \x03(\v25.chef.automate.domain.compliance.reporting.DependencyR\adepends\"\xbb\x01\n" +
	"\x13ProfileSummaryStats\x12\x16\n" +
	"\x06failed\x18\x01 \x01(\x05R\x06failed\x12\x16\n" +
	"\x06passed\x18\x02 \x01(\x05R\x06passed\x12\x18\n" +
	"\askipped\x18\x03 \x01(\x05R\askipped\x12!\n" +
	"\ffailed_nodes\x18\x04 \x01(\x05R\vfailedNodes\x12\x1f\n" +
	"\vtotal_nodes\x18\x05 \x01(\x05R\n" +
	"totalNodes\x12\x16\n" +
	"\x06waived\x18\x06 \x01(\x05R\x06waived\"\xb8\x01\n" +
	"\fControlStats\x12\x18\n" +
	"\acontrol\x18\x01 \x01(\tR\acontrol\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06passed\x18\x03 \x01(\x05R\x06passed\x12\x16\n" +
	"\x06failed\x18\x04 \x01(\x05R\x06failed\x12\x18\n" +
	"\askipped\x18\x05 \x01(\x05R\askipped\x12\x16\n" +
	"\x06impact\x18\x06 \x01(\x02R\x06impact\x12\x16\n" +
	"\x06waived\x18\a \x01(\x05R\x06waived\"\xee\x01\n" +
	"\aSupport\x12\x18\n" +
	"\aos_name\x18\x01 \x01(\tR\aos-name\x12\x1c\n" +
	"\tos_family\x18\x02 \x01(\tR\tos-family\x12\x18\n" +
	"\arelease\x18\x03 \x01(\tR\arelease\x12%\n" +
	"\x0einspec_version\x18\x04 \x01(\tR\rinspecVersion\x12$\n" +
	"\rplatform_name\x18\x05 \x01(\tR\rplatform-name\x12(\n" +
	"\x0fplatform_family\x18\x06 \x01(\tR\x0fplatform-family\x12\x1a\n" +
	"\bplatform\x18\a \x01(\tR\bplatform\"\xe0\x02\n" +
	"\bFailures\x12Q\n" +
	"\bprofiles\x18\x01 \x03(\v25.chef.automate.domain.compliance.stats.FailureSummaryR\bprofiles\x12S\n" +
	"\tplatforms\x18\x02 \x03(\v25.chef.automate.domain.compliance.stats.FailureSummaryR\tplatforms\x12Q\n" +
	"\bcontrols\x18\x03 \x03(\v25.chef.automate.domain.compliance.stats.FailureSummaryR\bcontrols\x12Y\n" +
	"\fenvironments\x18\x04 \x03(\v25.chef.automate.domain.compliance.stats.FailureSummaryR\fenvironments\"j\n" +
	"\x0eFailureSummary\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bfailures\x18\x02 \x01(\x05R\bfailures\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12\x18\n" +
	"\aprofile\x18\x04 \x01(\tR\aprofile\"]\n" +
	"\x1eUpdateTelemetryReportedRequest\x12;\n" +
	"\x1alast_telemetry_reported_at\x18\x01 \x01(\tR\x17lastTelemetryReportedAt\"!\n" +
	"\x1fUpdateTelemetryReportedResponse\"\x1b\n" +
	"\x19GetNodesUsageCountRequest\"h\n" +
	"\x1aGetNodesUsageCountResponse\x12/\n" +
	"\x14days_since_last_post\x18\x01 \x01(\x03R\x11daysSinceLastPost\x12\x19\n" +
	"\bnode_cnt\x18\x02 \x01(\x03R\anodeCnt2\x95\x06\n" +
	"\fStatsService\x12m\n" +
	"\vReadSummary\x12,.chef.automate.domain.compliance.stats.Query\x1a..chef.automate.domain.compliance.stats.Summary\"\x00\x12j\n" +
	"\tReadTrend\x12,.chef.automate.domain.compliance.stats.Query\x1a-.chef.automate.domain.compliance.stats.Trends\"\x00\x12n\n" +
	"\fReadProfiles\x12,.chef.automate.domain.compliance.stats.Query\x1a..chef.automate.domain.compliance.stats.Profile\"\x00\x12o\n" +
	"\fReadFailures\x12,.chef.automate.domain.compliance.stats.Query\x1a/.chef.automate.domain.compliance.stats.Failures\"\x00\x12\xaa\x01\n" +
	"\x17UpdateTelemetryReported\x12E.chef.automate.domain.compliance.stats.UpdateTelemetryReportedRequest\x1aF.chef.automate.domain.compliance.stats.UpdateTelemetryReportedResponse\"\x00\x12\x9b\x01\n" +
	"\x12GetNodesUsageCount\x12@.chef.automate.domain.compliance.stats.GetNodesUsageCountRequest\x1aA.chef.automate.domain.compliance.stats.GetNodesUsageCountResponse\"\x00B<Z:github.com/chef/automate/api/interservice/compliance/statsb\x06proto3"

var (
	file_interservice_compliance_stats_stats_proto_rawDescOnce sync.Once
	file_interservice_compliance_stats_stats_proto_rawDescData []byte
)

func file_interservice_compliance_stats_stats_proto_rawDescGZIP() []byte {
	file_interservice_compliance_stats_stats_proto_rawDescOnce.Do(func() {
		file_interservice_compliance_stats_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_interservice_compliance_stats_stats_proto_rawDesc), len(file_interservice_compliance_stats_stats_proto_rawDesc)))
	})
	return file_interservice_compliance_stats_stats_proto_rawDescData
}

var file_interservice_compliance_stats_stats_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_interservice_compliance_stats_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_interservice_compliance_stats_stats_proto_goTypes = []any{
	(Query_OrderType)(0),                    // 0: chef.automate.domain.compliance.stats.Query.OrderType
	(*ListFilter)(nil),                      // 1: chef.automate.domain.compliance.stats.ListFilter
	(*Query)(nil),                           // 2: chef.automate.domain.compliance.stats.Query
	(*Summary)(nil),                         // 3: chef.automate.domain.compliance.stats.Summary
	(*ControlsSummary)(nil),                 // 4: chef.automate.domain.compliance.stats.ControlsSummary
	(*NodeSummary)(nil),                     // 5: chef.automate.domain.compliance.stats.NodeSummary
	(*Stats)(nil),                           // 6: chef.automate.domain.compliance.stats.Stats
	(*ReportSummary)(nil),                   // 7: chef.automate.domain.compliance.stats.ReportSummary
	(*Trend)(nil),                           // 8: chef.automate.domain.compliance.stats.Trend
	(*Trends)(nil),                          // 9: chef.automate.domain.compliance.stats.Trends
	(*Profile)(nil),                         // 10: chef.automate.domain.compliance.stats.Profile
	(*ProfileList)(nil),                     // 11: chef.automate.domain.compliance.stats.ProfileList
	(*ProfileSummary)(nil),                  // 12: chef.automate.domain.compliance.stats.ProfileSummary
	(*ProfileSummaryStats)(nil),             // 13: chef.automate.domain.compliance.stats.ProfileSummaryStats
	(*ControlStats)(nil),                    // 14: chef.automate.domain.compliance.stats.ControlStats
	(*Support)(nil),                         // 15: chef.automate.domain.compliance.stats.Support
	(*Failures)(nil),                        // 16: chef.automate.domain.compliance.stats.Failures
	(*FailureSummary)(nil),                  // 17: chef.automate.domain.compliance.stats.FailureSummary
	(*UpdateTelemetryReportedRequest)(nil),  // 18: chef.automate.domain.compliance.stats.UpdateTelemetryReportedRequest
	(*UpdateTelemetryReportedResponse)(nil), // 19: chef.automate.domain.compliance.stats.UpdateTelemetryReportedResponse
	(*GetNodesUsageCountRequest)(nil),       // 20: chef.automate.domain.compliance.stats.GetNodesUsageCountRequest
	(*GetNodesUsageCountResponse)(nil),      // 21: chef.automate.domain.compliance.stats.GetNodesUsageCountResponse
	(*reporting.Dependency)(nil),            // 22: chef.automate.domain.compliance.reporting.Dependency
}
var file_interservice_compliance_stats_stats_proto_depIdxs = []int32{
	1,  // 0: chef.automate.domain.compliance.stats.Query.filters:type_name -> chef.automate.domain.compliance.stats.ListFilter
	0,  // 1: chef.automate.domain.compliance.stats.Query.order:type_name -> chef.automate.domain.compliance.stats.Query.OrderType
	4,  // 2: chef.automate.domain.compliance.stats.Summary.controls_summary:type_name -> chef.automate.domain.compliance.stats.ControlsSummary
	5,  // 3: chef.automate.domain.compliance.stats.Summary.node_summary:type_name -> chef.automate.domain.compliance.stats.NodeSummary
	7,  // 4: chef.automate.domain.compliance.stats.Summary.report_summary:type_name -> chef.automate.domain.compliance.stats.ReportSummary
	6,  // 5: chef.automate.domain.compliance.stats.ReportSummary.stats:type_name -> chef.automate.domain.compliance.stats.Stats
	8,  // 6: chef.automate.domain.compliance.stats.Trends.trends:type_name -> chef.automate.domain.compliance.stats.Trend
	11, // 7: chef.automate.domain.compliance.stats.Profile.profile_list:type_name -> chef.automate.domain.compliance.stats.ProfileList
	12, // 8: chef.automate.domain.compliance.stats.Profile.profile_summary:type_name -> chef.automate.domain.compliance.stats.ProfileSummary
	14, // 9: chef.automate.domain.compliance.stats.Profile.control_stats:type_name -> chef.automate.domain.compliance.stats.ControlStats
	15, // 10: chef.automate.domain.compliance.stats.ProfileSummary.supports:type_name -> chef.automate.domain.compliance.stats.Support
	13, // 11: chef.automate.domain.compliance.stats.ProfileSummary.stats:type_name -> chef.automate.domain.compliance.stats.ProfileSummaryStats
	22, // 12: chef.automate.domain.compliance.stats.ProfileSummary.depends:type_name -> chef.automate.domain.compliance.reporting.Dependency
	17, // 13: chef.automate.domain.compliance.stats.Failures.profiles:type_name -> chef.automate.domain.compliance.stats.FailureSummary
	17, // 14: chef.automate.domain.compliance.stats.Failures.platforms:type_name -> chef.automate.domain.compliance.stats.FailureSummary
	17, // 15: chef.automate.domain.compliance.stats.Failures.controls:type_name -> chef.automate.domain.compliance.stats.FailureSummary
	17, // 16: chef.automate.domain.compliance.stats.Failures.environments:type_name -> chef.automate.domain.compliance.stats.FailureSummary
	2,  // 17: chef.automate.domain.compliance.stats.StatsService.ReadSummary:input_type -> chef.automate.domain.compliance.stats.Query
	2,  // 18: chef.automate.domain.compliance.stats.StatsService.ReadTrend:input_type -> chef.automate.domain.compliance.stats.Query
	2,  // 19: chef.automate.domain.compliance.stats.StatsService.ReadProfiles:input_type -> chef.automate.domain.compliance.stats.Query
	2,  // 20: chef.automate.domain.compliance.stats.StatsService.ReadFailures:input_type -> chef.automate.domain.compliance.stats.Query
	18, // 21: chef.automate.domain.compliance.stats.StatsService.UpdateTelemetryReported:input_type -> chef.automate.domain.compliance.stats.UpdateTelemetryReportedRequest
	20, // 22: chef.automate.domain.compliance.stats.StatsService.GetNodesUsageCount:input_type -> chef.automate.domain.compliance.stats.GetNodesUsageCountRequest
	3,  // 23: chef.automate.domain.compliance.stats.StatsService.ReadSummary:output_type -> chef.automate.domain.compliance.stats.Summary
	9,  // 24: chef.automate.domain.compliance.stats.StatsService.ReadTrend:output_type -> chef.automate.domain.compliance.stats.Trends
	10, // 25: chef.automate.domain.compliance.stats.StatsService.ReadProfiles:output_type -> chef.automate.domain.compliance.stats.Profile
	16, // 26: chef.automate.domain.compliance.stats.StatsService.ReadFailures:output_type -> chef.automate.domain.compliance.stats.Failures
	19, // 27: chef.automate.domain.compliance.stats.StatsService.UpdateTelemetryReported:output_type -> chef.automate.domain.compliance.stats.UpdateTelemetryReportedResponse
	21, // 28: chef.automate.domain.compliance.stats.StatsService.GetNodesUsageCount:output_type -> chef.automate.domain.compliance.stats.GetNodesUsageCountResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_interservice_compliance_stats_stats_proto_init() }
func file_interservice_compliance_stats_stats_proto_init() {
	if File_interservice_compliance_stats_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_interservice_compliance_stats_stats_proto_rawDesc), len(file_interservice_compliance_stats_stats_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_interservice_compliance_stats_stats_proto_goTypes,
		DependencyIndexes: file_interservice_compliance_stats_stats_proto_depIdxs,
		EnumInfos:         file_interservice_compliance_stats_stats_proto_enumTypes,
		MessageInfos:      file_interservice_compliance_stats_stats_proto_msgTypes,
	}.Build()
	File_interservice_compliance_stats_stats_proto = out.File
	file_interservice_compliance_stats_stats_proto_goTypes = nil
	file_interservice_compliance_stats_stats_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatsServiceClient is the client API for StatsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsServiceClient interface {
	ReadSummary(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Summary, error)
	ReadTrend(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Trends, error)
	ReadProfiles(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profile, error)
	ReadFailures(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Failures, error)
	UpdateTelemetryReported(ctx context.Context, in *UpdateTelemetryReportedRequest, opts ...grpc.CallOption) (*UpdateTelemetryReportedResponse, error)
	GetNodesUsageCount(ctx context.Context, in *GetNodesUsageCountRequest, opts ...grpc.CallOption) (*GetNodesUsageCountResponse, error)
}

type statsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatsServiceClient(cc grpc.ClientConnInterface) StatsServiceClient {
	return &statsServiceClient{cc}
}

func (c *statsServiceClient) ReadSummary(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Summary, error) {
	out := new(Summary)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/ReadSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadTrend(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Trends, error) {
	out := new(Trends)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/ReadTrend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadProfiles(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/ReadProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) ReadFailures(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Failures, error) {
	out := new(Failures)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/ReadFailures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) UpdateTelemetryReported(ctx context.Context, in *UpdateTelemetryReportedRequest, opts ...grpc.CallOption) (*UpdateTelemetryReportedResponse, error) {
	out := new(UpdateTelemetryReportedResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/UpdateTelemetryReported", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsServiceClient) GetNodesUsageCount(ctx context.Context, in *GetNodesUsageCountRequest, opts ...grpc.CallOption) (*GetNodesUsageCountResponse, error) {
	out := new(GetNodesUsageCountResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.compliance.stats.StatsService/GetNodesUsageCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatsServiceServer is the server API for StatsService service.
type StatsServiceServer interface {
	ReadSummary(context.Context, *Query) (*Summary, error)
	ReadTrend(context.Context, *Query) (*Trends, error)
	ReadProfiles(context.Context, *Query) (*Profile, error)
	ReadFailures(context.Context, *Query) (*Failures, error)
	UpdateTelemetryReported(context.Context, *UpdateTelemetryReportedRequest) (*UpdateTelemetryReportedResponse, error)
	GetNodesUsageCount(context.Context, *GetNodesUsageCountRequest) (*GetNodesUsageCountResponse, error)
}

// UnimplementedStatsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatsServiceServer struct {
}

func (*UnimplementedStatsServiceServer) ReadSummary(context.Context, *Query) (*Summary, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSummary not implemented")
}
func (*UnimplementedStatsServiceServer) ReadTrend(context.Context, *Query) (*Trends, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTrend not implemented")
}
func (*UnimplementedStatsServiceServer) ReadProfiles(context.Context, *Query) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadProfiles not implemented")
}
func (*UnimplementedStatsServiceServer) ReadFailures(context.Context, *Query) (*Failures, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFailures not implemented")
}
func (*UnimplementedStatsServiceServer) UpdateTelemetryReported(context.Context, *UpdateTelemetryReportedRequest) (*UpdateTelemetryReportedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTelemetryReported not implemented")
}
func (*UnimplementedStatsServiceServer) GetNodesUsageCount(context.Context, *GetNodesUsageCountRequest) (*GetNodesUsageCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodesUsageCount not implemented")
}

func RegisterStatsServiceServer(s *grpc.Server, srv StatsServiceServer) {
	s.RegisterService(&_StatsService_serviceDesc, srv)
}

func _StatsService_ReadSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/ReadSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadSummary(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadTrend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadTrend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/ReadTrend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadTrend(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/ReadProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadProfiles(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_ReadFailures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).ReadFailures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/ReadFailures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).ReadFailures(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_UpdateTelemetryReported_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTelemetryReportedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).UpdateTelemetryReported(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/UpdateTelemetryReported",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).UpdateTelemetryReported(ctx, req.(*UpdateTelemetryReportedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatsService_GetNodesUsageCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodesUsageCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServiceServer).GetNodesUsageCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.compliance.stats.StatsService/GetNodesUsageCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServiceServer).GetNodesUsageCount(ctx, req.(*GetNodesUsageCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.compliance.stats.StatsService",
	HandlerType: (*StatsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadSummary",
			Handler:    _StatsService_ReadSummary_Handler,
		},
		{
			MethodName: "ReadTrend",
			Handler:    _StatsService_ReadTrend_Handler,
		},
		{
			MethodName: "ReadProfiles",
			Handler:    _StatsService_ReadProfiles_Handler,
		},
		{
			MethodName: "ReadFailures",
			Handler:    _StatsService_ReadFailures_Handler,
		},
		{
			MethodName: "UpdateTelemetryReported",
			Handler:    _StatsService_UpdateTelemetryReported_Handler,
		},
		{
			MethodName: "GetNodesUsageCount",
			Handler:    _StatsService_GetNodesUsageCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/compliance/stats/stats.proto",
}
