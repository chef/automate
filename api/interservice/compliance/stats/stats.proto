syntax = "proto3";

package chef.automate.domain.compliance.stats;
option go_package = "github.com/chef/automate/api/interservice/compliance/stats";

import "google/api/annotations.proto";
import "interservice/compliance/reporting/reporting.proto";
import "google/protobuf/timestamp.proto";


service StatsService {
	rpc ReadSummary(Query) returns (Summary) {};
	rpc ReadTrend(Query) returns (Trends) {};
	rpc ReadProfiles(Query) returns (Profile) {};
	rpc ReadFailures(Query) returns (Failures) {};
	rpc UpdateTelemetryReported(UpdateTelemetryReportedRequest) returns (UpdateTelemetryReportedResponse) {};
	rpc GetNodesUsageCount(GetNodesUsageCountRequest) returns (GetNodesUsageCountResponse) {};
}

message ListFilter {
	repeated string values = 20;
	string type = 21;
}
message Query {
	string id = 17;
	string type = 19;
	int32 size = 18;
	int32 interval = 25;
	repeated ListFilter filters = 20;
	enum OrderType {
		ASC = 0;
		DESC = 1;
	}
	OrderType order = 21;
	string sort = 22;
	int32 page = 23;
	int32 per_page = 24;
}

message Summary {
	ControlsSummary controls_summary = 1;
	NodeSummary node_summary = 2;
	ReportSummary report_summary = 3;
}

message ControlsSummary {
	int32 failures = 1;
	int32 majors = 2;
	int32 minors = 3;
	int32 criticals = 4;
	int32 passed = 5;
	int32 skipped = 6;
	int32 waived = 7;
}

message NodeSummary {
	int32 compliant = 1;
	int32 skipped = 2;
	int32 noncompliant = 3;
	int32 high_risk = 4;
	int32 medium_risk = 5;
	int32 low_risk = 6;
	int32 waived = 7;
}

message Stats {
	//int64 types render into string types when serialized to satisfy all browsers
	//we don't really need for nodes counts to be int64 as int32 limits us to 2billion nodes which is plenty for now
	//we are therefore deprecating nodes and favor nodesCnt
	int64 nodes = 1 [deprecated = true];
	int32 platforms = 2;
	int32 environments = 3;
	int32 profiles = 4;
	int32 nodes_cnt = 5;
	int32 controls = 6;
}

message ReportSummary {
	string status = 1;
	double duration = 2;
	string start_date = 3;
	Stats stats = 4;
}
message Trend {
	string report_time = 1;
	int32 passed = 2;
	int32 failed = 3;
	int32 skipped = 4;
	int32 waived = 5;
}
message Trends {
	repeated Trend trends = 1;
}
message Profile {
	repeated ProfileList profile_list = 1;
	ProfileSummary profile_summary = 2;
	repeated ControlStats control_stats = 3;
}
message ProfileList {
	string name = 1;
	string id = 2;
	int32 failures = 3;
	int32 majors = 4;
	int32 minors = 5;
	int32 criticals = 6;
	int32 passed = 7;
	int32 skipped = 8;
	int32 waived = 9;
}

message ProfileSummary {
	string name = 1;
	string title = 2;
	string version = 3;
	string license = 4;
	string maintainer = 5;
	string copyright = 6;
	string copyright_email = 7;
	string summary = 8;
	repeated Support supports = 9;
	ProfileSummaryStats stats = 10;
	repeated chef.automate.domain.compliance.reporting.Dependency depends = 11;
}

message ProfileSummaryStats {
	int32 failed = 1;
	int32 passed = 2;
	int32 skipped = 3;
	int32 failed_nodes = 4;
	int32 total_nodes = 5;
	int32 waived = 6;
}

message ControlStats {
	string control = 1;
	string title = 2;
	int32 passed = 3;
	int32 failed = 4;
	int32 skipped = 5;
	float impact = 6;
	int32 waived = 7;
}
message Support {
	string os_name = 1 [json_name = "os-name"];
	string os_family = 2 [json_name = "os-family"];
	string release = 3;
	string inspec_version = 4;
	string platform_name = 5 [json_name = "platform-name"];
	string platform_family = 6 [json_name = "platform-family"];
	string platform = 7;
}
message Failures {
	repeated FailureSummary profiles = 1;
	repeated FailureSummary platforms = 2;
	repeated FailureSummary controls = 3;
	repeated FailureSummary environments = 4;
}
message FailureSummary {
	string name = 1;
	int32 failures = 2;
	string id = 3;
	string profile = 4;
}

message UpdateTelemetryReportedRequest {
	string last_telemetry_reported_at = 1;
}

message UpdateTelemetryReportedResponse {}

message GetNodesUsageCountRequest {}

message	GetNodesUsageCountResponse {
	int64 days_since_last_post =1;
	int64 node_cnt =2;
}
