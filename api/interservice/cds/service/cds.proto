syntax = "proto3";

package chef.automate.domain.autoamte_cds.service;
option go_package = "github.com/chef/automate/api/interservice/autoamte_cds/service";

import "external/cds/request/root.proto";
import "external/cds/response/root.proto";
import "external/common/response.proto";

import "external/common/version/version.proto";

service AutomateCdsService {
    rpc GetVersion (chef.automate.api.common.version.VersionInfoRequest) returns (chef.automate.api.common.version.VersionInfo);
    rpc ListContentItems(chef.automate.api.cds.request.ContentItems) returns (chef.automate.api.cds.response.ContentItems);
    rpc InstallContentItem(chef.automate.api.cds.request.InstallContentItem) returns (chef.automate.api.cds.response.InstallContentItem);
    rpc DownloadContentItem(chef.automate.api.cds.request.DownloadContentItem) returns (stream chef.automate.api.common.ExportData) { }
    rpc IsContentEnabled(chef.automate.api.cds.request.ContentEnabled) returns (chef.automate.api.cds.response.ContentEnabled);
    rpc SubmitCredentials(chef.automate.api.cds.request.Credentials) returns (chef.automate.api.cds.response.Credentials);
}
