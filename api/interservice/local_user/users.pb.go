// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/local_user/users.proto

package local_user

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Email struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty" toml:"email,omitempty" mapstructure:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{0}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetUsersReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *GetUsersReq) Reset()         { *m = GetUsersReq{} }
func (m *GetUsersReq) String() string { return proto.CompactTextString(m) }
func (*GetUsersReq) ProtoMessage()    {}
func (*GetUsersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{1}
}

func (m *GetUsersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsersReq.Unmarshal(m, b)
}
func (m *GetUsersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsersReq.Marshal(b, m, deterministic)
}
func (m *GetUsersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsersReq.Merge(m, src)
}
func (m *GetUsersReq) XXX_Size() int {
	return xxx_messageInfo_GetUsersReq.Size(m)
}
func (m *GetUsersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsersReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsersReq proto.InternalMessageInfo

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty" toml:"email,omitempty" mapstructure:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateUserReq struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// forbid empty strings
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Note: we're explicitly more strict than email (RFC 1034), although PGV
	// knows how to validate an email address using
	//   [(validate.rules).string.email = true];
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty" toml:"email,omitempty" mapstructure:"email,omitempty"`
	// Note: password validation happens in the service's handler
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" toml:"password,omitempty" mapstructure:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *CreateUserReq) Reset()         { *m = CreateUserReq{} }
func (m *CreateUserReq) String() string { return proto.CompactTextString(m) }
func (*CreateUserReq) ProtoMessage()    {}
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{3}
}

func (m *CreateUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserReq.Unmarshal(m, b)
}
func (m *CreateUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserReq.Marshal(b, m, deterministic)
}
func (m *CreateUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserReq.Merge(m, src)
}
func (m *CreateUserReq) XXX_Size() int {
	return xxx_messageInfo_CreateUserReq.Size(m)
}
func (m *CreateUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserReq proto.InternalMessageInfo

func (m *CreateUserReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateUserReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateUserReq struct {
	// TODO (tc) Unfortunately ID is not returned by Dex in UpdatePassword.
	// We currently have ID being returned as part of our update contract
	// for the gateway API. The only way we are currently populating that
	// is by passing back to the user exactly what they gave us in the update request.
	// This isn't ideal, but we have a few options that aren't ideal either:
	//
	// 1. Call ListPasswords on every update, find our user, and populate the ID field,
	// then deprecate the ID field as in input into our update APIs.
	//
	// 2.  Break our public API (not an option afaik).
	//
	// 3. Wait until my GetPassword API merges into Dex and call that on every
	// update to get the ID, then deprecate the ID field as in input into our update APIs.
	// This is probably the best option.
	// https://github.com/dexidp/dex/pull/1271
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	// Currently, this validation doesn't make much sense, since user's can't change their
	// email (aka username) via update, but leaving it in since 1) it doesn't hurt and
	// 2) keep it consistent if we allow it in the future.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty" toml:"email,omitempty" mapstructure:"email,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Note: for UpdateUserReq, the password is optional
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" toml:"password,omitempty" mapstructure:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateUserReq) Reset()         { *m = UpdateUserReq{} }
func (m *UpdateUserReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUserReq) ProtoMessage()    {}
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{4}
}

func (m *UpdateUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserReq.Unmarshal(m, b)
}
func (m *UpdateUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserReq.Marshal(b, m, deterministic)
}
func (m *UpdateUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserReq.Merge(m, src)
}
func (m *UpdateUserReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUserReq.Size(m)
}
func (m *UpdateUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserReq proto.InternalMessageInfo

func (m *UpdateUserReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUserReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// See UpdateUserReq for other relevant comments.
type UpdateSelfReq struct {
	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty" mapstructure:"id,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty" toml:"email,omitempty" mapstructure:"email,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty" mapstructure:"name,omitempty"`
	// Note: for UpdateSelfReq, the password and previous_password are optional,
	// but if passed, they must both be passed.
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" toml:"password,omitempty" mapstructure:"password,omitempty"`
	PreviousPassword     string   `protobuf:"bytes,5,opt,name=previous_password,json=previousPassword,proto3" json:"previous_password,omitempty" toml:"previous_password,omitempty" mapstructure:"previous_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *UpdateSelfReq) Reset()         { *m = UpdateSelfReq{} }
func (m *UpdateSelfReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSelfReq) ProtoMessage()    {}
func (*UpdateSelfReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{5}
}

func (m *UpdateSelfReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSelfReq.Unmarshal(m, b)
}
func (m *UpdateSelfReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSelfReq.Marshal(b, m, deterministic)
}
func (m *UpdateSelfReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSelfReq.Merge(m, src)
}
func (m *UpdateSelfReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSelfReq.Size(m)
}
func (m *UpdateSelfReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSelfReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSelfReq proto.InternalMessageInfo

func (m *UpdateSelfReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSelfReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateSelfReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateSelfReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateSelfReq) GetPreviousPassword() string {
	if m != nil {
		return m.PreviousPassword
	}
	return ""
}

type DeleteUserResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *DeleteUserResp) Reset()         { *m = DeleteUserResp{} }
func (m *DeleteUserResp) String() string { return proto.CompactTextString(m) }
func (*DeleteUserResp) ProtoMessage()    {}
func (*DeleteUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{6}
}

func (m *DeleteUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserResp.Unmarshal(m, b)
}
func (m *DeleteUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserResp.Marshal(b, m, deterministic)
}
func (m *DeleteUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserResp.Merge(m, src)
}
func (m *DeleteUserResp) XXX_Size() int {
	return xxx_messageInfo_DeleteUserResp.Size(m)
}
func (m *DeleteUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserResp proto.InternalMessageInfo

type Users struct {
	Users                map[string]*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:"users,omitempty" mapstructure:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte           `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32            `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ece6c983b743b05, []int{7}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() map[string]*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*Email)(nil), "chef.automate.domain.local_user.Email")
	proto.RegisterType((*GetUsersReq)(nil), "chef.automate.domain.local_user.GetUsersReq")
	proto.RegisterType((*User)(nil), "chef.automate.domain.local_user.User")
	proto.RegisterType((*CreateUserReq)(nil), "chef.automate.domain.local_user.CreateUserReq")
	proto.RegisterType((*UpdateUserReq)(nil), "chef.automate.domain.local_user.UpdateUserReq")
	proto.RegisterType((*UpdateSelfReq)(nil), "chef.automate.domain.local_user.UpdateSelfReq")
	proto.RegisterType((*DeleteUserResp)(nil), "chef.automate.domain.local_user.DeleteUserResp")
	proto.RegisterType((*Users)(nil), "chef.automate.domain.local_user.Users")
	proto.RegisterMapType((map[string]*User)(nil), "chef.automate.domain.local_user.Users.UsersEntry")
}

func init() {
	proto.RegisterFile("interservice/local_user/users.proto", fileDescriptor_0ece6c983b743b05)
}

var fileDescriptor_0ece6c983b743b05 = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xad, 0x9d, 0xf8, 0xf7, 0x6b, 0x26, 0x4a, 0x15, 0x16, 0x50, 0x83, 0x55, 0xa9, 0x95, 0xf9,
	0xa3, 0x48, 0x01, 0x5b, 0x04, 0x84, 0x50, 0xb8, 0x54, 0x81, 0xaa, 0x27, 0x24, 0x64, 0xd4, 0x4b,
	0xab, 0x12, 0x6d, 0xe2, 0x69, 0xba, 0xc2, 0xf6, 0xba, 0xeb, 0x75, 0x50, 0xcf, 0xdc, 0xf9, 0x2e,
	0x5c, 0xe1, 0xc2, 0xd7, 0xe9, 0xb7, 0x40, 0x5e, 0xdb, 0x71, 0x82, 0x04, 0x59, 0x4e, 0x5c, 0xac,
	0xc9, 0x78, 0xde, 0xbc, 0x37, 0x9b, 0x79, 0x6b, 0xb8, 0xcf, 0x62, 0x89, 0x22, 0x45, 0xb1, 0x60,
	0x33, 0xf4, 0x42, 0x3e, 0xa3, 0xe1, 0x24, 0x4b, 0x51, 0x78, 0xf9, 0x23, 0x75, 0x13, 0xc1, 0x25,
	0x27, 0xfb, 0xb3, 0x4b, 0xbc, 0x70, 0x69, 0x26, 0x79, 0x44, 0x25, 0xba, 0x01, 0x8f, 0x28, 0x8b,
	0xdd, 0xba, 0xd8, 0xde, 0x9b, 0x73, 0x3e, 0x0f, 0xd1, 0xa3, 0x09, 0xf3, 0x68, 0x1c, 0x73, 0x49,
	0x25, 0xe3, 0x71, 0x09, 0xb7, 0x77, 0x17, 0x34, 0x64, 0x01, 0x95, 0xe8, 0x55, 0x41, 0xf1, 0xc2,
	0xe9, 0x83, 0x75, 0x14, 0x51, 0x16, 0x92, 0x7d, 0xb0, 0x30, 0x0f, 0x7a, 0xc6, 0x81, 0xd1, 0x6f,
	0x8d, 0x5b, 0xdf, 0x6e, 0x7e, 0x34, 0x9a, 0xc2, 0xec, 0x1a, 0x7e, 0x91, 0x77, 0x3a, 0xd0, 0x3e,
	0x46, 0x79, 0x92, 0x6b, 0xf2, 0xf1, 0xca, 0x39, 0x84, 0x66, 0x1e, 0x93, 0x1d, 0x30, 0x59, 0x50,
	0x80, 0x7c, 0x93, 0x05, 0x84, 0x40, 0x33, 0xa6, 0x11, 0xf6, 0x4c, 0x95, 0x51, 0x31, 0xb9, 0x53,
	0xf5, 0x6e, 0xa8, 0x64, 0xd9, 0xf0, 0xb3, 0x01, 0x9d, 0xd7, 0x02, 0xa9, 0xc4, 0xbc, 0x91, 0x8f,
	0x57, 0x5a, 0xbd, 0x86, 0x6b, 0xbd, 0xc6, 0x7b, 0xb9, 0xce, 0x5d, 0x71, 0x77, 0x78, 0xfb, 0xc3,
	0xd9, 0xd9, 0x88, 0x86, 0x71, 0x16, 0x8d, 0xce, 0x27, 0xee, 0xe0, 0xf0, 0xc9, 0xf9, 0xe0, 0x41,
	0xc9, 0x44, 0x6c, 0xd8, 0x4e, 0x68, 0x9a, 0x7e, 0xe2, 0x22, 0xe8, 0x35, 0x55, 0xaf, 0xe5, 0x6f,
	0xe7, 0x8b, 0x01, 0x9d, 0x93, 0x24, 0x58, 0x51, 0x71, 0xaf, 0x56, 0xb1, 0x7a, 0x0c, 0xb9, 0xa0,
	0x25, 0xb9, 0xa9, 0x4f, 0x5e, 0x0d, 0xd1, 0x58, 0x19, 0xe2, 0x4f, 0x82, 0xbe, 0x2f, 0x05, 0xbd,
	0xc7, 0xf0, 0xe2, 0xdf, 0x0b, 0x22, 0x03, 0xb8, 0x95, 0x08, 0x5c, 0x30, 0x9e, 0xa5, 0x93, 0x65,
	0x91, 0xa5, 0x8a, 0xba, 0xd5, 0x8b, 0x77, 0x95, 0xfa, 0x2e, 0xec, 0xbc, 0xc1, 0x10, 0xab, 0xd3,
	0x4c, 0x13, 0xe7, 0xab, 0x01, 0x96, 0xda, 0x1a, 0x72, 0x0c, 0x96, 0x5a, 0xe9, 0x9e, 0x71, 0xd0,
	0xe8, 0xb7, 0x87, 0x4f, 0xdd, 0x0d, 0x3b, 0xed, 0x2a, 0x58, 0xf1, 0x3c, 0x8a, 0xa5, 0xb8, 0xf6,
	0x0b, 0xbc, 0x3d, 0x01, 0xa8, 0x93, 0xa4, 0x0b, 0x8d, 0x8f, 0x78, 0x5d, 0xae, 0x4d, 0x1e, 0x92,
	0x57, 0x60, 0x2d, 0x68, 0x98, 0x15, 0x8b, 0xd3, 0x1e, 0x3e, 0xd4, 0x22, 0xf2, 0x0b, 0xcc, 0xc8,
	0x7c, 0x69, 0x0c, 0x6f, 0x9a, 0xd0, 0x52, 0x0c, 0x6f, 0xe7, 0x91, 0x24, 0x53, 0xd8, 0xae, 0x36,
	0x9f, 0x3c, 0xde, 0xd8, 0x6b, 0xc5, 0x24, 0xf6, 0x23, 0xbd, 0x11, 0x9d, 0x2d, 0x72, 0x0a, 0xff,
	0x97, 0x40, 0xb2, 0x19, 0xa4, 0x1c, 0x6b, 0xeb, 0x8d, 0xe5, 0x6c, 0x11, 0x04, 0xa8, 0x7d, 0x46,
	0xdc, 0x8d, 0xb0, 0x35, 0x53, 0xea, 0xd3, 0xcc, 0x01, 0xea, 0xbf, 0x5e, 0x7b, 0x0a, 0x6f, 0x63,
	0xdd, 0x2f, 0xfb, 0xa4, 0xe6, 0xa9, 0x1d, 0xab, 0x31, 0xcf, 0x9a, 0xbd, 0xff, 0xea, 0xd8, 0x6a,
	0x1f, 0x6a, 0xd3, 0x94, 0xa6, 0xd5, 0xa6, 0x19, 0xbf, 0x38, 0x7d, 0x3e, 0x67, 0xf2, 0x32, 0x9b,
	0xba, 0x33, 0x1e, 0x79, 0x39, 0xc8, 0xab, 0x40, 0xea, 0x32, 0xff, 0xcd, 0xd7, 0x61, 0xfa, 0x9f,
	0xba, 0xc0, 0x9f, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x92, 0x44, 0xd2, 0xaf, 0x3f, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UsersMgmtClient is the client API for UsersMgmt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersMgmtClient interface {
	GetUsers(ctx context.Context, in *GetUsersReq, opts ...grpc.CallOption) (*Users, error)
	GetUser(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error)
	CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *Email, opts ...grpc.CallOption) (*DeleteUserResp, error)
	UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*User, error)
	UpdateSelf(ctx context.Context, in *UpdateSelfReq, opts ...grpc.CallOption) (*User, error)
}

type usersMgmtClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersMgmtClient(cc grpc.ClientConnInterface) UsersMgmtClient {
	return &usersMgmtClient{cc}
}

func (c *usersMgmtClient) GetUsers(ctx context.Context, in *GetUsersReq, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersMgmtClient) GetUser(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersMgmtClient) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersMgmtClient) DeleteUser(ctx context.Context, in *Email, opts ...grpc.CallOption) (*DeleteUserResp, error) {
	out := new(DeleteUserResp)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersMgmtClient) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersMgmtClient) UpdateSelf(ctx context.Context, in *UpdateSelfReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.local_user.UsersMgmt/UpdateSelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersMgmtServer is the server API for UsersMgmt service.
type UsersMgmtServer interface {
	GetUsers(context.Context, *GetUsersReq) (*Users, error)
	GetUser(context.Context, *Email) (*User, error)
	CreateUser(context.Context, *CreateUserReq) (*User, error)
	DeleteUser(context.Context, *Email) (*DeleteUserResp, error)
	UpdateUser(context.Context, *UpdateUserReq) (*User, error)
	UpdateSelf(context.Context, *UpdateSelfReq) (*User, error)
}

// UnimplementedUsersMgmtServer can be embedded to have forward compatible implementations.
type UnimplementedUsersMgmtServer struct {
}

func (*UnimplementedUsersMgmtServer) GetUsers(ctx context.Context, req *GetUsersReq) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUsersMgmtServer) GetUser(ctx context.Context, req *Email) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUsersMgmtServer) CreateUser(ctx context.Context, req *CreateUserReq) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUsersMgmtServer) DeleteUser(ctx context.Context, req *Email) (*DeleteUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedUsersMgmtServer) UpdateUser(ctx context.Context, req *UpdateUserReq) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUsersMgmtServer) UpdateSelf(ctx context.Context, req *UpdateSelfReq) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSelf not implemented")
}

func RegisterUsersMgmtServer(s *grpc.Server, srv UsersMgmtServer) {
	s.RegisterService(&_UsersMgmt_serviceDesc, srv)
}

func _UsersMgmt_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).GetUsers(ctx, req.(*GetUsersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersMgmt_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).GetUser(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersMgmt_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).CreateUser(ctx, req.(*CreateUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersMgmt_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).DeleteUser(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersMgmt_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).UpdateUser(ctx, req.(*UpdateUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersMgmt_UpdateSelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSelfReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersMgmtServer).UpdateSelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.local_user.UsersMgmt/UpdateSelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersMgmtServer).UpdateSelf(ctx, req.(*UpdateSelfReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UsersMgmt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.local_user.UsersMgmt",
	HandlerType: (*UsersMgmtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UsersMgmt_GetUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UsersMgmt_GetUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UsersMgmt_CreateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UsersMgmt_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UsersMgmt_UpdateUser_Handler,
		},
		{
			MethodName: "UpdateSelf",
			Handler:    _UsersMgmt_UpdateSelf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/local_user/users.proto",
}
