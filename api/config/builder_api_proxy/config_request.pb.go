// -*- mode: protobuf; indent-tabs-mode: t; c-basic-offset: 8; tab-width: 8 -*-

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: config/builder_api_proxy/config_request.proto

package bldrapiproxy

import (
	shared "github.com/chef/automate/api/config/shared"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-a2-config/api/a2conf"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V1 *ConfigRequest_V1 `protobuf:"bytes,1,opt,name=v1,proto3" json:"v1,omitempty" toml:"v1,omitempty" mapstructure:"v1,omitempty"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigRequest) GetV1() *ConfigRequest_V1 {
	if x != nil {
		return x.V1
	}
	return nil
}

type ConfigRequest_V1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys *ConfigRequest_V1_System  `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty" toml:"sys,omitempty" mapstructure:"sys,omitempty"`
	Svc *ConfigRequest_V1_Service `protobuf:"bytes,2,opt,name=svc,proto3" json:"svc,omitempty" toml:"svc,omitempty" mapstructure:"svc,omitempty"`
}

func (x *ConfigRequest_V1) Reset() {
	*x = ConfigRequest_V1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1) ProtoMessage() {}

func (x *ConfigRequest_V1) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConfigRequest_V1) GetSys() *ConfigRequest_V1_System {
	if x != nil {
		return x.Sys
	}
	return nil
}

func (x *ConfigRequest_V1) GetSvc() *ConfigRequest_V1_Service {
	if x != nil {
		return x.Svc
	}
	return nil
}

type ConfigRequest_V1_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mlsa    *shared.Mlsa                     `protobuf:"bytes,1,opt,name=mlsa,proto3" json:"mlsa,omitempty" toml:"mlsa,omitempty" mapstructure:"mlsa,omitempty"`
	Tls     *shared.TLSCredentials           `protobuf:"bytes,2,opt,name=tls,proto3" json:"tls,omitempty" toml:"tls,omitempty" mapstructure:"tls,omitempty"`
	Service *ConfigRequest_V1_System_Service `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty" toml:"service,omitempty" mapstructure:"service,omitempty"`
	Log     *ConfigRequest_V1_System_Logger  `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty" toml:"log,omitempty" mapstructure:"log,omitempty"`
	Nginx   *ConfigRequest_V1_System_Nginx   `protobuf:"bytes,5,opt,name=nginx,proto3" json:"nginx,omitempty" toml:"nginx,omitempty" mapstructure:"nginx,omitempty"`
	Http    *ConfigRequest_V1_System_HTTP    `protobuf:"bytes,6,opt,name=http,proto3" json:"http,omitempty" toml:"http,omitempty" mapstructure:"http,omitempty"`
	Web     *ConfigRequest_V1_System_Web     `protobuf:"bytes,7,opt,name=web,proto3" json:"web,omitempty" toml:"web,omitempty" mapstructure:"web,omitempty"`
}

func (x *ConfigRequest_V1_System) Reset() {
	*x = ConfigRequest_V1_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System) ProtoMessage() {}

func (x *ConfigRequest_V1_System) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ConfigRequest_V1_System) GetMlsa() *shared.Mlsa {
	if x != nil {
		return x.Mlsa
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetTls() *shared.TLSCredentials {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetService() *ConfigRequest_V1_System_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetLog() *ConfigRequest_V1_System_Logger {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetNginx() *ConfigRequest_V1_System_Nginx {
	if x != nil {
		return x.Nginx
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetHttp() *ConfigRequest_V1_System_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetWeb() *ConfigRequest_V1_System_Web {
	if x != nil {
		return x.Web
	}
	return nil
}

type ConfigRequest_V1_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest_V1_Service) Reset() {
	*x = ConfigRequest_V1_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_Service) ProtoMessage() {}

func (x *ConfigRequest_V1_Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_Service.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_Service) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 1}
}

type ConfigRequest_V1_System_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Host *wrappers.StringValue `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty" toml:"host,omitempty" mapstructure:"host,omitempty"` // The listen host is no longer setable(localhost only)
	Port *wrappers.Int32Value  `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty" toml:"port,omitempty" mapstructure:"port,omitempty"`
}

func (x *ConfigRequest_V1_System_Service) Reset() {
	*x = ConfigRequest_V1_System_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Service) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Service.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Service) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

// Deprecated: Do not use.
func (x *ConfigRequest_V1_System_Service) GetHost() *wrappers.StringValue {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ConfigRequest_V1_System_Service) GetPort() *wrappers.Int32Value {
	if x != nil {
		return x.Port
	}
	return nil
}

type ConfigRequest_V1_System_Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level *wrappers.StringValue `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty" toml:"level,omitempty" mapstructure:"level,omitempty"`
}

func (x *ConfigRequest_V1_System_Logger) Reset() {
	*x = ConfigRequest_V1_System_Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Logger) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Logger.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Logger) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *ConfigRequest_V1_System_Logger) GetLevel() *wrappers.StringValue {
	if x != nil {
		return x.Level
	}
	return nil
}

type ConfigRequest_V1_System_Nginx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerConnections   *wrappers.Int32Value `protobuf:"bytes,1,opt,name=worker_connections,json=workerConnections,proto3" json:"worker_connections,omitempty" toml:"worker_connections,omitempty" mapstructure:"worker_connections,omitempty"`
	WorkerProcesses     *wrappers.Int32Value `protobuf:"bytes,2,opt,name=worker_processes,json=workerProcesses,proto3" json:"worker_processes,omitempty" toml:"worker_processes,omitempty" mapstructure:"worker_processes,omitempty"`
	WorkerRlimitNofile  *wrappers.Int32Value `protobuf:"bytes,3,opt,name=worker_rlimit_nofile,json=workerRlimitNofile,proto3" json:"worker_rlimit_nofile,omitempty" toml:"worker_rlimit_nofile,omitempty" mapstructure:"worker_rlimit_nofile,omitempty"`
	MaxBodySize         *wrappers.Int32Value `protobuf:"bytes,4,opt,name=max_body_size,json=maxBodySize,proto3" json:"max_body_size,omitempty" toml:"max_body_size,omitempty" mapstructure:"max_body_size,omitempty"`
	ProxySendTimeout    *wrappers.Int32Value `protobuf:"bytes,5,opt,name=proxy_send_timeout,json=proxySendTimeout,proto3" json:"proxy_send_timeout,omitempty" toml:"proxy_send_timeout,omitempty" mapstructure:"proxy_send_timeout,omitempty"`
	ProxyReadTimeout    *wrappers.Int32Value `protobuf:"bytes,6,opt,name=proxy_read_timeout,json=proxyReadTimeout,proto3" json:"proxy_read_timeout,omitempty" toml:"proxy_read_timeout,omitempty" mapstructure:"proxy_read_timeout,omitempty"`
	ProxyConnectTimeout *wrappers.Int32Value `protobuf:"bytes,7,opt,name=proxy_connect_timeout,json=proxyConnectTimeout,proto3" json:"proxy_connect_timeout,omitempty" toml:"proxy_connect_timeout,omitempty" mapstructure:"proxy_connect_timeout,omitempty"`
	EnableCaching       *wrappers.BoolValue  `protobuf:"bytes,8,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty" toml:"enable_caching,omitempty" mapstructure:"enable_caching,omitempty"`
	EnableGzip          *wrappers.BoolValue  `protobuf:"bytes,9,opt,name=enable_gzip,json=enableGzip,proto3" json:"enable_gzip,omitempty" toml:"enable_gzip,omitempty" mapstructure:"enable_gzip,omitempty"`
}

func (x *ConfigRequest_V1_System_Nginx) Reset() {
	*x = ConfigRequest_V1_System_Nginx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Nginx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Nginx) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Nginx) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Nginx.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Nginx) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 2}
}

func (x *ConfigRequest_V1_System_Nginx) GetWorkerConnections() *wrappers.Int32Value {
	if x != nil {
		return x.WorkerConnections
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetWorkerProcesses() *wrappers.Int32Value {
	if x != nil {
		return x.WorkerProcesses
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetWorkerRlimitNofile() *wrappers.Int32Value {
	if x != nil {
		return x.WorkerRlimitNofile
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetMaxBodySize() *wrappers.Int32Value {
	if x != nil {
		return x.MaxBodySize
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetProxySendTimeout() *wrappers.Int32Value {
	if x != nil {
		return x.ProxySendTimeout
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetProxyReadTimeout() *wrappers.Int32Value {
	if x != nil {
		return x.ProxyReadTimeout
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetProxyConnectTimeout() *wrappers.Int32Value {
	if x != nil {
		return x.ProxyConnectTimeout
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetEnableCaching() *wrappers.BoolValue {
	if x != nil {
		return x.EnableCaching
	}
	return nil
}

func (x *ConfigRequest_V1_System_Nginx) GetEnableGzip() *wrappers.BoolValue {
	if x != nil {
		return x.EnableGzip
	}
	return nil
}

type ConfigRequest_V1_System_HTTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeepaliveConnections *wrappers.Int32Value  `protobuf:"bytes,1,opt,name=keepalive_connections,json=keepaliveConnections,proto3" json:"keepalive_connections,omitempty" toml:"keepalive_connections,omitempty" mapstructure:"keepalive_connections,omitempty"`
	KeepaliveRequests    *wrappers.Int32Value  `protobuf:"bytes,2,opt,name=keepalive_requests,json=keepaliveRequests,proto3" json:"keepalive_requests,omitempty" toml:"keepalive_requests,omitempty" mapstructure:"keepalive_requests,omitempty"`
	KeepaliveTimeout     *wrappers.Int32Value  `protobuf:"bytes,3,opt,name=keepalive_timeout,json=keepaliveTimeout,proto3" json:"keepalive_timeout,omitempty" toml:"keepalive_timeout,omitempty" mapstructure:"keepalive_timeout,omitempty"`
	SslCiphers           *wrappers.StringValue `protobuf:"bytes,4,opt,name=ssl_ciphers,json=sslCiphers,proto3" json:"ssl_ciphers,omitempty" toml:"ssl_ciphers,omitempty" mapstructure:"ssl_ciphers,omitempty"`
	SslProtocols         *wrappers.StringValue `protobuf:"bytes,5,opt,name=ssl_protocols,json=sslProtocols,proto3" json:"ssl_protocols,omitempty" toml:"ssl_protocols,omitempty" mapstructure:"ssl_protocols,omitempty"`
	SslVerifyDepth       *wrappers.Int32Value  `protobuf:"bytes,6,opt,name=ssl_verify_depth,json=sslVerifyDepth,proto3" json:"ssl_verify_depth,omitempty" toml:"ssl_verify_depth,omitempty" mapstructure:"ssl_verify_depth,omitempty"`
}

func (x *ConfigRequest_V1_System_HTTP) Reset() {
	*x = ConfigRequest_V1_System_HTTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_HTTP) ProtoMessage() {}

func (x *ConfigRequest_V1_System_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_HTTP.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_HTTP) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 3}
}

func (x *ConfigRequest_V1_System_HTTP) GetKeepaliveConnections() *wrappers.Int32Value {
	if x != nil {
		return x.KeepaliveConnections
	}
	return nil
}

func (x *ConfigRequest_V1_System_HTTP) GetKeepaliveRequests() *wrappers.Int32Value {
	if x != nil {
		return x.KeepaliveRequests
	}
	return nil
}

func (x *ConfigRequest_V1_System_HTTP) GetKeepaliveTimeout() *wrappers.Int32Value {
	if x != nil {
		return x.KeepaliveTimeout
	}
	return nil
}

func (x *ConfigRequest_V1_System_HTTP) GetSslCiphers() *wrappers.StringValue {
	if x != nil {
		return x.SslCiphers
	}
	return nil
}

func (x *ConfigRequest_V1_System_HTTP) GetSslProtocols() *wrappers.StringValue {
	if x != nil {
		return x.SslProtocols
	}
	return nil
}

func (x *ConfigRequest_V1_System_HTTP) GetSslVerifyDepth() *wrappers.Int32Value {
	if x != nil {
		return x.SslVerifyDepth
	}
	return nil
}

type ConfigRequest_V1_System_Web struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CookieDomain *wrappers.StringValue `protobuf:"bytes,1,opt,name=cookie_domain,json=cookieDomain,proto3" json:"cookie_domain,omitempty" toml:"cookie_domain,omitempty" mapstructure:"cookie_domain,omitempty"`
	Environment  *wrappers.StringValue `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty" toml:"environment,omitempty" mapstructure:"environment,omitempty"`
	UseGravatar  *wrappers.BoolValue   `protobuf:"bytes,3,opt,name=use_gravatar,json=useGravatar,proto3" json:"use_gravatar,omitempty" toml:"use_gravatar,omitempty" mapstructure:"use_gravatar,omitempty"`
}

func (x *ConfigRequest_V1_System_Web) Reset() {
	*x = ConfigRequest_V1_System_Web{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Web) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Web) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Web) ProtoReflect() protoreflect.Message {
	mi := &file_config_builder_api_proxy_config_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Web.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Web) Descriptor() ([]byte, []int) {
	return file_config_builder_api_proxy_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 4}
}

func (x *ConfigRequest_V1_System_Web) GetCookieDomain() *wrappers.StringValue {
	if x != nil {
		return x.CookieDomain
	}
	return nil
}

func (x *ConfigRequest_V1_System_Web) GetEnvironment() *wrappers.StringValue {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ConfigRequest_V1_System_Web) GetUseGravatar() *wrappers.BoolValue {
	if x != nil {
		return x.UseGravatar
	}
	return nil
}

var File_config_builder_api_proxy_config_request_proto protoreflect.FileDescriptor

var file_config_builder_api_proxy_config_request_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x26, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x61, 0x32, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x32, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x12,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x56, 0x31, 0x52, 0x02, 0x76, 0x31, 0x1a, 0xe1, 0x11, 0x0a, 0x02, 0x56, 0x31,
	0x12, 0x51, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x03,
	0x73, 0x79, 0x73, 0x12, 0x52, 0x0a, 0x03, 0x73, 0x76, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x03, 0x73, 0x76, 0x63, 0x1a, 0xa8, 0x10, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x6c, 0x73, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6c,
	0x73, 0x61, 0x52, 0x04, 0x6d, 0x6c, 0x73, 0x61, 0x12, 0x3c, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x03, 0x6c, 0x6f, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x12, 0x5b, 0x0a, 0x05, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x52, 0x05, 0x6e, 0x67, 0x69, 0x6e, 0x78,
	0x12, 0x58, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x48, 0x54, 0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x55, 0x0a, 0x03, 0x77, 0x65,
	0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x03, 0x77, 0x65,
	0x62, 0x1a, 0x87, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x15,
	0xc2, 0xf3, 0x18, 0x11, 0x0a, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73, 0x10, 0xf8, 0x4e, 0x1a, 0x05,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x3c, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x92, 0x05, 0x0a, 0x05, 0x4e, 0x67,
	0x69, 0x6e, 0x78, 0x12, 0x4a, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x46, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x5f, 0x72, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4e, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6f,
	0x64, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x42,
	0x6f, 0x64, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x4f, 0x0a,
	0x15, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x41,
	0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x67, 0x7a, 0x69, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x1a, 0xb7,
	0x03, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12, 0x50, 0x0a, 0x15, 0x6b, 0x65, 0x65, 0x70, 0x61,
	0x6c, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x6b, 0x65, 0x65,
	0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x3d, 0x0a, 0x0b, 0x73, 0x73, 0x6c, 0x5f, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x73, 0x73, 0x6c, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x12, 0x41,
	0x0a, 0x0d, 0x73, 0x73, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x73, 0x73, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x73, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x73, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x44, 0x65, 0x70, 0x74, 0x68, 0x1a, 0xc7, 0x01, 0x0a, 0x03, 0x57, 0x65, 0x62,
	0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x47, 0x72, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x20, 0xc2,
	0xf3, 0x18, 0x1c, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x42,
	0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68,
	0x65, 0x66, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x3b, 0x62, 0x6c, 0x64, 0x72, 0x61, 0x70, 0x69,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_builder_api_proxy_config_request_proto_rawDescOnce sync.Once
	file_config_builder_api_proxy_config_request_proto_rawDescData = file_config_builder_api_proxy_config_request_proto_rawDesc
)

func file_config_builder_api_proxy_config_request_proto_rawDescGZIP() []byte {
	file_config_builder_api_proxy_config_request_proto_rawDescOnce.Do(func() {
		file_config_builder_api_proxy_config_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_builder_api_proxy_config_request_proto_rawDescData)
	})
	return file_config_builder_api_proxy_config_request_proto_rawDescData
}

var file_config_builder_api_proxy_config_request_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_config_builder_api_proxy_config_request_proto_goTypes = []interface{}{
	(*ConfigRequest)(nil),                   // 0: chef.automate.domain.builder_api_proxy.ConfigRequest
	(*ConfigRequest_V1)(nil),                // 1: chef.automate.domain.builder_api_proxy.ConfigRequest.V1
	(*ConfigRequest_V1_System)(nil),         // 2: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System
	(*ConfigRequest_V1_Service)(nil),        // 3: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.Service
	(*ConfigRequest_V1_System_Service)(nil), // 4: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Service
	(*ConfigRequest_V1_System_Logger)(nil),  // 5: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Logger
	(*ConfigRequest_V1_System_Nginx)(nil),   // 6: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx
	(*ConfigRequest_V1_System_HTTP)(nil),    // 7: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP
	(*ConfigRequest_V1_System_Web)(nil),     // 8: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Web
	(*shared.Mlsa)(nil),                     // 9: chef.automate.infra.config.Mlsa
	(*shared.TLSCredentials)(nil),           // 10: chef.automate.infra.config.TLSCredentials
	(*wrappers.StringValue)(nil),            // 11: google.protobuf.StringValue
	(*wrappers.Int32Value)(nil),             // 12: google.protobuf.Int32Value
	(*wrappers.BoolValue)(nil),              // 13: google.protobuf.BoolValue
}
var file_config_builder_api_proxy_config_request_proto_depIdxs = []int32{
	1,  // 0: chef.automate.domain.builder_api_proxy.ConfigRequest.v1:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1
	2,  // 1: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.sys:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System
	3,  // 2: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.svc:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.Service
	9,  // 3: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.mlsa:type_name -> chef.automate.infra.config.Mlsa
	10, // 4: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.tls:type_name -> chef.automate.infra.config.TLSCredentials
	4,  // 5: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.service:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Service
	5,  // 6: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.log:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Logger
	6,  // 7: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.nginx:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx
	7,  // 8: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.http:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP
	8,  // 9: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.web:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Web
	11, // 10: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Service.host:type_name -> google.protobuf.StringValue
	12, // 11: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Service.port:type_name -> google.protobuf.Int32Value
	11, // 12: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Logger.level:type_name -> google.protobuf.StringValue
	12, // 13: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.worker_connections:type_name -> google.protobuf.Int32Value
	12, // 14: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.worker_processes:type_name -> google.protobuf.Int32Value
	12, // 15: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.worker_rlimit_nofile:type_name -> google.protobuf.Int32Value
	12, // 16: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.max_body_size:type_name -> google.protobuf.Int32Value
	12, // 17: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.proxy_send_timeout:type_name -> google.protobuf.Int32Value
	12, // 18: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.proxy_read_timeout:type_name -> google.protobuf.Int32Value
	12, // 19: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.proxy_connect_timeout:type_name -> google.protobuf.Int32Value
	13, // 20: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.enable_caching:type_name -> google.protobuf.BoolValue
	13, // 21: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Nginx.enable_gzip:type_name -> google.protobuf.BoolValue
	12, // 22: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.keepalive_connections:type_name -> google.protobuf.Int32Value
	12, // 23: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.keepalive_requests:type_name -> google.protobuf.Int32Value
	12, // 24: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.keepalive_timeout:type_name -> google.protobuf.Int32Value
	11, // 25: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.ssl_ciphers:type_name -> google.protobuf.StringValue
	11, // 26: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.ssl_protocols:type_name -> google.protobuf.StringValue
	12, // 27: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.HTTP.ssl_verify_depth:type_name -> google.protobuf.Int32Value
	11, // 28: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Web.cookie_domain:type_name -> google.protobuf.StringValue
	11, // 29: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Web.environment:type_name -> google.protobuf.StringValue
	13, // 30: chef.automate.domain.builder_api_proxy.ConfigRequest.V1.System.Web.use_gravatar:type_name -> google.protobuf.BoolValue
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_config_builder_api_proxy_config_request_proto_init() }
func file_config_builder_api_proxy_config_request_proto_init() {
	if File_config_builder_api_proxy_config_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_builder_api_proxy_config_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Logger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Nginx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_HTTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_builder_api_proxy_config_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Web); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_builder_api_proxy_config_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_builder_api_proxy_config_request_proto_goTypes,
		DependencyIndexes: file_config_builder_api_proxy_config_request_proto_depIdxs,
		MessageInfos:      file_config_builder_api_proxy_config_request_proto_msgTypes,
	}.Build()
	File_config_builder_api_proxy_config_request_proto = out.File
	file_config_builder_api_proxy_config_request_proto_rawDesc = nil
	file_config_builder_api_proxy_config_request_proto_goTypes = nil
	file_config_builder_api_proxy_config_request_proto_depIdxs = nil
}
