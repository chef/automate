syntax = "proto3";

package chef.automate.domain.event_gateway;
option go_package = "github.com/chef/automate/api/config/event_gateway";

import "config/shared/global.proto";
import "config/shared/tls.proto";
import "automate-grpc/protoc-gen-a2-config/api/a2conf/annotations.proto";
import "google/protobuf/wrappers.proto";

message ConfigRequest {
	option (chef.automate.api.service_config) = {name: "event-gateway"};

	V1 v1 = 1;

	message V1 {
		System sys = 1;
		Service svc = 2;

		message System {
			chef.automate.infra.config.Mlsa mlsa = 1;
			chef.automate.infra.config.TLSCredentials tls = 2;
			Service service = 3;
			Log log = 4;
			repeated chef.automate.infra.config.FrontendTLSCredential frontend_tls = 5;

			message Service {
				google.protobuf.StringValue host = 1;
				google.protobuf.Int32Value port = 2 [ (chef.automate.api.port) = { name: "service", default: 4222, protocol: "nats" } ];
				google.protobuf.Int32Value gateway_port = 3 [ (chef.automate.api.port) = { name: "nats_gateway", default: 10148, protocol: "nats-gateway" } ];
				reserved 4;
				google.protobuf.BoolValue disable_frontend_tls = 5;
			}

			message Log {
				google.protobuf.StringValue format = 1;
				google.protobuf.StringValue level = 2;
			}

		}
		// V1.Service can currently only be used for deployment-service
		message Service {
		}
	}
}
