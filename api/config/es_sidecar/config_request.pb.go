// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: config/es_sidecar/config_request.proto

package es_sidecar

import (
	shared "github.com/chef/automate/api/config/shared"
	_ "github.com/chef/automate/components/automate-grpc/protoc-gen-a2-config/api/a2conf"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V1 *ConfigRequest_V1 `protobuf:"bytes,3,opt,name=v1,proto3" json:"v1,omitempty" toml:"v1,omitempty" mapstructure:"v1,omitempty"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigRequest) GetV1() *ConfigRequest_V1 {
	if x != nil {
		return x.V1
	}
	return nil
}

type ConfigRequest_V1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sys *ConfigRequest_V1_System  `protobuf:"bytes,1,opt,name=sys,proto3" json:"sys,omitempty" toml:"sys,omitempty" mapstructure:"sys,omitempty"`
	Svc *ConfigRequest_V1_Service `protobuf:"bytes,2,opt,name=svc,proto3" json:"svc,omitempty" toml:"svc,omitempty" mapstructure:"svc,omitempty"`
}

func (x *ConfigRequest_V1) Reset() {
	*x = ConfigRequest_V1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1) ProtoMessage() {}

func (x *ConfigRequest_V1) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConfigRequest_V1) GetSys() *ConfigRequest_V1_System {
	if x != nil {
		return x.Sys
	}
	return nil
}

func (x *ConfigRequest_V1) GetSvc() *ConfigRequest_V1_Service {
	if x != nil {
		return x.Svc
	}
	return nil
}

type ConfigRequest_V1_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mlsa    *shared.Mlsa                     `protobuf:"bytes,1,opt,name=mlsa,proto3" json:"mlsa,omitempty" toml:"mlsa,omitempty" mapstructure:"mlsa,omitempty"`
	Service *ConfigRequest_V1_System_Service `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty" toml:"service,omitempty" mapstructure:"service,omitempty"`
	Tls     *shared.TLSCredentials           `protobuf:"bytes,3,opt,name=tls,proto3" json:"tls,omitempty" toml:"tls,omitempty" mapstructure:"tls,omitempty"`
	Backups *ConfigRequest_V1_System_Backups `protobuf:"bytes,4,opt,name=backups,proto3" json:"backups,omitempty" toml:"backups,omitempty" mapstructure:"backups,omitempty"` // Internal only
	Log     *ConfigRequest_V1_System_Log     `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty" toml:"log,omitempty" mapstructure:"log,omitempty"`
}

func (x *ConfigRequest_V1_System) Reset() {
	*x = ConfigRequest_V1_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System) ProtoMessage() {}

func (x *ConfigRequest_V1_System) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ConfigRequest_V1_System) GetMlsa() *shared.Mlsa {
	if x != nil {
		return x.Mlsa
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetService() *ConfigRequest_V1_System_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetTls() *shared.TLSCredentials {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetBackups() *ConfigRequest_V1_System_Backups {
	if x != nil {
		return x.Backups
	}
	return nil
}

func (x *ConfigRequest_V1_System) GetLog() *ConfigRequest_V1_System_Log {
	if x != nil {
		return x.Log
	}
	return nil
}

type ConfigRequest_V1_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest_V1_Service) Reset() {
	*x = ConfigRequest_V1_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_Service) ProtoMessage() {}

func (x *ConfigRequest_V1_Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_Service.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_Service) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 1}
}

type ConfigRequest_V1_System_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Host *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty" toml:"host,omitempty" mapstructure:"host,omitempty"` // The listen host is no longer setable(localhost only)
	Port *wrapperspb.Int32Value  `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty" toml:"port,omitempty" mapstructure:"port,omitempty"`
}

func (x *ConfigRequest_V1_System_Service) Reset() {
	*x = ConfigRequest_V1_System_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Service) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Service.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Service) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

// Deprecated: Do not use.
func (x *ConfigRequest_V1_System_Service) GetHost() *wrapperspb.StringValue {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ConfigRequest_V1_System_Service) GetPort() *wrapperspb.Int32Value {
	if x != nil {
		return x.Port
	}
	return nil
}

type ConfigRequest_V1_System_Backups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backend    *wrapperspb.StringValue                      `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty" toml:"backend,omitempty" mapstructure:"backend,omitempty"`
	VerifyRepo *wrapperspb.BoolValue                        `protobuf:"bytes,6,opt,name=verify_repo,json=verifyRepo,proto3" json:"verify_repo,omitempty" toml:"verify_repo,omitempty" mapstructure:"verify_repo,omitempty"`
	Fs         *ConfigRequest_V1_System_Backups_FsSettings  `protobuf:"bytes,2,opt,name=fs,proto3" json:"fs,omitempty" toml:"fs,omitempty" mapstructure:"fs,omitempty"`
	S3         *ConfigRequest_V1_System_Backups_S3Settings  `protobuf:"bytes,5,opt,name=s3,proto3" json:"s3,omitempty" toml:"s3,omitempty" mapstructure:"s3,omitempty"`
	Gcs        *ConfigRequest_V1_System_Backups_GCSSettings `protobuf:"bytes,7,opt,name=gcs,proto3" json:"gcs,omitempty" toml:"gcs,omitempty" mapstructure:"gcs,omitempty"`
}

func (x *ConfigRequest_V1_System_Backups) Reset() {
	*x = ConfigRequest_V1_System_Backups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Backups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Backups) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Backups) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Backups.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Backups) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *ConfigRequest_V1_System_Backups) GetBackend() *wrapperspb.StringValue {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups) GetVerifyRepo() *wrapperspb.BoolValue {
	if x != nil {
		return x.VerifyRepo
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups) GetFs() *ConfigRequest_V1_System_Backups_FsSettings {
	if x != nil {
		return x.Fs
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups) GetS3() *ConfigRequest_V1_System_Backups_S3Settings {
	if x != nil {
		return x.S3
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups) GetGcs() *ConfigRequest_V1_System_Backups_GCSSettings {
	if x != nil {
		return x.Gcs
	}
	return nil
}

type ConfigRequest_V1_System_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty" toml:"format,omitempty" mapstructure:"format,omitempty"`
	Level  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty" toml:"level,omitempty" mapstructure:"level,omitempty"`
}

func (x *ConfigRequest_V1_System_Log) Reset() {
	*x = ConfigRequest_V1_System_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Log) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Log) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Log.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Log) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 2}
}

func (x *ConfigRequest_V1_System_Log) GetFormat() *wrapperspb.StringValue {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *ConfigRequest_V1_System_Log) GetLevel() *wrapperspb.StringValue {
	if x != nil {
		return x.Level
	}
	return nil
}

type ConfigRequest_V1_System_Backups_FsSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootLocation           *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=root_location,json=rootLocation,proto3" json:"root_location,omitempty" toml:"root_location,omitempty" mapstructure:"root_location,omitempty"`
	MaxSnapshotBytesPerSec *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=max_snapshot_bytes_per_sec,json=maxSnapshotBytesPerSec,proto3" json:"max_snapshot_bytes_per_sec,omitempty" toml:"max_snapshot_bytes_per_sec,omitempty" mapstructure:"max_snapshot_bytes_per_sec,omitempty"`
	MaxRestoreBytesPerSec  *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=max_restore_bytes_per_sec,json=maxRestoreBytesPerSec,proto3" json:"max_restore_bytes_per_sec,omitempty" toml:"max_restore_bytes_per_sec,omitempty" mapstructure:"max_restore_bytes_per_sec,omitempty"`
}

func (x *ConfigRequest_V1_System_Backups_FsSettings) Reset() {
	*x = ConfigRequest_V1_System_Backups_FsSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Backups_FsSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Backups_FsSettings) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Backups_FsSettings) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Backups_FsSettings.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Backups_FsSettings) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0}
}

func (x *ConfigRequest_V1_System_Backups_FsSettings) GetRootLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.RootLocation
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_FsSettings) GetMaxSnapshotBytesPerSec() *wrapperspb.StringValue {
	if x != nil {
		return x.MaxSnapshotBytesPerSec
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_FsSettings) GetMaxRestoreBytesPerSec() *wrapperspb.StringValue {
	if x != nil {
		return x.MaxRestoreBytesPerSec
	}
	return nil
}

type ConfigRequest_V1_System_Backups_S3Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket        *wrapperspb.StringValue                                            `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" toml:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	Client        *wrapperspb.StringValue                                            `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty" toml:"client,omitempty" mapstructure:"client,omitempty"`
	BasePath      *wrapperspb.StringValue                                            `protobuf:"bytes,3,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty" toml:"base_path,omitempty" mapstructure:"base_path,omitempty"`
	Es            *shared.Backups_S3_Elasticsearch                                   `protobuf:"bytes,4,opt,name=es,proto3" json:"es,omitempty" toml:"es,omitempty" mapstructure:"es,omitempty"`
	EnableAwsAuth *wrapperspb.BoolValue                                              `protobuf:"bytes,5,opt,name=enable_aws_auth,json=enableAwsAuth,proto3" json:"enable_aws_auth,omitempty" toml:"enable_aws_auth,omitempty" mapstructure:"enable_aws_auth,omitempty"`
	AwsAuth       *shared.External_Elasticsearch_Authentication_AwsElasticsearchAuth `protobuf:"bytes,6,opt,name=aws_auth,json=awsAuth,proto3" json:"aws_auth,omitempty" toml:"aws_auth,omitempty" mapstructure:"aws_auth,omitempty"`
	EsUrl         *wrapperspb.StringValue                                            `protobuf:"bytes,7,opt,name=es_url,json=esUrl,proto3" json:"es_url,omitempty" toml:"es_url,omitempty" mapstructure:"es_url,omitempty"`
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) Reset() {
	*x = ConfigRequest_V1_System_Backups_S3Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Backups_S3Settings) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Backups_S3Settings) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Backups_S3Settings.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Backups_S3Settings) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1}
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetBucket() *wrapperspb.StringValue {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetClient() *wrapperspb.StringValue {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetBasePath() *wrapperspb.StringValue {
	if x != nil {
		return x.BasePath
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetEs() *shared.Backups_S3_Elasticsearch {
	if x != nil {
		return x.Es
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetEnableAwsAuth() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableAwsAuth
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetAwsAuth() *shared.External_Elasticsearch_Authentication_AwsElasticsearchAuth {
	if x != nil {
		return x.AwsAuth
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_S3Settings) GetEsUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.EsUrl
	}
	return nil
}

type ConfigRequest_V1_System_Backups_GCSSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket   *wrapperspb.StringValue           `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty" toml:"bucket,omitempty" mapstructure:"bucket,omitempty"`
	Client   *wrapperspb.StringValue           `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty" toml:"client,omitempty" mapstructure:"client,omitempty"`
	BasePath *wrapperspb.StringValue           `protobuf:"bytes,3,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty" toml:"base_path,omitempty" mapstructure:"base_path,omitempty"`
	Es       *shared.Backups_GCS_Elasticsearch `protobuf:"bytes,4,opt,name=es,proto3" json:"es,omitempty" toml:"es,omitempty" mapstructure:"es,omitempty"`
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) Reset() {
	*x = ConfigRequest_V1_System_Backups_GCSSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_es_sidecar_config_request_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest_V1_System_Backups_GCSSettings) ProtoMessage() {}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) ProtoReflect() protoreflect.Message {
	mi := &file_config_es_sidecar_config_request_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest_V1_System_Backups_GCSSettings.ProtoReflect.Descriptor instead.
func (*ConfigRequest_V1_System_Backups_GCSSettings) Descriptor() ([]byte, []int) {
	return file_config_es_sidecar_config_request_proto_rawDescGZIP(), []int{0, 0, 0, 1, 2}
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) GetBucket() *wrapperspb.StringValue {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) GetClient() *wrapperspb.StringValue {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) GetBasePath() *wrapperspb.StringValue {
	if x != nil {
		return x.BasePath
	}
	return nil
}

func (x *ConfigRequest_V1_System_Backups_GCSSettings) GetEs() *shared.Backups_GCS_Elasticsearch {
	if x != nil {
		return x.Es
	}
	return nil
}

var File_config_es_sidecar_config_request_proto protoreflect.FileDescriptor

var file_config_es_sidecar_config_request_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x1a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x61, 0x32, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x32, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8,
	0x12, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x40, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x52, 0x02,
	0x76, 0x31, 0x1a, 0xb4, 0x11, 0x0a, 0x02, 0x56, 0x31, 0x12, 0x49, 0x0a, 0x03, 0x73, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f,
	0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x03, 0x73, 0x79, 0x73, 0x12, 0x4a, 0x0a, 0x03, 0x73, 0x76, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x56, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x03, 0x73, 0x76, 0x63,
	0x1a, 0x8b, 0x10, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x04, 0x6d,
	0x6c, 0x73, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6c, 0x73, 0x61, 0x52, 0x04, 0x6d, 0x6c, 0x73,
	0x61, 0x12, 0x59, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x03,
	0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x59, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x4d, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x1a, 0x88, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x16, 0xc2, 0xf3, 0x18, 0x12, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x10, 0x8b, 0x4f, 0x1a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0x8b, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x12, 0x5a, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x46, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x02, 0x66, 0x73, 0x12, 0x5a, 0x0a, 0x02,
	0x73, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65,
	0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x53, 0x33, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x02, 0x73, 0x33, 0x12, 0x5d, 0x0a, 0x03, 0x67, 0x63, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x47, 0x43, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x03, 0x67, 0x63, 0x73, 0x1a, 0x81, 0x02, 0x0a, 0x0a, 0x46, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x6f, 0x6f,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x1a, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x6d, 0x61, 0x78,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x12, 0x56, 0x0a, 0x19, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x1a, 0xe5, 0x03, 0x0a, 0x0a,
	0x53, 0x33, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x44, 0x0a, 0x02, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x73, 0x2e, 0x53, 0x33, 0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x02, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x71, 0x0a, 0x08, 0x61,
	0x77, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x77, 0x73, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x75, 0x74, 0x68, 0x52, 0x07, 0x61, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x33,
	0x0a, 0x06, 0x65, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x65, 0x73,
	0x55, 0x72, 0x6c, 0x1a, 0xfb, 0x01, 0x0a, 0x0b, 0x47, 0x43, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x02, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x47, 0x43, 0x53, 0x2e,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x02, 0x65,
	0x73, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x1a, 0x6f, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x09,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x18, 0xc2, 0xf3, 0x18, 0x14, 0x0a,
	0x12, 0x65, 0x73, 0x2d, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x03, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x66, 0x2f, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_config_es_sidecar_config_request_proto_rawDescOnce sync.Once
	file_config_es_sidecar_config_request_proto_rawDescData = file_config_es_sidecar_config_request_proto_rawDesc
)

func file_config_es_sidecar_config_request_proto_rawDescGZIP() []byte {
	file_config_es_sidecar_config_request_proto_rawDescOnce.Do(func() {
		file_config_es_sidecar_config_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_es_sidecar_config_request_proto_rawDescData)
	})
	return file_config_es_sidecar_config_request_proto_rawDescData
}

var file_config_es_sidecar_config_request_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_config_es_sidecar_config_request_proto_goTypes = []interface{}{
	(*ConfigRequest)(nil),                                                     // 0: chef.automate.infra.es_sidecar.ConfigRequest
	(*ConfigRequest_V1)(nil),                                                  // 1: chef.automate.infra.es_sidecar.ConfigRequest.V1
	(*ConfigRequest_V1_System)(nil),                                           // 2: chef.automate.infra.es_sidecar.ConfigRequest.V1.System
	(*ConfigRequest_V1_Service)(nil),                                          // 3: chef.automate.infra.es_sidecar.ConfigRequest.V1.Service
	(*ConfigRequest_V1_System_Service)(nil),                                   // 4: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Service
	(*ConfigRequest_V1_System_Backups)(nil),                                   // 5: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups
	(*ConfigRequest_V1_System_Log)(nil),                                       // 6: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Log
	(*ConfigRequest_V1_System_Backups_FsSettings)(nil),                        // 7: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.FsSettings
	(*ConfigRequest_V1_System_Backups_S3Settings)(nil),                        // 8: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings
	(*ConfigRequest_V1_System_Backups_GCSSettings)(nil),                       // 9: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings
	(*shared.Mlsa)(nil),                                                       // 10: chef.automate.infra.config.Mlsa
	(*shared.TLSCredentials)(nil),                                             // 11: chef.automate.infra.config.TLSCredentials
	(*wrapperspb.StringValue)(nil),                                            // 12: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),                                             // 13: google.protobuf.Int32Value
	(*wrapperspb.BoolValue)(nil),                                              // 14: google.protobuf.BoolValue
	(*shared.Backups_S3_Elasticsearch)(nil),                                   // 15: chef.automate.infra.config.Backups.S3.Elasticsearch
	(*shared.External_Elasticsearch_Authentication_AwsElasticsearchAuth)(nil), // 16: chef.automate.infra.config.External.Elasticsearch.Authentication.AwsElasticsearchAuth
	(*shared.Backups_GCS_Elasticsearch)(nil),                                  // 17: chef.automate.infra.config.Backups.GCS.Elasticsearch
}
var file_config_es_sidecar_config_request_proto_depIdxs = []int32{
	1,  // 0: chef.automate.infra.es_sidecar.ConfigRequest.v1:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1
	2,  // 1: chef.automate.infra.es_sidecar.ConfigRequest.V1.sys:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System
	3,  // 2: chef.automate.infra.es_sidecar.ConfigRequest.V1.svc:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.Service
	10, // 3: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.mlsa:type_name -> chef.automate.infra.config.Mlsa
	4,  // 4: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.service:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Service
	11, // 5: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.tls:type_name -> chef.automate.infra.config.TLSCredentials
	5,  // 6: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.backups:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups
	6,  // 7: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.log:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Log
	12, // 8: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Service.host:type_name -> google.protobuf.StringValue
	13, // 9: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Service.port:type_name -> google.protobuf.Int32Value
	12, // 10: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.backend:type_name -> google.protobuf.StringValue
	14, // 11: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.verify_repo:type_name -> google.protobuf.BoolValue
	7,  // 12: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.fs:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.FsSettings
	8,  // 13: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.s3:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings
	9,  // 14: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.gcs:type_name -> chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings
	12, // 15: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Log.format:type_name -> google.protobuf.StringValue
	12, // 16: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Log.level:type_name -> google.protobuf.StringValue
	12, // 17: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.FsSettings.root_location:type_name -> google.protobuf.StringValue
	12, // 18: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.FsSettings.max_snapshot_bytes_per_sec:type_name -> google.protobuf.StringValue
	12, // 19: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.FsSettings.max_restore_bytes_per_sec:type_name -> google.protobuf.StringValue
	12, // 20: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.bucket:type_name -> google.protobuf.StringValue
	12, // 21: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.client:type_name -> google.protobuf.StringValue
	12, // 22: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.base_path:type_name -> google.protobuf.StringValue
	15, // 23: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.es:type_name -> chef.automate.infra.config.Backups.S3.Elasticsearch
	14, // 24: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.enable_aws_auth:type_name -> google.protobuf.BoolValue
	16, // 25: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.aws_auth:type_name -> chef.automate.infra.config.External.Elasticsearch.Authentication.AwsElasticsearchAuth
	12, // 26: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.S3Settings.es_url:type_name -> google.protobuf.StringValue
	12, // 27: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings.bucket:type_name -> google.protobuf.StringValue
	12, // 28: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings.client:type_name -> google.protobuf.StringValue
	12, // 29: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings.base_path:type_name -> google.protobuf.StringValue
	17, // 30: chef.automate.infra.es_sidecar.ConfigRequest.V1.System.Backups.GCSSettings.es:type_name -> chef.automate.infra.config.Backups.GCS.Elasticsearch
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_config_es_sidecar_config_request_proto_init() }
func file_config_es_sidecar_config_request_proto_init() {
	if File_config_es_sidecar_config_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_es_sidecar_config_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Backups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Backups_FsSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Backups_S3Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_es_sidecar_config_request_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest_V1_System_Backups_GCSSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_es_sidecar_config_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_es_sidecar_config_request_proto_goTypes,
		DependencyIndexes: file_config_es_sidecar_config_request_proto_depIdxs,
		MessageInfos:      file_config_es_sidecar_config_request_proto_msgTypes,
	}.Build()
	File_config_es_sidecar_config_request_proto = out.File
	file_config_es_sidecar_config_request_proto_rawDesc = nil
	file_config_es_sidecar_config_request_proto_goTypes = nil
	file_config_es_sidecar_config_request_proto_depIdxs = nil
}
