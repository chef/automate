// -*- mode: protobuf; indent-tabs-mode: t; c-basic-offset: 8; tab-width: 8 -*-

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: config/deployment/automate_config.proto

package deployment

import (
	applications "github.com/chef/automate/api/config/applications"
	authn "github.com/chef/automate/api/config/authn"
	authz "github.com/chef/automate/api/config/authz"
	backup_gateway "github.com/chef/automate/api/config/backup_gateway"
	bifrost "github.com/chef/automate/api/config/bifrost"
	bookshelf "github.com/chef/automate/api/config/bookshelf"
	builder_api "github.com/chef/automate/api/config/builder_api"
	builder_api_proxy "github.com/chef/automate/api/config/builder_api_proxy"
	builder_memcached "github.com/chef/automate/api/config/builder_memcached"
	cds "github.com/chef/automate/api/config/cds"
	cereal "github.com/chef/automate/api/config/cereal"
	cfgmgmt "github.com/chef/automate/api/config/cfgmgmt"
	compliance "github.com/chef/automate/api/config/compliance"
	cs_nginx "github.com/chef/automate/api/config/cs_nginx"
	data_feed "github.com/chef/automate/api/config/data_feed"
	dex "github.com/chef/automate/api/config/dex"
	elasticsearch "github.com/chef/automate/api/config/elasticsearch"
	erchef "github.com/chef/automate/api/config/erchef"
	es_sidecar "github.com/chef/automate/api/config/es_sidecar"
	esgateway "github.com/chef/automate/api/config/esgateway"
	event "github.com/chef/automate/api/config/event"
	event_feed "github.com/chef/automate/api/config/event_feed"
	event_gateway "github.com/chef/automate/api/config/event_gateway"
	gateway "github.com/chef/automate/api/config/gateway"
	infra_proxy "github.com/chef/automate/api/config/infra_proxy"
	ingest "github.com/chef/automate/api/config/ingest"
	license_control "github.com/chef/automate/api/config/license_control"
	load_balancer "github.com/chef/automate/api/config/load_balancer"
	local_user "github.com/chef/automate/api/config/local_user"
	minio "github.com/chef/automate/api/config/minio"
	nodemanager "github.com/chef/automate/api/config/nodemanager"
	notifications "github.com/chef/automate/api/config/notifications"
	pg_gateway "github.com/chef/automate/api/config/pg_gateway"
	pg_sidecar "github.com/chef/automate/api/config/pg_sidecar"
	postgresql "github.com/chef/automate/api/config/postgresql"
	prometheus "github.com/chef/automate/api/config/prometheus"
	sample_data "github.com/chef/automate/api/config/sample_data"
	secrets "github.com/chef/automate/api/config/secrets"
	session "github.com/chef/automate/api/config/session"
	shared "github.com/chef/automate/api/config/shared"
	teams "github.com/chef/automate/api/config/teams"
	ui "github.com/chef/automate/api/config/ui"
	user_settings "github.com/chef/automate/api/config/user_settings"
	workflow_nginx "github.com/chef/automate/api/config/workflow_nginx"
	workflow_server "github.com/chef/automate/api/config/workflow_server"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AutomateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global           *shared.GlobalConfig             `protobuf:"bytes,19,opt,name=global,proto3" json:"global,omitempty" toml:"global,omitempty" mapstructure:"global,omitempty"`
	AuthN            *authn.ConfigRequest             `protobuf:"bytes,1,opt,name=auth_n,json=authN,proto3" json:"auth_n,omitempty" toml:"auth_n,omitempty" mapstructure:"auth_n,omitempty"`
	AuthZ            *authz.ConfigRequest             `protobuf:"bytes,2,opt,name=auth_z,json=authZ,proto3" json:"auth_z,omitempty" toml:"auth_z,omitempty" mapstructure:"auth_z,omitempty"`
	Compliance       *compliance.ConfigRequest        `protobuf:"bytes,10,opt,name=compliance,proto3" json:"compliance,omitempty" toml:"compliance,omitempty" mapstructure:"compliance,omitempty"`
	ConfigMgmt       *cfgmgmt.ConfigRequest           `protobuf:"bytes,6,opt,name=config_mgmt,json=configMgmt,proto3" json:"config_mgmt,omitempty" toml:"config_mgmt,omitempty" mapstructure:"config_mgmt,omitempty"`
	Deployment       *ConfigRequest                   `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment,omitempty" toml:"deployment,omitempty" mapstructure:"deployment,omitempty"`
	Dex              *dex.ConfigRequest               `protobuf:"bytes,4,opt,name=dex,proto3" json:"dex,omitempty" toml:"dex,omitempty" mapstructure:"dex,omitempty"`
	Elasticsearch    *elasticsearch.ConfigRequest     `protobuf:"bytes,7,opt,name=elasticsearch,proto3" json:"elasticsearch,omitempty" toml:"elasticsearch,omitempty" mapstructure:"elasticsearch,omitempty"`
	Esgateway        *esgateway.ConfigRequest         `protobuf:"bytes,31,opt,name=esgateway,proto3" json:"esgateway,omitempty" toml:"esgateway,omitempty" mapstructure:"esgateway,omitempty"`
	EsSidecar        *es_sidecar.ConfigRequest        `protobuf:"bytes,11,opt,name=es_sidecar,json=esSidecar,proto3" json:"es_sidecar,omitempty" toml:"es_sidecar,omitempty" mapstructure:"es_sidecar,omitempty"`
	Gateway          *gateway.ConfigRequest           `protobuf:"bytes,5,opt,name=gateway,proto3" json:"gateway,omitempty" toml:"gateway,omitempty" mapstructure:"gateway,omitempty"`
	Ingest           *ingest.ConfigRequest            `protobuf:"bytes,13,opt,name=ingest,proto3" json:"ingest,omitempty" toml:"ingest,omitempty" mapstructure:"ingest,omitempty"`
	LoadBalancer     *load_balancer.ConfigRequest     `protobuf:"bytes,8,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty" toml:"load_balancer,omitempty" mapstructure:"load_balancer,omitempty"`
	LocalUser        *local_user.ConfigRequest        `protobuf:"bytes,12,opt,name=local_user,json=localUser,proto3" json:"local_user,omitempty" toml:"local_user,omitempty" mapstructure:"local_user,omitempty"`
	LicenseControl   *license_control.ConfigRequest   `protobuf:"bytes,16,opt,name=license_control,json=licenseControl,proto3" json:"license_control,omitempty" toml:"license_control,omitempty" mapstructure:"license_control,omitempty"`
	Notifications    *notifications.ConfigRequest     `protobuf:"bytes,14,opt,name=notifications,proto3" json:"notifications,omitempty" toml:"notifications,omitempty" mapstructure:"notifications,omitempty"`
	Postgresql       *postgresql.ConfigRequest        `protobuf:"bytes,15,opt,name=postgresql,proto3" json:"postgresql,omitempty" toml:"postgresql,omitempty" mapstructure:"postgresql,omitempty"`
	Session          *session.ConfigRequest           `protobuf:"bytes,17,opt,name=session,proto3" json:"session,omitempty" toml:"session,omitempty" mapstructure:"session,omitempty"`
	Teams            *teams.ConfigRequest             `protobuf:"bytes,18,opt,name=teams,proto3" json:"teams,omitempty" toml:"teams,omitempty" mapstructure:"teams,omitempty"`
	UI               *ui.ConfigRequest                `protobuf:"bytes,9,opt,name=u_i,json=uI,proto3" json:"u_i,omitempty" toml:"u_i,omitempty" mapstructure:"u_i,omitempty"`
	Secrets          *secrets.ConfigRequest           `protobuf:"bytes,21,opt,name=secrets,proto3" json:"secrets,omitempty" toml:"secrets,omitempty" mapstructure:"secrets,omitempty"`
	BackupGateway    *backup_gateway.ConfigRequest    `protobuf:"bytes,29,opt,name=backup_gateway,json=backupGateway,proto3" json:"backup_gateway,omitempty" toml:"backup_gateway,omitempty" mapstructure:"backup_gateway,omitempty"`
	PgSidecar        *pg_sidecar.ConfigRequest        `protobuf:"bytes,35,opt,name=pg_sidecar,json=pgSidecar,proto3" json:"pg_sidecar,omitempty" toml:"pg_sidecar,omitempty" mapstructure:"pg_sidecar,omitempty"`
	PgGateway        *pg_gateway.ConfigRequest        `protobuf:"bytes,34,opt,name=pg_gateway,json=pgGateway,proto3" json:"pg_gateway,omitempty" toml:"pg_gateway,omitempty" mapstructure:"pg_gateway,omitempty"`
	Applications     *applications.ConfigRequest      `protobuf:"bytes,36,opt,name=applications,proto3" json:"applications,omitempty" toml:"applications,omitempty" mapstructure:"applications,omitempty"`
	Bookshelf        *bookshelf.ConfigRequest         `protobuf:"bytes,22,opt,name=bookshelf,proto3" json:"bookshelf,omitempty" toml:"bookshelf,omitempty" mapstructure:"bookshelf,omitempty"`
	Bifrost          *bifrost.ConfigRequest           `protobuf:"bytes,23,opt,name=bifrost,proto3" json:"bifrost,omitempty" toml:"bifrost,omitempty" mapstructure:"bifrost,omitempty"`
	Erchef           *erchef.ConfigRequest            `protobuf:"bytes,24,opt,name=erchef,proto3" json:"erchef,omitempty" toml:"erchef,omitempty" mapstructure:"erchef,omitempty"`
	CsNginx          *cs_nginx.ConfigRequest          `protobuf:"bytes,25,opt,name=cs_nginx,json=csNginx,proto3" json:"cs_nginx,omitempty" toml:"cs_nginx,omitempty" mapstructure:"cs_nginx,omitempty"`
	Workflow         *workflow_server.ConfigRequest   `protobuf:"bytes,27,opt,name=workflow,proto3" json:"workflow,omitempty" toml:"workflow,omitempty" mapstructure:"workflow,omitempty"`
	WorkflowNginx    *workflow_nginx.ConfigRequest    `protobuf:"bytes,28,opt,name=workflow_nginx,json=workflowNginx,proto3" json:"workflow_nginx,omitempty" toml:"workflow_nginx,omitempty" mapstructure:"workflow_nginx,omitempty"`
	EventService     *event.ConfigRequest             `protobuf:"bytes,30,opt,name=event_service,json=eventService,proto3" json:"event_service,omitempty" toml:"event_service,omitempty" mapstructure:"event_service,omitempty"`
	Nodemanager      *nodemanager.ConfigRequest       `protobuf:"bytes,33,opt,name=nodemanager,proto3" json:"nodemanager,omitempty" toml:"nodemanager,omitempty" mapstructure:"nodemanager,omitempty"`
	EventGateway     *event_gateway.ConfigRequest     `protobuf:"bytes,37,opt,name=event_gateway,json=eventGateway,proto3" json:"event_gateway,omitempty" toml:"event_gateway,omitempty" mapstructure:"event_gateway,omitempty"`
	Prometheus       *prometheus.ConfigRequest        `protobuf:"bytes,32,opt,name=prometheus,proto3" json:"prometheus,omitempty" toml:"prometheus,omitempty" mapstructure:"prometheus,omitempty"`
	DataFeedService  *data_feed.ConfigRequest         `protobuf:"bytes,38,opt,name=data_feed_service,json=dataFeedService,proto3" json:"data_feed_service,omitempty" toml:"data_feed_service,omitempty" mapstructure:"data_feed_service,omitempty"`
	EventFeedService *event_feed.ConfigRequest        `protobuf:"bytes,39,opt,name=event_feed_service,json=eventFeedService,proto3" json:"event_feed_service,omitempty" toml:"event_feed_service,omitempty" mapstructure:"event_feed_service,omitempty"`
	Cereal           *cereal.ConfigRequest            `protobuf:"bytes,40,opt,name=cereal,proto3" json:"cereal,omitempty" toml:"cereal,omitempty" mapstructure:"cereal,omitempty"`
	BuilderApi       *builder_api.ConfigRequest       `protobuf:"bytes,41,opt,name=builder_api,json=builderApi,proto3" json:"builder_api,omitempty" toml:"builder_api,omitempty" mapstructure:"builder_api,omitempty"`
	BuilderApiProxy  *builder_api_proxy.ConfigRequest `protobuf:"bytes,42,opt,name=builder_api_proxy,json=builderApiProxy,proto3" json:"builder_api_proxy,omitempty" toml:"builder_api_proxy,omitempty" mapstructure:"builder_api_proxy,omitempty"`
	Minio            *minio.ConfigRequest             `protobuf:"bytes,43,opt,name=minio,proto3" json:"minio,omitempty" toml:"minio,omitempty" mapstructure:"minio,omitempty"`
	BuilderMemcached *builder_memcached.ConfigRequest `protobuf:"bytes,44,opt,name=builder_memcached,json=builderMemcached,proto3" json:"builder_memcached,omitempty" toml:"builder_memcached,omitempty" mapstructure:"builder_memcached,omitempty"`
	InfraProxy       *infra_proxy.ConfigRequest       `protobuf:"bytes,45,opt,name=infra_proxy,json=infraProxy,proto3" json:"infra_proxy,omitempty" toml:"infra_proxy,omitempty" mapstructure:"infra_proxy,omitempty"`
	Cds              *cds.ConfigRequest               `protobuf:"bytes,46,opt,name=cds,proto3" json:"cds,omitempty" toml:"cds,omitempty" mapstructure:"cds,omitempty"`
	SampleData       *sample_data.ConfigRequest       `protobuf:"bytes,47,opt,name=sample_data,json=sampleData,proto3" json:"sample_data,omitempty" toml:"sample_data,omitempty" mapstructure:"sample_data,omitempty"`
	UserSettings     *user_settings.ConfigRequest     `protobuf:"bytes,48,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty" toml:"user_settings,omitempty" mapstructure:"user_settings,omitempty"`
}

func (x *AutomateConfig) Reset() {
	*x = AutomateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deployment_automate_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomateConfig) ProtoMessage() {}

func (x *AutomateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_deployment_automate_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomateConfig.ProtoReflect.Descriptor instead.
func (*AutomateConfig) Descriptor() ([]byte, []int) {
	return file_config_deployment_automate_config_proto_rawDescGZIP(), []int{0}
}

func (x *AutomateConfig) GetGlobal() *shared.GlobalConfig {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *AutomateConfig) GetAuthN() *authn.ConfigRequest {
	if x != nil {
		return x.AuthN
	}
	return nil
}

func (x *AutomateConfig) GetAuthZ() *authz.ConfigRequest {
	if x != nil {
		return x.AuthZ
	}
	return nil
}

func (x *AutomateConfig) GetCompliance() *compliance.ConfigRequest {
	if x != nil {
		return x.Compliance
	}
	return nil
}

func (x *AutomateConfig) GetConfigMgmt() *cfgmgmt.ConfigRequest {
	if x != nil {
		return x.ConfigMgmt
	}
	return nil
}

func (x *AutomateConfig) GetDeployment() *ConfigRequest {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *AutomateConfig) GetDex() *dex.ConfigRequest {
	if x != nil {
		return x.Dex
	}
	return nil
}

func (x *AutomateConfig) GetElasticsearch() *elasticsearch.ConfigRequest {
	if x != nil {
		return x.Elasticsearch
	}
	return nil
}

func (x *AutomateConfig) GetEsgateway() *esgateway.ConfigRequest {
	if x != nil {
		return x.Esgateway
	}
	return nil
}

func (x *AutomateConfig) GetEsSidecar() *es_sidecar.ConfigRequest {
	if x != nil {
		return x.EsSidecar
	}
	return nil
}

func (x *AutomateConfig) GetGateway() *gateway.ConfigRequest {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *AutomateConfig) GetIngest() *ingest.ConfigRequest {
	if x != nil {
		return x.Ingest
	}
	return nil
}

func (x *AutomateConfig) GetLoadBalancer() *load_balancer.ConfigRequest {
	if x != nil {
		return x.LoadBalancer
	}
	return nil
}

func (x *AutomateConfig) GetLocalUser() *local_user.ConfigRequest {
	if x != nil {
		return x.LocalUser
	}
	return nil
}

func (x *AutomateConfig) GetLicenseControl() *license_control.ConfigRequest {
	if x != nil {
		return x.LicenseControl
	}
	return nil
}

func (x *AutomateConfig) GetNotifications() *notifications.ConfigRequest {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *AutomateConfig) GetPostgresql() *postgresql.ConfigRequest {
	if x != nil {
		return x.Postgresql
	}
	return nil
}

func (x *AutomateConfig) GetSession() *session.ConfigRequest {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *AutomateConfig) GetTeams() *teams.ConfigRequest {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *AutomateConfig) GetUI() *ui.ConfigRequest {
	if x != nil {
		return x.UI
	}
	return nil
}

func (x *AutomateConfig) GetSecrets() *secrets.ConfigRequest {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *AutomateConfig) GetBackupGateway() *backup_gateway.ConfigRequest {
	if x != nil {
		return x.BackupGateway
	}
	return nil
}

func (x *AutomateConfig) GetPgSidecar() *pg_sidecar.ConfigRequest {
	if x != nil {
		return x.PgSidecar
	}
	return nil
}

func (x *AutomateConfig) GetPgGateway() *pg_gateway.ConfigRequest {
	if x != nil {
		return x.PgGateway
	}
	return nil
}

func (x *AutomateConfig) GetApplications() *applications.ConfigRequest {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *AutomateConfig) GetBookshelf() *bookshelf.ConfigRequest {
	if x != nil {
		return x.Bookshelf
	}
	return nil
}

func (x *AutomateConfig) GetBifrost() *bifrost.ConfigRequest {
	if x != nil {
		return x.Bifrost
	}
	return nil
}

func (x *AutomateConfig) GetErchef() *erchef.ConfigRequest {
	if x != nil {
		return x.Erchef
	}
	return nil
}

func (x *AutomateConfig) GetCsNginx() *cs_nginx.ConfigRequest {
	if x != nil {
		return x.CsNginx
	}
	return nil
}

func (x *AutomateConfig) GetWorkflow() *workflow_server.ConfigRequest {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *AutomateConfig) GetWorkflowNginx() *workflow_nginx.ConfigRequest {
	if x != nil {
		return x.WorkflowNginx
	}
	return nil
}

func (x *AutomateConfig) GetEventService() *event.ConfigRequest {
	if x != nil {
		return x.EventService
	}
	return nil
}

func (x *AutomateConfig) GetNodemanager() *nodemanager.ConfigRequest {
	if x != nil {
		return x.Nodemanager
	}
	return nil
}

func (x *AutomateConfig) GetEventGateway() *event_gateway.ConfigRequest {
	if x != nil {
		return x.EventGateway
	}
	return nil
}

func (x *AutomateConfig) GetPrometheus() *prometheus.ConfigRequest {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *AutomateConfig) GetDataFeedService() *data_feed.ConfigRequest {
	if x != nil {
		return x.DataFeedService
	}
	return nil
}

func (x *AutomateConfig) GetEventFeedService() *event_feed.ConfigRequest {
	if x != nil {
		return x.EventFeedService
	}
	return nil
}

func (x *AutomateConfig) GetCereal() *cereal.ConfigRequest {
	if x != nil {
		return x.Cereal
	}
	return nil
}

func (x *AutomateConfig) GetBuilderApi() *builder_api.ConfigRequest {
	if x != nil {
		return x.BuilderApi
	}
	return nil
}

func (x *AutomateConfig) GetBuilderApiProxy() *builder_api_proxy.ConfigRequest {
	if x != nil {
		return x.BuilderApiProxy
	}
	return nil
}

func (x *AutomateConfig) GetMinio() *minio.ConfigRequest {
	if x != nil {
		return x.Minio
	}
	return nil
}

func (x *AutomateConfig) GetBuilderMemcached() *builder_memcached.ConfigRequest {
	if x != nil {
		return x.BuilderMemcached
	}
	return nil
}

func (x *AutomateConfig) GetInfraProxy() *infra_proxy.ConfigRequest {
	if x != nil {
		return x.InfraProxy
	}
	return nil
}

func (x *AutomateConfig) GetCds() *cds.ConfigRequest {
	if x != nil {
		return x.Cds
	}
	return nil
}

func (x *AutomateConfig) GetSampleData() *sample_data.ConfigRequest {
	if x != nil {
		return x.SampleData
	}
	return nil
}

func (x *AutomateConfig) GetUserSettings() *user_settings.ConfigRequest {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

var File_config_deployment_automate_config_proto protoreflect.FileDescriptor

var file_config_deployment_automate_config_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x28, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62,
	0x69, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x72, 0x63, 0x68, 0x65,
	0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x63, 0x66, 0x67, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x73, 0x5f, 0x6e, 0x67,
	0x69, 0x6e, 0x78, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x73, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x73, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x71, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x70, 0x67, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x67, 0x5f, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x75, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x65, 0x72, 0x65, 0x61,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x1c, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x75, 0x74, 0x68, 0x4e, 0x12, 0x40, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x12, 0x55, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d,
	0x67, 0x6d, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x66, 0x67, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x67,
	0x6d, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x39, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x64, 0x65, 0x78, 0x12, 0x56, 0x0a,
	0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x4a, 0x0a, 0x09, 0x65, 0x73, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65,
	0x73, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x65, 0x73, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x65, 0x73, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x65, 0x73, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12,
	0x41, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x42, 0x0a, 0x06, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x4d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x0f,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x57, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x71, 0x6c, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x03, 0x75, 0x5f,
	0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x75, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x02, 0x75, 0x49, 0x12, 0x45, 0x0a, 0x07,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x4c, 0x0a,
	0x0a, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x70, 0x67, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x12, 0x4c, 0x0a, 0x0a, 0x70,
	0x67, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x67, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09,
	0x70, 0x67, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x54, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x68,
	0x65, 0x6c, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x12, 0x45, 0x0a, 0x07,
	0x62, 0x69, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x69, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x62, 0x69, 0x66, 0x72,
	0x6f, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x65, 0x72, 0x63, 0x68, 0x65, 0x66, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x63, 0x68, 0x65,
	0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x06, 0x65, 0x72, 0x63, 0x68, 0x65, 0x66, 0x12, 0x47, 0x0a, 0x08, 0x63, 0x73, 0x5f, 0x6e, 0x67,
	0x69, 0x6e, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x73, 0x5f, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x63, 0x73, 0x4e, 0x67, 0x69, 0x6e, 0x78,
	0x12, 0x4f, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x12, 0x59, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x67,
	0x69, 0x6e, 0x78, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x67, 0x69, 0x6e, 0x78, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x67, 0x69, 0x6e, 0x78, 0x12, 0x4e, 0x0a, 0x0d,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x56, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68,
	0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5c, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x41, 0x0a, 0x06, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x63, 0x65, 0x72, 0x65,
	0x61, 0x6c, 0x12, 0x50, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x41, 0x70, 0x69, 0x12, 0x61, 0x0a, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x05, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x61, 0x0a, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x0b, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x39, 0x0a, 0x03,
	0x63, 0x64, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x68, 0x65, 0x66,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x03, 0x63, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x66, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x4a, 0x04, 0x08, 0x1a, 0x10, 0x1b, 0x4a, 0x04, 0x08, 0x14, 0x10, 0x15, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x66,
	0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_deployment_automate_config_proto_rawDescOnce sync.Once
	file_config_deployment_automate_config_proto_rawDescData = file_config_deployment_automate_config_proto_rawDesc
)

func file_config_deployment_automate_config_proto_rawDescGZIP() []byte {
	file_config_deployment_automate_config_proto_rawDescOnce.Do(func() {
		file_config_deployment_automate_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_deployment_automate_config_proto_rawDescData)
	})
	return file_config_deployment_automate_config_proto_rawDescData
}

var file_config_deployment_automate_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_deployment_automate_config_proto_goTypes = []interface{}{
	(*AutomateConfig)(nil),                  // 0: chef.automate.domain.deployment.AutomateConfig
	(*shared.GlobalConfig)(nil),             // 1: chef.automate.infra.config.GlobalConfig
	(*authn.ConfigRequest)(nil),             // 2: chef.automate.domain.authn.ConfigRequest
	(*authz.ConfigRequest)(nil),             // 3: chef.automate.domain.authz.ConfigRequest
	(*compliance.ConfigRequest)(nil),        // 4: chef.automate.domain.compliance.config.ConfigRequest
	(*cfgmgmt.ConfigRequest)(nil),           // 5: chef.automate.domain.cfgmgmt.ConfigRequest
	(*ConfigRequest)(nil),                   // 6: chef.automate.domain.deployment.ConfigRequest
	(*dex.ConfigRequest)(nil),               // 7: chef.automate.domain.dex.ConfigRequest
	(*elasticsearch.ConfigRequest)(nil),     // 8: chef.automate.infra.elasticsearch.ConfigRequest
	(*esgateway.ConfigRequest)(nil),         // 9: chef.automate.infra.esgateway.ConfigRequest
	(*es_sidecar.ConfigRequest)(nil),        // 10: chef.automate.infra.es_sidecar.ConfigRequest
	(*gateway.ConfigRequest)(nil),           // 11: chef.automate.api.config.ConfigRequest
	(*ingest.ConfigRequest)(nil),            // 12: chef.automate.domain.ingest.ConfigRequest
	(*load_balancer.ConfigRequest)(nil),     // 13: chef.automate.infra.load_balancer.ConfigRequest
	(*local_user.ConfigRequest)(nil),        // 14: chef.automate.domain.local_user.ConfigRequest
	(*license_control.ConfigRequest)(nil),   // 15: chef.automate.domain.license_control.ConfigRequest
	(*notifications.ConfigRequest)(nil),     // 16: chef.automate.domain.notifications.ConfigRequest
	(*postgresql.ConfigRequest)(nil),        // 17: chef.automate.infra.postgresql.ConfigRequest
	(*session.ConfigRequest)(nil),           // 18: chef.automate.domain.session.ConfigRequest
	(*teams.ConfigRequest)(nil),             // 19: chef.automate.domain.teams.ConfigRequest
	(*ui.ConfigRequest)(nil),                // 20: chef.automate.ui.ConfigRequest
	(*secrets.ConfigRequest)(nil),           // 21: chef.automate.domain.secrets.ConfigRequest
	(*backup_gateway.ConfigRequest)(nil),    // 22: chef.automate.infra.backup_gateway.ConfigRequest
	(*pg_sidecar.ConfigRequest)(nil),        // 23: chef.automate.infra.pg_sidecar.ConfigRequest
	(*pg_gateway.ConfigRequest)(nil),        // 24: chef.automate.infra.pg_gateway.ConfigRequest
	(*applications.ConfigRequest)(nil),      // 25: chef.automate.domain.applications.ConfigRequest
	(*bookshelf.ConfigRequest)(nil),         // 26: chef.automate.domain.bookshelf.ConfigRequest
	(*bifrost.ConfigRequest)(nil),           // 27: chef.automate.domain.bifrost.ConfigRequest
	(*erchef.ConfigRequest)(nil),            // 28: chef.automate.domain.erchef.ConfigRequest
	(*cs_nginx.ConfigRequest)(nil),          // 29: chef.automate.domain.cs_nginx.ConfigRequest
	(*workflow_server.ConfigRequest)(nil),   // 30: chef.automate.domain.workflow_server.ConfigRequest
	(*workflow_nginx.ConfigRequest)(nil),    // 31: chef.automate.domain.workflow_nginx.ConfigRequest
	(*event.ConfigRequest)(nil),             // 32: chef.automate.domain.event.ConfigRequest
	(*nodemanager.ConfigRequest)(nil),       // 33: chef.automate.domain.nodemanager.ConfigRequest
	(*event_gateway.ConfigRequest)(nil),     // 34: chef.automate.domain.event_gateway.ConfigRequest
	(*prometheus.ConfigRequest)(nil),        // 35: chef.automate.infra.prometheus.ConfigRequest
	(*data_feed.ConfigRequest)(nil),         // 36: chef.automate.domain.data_feed.ConfigRequest
	(*event_feed.ConfigRequest)(nil),        // 37: chef.automate.domain.event_feed.ConfigRequest
	(*cereal.ConfigRequest)(nil),            // 38: chef.automate.infra.cereal.ConfigRequest
	(*builder_api.ConfigRequest)(nil),       // 39: chef.automate.domain.builder_api.ConfigRequest
	(*builder_api_proxy.ConfigRequest)(nil), // 40: chef.automate.domain.builder_api_proxy.ConfigRequest
	(*minio.ConfigRequest)(nil),             // 41: chef.automate.infra.minio.ConfigRequest
	(*builder_memcached.ConfigRequest)(nil), // 42: chef.automate.infra.builder_memcached.ConfigRequest
	(*infra_proxy.ConfigRequest)(nil),       // 43: chef.automate.domain.infra_proxy.ConfigRequest
	(*cds.ConfigRequest)(nil),               // 44: chef.automate.domain.cds.ConfigRequest
	(*sample_data.ConfigRequest)(nil),       // 45: chef.automate.domain.sample_data.ConfigRequest
	(*user_settings.ConfigRequest)(nil),     // 46: chef.automate.domain.user_settings.ConfigRequest
}
var file_config_deployment_automate_config_proto_depIdxs = []int32{
	1,  // 0: chef.automate.domain.deployment.AutomateConfig.global:type_name -> chef.automate.infra.config.GlobalConfig
	2,  // 1: chef.automate.domain.deployment.AutomateConfig.auth_n:type_name -> chef.automate.domain.authn.ConfigRequest
	3,  // 2: chef.automate.domain.deployment.AutomateConfig.auth_z:type_name -> chef.automate.domain.authz.ConfigRequest
	4,  // 3: chef.automate.domain.deployment.AutomateConfig.compliance:type_name -> chef.automate.domain.compliance.config.ConfigRequest
	5,  // 4: chef.automate.domain.deployment.AutomateConfig.config_mgmt:type_name -> chef.automate.domain.cfgmgmt.ConfigRequest
	6,  // 5: chef.automate.domain.deployment.AutomateConfig.deployment:type_name -> chef.automate.domain.deployment.ConfigRequest
	7,  // 6: chef.automate.domain.deployment.AutomateConfig.dex:type_name -> chef.automate.domain.dex.ConfigRequest
	8,  // 7: chef.automate.domain.deployment.AutomateConfig.elasticsearch:type_name -> chef.automate.infra.elasticsearch.ConfigRequest
	9,  // 8: chef.automate.domain.deployment.AutomateConfig.esgateway:type_name -> chef.automate.infra.esgateway.ConfigRequest
	10, // 9: chef.automate.domain.deployment.AutomateConfig.es_sidecar:type_name -> chef.automate.infra.es_sidecar.ConfigRequest
	11, // 10: chef.automate.domain.deployment.AutomateConfig.gateway:type_name -> chef.automate.api.config.ConfigRequest
	12, // 11: chef.automate.domain.deployment.AutomateConfig.ingest:type_name -> chef.automate.domain.ingest.ConfigRequest
	13, // 12: chef.automate.domain.deployment.AutomateConfig.load_balancer:type_name -> chef.automate.infra.load_balancer.ConfigRequest
	14, // 13: chef.automate.domain.deployment.AutomateConfig.local_user:type_name -> chef.automate.domain.local_user.ConfigRequest
	15, // 14: chef.automate.domain.deployment.AutomateConfig.license_control:type_name -> chef.automate.domain.license_control.ConfigRequest
	16, // 15: chef.automate.domain.deployment.AutomateConfig.notifications:type_name -> chef.automate.domain.notifications.ConfigRequest
	17, // 16: chef.automate.domain.deployment.AutomateConfig.postgresql:type_name -> chef.automate.infra.postgresql.ConfigRequest
	18, // 17: chef.automate.domain.deployment.AutomateConfig.session:type_name -> chef.automate.domain.session.ConfigRequest
	19, // 18: chef.automate.domain.deployment.AutomateConfig.teams:type_name -> chef.automate.domain.teams.ConfigRequest
	20, // 19: chef.automate.domain.deployment.AutomateConfig.u_i:type_name -> chef.automate.ui.ConfigRequest
	21, // 20: chef.automate.domain.deployment.AutomateConfig.secrets:type_name -> chef.automate.domain.secrets.ConfigRequest
	22, // 21: chef.automate.domain.deployment.AutomateConfig.backup_gateway:type_name -> chef.automate.infra.backup_gateway.ConfigRequest
	23, // 22: chef.automate.domain.deployment.AutomateConfig.pg_sidecar:type_name -> chef.automate.infra.pg_sidecar.ConfigRequest
	24, // 23: chef.automate.domain.deployment.AutomateConfig.pg_gateway:type_name -> chef.automate.infra.pg_gateway.ConfigRequest
	25, // 24: chef.automate.domain.deployment.AutomateConfig.applications:type_name -> chef.automate.domain.applications.ConfigRequest
	26, // 25: chef.automate.domain.deployment.AutomateConfig.bookshelf:type_name -> chef.automate.domain.bookshelf.ConfigRequest
	27, // 26: chef.automate.domain.deployment.AutomateConfig.bifrost:type_name -> chef.automate.domain.bifrost.ConfigRequest
	28, // 27: chef.automate.domain.deployment.AutomateConfig.erchef:type_name -> chef.automate.domain.erchef.ConfigRequest
	29, // 28: chef.automate.domain.deployment.AutomateConfig.cs_nginx:type_name -> chef.automate.domain.cs_nginx.ConfigRequest
	30, // 29: chef.automate.domain.deployment.AutomateConfig.workflow:type_name -> chef.automate.domain.workflow_server.ConfigRequest
	31, // 30: chef.automate.domain.deployment.AutomateConfig.workflow_nginx:type_name -> chef.automate.domain.workflow_nginx.ConfigRequest
	32, // 31: chef.automate.domain.deployment.AutomateConfig.event_service:type_name -> chef.automate.domain.event.ConfigRequest
	33, // 32: chef.automate.domain.deployment.AutomateConfig.nodemanager:type_name -> chef.automate.domain.nodemanager.ConfigRequest
	34, // 33: chef.automate.domain.deployment.AutomateConfig.event_gateway:type_name -> chef.automate.domain.event_gateway.ConfigRequest
	35, // 34: chef.automate.domain.deployment.AutomateConfig.prometheus:type_name -> chef.automate.infra.prometheus.ConfigRequest
	36, // 35: chef.automate.domain.deployment.AutomateConfig.data_feed_service:type_name -> chef.automate.domain.data_feed.ConfigRequest
	37, // 36: chef.automate.domain.deployment.AutomateConfig.event_feed_service:type_name -> chef.automate.domain.event_feed.ConfigRequest
	38, // 37: chef.automate.domain.deployment.AutomateConfig.cereal:type_name -> chef.automate.infra.cereal.ConfigRequest
	39, // 38: chef.automate.domain.deployment.AutomateConfig.builder_api:type_name -> chef.automate.domain.builder_api.ConfigRequest
	40, // 39: chef.automate.domain.deployment.AutomateConfig.builder_api_proxy:type_name -> chef.automate.domain.builder_api_proxy.ConfigRequest
	41, // 40: chef.automate.domain.deployment.AutomateConfig.minio:type_name -> chef.automate.infra.minio.ConfigRequest
	42, // 41: chef.automate.domain.deployment.AutomateConfig.builder_memcached:type_name -> chef.automate.infra.builder_memcached.ConfigRequest
	43, // 42: chef.automate.domain.deployment.AutomateConfig.infra_proxy:type_name -> chef.automate.domain.infra_proxy.ConfigRequest
	44, // 43: chef.automate.domain.deployment.AutomateConfig.cds:type_name -> chef.automate.domain.cds.ConfigRequest
	45, // 44: chef.automate.domain.deployment.AutomateConfig.sample_data:type_name -> chef.automate.domain.sample_data.ConfigRequest
	46, // 45: chef.automate.domain.deployment.AutomateConfig.user_settings:type_name -> chef.automate.domain.user_settings.ConfigRequest
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_config_deployment_automate_config_proto_init() }
func file_config_deployment_automate_config_proto_init() {
	if File_config_deployment_automate_config_proto != nil {
		return
	}
	file_config_deployment_config_request_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_config_deployment_automate_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_deployment_automate_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_deployment_automate_config_proto_goTypes,
		DependencyIndexes: file_config_deployment_automate_config_proto_depIdxs,
		MessageInfos:      file_config_deployment_automate_config_proto_msgTypes,
	}.Build()
	File_config_deployment_automate_config_proto = out.File
	file_config_deployment_automate_config_proto_rawDesc = nil
	file_config_deployment_automate_config_proto_goTypes = nil
	file_config_deployment_automate_config_proto_depIdxs = nil
}
