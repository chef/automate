syntax = "proto3";

package chef.automate.infra.config;
option go_package = "github.com/chef/automate/api/config/shared";

import "google/protobuf/wrappers.proto";
import "config/shared/tls.proto";

message GlobalConfig { V1 v1 = 1; }

message V1 {
  google.protobuf.StringValue fqdn = 1;
  Mlsa mlsa = 2;
  Proxy proxy = 3;
  Backups backups = 4;
  Log log = 5;
  External external = 6;
  repeated chef.automate.infra.config.FrontendTLSCredential frontend_tls = 7;
  Disclosure disclosure = 8;
  Banner banner = 9;
  SessionSettings session_settings = 10;
}

message External {
  message Elasticsearch {
    message Backup {
      message FsSettings {
        message OptionalSettings {
          google.protobuf.StringValue max_snapshot_bytes_per_sec = 1;
          google.protobuf.StringValue max_restore_bytes_per_sec = 2;
        }
        google.protobuf.StringValue path = 1;
        OptionalSettings settings = 2;
      }

      message S3Settings {
        google.protobuf.StringValue bucket = 1;
        google.protobuf.StringValue client = 2;
        google.protobuf.StringValue base_path = 3;
        chef.automate.infra.config.Backups.S3.Elasticsearch settings = 4; // optional settings
      }

      message GCSSettings {
        google.protobuf.StringValue bucket = 1;
        google.protobuf.StringValue client = 2;
        google.protobuf.StringValue base_path = 3;
        chef.automate.infra.config.Backups.GCS.Elasticsearch settings = 4; // optional settings
      }

      google.protobuf.BoolValue enable = 1;
      google.protobuf.StringValue location = 2;
      FsSettings fs = 3;
      S3Settings s3 = 4;
      GCSSettings gcs = 5;
    }

    message Authentication {
      message BasicAuth {
        google.protobuf.StringValue username = 1;
        google.protobuf.StringValue password = 2;
      }
      message AwsElasticsearchAuth {
        // Authentication for Aws ES must provide a user and password for basic
        // auth. access_key and secret_key can be optionally specified. They are
        // needed for making snapshot repos, but if not provided, we can use the
        // instance creds.
        google.protobuf.StringValue username = 1;
        google.protobuf.StringValue password = 2;
        google.protobuf.StringValue access_key = 3;
        google.protobuf.StringValue secret_key = 4;
      }
      google.protobuf.StringValue scheme = 1;
      BasicAuth basic_auth = 2;
      AwsElasticsearchAuth aws_es = 3;
    }

    message SSL {
      google.protobuf.StringValue root_cert = 1;
      google.protobuf.StringValue server_name = 2;
      google.protobuf.StringValue root_cert_file = 3;
    }

    google.protobuf.BoolValue enable = 1;
    repeated google.protobuf.StringValue nodes = 2;
    Backup backup = 3;
    Authentication auth = 4;
    SSL ssl = 5;
  }

  message Postgresql {
    message Backup { google.protobuf.BoolValue enable = 1; }

    message Authentication {
      message PasswordAuthentication {
        message User {
          google.protobuf.StringValue username = 1;
          google.protobuf.StringValue password = 2;
        }
        User superuser = 1;
        User dbuser = 2;
      }
      google.protobuf.StringValue scheme = 1;
      PasswordAuthentication password = 2;
    }

    message SSL {
      google.protobuf.StringValue mode = 1 [ deprecated = true ];
      google.protobuf.StringValue cert = 2;
      google.protobuf.StringValue key = 3;
      google.protobuf.StringValue root_cert = 4;
      google.protobuf.BoolValue enable = 5; // disabled by default
    }

    google.protobuf.BoolValue enable = 1;
    repeated google.protobuf.StringValue nodes = 2;
    Backup backup = 3;
    Authentication auth = 4;
    SSL ssl = 5;
  }

  message Automate {
    message Authentication {
      google.protobuf.StringValue scheme = 1;
      google.protobuf.StringValue token = 2;
    };

    message SSL {
      google.protobuf.StringValue root_cert = 1;
      google.protobuf.StringValue server_name = 2;
    };

    google.protobuf.BoolValue enable = 1;
    google.protobuf.StringValue node = 2;
    Authentication auth = 3;
    SSL ssl = 4;
  };

  Elasticsearch elasticsearch = 1;
  Postgresql postgresql = 2;
  Automate automate = 3;
}

message Mlsa { google.protobuf.BoolValue accept = 1; }

message Proxy {
  google.protobuf.StringValue host = 1;
  google.protobuf.Int32Value port = 2;
  google.protobuf.StringValue user = 3;
  google.protobuf.StringValue password = 4;
  repeated string no_proxy = 5;
}

message Backups {
  // 1 is a field that got committed in generated code but not in the
  // proto file
  reserved 1;
  // location should be one of ["filesystem", "s3", "gcs"]
  google.protobuf.StringValue location = 3;
  Filesystem filesystem = 2;
  S3 s3 = 4;
  GCS gcs = 5;

  message Filesystem {
    google.protobuf.StringValue path = 1;
    google.protobuf.StringValue es_max_snapshot_bytes_per_sec = 2;
    google.protobuf.StringValue es_max_restore_bytes_per_sec = 3;
  }

  message S3 {
    AWSCredentials credentials = 1;
    Elasticsearch es = 2;
    Bucket bucket = 3;
    SSL ssl = 4;

    message AWSCredentials {
      google.protobuf.StringValue access_key = 1;
      google.protobuf.StringValue secret_key = 2;
      google.protobuf.StringValue session_token = 3;
    }

    message Elasticsearch {
      // Backup repo settings
      google.protobuf.BoolValue compress = 2;
      google.protobuf.BoolValue server_side_encryption = 3;
      google.protobuf.StringValue buffer_size = 4;
      google.protobuf.StringValue canned_acl = 5;
      google.protobuf.StringValue storage_class = 6;
      // Snapshot settings
      google.protobuf.StringValue max_snapshot_bytes_per_sec = 7;
      google.protobuf.StringValue max_restore_bytes_per_sec = 8;
      google.protobuf.StringValue chunk_size = 9;
      // S3 client settings
      google.protobuf.StringValue read_timeout = 10;
      google.protobuf.Int32Value max_retries = 11;
      google.protobuf.BoolValue use_throttle_retries = 12;
      google.protobuf.StringValue protocol = 13;
      // Aws Elasticsearch
      google.protobuf.StringValue region = 14;
      google.protobuf.StringValue role_arn = 15;
    }

    message Bucket {
      google.protobuf.StringValue endpoint = 1;
      google.protobuf.StringValue base_path = 2;
      google.protobuf.StringValue name = 3;
    }

    message SSL { google.protobuf.StringValue root_cert = 1; }
  }

  message GCS {
    GCPCredentials credentials = 1;
    Elasticsearch es = 2;
    Bucket bucket = 3;

    message GCPCredentials { google.protobuf.StringValue json = 1; }

    message Elasticsearch {
      // Backup repo settings
      google.protobuf.BoolValue compress = 2;
      google.protobuf.BoolValue application_name = 3;
      // Snapshot settings
      google.protobuf.StringValue max_snapshot_bytes_per_sec = 4;
      google.protobuf.StringValue max_restore_bytes_per_sec = 5;
      google.protobuf.StringValue chunk_size = 6;
      // GCS client settings
      google.protobuf.StringValue read_timeout = 7;
      google.protobuf.BoolValue connect_timeout = 8;
    }

    message Bucket {
      google.protobuf.StringValue base_path = 1;
      google.protobuf.StringValue name = 2;
    }
  }
}

message Log {
  google.protobuf.StringValue level = 1;
  google.protobuf.StringValue format = 2;
}

message Disclosure {
  google.protobuf.BoolValue show = 1;
  google.protobuf.StringValue message_file_path = 2;
}

message Banner {
  google.protobuf.BoolValue show = 1;
  google.protobuf.StringValue message = 2;
  google.protobuf.StringValue background_color = 3;
  google.protobuf.StringValue text_color = 4;
}

message SessionSettings {
  google.protobuf.BoolValue enable_idle_timeout = 1;
  google.protobuf.Int32Value idle_timeout_minutes = 2;
}
